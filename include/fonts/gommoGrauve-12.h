
#ifndef __FIXEDFONTGOMMOGRATTF12
#define __FIXEDFONTGOMMOGRATTF12
const uint8_t HotStuff12Bitmaps[] PROGMEM = {
  0x14, 0x00, 0x2E, 0x52, 0x27, 0xD1, 0x95, 0xFE, 0xAD, 0xFF, 0xC7, 0xFF,
  0xF3, 0x78, 0xF1, 0x7C, 0x7A, 0xFC, 0x3F, 0x7E, 0x0F, 0xAF, 0x47, 0xD7,
  0x83, 0xF3, 0xC1, 0xFD, 0xF1, 0xFD, 0xF8, 0xFE, 0xFD, 0x7F, 0x3E, 0xBE,
  0x9E, 0xBF, 0x4F, 0xEF, 0xB3, 0xFF, 0xB9, 0xFF, 0x9C, 0x7F, 0xD6, 0x40,
  0xA8, 0x5F, 0xA1, 0x00, 0x00, 0x7E, 0x0B, 0x00, 0x7C, 0x00, 0x7D, 0x0A,
  0x7D, 0xC6, 0xFE, 0xFA, 0x7F, 0xB9, 0x7F, 0xCA, 0x23, 0xF2, 0x11, 0xE9,
  0x93, 0xFC, 0xDD, 0x7A, 0x66, 0xBE, 0x23, 0x5F, 0x10, 0x2F, 0x98, 0x07,
  0xDC, 0x03, 0xE4, 0x5D, 0xE0, 0x0F, 0xFF, 0x07, 0xFF, 0x83, 0xFF, 0xE7,
  0xFF, 0xEA, 0x02, 0x48, 0x38, 0xB8, 0x00, 0x20, 0x04, 0x72, 0x21, 0xFC,
  0xD7, 0xFF, 0xEB, 0xFF, 0xD1, 0xFF, 0xF8, 0x78, 0xFC, 0x1C, 0x3E, 0x0C,
  0x3E, 0x40, 0x1E, 0x18, 0x3F, 0x09, 0xBF, 0x42, 0xFF, 0x43, 0x7E, 0xCB,
  0xBE, 0x11, 0xBE, 0x20, 0xBE, 0x6D, 0x5E, 0x0F, 0x8F, 0xFF, 0x5F, 0xFF,
  0xA7, 0xFF, 0xE1, 0x8F, 0x70, 0x3C, 0x44, 0x18, 0x7E, 0x00, 0x00, 0x07,
  0x02, 0x3C, 0x23, 0x87, 0xFF, 0xC3, 0xFF, 0xE1, 0xFF, 0xC2, 0xE9, 0xE1,
  0x6A, 0xE0, 0x41, 0xF8, 0x08, 0xF5, 0x02, 0xF4, 0x91, 0x7E, 0x40, 0xBF,
  0xC1, 0x1F, 0xF2, 0x31, 0xF8, 0x00, 0x3F, 0x3D, 0x1F, 0x2D, 0x6F, 0x97,
  0xFF, 0x87, 0xFF, 0xE3, 0xFF, 0xF1, 0xFF, 0xF4, 0x71, 0xCD, 0x04, 0x3A,
  0x00, 0x00, 0x08, 0xC0, 0xDD, 0xB8, 0xD9, 0xFD, 0xE9, 0xF9, 0xEB, 0xF8,
  0xCF, 0xF2, 0x17, 0xFA, 0x1F, 0xFE, 0x4F, 0xFE, 0x5E, 0xFD, 0x7E, 0xFF,
  0x3C, 0xFD, 0x7F, 0xFF, 0x7F, 0xFF, 0x7F, 0xFF, 0x7F, 0xFF, 0x00, 0xFD,
  0x0D, 0xFC, 0x16, 0xFC, 0x37, 0xFC, 0x24, 0xFC, 0x06, 0x02, 0x01, 0xF3,
  0x00, 0x00, 0x0C, 0x3F, 0x17, 0xFC, 0x1F, 0xFE, 0x1F, 0xFC, 0x1F, 0xFC,
  0x9C, 0x1C, 0xDC, 0x4E, 0x5C, 0x34, 0xDC, 0x16, 0x3D, 0xE2, 0x7F, 0xF8,
  0x1F, 0xFC, 0x84, 0x3E, 0x82, 0x3E, 0x02, 0x5E, 0x31, 0x9F, 0xBA, 0x5F,
  0x7D, 0xBE, 0x7F, 0xFF, 0xBF, 0xFF, 0x3F, 0xFB, 0x6C, 0x65, 0x8A, 0x18,
  0x00, 0x00, 0x01, 0x88, 0x93, 0x78, 0x53, 0xFF, 0xA7, 0xFF, 0xD3, 0xFF,
  0xF0, 0xFF, 0xF1, 0x7E, 0xB0, 0x3E, 0x98, 0x1F, 0x24, 0x5F, 0xA0, 0x0F,
  0xFE, 0x07, 0xFF, 0xC3, 0xFF, 0xE3, 0xF0, 0xFD, 0x78, 0x3E, 0xBC, 0x9F,
  0x5E, 0x1E, 0x3F, 0xDF, 0x5B, 0xFF, 0xCD, 0xFF, 0xD5, 0x7F, 0xAA, 0x66,
  0x28, 0x9C, 0x60, 0x00, 0x00, 0x04, 0x04, 0x61, 0x8E, 0x7F, 0xFE, 0x7F,
  0xFE, 0x7F, 0xFE, 0xF8, 0xFE, 0xA1, 0x7C, 0x00, 0xFE, 0x10, 0x72, 0x00,
  0xF2, 0xB8, 0xE2, 0x39, 0xF2, 0x15, 0xFB, 0xB7, 0xD6, 0x6B, 0xB0, 0x63,
  0xE5, 0xD7, 0x95, 0x47, 0x9D, 0x8F, 0x7D, 0xDF, 0x6A, 0xDF, 0x00, 0xD3,
  0x4A, 0x00, 0x3D, 0x4E, 0x30, 0x0D, 0xF6, 0x4F, 0xF1, 0xDF, 0xF8, 0xBF,
  0xFC, 0x3F, 0xFC, 0xBC, 0x3E, 0xBC, 0x3E, 0xBC, 0x3E, 0xBF, 0xFC, 0x9F,
  0xF8, 0x1F, 0xF8, 0x3F, 0xFC, 0x3E, 0x7E, 0xBC, 0x3E, 0xFC, 0x3E, 0xFE,
  0x7E, 0x3F, 0xFF, 0x7F, 0xFE, 0x9F, 0xF8, 0xEF, 0xF1, 0x5F, 0xEE, 0x37,
  0xB8, 0x00, 0x00, 0x41, 0xD8, 0x73, 0x79, 0xEF, 0xFF, 0xDF, 0xFE, 0x7F,
  0xFF, 0x3C, 0x7D, 0xBD, 0x3E, 0xBD, 0x3F, 0xBC, 0xBF, 0x3E, 0x3E, 0x3F,
  0xFE, 0x1F, 0xFE, 0x87, 0xDF, 0x00, 0xBF, 0x20, 0x7F, 0x4A, 0xBE, 0x8D,
  0x7C, 0xDF, 0xFC, 0xBF, 0xFA, 0x8F, 0xFB, 0xBF, 0xEE, 0x42, 0x10, 0x8C,
  0x60, 0x00, 0x00, 0x00, 0x46, 0x0F, 0x9F, 0xFF, 0xC7, 0xFF, 0xC7, 0xFF,
  0xE9, 0xFF, 0xE6, 0xFF, 0x7D, 0xB8, 0x1E, 0xDC, 0x74, 0x2E, 0x0B, 0x2F,
  0x5D, 0x97, 0xFE, 0xE7, 0xFF, 0xB3, 0xFF, 0xD2, 0x78, 0xE1, 0xBC, 0x10,
  0x5E, 0x19, 0x2F, 0x04, 0x97, 0x85, 0x4F, 0xF1, 0xAB, 0xF8, 0x57, 0xFC,
  0x2B, 0x00, 0x04, 0x70, 0x10, 0x03, 0x10, 0xA4, 0xF0, 0x67, 0xFF, 0x3B,
  0xFF, 0x93, 0xFF, 0xE1, 0xFF, 0xEA, 0xFD, 0xE0, 0x7D, 0x30, 0x3F, 0x4A,
  0x3F, 0x06, 0x9F, 0x06, 0x4F, 0x86, 0x27, 0xB3, 0x13, 0xFD, 0x68, 0xF8,
  0xBC, 0x7C, 0x1E, 0xBF, 0x1B, 0x3F, 0xBF, 0x17, 0xFF, 0x17, 0xFF, 0x8B,
  0xFE, 0x83, 0x04, 0xE0, 0x61, 0xD8, 0x20, 0x82, 0x41, 0x00, 0xE0, 0xB0,
  0x50, 0x20, 0x10, 0x00, 0x3F, 0xDF, 0xEF, 0xFF, 0x30, 0x40, 0x40, 0xA0,
  0x98, 0x2C, 0xA2, 0x49, 0x00, 0x84, 0x10, 0x40, 0x7E, 0x20, 0x81, 0xE0,
  0x1F, 0x80, 0x5E, 0x06, 0xF4, 0x1B, 0xF0, 0x0F, 0xD2, 0x7F, 0x33, 0xD7,
  0x8F, 0xFE, 0x7B, 0x91, 0xE8, 0x4F, 0x21, 0xBC, 0x05, 0xE9, 0x07, 0xC0,
  0x3E, 0x01, 0xF0, 0x23, 0x80, 0x2E, 0x00, 0xF0, 0x03, 0x88, 0x03, 0x90,
  0x40, 0x00, 0x00, 0x00, 0x14, 0x0A, 0x03, 0x00, 0x84, 0x00, 0x80, 0x48,
  0x14, 0x88, 0x44, 0x20, 0x10, 0x00, 0x00, 0x10, 0x28, 0x14, 0x00, 0x40,
  0x00, 0x00, 0x00, 0x20, 0x88, 0x00, 0x02, 0x60, 0xA0, 0x18, 0x02, 0x00,
  0x60, 0x14, 0x21, 0x00, 0xD1, 0x34, 0x8D, 0x04, 0x41, 0x08, 0x00, 0x01,
  0x0F, 0x01, 0xE2, 0x78, 0xDC, 0x09, 0x01, 0xC0 };

// Glyph, Offset to bitmap, Width, Height, xAdvance, xOffset, yOffset

const gfxglyph_t HotStuff12Glyphs[] PROGMEM = {
  {48,     0,  17,  24,  17,    0,  -23 },   // 0x00 '0' 
  {49,    51,  17,  24,  16,    0,  -23 },   // 0x01 '1' 
  {50,   102,  17,  24,  17,    0,  -23 },   // 0x02 '2' 
  {51,   153,  17,  24,  17,    0,  -23 },   // 0x03 '3' 
  {52,   204,  16,  24,  17,    0,  -23 },   // 0x04 '4' 
  {53,   252,  16,  24,  17,    0,  -23 },   // 0x05 '5' 
  {54,   300,  17,  24,  17,    0,  -23 },   // 0x06 '6' 
  {55,   351,  16,  24,  16,    0,  -23 },   // 0x07 '7' 
  {56,   399,  16,  23,  16,    0,  -22 },   // 0x08 '8' 
  {57,   445,  16,  24,  17,    0,  -23 },   // 0x09 '9' 
  {32,   493,   1,   1,  10,    0,    0 },   // 0x0A ' ' 
  {70,   494,  17,  24,  17,    0,  -23 },   // 0x0B 'F' 
  {67,   545,  17,  23,  17,    0,  -22 },   // 0x0C 'C' 
  {45,   594,   9,  23,  10,    0,  -22 },   // 0x0D '-' 
  {47,   620,  14,  23,  15,    0,  -22 },   // 0x0E '/' 
  {37,   661,   9,  23,  10,    0,  -22 },   // 0x0F '%' 
  {46,   687,  10,  23,  10,    0,  -22 }   // 0x10 '.' 
};

const gfxfont_t HotStuff12 PROGMEM = 
{
  (uint8_t  *)HotStuff12Bitmaps, //< Glyph bitmaps, concatenated 
  (gfxglyph_t *)HotStuff12Glyphs, //< Glyph array
  17,// total glyphs in the string
  24,  // newline distance (y axis)
     0,  // minimum X - left most
     0,  // minimum Y - bottom most (descenders can drive this negative)
    17,  // maximum X - right most
    24}; // maximum Y - top most
// Approx. 849 bytes -  but your mileage may vary.

#endif