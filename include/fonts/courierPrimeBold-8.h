
#ifndef __FIXEDFONTCOURIERPRIMEBOLDTTF8
#define __FIXEDFONTCOURIERPRIMEBOLDTTF8
const uint8_t HotStuff8Bitmaps[] PROGMEM = {
  0x00, 0xED, 0xB6, 0xBF, 0xE0, 0xDF, 0x3C, 0xF2, 0x09, 0x04, 0x9F, 0xEF,
  0xF1, 0x27, 0xFB, 0xFE, 0x48, 0x6C, 0x00, 0x18, 0xFF, 0xFE, 0xDF, 0xC7,
  0xF7, 0xFF, 0xFC, 0x30, 0x60, 0x71, 0x7C, 0xFE, 0xCE, 0xC0, 0xC1, 0xD9,
  0xDE, 0xCF, 0x03, 0x00, 0x3C, 0x7E, 0x66, 0x60, 0x77, 0xDF, 0xCC, 0xFF,
  0x7F, 0xED, 0xB0, 0x19, 0xDC, 0xCC, 0x63, 0x18, 0xC3, 0x1C, 0x71, 0x80,
  0xC7, 0x1C, 0x61, 0x8C, 0x63, 0x19, 0x9D, 0xCC, 0x00, 0x18, 0x31, 0xDF,
  0xF3, 0xCD, 0x80, 0x18, 0x18, 0xFF, 0xFF, 0x18, 0x18, 0x18, 0xFF, 0x68,
  0xFF, 0xFC, 0xFF, 0x80, 0x06, 0x0C, 0x30, 0x61, 0xC3, 0x06, 0x18, 0x30,
  0xC1, 0x86, 0x00, 0x3C, 0x7E, 0xE7, 0xC3, 0xC3, 0xC3, 0xE7, 0x7E, 0x3C,
  0x33, 0xC3, 0x0C, 0x30, 0xC3, 0x3F, 0xFC, 0x7C, 0xFD, 0x98, 0x30, 0xC3,
  0x09, 0xBF, 0xFE, 0x7B, 0xFC, 0xCE, 0x3C, 0x38, 0xFF, 0xF8, 0x18, 0x30,
  0xA2, 0x4F, 0xFF, 0xC6, 0x1F, 0x3E, 0xFF, 0xFC, 0x3E, 0xFC, 0x38, 0xFF,
  0x78, 0x1E, 0x7E, 0x60, 0xDE, 0xFF, 0xC3, 0xC3, 0x7F, 0x3C, 0xFF, 0xFF,
  0x18, 0x60, 0xC3, 0x06, 0x18, 0x30, 0x3C, 0xFD, 0x99, 0xE7, 0xF8, 0xF1,
  0xFF, 0x7C, 0x3C, 0xFE, 0xC3, 0xC3, 0xFF, 0x7B, 0x06, 0x3E, 0x38, 0xFF,
  0x8F, 0xF8, 0xFF, 0x8F, 0xF6, 0x80, 0x02, 0x0C, 0x73, 0x8E, 0x0F, 0x07,
  0x83, 0xFF, 0xFC, 0x07, 0xFF, 0xE0, 0x80, 0xE0, 0x78, 0x1E, 0x07, 0x1E,
  0x78, 0xE0, 0x7B, 0xFC, 0xEE, 0x30, 0x00, 0x1C, 0x70, 0x1E, 0x3F, 0x9B,
  0xFB, 0xFD, 0xFE, 0xFF, 0xEC, 0xFC, 0x1E, 0x00, 0x7C, 0x1F, 0x81, 0xE0,
  0xC8, 0x3F, 0x0F, 0xC6, 0x33, 0xDF, 0xF7, 0xC0, 0xFC, 0xFE, 0x66, 0x7C,
  0x7E, 0x63, 0x63, 0xFF, 0xFE, 0x3F, 0x7F, 0xE3, 0xC0, 0xC0, 0xC0, 0xE1,
  0x7F, 0x3E, 0xFC, 0xFE, 0x67, 0x63, 0x63, 0x63, 0x67, 0xFE, 0xFC, 0xFF,
  0xFF, 0x63, 0x78, 0x78, 0x60, 0x63, 0xFF, 0xFF, 0xFF, 0xFF, 0x63, 0x7C,
  0x7C, 0x60, 0x60, 0xF8, 0xF8, 0x3A, 0x7E, 0xE6, 0xC0, 0xCF, 0xCF, 0xE6,
  0x7E, 0x3C, 0xF7, 0xFB, 0xD8, 0xCF, 0xE7, 0xF3, 0x19, 0x8D, 0xEF, 0xF7,
  0x80, 0x7E, 0xFC, 0x60, 0xC1, 0x83, 0x06, 0x3F, 0xFE, 0x7E, 0xFC, 0x30,
  0x6C, 0xD9, 0xB3, 0x7E, 0x78, 0xF7, 0xFB, 0xD9, 0x8D, 0x87, 0xC3, 0xF1,
  0x9D, 0xE7, 0xF3, 0x80, 0xFC, 0x7E, 0x0C, 0x06, 0x03, 0x19, 0x8C, 0xC7,
  0xFF, 0xFF, 0x80, 0xF3, 0xFC, 0xF7, 0x39, 0xFE, 0x6D, 0x9B, 0x66, 0x1B,
  0xCF, 0xF3, 0xC0, 0xE7, 0xFB, 0xDC, 0xCD, 0x66, 0xF3, 0x39, 0x9D, 0xE6,
  0xF3, 0x00, 0x3C, 0x7E, 0xE7, 0xC3, 0xC3, 0xC3, 0xE7, 0x7E, 0x3C, 0xFF,
  0x7F, 0xCC, 0x66, 0x33, 0xF9, 0xF8, 0xC1, 0xF8, 0xFC, 0x00, 0x3C, 0x7E,
  0xE7, 0xC3, 0xC3, 0xC3, 0xE7, 0x7E, 0x3C, 0x7F, 0x7F, 0xFE, 0x7F, 0x98,
  0xCC, 0x67, 0xF3, 0xF1, 0x9D, 0xE7, 0xF3, 0x80, 0x7F, 0xFC, 0xF8, 0x78,
  0x38, 0xFF, 0xF8, 0xFF, 0xFF, 0xDB, 0xDB, 0xDB, 0x18, 0x18, 0x7E, 0x7E,
  0xF7, 0xFB, 0xD8, 0xCC, 0x66, 0x33, 0x19, 0x8C, 0xFE, 0x3E, 0x00, 0xF3,
  0xFC, 0xF6, 0x30, 0xCC, 0x37, 0x0F, 0x81, 0xE0, 0x70, 0x0C, 0x00, 0xF3,
  0xFC, 0xF6, 0x19, 0xB6, 0x6D, 0x9F, 0xE7, 0x38, 0xCC, 0x33, 0x00, 0xF7,
  0xFB, 0xDD, 0xC7, 0xC1, 0xC1, 0xF1, 0xDD, 0xEF, 0xF7, 0x80, 0xF7, 0xFB,
  0xD8, 0xC6, 0xC1, 0xE0, 0x60, 0x30, 0x7E, 0x3F, 0x00, 0xFF, 0xFF, 0xCE,
  0x1C, 0x18, 0x30, 0x73, 0xFF, 0xFF, 0xFF, 0xF1, 0x8C, 0x63, 0x18, 0xC6,
  0x31, 0xFF, 0x80, 0xC0, 0xC1, 0x81, 0x83, 0x03, 0x06, 0x0E, 0x0C, 0x18,
  0x18, 0x30, 0xFF, 0xC6, 0x31, 0x8C, 0x63, 0x18, 0xC7, 0xFF, 0x80, 0x18,
  0x70, 0xF3, 0x66, 0x68, 0xC0, 0xFF, 0xFF, 0xF0, 0xC7, 0x0E, 0x7C, 0xFE,
  0x7E, 0xFE, 0xC6, 0xFF, 0x7B, 0xE0, 0x70, 0x18, 0x0D, 0xC7, 0xF3, 0x0D,
  0x86, 0xC3, 0xFF, 0x77, 0x00, 0x3F, 0x7F, 0xE3, 0xC0, 0xC3, 0x7F, 0x3E,
  0x0E, 0x0E, 0x06, 0x7E, 0xFE, 0xC6, 0xC6, 0xC6, 0xFF, 0x77, 0x3C, 0x7E,
  0xFE, 0xFF, 0xC0, 0xFE, 0x7E, 0x3C, 0xFD, 0x87, 0xEF, 0xCC, 0x18, 0x30,
  0xFD, 0xF8, 0x77, 0xFF, 0xC6, 0xC6, 0xC6, 0xFE, 0x76, 0x06, 0xFE, 0x7C,
  0xE0, 0xE0, 0x60, 0x6C, 0x7E, 0x66, 0x66, 0x66, 0xFF, 0xFF, 0x18, 0x18,
  0x00, 0x00, 0x38, 0x38, 0x18, 0x18, 0x18, 0xFF, 0xFF, 0x0C, 0x30, 0x00,
  0x7D, 0xF0, 0xC3, 0x0C, 0x30, 0xE3, 0xFD, 0xE0, 0xE0, 0x70, 0x18, 0x0D,
  0xE6, 0xF3, 0x71, 0xF0, 0xCC, 0xF7, 0xF9, 0xC0, 0x78, 0x78, 0x18, 0x18,
  0x18, 0x18, 0x18, 0x18, 0xFF, 0xFF, 0xDB, 0xFF, 0xDB, 0x6D, 0xB6, 0xDB,
  0x6D, 0xB6, 0x6E, 0x3F, 0x8C, 0xC6, 0x63, 0x37, 0xFF, 0xFE, 0x3C, 0x7E,
  0xC3, 0xC3, 0xC3, 0x7E, 0x3C, 0xEE, 0x7F, 0x98, 0x6C, 0x36, 0x1B, 0xF9,
  0xB8, 0xC0, 0xF8, 0x7C, 0x00, 0x77, 0xFF, 0xC6, 0xC6, 0xC6, 0xFE, 0x76,
  0x06, 0x1F, 0x1F, 0xEF, 0xFD, 0xC3, 0x06, 0x1F, 0xBF, 0x00, 0x7F, 0xFC,
  0x5E, 0x8F, 0xFF, 0x80, 0x30, 0x60, 0xC7, 0xFF, 0xE6, 0x0C, 0x19, 0x3E,
  0x38, 0xE7, 0x73, 0x98, 0xCC, 0x66, 0x73, 0xFC, 0xEE, 0xF7, 0xFB, 0xD8,
  0xC6, 0xC3, 0x60, 0xE0, 0x70, 0xF3, 0xFC, 0xF6, 0xD9, 0xB6, 0x7F, 0x8C,
  0xC3, 0x30, 0xE7, 0xE7, 0x24, 0x18, 0x66, 0xE7, 0xE7, 0xF7, 0xFB, 0xD8,
  0xC6, 0xC1, 0xE0, 0xE0, 0x70, 0x70, 0x70, 0x30, 0x00, 0xFF, 0xFE, 0xCC,
  0x18, 0x73, 0xFF, 0xFF, 0x37, 0x66, 0x6E, 0xE6, 0x66, 0x67, 0x30, 0xFF,
  0xFF, 0xFF, 0xC0, 0xCE, 0x66, 0x63, 0x36, 0x66, 0x6E, 0xC0, 0x7F, 0xFC };

// Glyph, Offset to bitmap, Width, Height, xAdvance, xOffset, yOffset

const gfxglyph_t HotStuff8Glyphs[] PROGMEM = {
  {32,     0,   1,   1,  10,    0,    0 },   // 0x00 ' ' 
  {33,     1,   3,   9,  10,    3,   -8 },   // 0x01 '!' 
  {34,     5,   6,   4,  10,    2,   -8 },   // 0x02 '"' 
  {35,     8,   9,   9,  10,    0,   -8 },   // 0x03 '#' 
  {36,    19,   7,  11,  10,    1,   -9 },   // 0x04 '$' 
  {37,    29,   9,   9,  10,    0,   -8 },   // 0x05 '%' 
  {38,    40,   8,   9,  10,    1,   -8 },   // 0x06 '&' 
  {39,    49,   3,   4,  10,    3,   -8 },   // 0x07 ''' 
  {40,    51,   5,  13,  10,    2,   -9 },   // 0x08 '(' 
  {41,    60,   5,  13,  10,    3,   -9 },   // 0x09 ')' 
  {42,    69,   7,   6,  10,    1,   -8 },   // 0x0A '*' 
  {43,    75,   8,   7,  10,    1,   -7 },   // 0x0B '+' 
  {44,    82,   3,   5,  10,    3,   -2 },   // 0x0C ',' 
  {45,    84,   7,   2,  10,    1,   -5 },   // 0x0D '-' 
  {46,    86,   3,   3,  10,    3,   -2 },   // 0x0E '.' 
  {47,    88,   7,  12,  10,    1,   -9 },   // 0x0F '/' 
  {48,    99,   8,   9,  10,    1,   -8 },   // 0x10 '0' 
  {49,   108,   6,   9,  10,    2,   -8 },   // 0x11 '1' 
  {50,   115,   7,   9,  10,    1,   -8 },   // 0x12 '2' 
  {51,   123,   6,   9,  10,    2,   -8 },   // 0x13 '3' 
  {52,   130,   7,   9,  10,    1,   -8 },   // 0x14 '4' 
  {53,   138,   6,   9,  10,    2,   -8 },   // 0x15 '5' 
  {54,   145,   8,   9,  10,    1,   -8 },   // 0x16 '6' 
  {55,   154,   7,   9,  10,    1,   -8 },   // 0x17 '7' 
  {56,   162,   7,   9,  10,    1,   -8 },   // 0x18 '8' 
  {57,   170,   8,   9,  10,    1,   -8 },   // 0x19 '9' 
  {58,   179,   3,   7,  10,    3,   -6 },   // 0x1A ':' 
  {59,   182,   3,   9,  10,    3,   -6 },   // 0x1B ';' 
  {60,   186,   7,   8,  10,    1,   -8 },   // 0x1C '<' 
  {61,   193,   7,   5,  10,    1,   -6 },   // 0x1D '=' 
  {62,   198,   8,   8,  10,    1,   -8 },   // 0x1E '>' 
  {63,   206,   6,   9,  10,    2,   -8 },   // 0x1F '?' 
  {64,   213,   9,   9,  10,    0,   -7 },   // 0x20 '@' 
  {65,   224,  10,   9,  10,    0,   -8 },   // 0x21 'A' 
  {66,   236,   8,   9,  10,    1,   -8 },   // 0x22 'B' 
  {67,   245,   8,   9,  10,    1,   -8 },   // 0x23 'C' 
  {68,   254,   8,   9,  10,    1,   -8 },   // 0x24 'D' 
  {69,   263,   8,   9,  10,    1,   -8 },   // 0x25 'E' 
  {70,   272,   8,   9,  10,    1,   -8 },   // 0x26 'F' 
  {71,   281,   8,   9,  10,    1,   -8 },   // 0x27 'G' 
  {72,   290,   9,   9,  10,    0,   -8 },   // 0x28 'H' 
  {73,   301,   7,   9,  10,    1,   -8 },   // 0x29 'I' 
  {74,   309,   7,   9,  10,    1,   -8 },   // 0x2A 'J' 
  {75,   317,   9,   9,  10,    1,   -8 },   // 0x2B 'K' 
  {76,   328,   9,   9,  10,    0,   -8 },   // 0x2C 'L' 
  {77,   339,  10,   9,  10,    0,   -8 },   // 0x2D 'M' 
  {78,   351,   9,   9,  10,    0,   -8 },   // 0x2E 'N' 
  {79,   362,   8,   9,  10,    1,   -8 },   // 0x2F 'O' 
  {80,   371,   9,   9,  10,    0,   -8 },   // 0x30 'P' 
  {81,   382,   8,  11,  10,    1,   -8 },   // 0x31 'Q' 
  {82,   393,   9,   9,  10,    1,   -8 },   // 0x32 'R' 
  {83,   404,   6,   9,  10,    2,   -8 },   // 0x33 'S' 
  {84,   411,   8,   9,  10,    1,   -8 },   // 0x34 'T' 
  {85,   420,   9,   9,  10,    0,   -8 },   // 0x35 'U' 
  {86,   431,  10,   9,  10,    0,   -8 },   // 0x36 'V' 
  {87,   443,  10,   9,  10,    0,   -8 },   // 0x37 'W' 
  {88,   455,   9,   9,  10,    0,   -8 },   // 0x38 'X' 
  {89,   466,   9,   9,  10,    0,   -8 },   // 0x39 'Y' 
  {90,   477,   8,   9,  10,    1,   -8 },   // 0x3A 'Z' 
  {91,   486,   5,  13,  10,    2,   -9 },   // 0x3B '[' 
  {92,   495,   7,  12,  10,    1,   -9 },   // 0x3C '\' 
  {93,   506,   5,  13,  10,    2,   -9 },   // 0x3D ']' 
  {94,   515,   7,   6,  10,    1,   -8 },   // 0x3E '^' 
  {95,   521,  10,   2,  10,    0,    3 },   // 0x3F '_' 
  {96,   524,   5,   3,  10,    2,  -10 },   // 0x40 '`' 
  {97,   526,   8,   7,  10,    1,   -6 },   // 0x41 'a' 
  {98,   533,   9,  10,  10,    0,   -9 },   // 0x42 'b' 
  {99,   545,   8,   7,  10,    1,   -6 },   // 0x43 'c' 
  {100,   552,   8,  10,  10,    1,   -9 },   // 0x44 'd' 
  {101,   562,   8,   7,  10,    1,   -6 },   // 0x45 'e' 
  {102,   569,   7,  10,  10,    2,   -9 },   // 0x46 'f' 
  {103,   578,   8,  10,  10,    1,   -6 },   // 0x47 'g' 
  {104,   588,   8,  10,  10,    1,   -9 },   // 0x48 'h' 
  {105,   598,   8,  11,  10,    0,  -10 },   // 0x49 'i' 
  {106,   609,   6,  14,  10,    1,  -10 },   // 0x4A 'j' 
  {107,   620,   9,  10,  10,    1,   -9 },   // 0x4B 'k' 
  {108,   632,   8,  10,  10,    1,   -9 },   // 0x4C 'l' 
  {109,   642,   9,   7,  10,    0,   -6 },   // 0x4D 'm' 
  {110,   650,   9,   7,  10,    0,   -6 },   // 0x4E 'n' 
  {111,   658,   8,   7,  10,    1,   -6 },   // 0x4F 'o' 
  {112,   665,   9,  10,  10,    0,   -6 },   // 0x50 'p' 
  {113,   677,   8,  10,  10,    1,   -6 },   // 0x51 'q' 
  {114,   687,   7,   7,  10,    1,   -6 },   // 0x52 'r' 
  {115,   694,   6,   7,  10,    2,   -6 },   // 0x53 's' 
  {116,   700,   7,  10,  10,    1,   -9 },   // 0x54 't' 
  {117,   709,   9,   7,  10,    0,   -6 },   // 0x55 'u' 
  {118,   717,   9,   7,  10,    0,   -6 },   // 0x56 'v' 
  {119,   725,  10,   7,  10,    0,   -6 },   // 0x57 'w' 
  {120,   734,   8,   7,  10,    1,   -6 },   // 0x58 'x' 
  {121,   741,   9,  10,  10,    0,   -6 },   // 0x59 'y' 
  {122,   753,   8,   7,  10,    1,   -6 },   // 0x5A 'z' 
  {123,   760,   4,  13,  10,    2,   -9 },   // 0x5B '{' 
  {124,   767,   2,  13,  10,    4,   -9 },   // 0x5C '|' 
  {125,   771,   4,  13,  10,    3,   -9 },   // 0x5D '}' 
  {126,   778,   7,   2,  10,    1,   -4 }   // 0x5E '~' 
};

const gfxfont_t HotStuff8 PROGMEM = 
{
  (uint8_t  *)HotStuff8Bitmaps, //< Glyph bitmaps, concatenated 
  (gfxglyph_t *)HotStuff8Glyphs, //< Glyph array
  95,// total glyphs in the string
   1,  // newline distance (y axis)
     0,  // minimum X - left most
    -4,  // minimum Y - bottom most (descenders can drive this negative)
    10,  // maximum X - right most
    11}; // maximum Y - top most
// Approx. 1459 bytes -  but your mileage may vary.

#endif