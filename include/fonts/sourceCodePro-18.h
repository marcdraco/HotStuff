
#ifndef __FIXEDFONTSOURCECODEPROBOLDTTF18
#define __FIXEDFONTSOURCECODEPROBOLDTTF18
const uint8_t HotStuff18Bitmaps[] PROGMEM = {
  0x07, 0xF0, 0x07, 0xFC, 0x07, 0xFF, 0x07, 0xFF, 0xC7, 0xE3, 0xF3, 0xE0,
  0xFB, 0xE0, 0x3F, 0xF0, 0x1F, 0xF9, 0xCF, 0xFD, 0xF7, 0xFE, 0xFB, 0xFF,
  0x7D, 0xFF, 0x9C, 0xFF, 0xC0, 0x7F, 0xE0, 0x3F, 0xF0, 0x1E, 0x7C, 0x1F,
  0x3F, 0x1F, 0x8F, 0xFF, 0x83, 0xFF, 0x80, 0xFF, 0x80, 0x1F, 0x00, 0x07,
  0xE0, 0x7F, 0xE0, 0x7F, 0xE0, 0x7F, 0xE0, 0x7F, 0xE0, 0x03, 0xE0, 0x03,
  0xE0, 0x03, 0xE0, 0x03, 0xE0, 0x03, 0xE0, 0x03, 0xE0, 0x03, 0xE0, 0x03,
  0xE0, 0x03, 0xE0, 0x03, 0xE0, 0x03, 0xE0, 0x03, 0xE0, 0x03, 0xE0, 0xFF,
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x0F, 0xE0, 0x1F, 0xFC, 0x1F,
  0xFF, 0x1F, 0xFF, 0xC7, 0x87, 0xE1, 0x01, 0xF0, 0x00, 0x7C, 0x00, 0x3E,
  0x00, 0x3E, 0x00, 0x1F, 0x00, 0x1F, 0x80, 0x0F, 0x80, 0x0F, 0x80, 0x0F,
  0x80, 0x0F, 0x80, 0x0F, 0x80, 0x1F, 0x80, 0x1F, 0x80, 0x1F, 0xFF, 0xFF,
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFC, 0x07, 0xF0, 0x07, 0xFF, 0x87, 0xFF,
  0xF0, 0xFF, 0xFC, 0x3C, 0x1F, 0x84, 0x03, 0xE0, 0x01, 0xF8, 0x00, 0xFC,
  0x03, 0xFE, 0x00, 0xFE, 0x00, 0x3F, 0xC0, 0x0F, 0xFC, 0x00, 0x3F, 0x80,
  0x03, 0xE0, 0x00, 0xFC, 0x00, 0x3F, 0x30, 0x0F, 0x8F, 0x07, 0xE7, 0xFF,
  0xFB, 0xFF, 0xFC, 0x3F, 0xFE, 0x01, 0xFC, 0x00, 0x00, 0x7F, 0x00, 0x1F,
  0xE0, 0x03, 0xFC, 0x00, 0xFF, 0x80, 0x3F, 0xF0, 0x07, 0xBE, 0x01, 0xE7,
  0xC0, 0x7C, 0xF8, 0x0F, 0x1F, 0x03, 0xE3, 0xE0, 0xF8, 0x7C, 0x1E, 0x0F,
  0x87, 0xC1, 0xF1, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
  0xE0, 0x03, 0xE0, 0x00, 0x7C, 0x00, 0x0F, 0x80, 0x01, 0xF0, 0x00, 0x3E,
  0x00, 0x3F, 0xFF, 0x1F, 0xFF, 0x8F, 0xFF, 0xC7, 0xFF, 0xE3, 0xC0, 0x01,
  0xE0, 0x00, 0xF0, 0x00, 0x78, 0x00, 0x3F, 0xF0, 0x3F, 0xFE, 0x1F, 0xFF,
  0x87, 0xFF, 0xE1, 0x83, 0xF0, 0x00, 0xFC, 0x00, 0x7E, 0x00, 0x3F, 0x60,
  0x1F, 0x3C, 0x1F, 0xBF, 0xFF, 0x9F, 0xFF, 0xC3, 0xFF, 0x80, 0x7F, 0x00,
  0x01, 0xF8, 0x03, 0xFF, 0x07, 0xFF, 0xE7, 0xFF, 0xE3, 0xF0, 0xE3, 0xF0,
  0x21, 0xF0, 0x00, 0xF0, 0x00, 0xF8, 0xF8, 0x7D, 0xFF, 0x3F, 0xFF, 0xDF,
  0xFF, 0xEF, 0xE1, 0xFF, 0xE0, 0x7F, 0xE0, 0x3E, 0xF0, 0x1F, 0x7C, 0x0F,
  0xBF, 0x0F, 0xCF, 0xFF, 0xC3, 0xFF, 0xC0, 0xFF, 0xC0, 0x1F, 0x80, 0xFF,
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xE0, 0x01, 0xE0, 0x01, 0xF0,
  0x01, 0xF0, 0x00, 0xF0, 0x00, 0xF8, 0x00, 0x78, 0x00, 0x7C, 0x00, 0x3C,
  0x00, 0x3E, 0x00, 0x1F, 0x00, 0x0F, 0x80, 0x07, 0x80, 0x07, 0xC0, 0x03,
  0xE0, 0x01, 0xF0, 0x00, 0xF8, 0x00, 0x7C, 0x00, 0x3E, 0x00, 0x07, 0xF0,
  0x0F, 0xFE, 0x0F, 0xFF, 0x87, 0xFF, 0xE7, 0xE1, 0xF3, 0xE0, 0x79, 0xF0,
  0x3C, 0xF8, 0x3C, 0x3F, 0x1E, 0x0F, 0xFC, 0x03, 0xFE, 0x03, 0xFF, 0xC3,
  0xCF, 0xF3, 0xC0, 0xFB, 0xE0, 0x3F, 0xF0, 0x1F, 0xF8, 0x0F, 0xFE, 0x0F,
  0xDF, 0xFF, 0xCF, 0xFF, 0xE1, 0xFF, 0xC0, 0x3F, 0x80, 0x07, 0xE0, 0x0F,
  0xFC, 0x0F, 0xFF, 0x0F, 0xFF, 0xCF, 0xC3, 0xF7, 0xC0, 0xFB, 0xE0, 0x3D,
  0xF0, 0x1F, 0xF8, 0x1F, 0xFE, 0x1F, 0xFF, 0xFF, 0xEF, 0xFF, 0xF3, 0xFE,
  0xF8, 0x7C, 0x7C, 0x00, 0x3C, 0x00, 0x3E, 0x20, 0x3F, 0x1C, 0x3F, 0x1F,
  0xFF, 0x9F, 0xFF, 0x83, 0xFF, 0x00, 0x7E, 0x00, 0x00, 0xFF, 0xFF, 0xFF,
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x80, 0x1F, 0x00, 0x3E, 0x00, 0x7C, 0x00,
  0xF8, 0x01, 0xF0, 0x03, 0xFF, 0xE7, 0xFF, 0xCF, 0xFF, 0x9F, 0xFF, 0x3E,
  0x00, 0x7C, 0x00, 0xF8, 0x01, 0xF0, 0x03, 0xE0, 0x07, 0xC0, 0x0F, 0x80,
  0x1F, 0x00, 0x3E, 0x00, 0x00, 0x01, 0xFC, 0x01, 0xFF, 0xC0, 0xFF, 0xF8,
  0x7F, 0xFF, 0x3F, 0x87, 0x1F, 0x80, 0x87, 0xC0, 0x03, 0xF0, 0x00, 0xFC,
  0x00, 0x3E, 0x00, 0x0F, 0x80, 0x03, 0xE0, 0x00, 0xF8, 0x00, 0x3E, 0x00,
  0x0F, 0xC0, 0x03, 0xF0, 0x00, 0x7C, 0x00, 0x1F, 0x80, 0x43, 0xF8, 0x78,
  0x7F, 0xFE, 0x0F, 0xFF, 0xC1, 0xFF, 0xC0, 0x1F, 0xC0, 0xFF, 0xFF, 0xFF,
  0xFF, 0xFF, 0xFF, 0xF0, 0x00, 0x1E, 0x00, 0x3C, 0x00, 0xF0, 0x01, 0xE0,
  0x07, 0xC0, 0x0F, 0x00, 0x1E, 0x00, 0x7C, 0x00, 0xF0, 0x03, 0xE0, 0x07,
  0x80, 0x0F, 0x00, 0x3E, 0x00, 0x78, 0x00, 0xF0, 0x03, 0xC0, 0x07, 0x80,
  0x1F, 0x00, 0x3C, 0x00, 0x78, 0x01, 0xF0, 0x03, 0xC0, 0x0F, 0x80, 0x1E,
  0x00, 0x3C, 0x00, 0xF8, 0x01, 0xE0, 0x03, 0xC0, 0x0F, 0x00, 0x1E, 0x00,
  0x00, 0x1F, 0x00, 0x87, 0xF0, 0x19, 0xFF, 0x07, 0xB8, 0xE1, 0xEF, 0x1E,
  0x79, 0xE3, 0xDE, 0x3C, 0x7F, 0x83, 0x8E, 0x60, 0x7F, 0xC8, 0x07, 0xF0,
  0x00, 0x7C, 0x00, 0x00, 0x0F, 0x80, 0x43, 0xF8, 0x0C, 0xFF, 0x83, 0xDC,
  0x70, 0xF7, 0x8F, 0x3C, 0xF1, 0xEF, 0x1E, 0x3F, 0xC1, 0xC7, 0x30, 0x3F,
  0xE2, 0x03, 0xF8, 0x00, 0x3E, 0x00, 0x3E, 0x3F, 0x9F, 0xDF, 0xFF, 0xFB,
  0xF9, 0xFC, 0x7C };

// Glyph, Offset to bitmap, Width, Height, xAdvance, xOffset, yOffset

const gfxglyph_t HotStuff18Glyphs[] PROGMEM = {
  {48,     0,  17,  22,  21,    2,  -21 },   // 0x00 '0' 
  {49,    47,  16,  22,  21,    3,  -21 },   // 0x01 '1' 
  {50,    91,  17,  22,  21,    2,  -21 },   // 0x02 '2' 
  {51,   138,  18,  22,  21,    1,  -21 },   // 0x03 '3' 
  {52,   188,  19,  22,  21,    1,  -21 },   // 0x04 '4' 
  {53,   241,  17,  22,  21,    2,  -21 },   // 0x05 '5' 
  {54,   288,  17,  22,  21,    2,  -21 },   // 0x06 '6' 
  {55,   335,  17,  22,  21,    2,  -21 },   // 0x07 '7' 
  {56,   382,  17,  22,  21,    2,  -21 },   // 0x08 '8' 
  {57,   429,  17,  22,  21,    2,  -21 },   // 0x09 '9' 
  {32,   476,   1,   1,  21,    0,    0 },   // 0x0A ' ' 
  {70,   477,  15,  23,  21,    4,  -22 },   // 0x0B 'F' 
  {67,   521,  18,  23,  21,    2,  -22 },   // 0x0C 'C' 
  {45,   573,  13,   4,  21,    4,  -11 },   // 0x0D '-' 
  {47,   580,  15,  30,  21,    3,  -24 },   // 0x0E '/' 
  {37,   637,  19,  22,  21,    1,  -21 },   // 0x0F '%' 
  {46,   690,   9,   8,  21,    6,   -7 }   // 0x10 '.' 
};

const gfxfont_t HotStuff18 PROGMEM = 
{
  (uint8_t  *)HotStuff18Bitmaps, //< Glyph bitmaps, concatenated 
  (gfxglyph_t *)HotStuff18Glyphs, //< Glyph array
  17,// total glyphs in the string
  30,  // newline distance (y axis)
     0,  // minimum X - left most
    -5,  // minimum Y - bottom most (descenders can drive this negative)
    20,  // maximum X - right most
    25}; // maximum Y - top most
// Approx. 832 bytes -  but your mileage may vary.

#endif