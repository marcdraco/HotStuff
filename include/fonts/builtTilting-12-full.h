
#ifndef __FIXEDFONTBUILTTITLINGRGTTF12
#define __FIXEDFONTBUILTTITLINGRGTTF12
const uint8_t HotStuff12Bitmaps[] PROGMEM = {
  0x00, 0x3C, 0x78, 0xF1, 0xE3, 0xC7, 0x8B, 0x36, 0x66, 0xCD, 0x9B, 0x37,
  0xEF, 0xD9, 0xB3, 0x66, 0xCF, 0x98, 0xF9, 0xFB, 0x36, 0x6C, 0xF9, 0xF3,
  0x66, 0xFD, 0xFB, 0x3E, 0x7C, 0xF9, 0xF3, 0xE7, 0xCF, 0xFB, 0xF0, 0x7B,
  0xFC, 0xF3, 0xCF, 0x3C, 0xF0, 0xC3, 0x0C, 0x30, 0xCF, 0x3C, 0xF3, 0xCF,
  0xF7, 0x80, 0xF9, 0xFB, 0x36, 0x7C, 0x78, 0xF1, 0xE3, 0xC7, 0x8F, 0x1E,
  0x3C, 0x78, 0xF1, 0xE7, 0xCD, 0xFB, 0xE0, 0xFF, 0xF1, 0x8C, 0x63, 0x18,
  0xFF, 0xF1, 0x8C, 0x63, 0x18, 0xC7, 0xFE, 0xFF, 0xF1, 0x8C, 0x63, 0x18,
  0xC7, 0xFF, 0x8C, 0x63, 0x18, 0xC6, 0x30, 0x7B, 0xFC, 0xF3, 0xCF, 0x3C,
  0x30, 0xDF, 0x7C, 0xF3, 0xCF, 0x3C, 0xF3, 0xCF, 0xF7, 0x80, 0xC7, 0x8F,
  0x1E, 0x3C, 0x78, 0xF1, 0xE3, 0xFF, 0xFF, 0x1E, 0x3C, 0x78, 0xF1, 0xE3,
  0xC7, 0x8F, 0x18, 0xFF, 0xFF, 0xFF, 0xFF, 0xFC, 0x06, 0x0C, 0x18, 0x30,
  0x60, 0xC1, 0x83, 0x06, 0x0C, 0x18, 0x3C, 0x78, 0xF1, 0xF3, 0x6E, 0xFC,
  0xF0, 0xC7, 0x9F, 0x36, 0x6D, 0xDB, 0x36, 0x78, 0xF1, 0xE3, 0xE6, 0xCD,
  0x9B, 0xB3, 0x66, 0xCF, 0x9F, 0x18, 0xC6, 0x31, 0x8C, 0x63, 0x18, 0xC6,
  0x31, 0x8C, 0x63, 0x18, 0xC7, 0xFE, 0xE3, 0xF8, 0xFF, 0x3F, 0xCF, 0xF3,
  0xFC, 0xFF, 0x6F, 0xDB, 0xF6, 0xF7, 0xBD, 0xEF, 0x7B, 0xDC, 0xF7, 0x3D,
  0xCF, 0x33, 0xCC, 0xF3, 0x3C, 0x8C, 0xC7, 0xCF, 0x9F, 0x3E, 0x7E, 0xFD,
  0xFB, 0xD7, 0xBF, 0x7E, 0xFC, 0xF9, 0xF3, 0xE3, 0xC7, 0x8F, 0x18, 0x7B,
  0xFC, 0xF3, 0xCF, 0x3C, 0xF3, 0xCF, 0x3C, 0xF3, 0xCF, 0x3C, 0xF3, 0xCF,
  0xF7, 0x80, 0xFB, 0xFC, 0xF3, 0xCF, 0x3C, 0xF3, 0xCF, 0x3C, 0xFF, 0xFB,
  0x0C, 0x30, 0xC3, 0x0C, 0x00, 0x7B, 0xFC, 0xF3, 0xCF, 0x3C, 0xF3, 0xCF,
  0x3C, 0xF3, 0xCF, 0x3C, 0xF3, 0xCF, 0xF7, 0x86, 0x1C, 0xF9, 0xFB, 0x36,
  0x6C, 0xF9, 0xF3, 0x66, 0xCD, 0xFB, 0xE6, 0x6C, 0xD9, 0xB3, 0x66, 0xCD,
  0x9B, 0x38, 0x3C, 0xF9, 0xBE, 0x3C, 0x68, 0xD0, 0x30, 0x70, 0x78, 0x38,
  0x30, 0x68, 0xD1, 0xA3, 0x6E, 0xF8, 0xF0, 0xFF, 0xFC, 0x60, 0xC1, 0x83,
  0x06, 0x0C, 0x18, 0x30, 0x60, 0xC1, 0x83, 0x06, 0x0C, 0x18, 0x30, 0x60,
  0xCF, 0x9F, 0x3E, 0x7C, 0xF9, 0xF3, 0xE7, 0xCF, 0x9F, 0x3E, 0x7C, 0xF9,
  0xF3, 0xE6, 0xCD, 0xF9, 0xE0, 0xE7, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66,
  0x66, 0x66, 0x66, 0x66, 0x3C, 0x3C, 0x3C, 0x3C, 0x3C, 0x3C, 0x3C, 0x3C,
  0xE6, 0x36, 0x63, 0x67, 0x36, 0x73, 0x67, 0x36, 0x73, 0x67, 0x36, 0xD3,
  0x6D, 0x26, 0xD6, 0x6D, 0x66, 0xDE, 0x6D, 0xE6, 0x9E, 0x29, 0xE3, 0x9E,
  0x39, 0xE3, 0x9E, 0x38, 0xE0, 0x67, 0x66, 0x66, 0x66, 0x76, 0x36, 0x3C,
  0x3C, 0x3C, 0x3C, 0x3C, 0x3C, 0x3C, 0x36, 0x66, 0x66, 0x66, 0x67, 0xE7,
  0xC7, 0x66, 0x66, 0x66, 0x6E, 0x3C, 0x3C, 0x3C, 0x3C, 0x18, 0x18, 0x18,
  0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0xFF, 0xF8, 0x30, 0x61, 0xC3,
  0x06, 0x1C, 0x30, 0x61, 0xC3, 0x06, 0x1C, 0x30, 0x60, 0xC1, 0xFB, 0xF0,
  0x3C, 0x78, 0xF1, 0xE3, 0xC7, 0x8B, 0x36, 0x66, 0xCD, 0x9B, 0x37, 0xEF,
  0xD9, 0xB3, 0x66, 0xCF, 0x98, 0xF9, 0xFB, 0x36, 0x6C, 0xF9, 0xF3, 0x66,
  0xFD, 0xFB, 0x3E, 0x7C, 0xF9, 0xF3, 0xE7, 0xCF, 0xFB, 0xF0, 0x7B, 0xFC,
  0xF3, 0xCF, 0x3C, 0xF0, 0xC3, 0x0C, 0x30, 0xCF, 0x3C, 0xF3, 0xCF, 0xF7,
  0x80, 0xF9, 0xFB, 0x36, 0x7C, 0x78, 0xF1, 0xE3, 0xC7, 0x8F, 0x1E, 0x3C,
  0x78, 0xF1, 0xE7, 0xCD, 0xFB, 0xE0, 0xFF, 0xF1, 0x8C, 0x63, 0x18, 0xFF,
  0xF1, 0x8C, 0x63, 0x18, 0xC7, 0xFE, 0xFF, 0xF1, 0x8C, 0x63, 0x18, 0xC7,
  0xFF, 0x8C, 0x63, 0x18, 0xC6, 0x30, 0x7B, 0xFC, 0xF3, 0xCF, 0x3C, 0x30,
  0xDF, 0x7C, 0xF3, 0xCF, 0x3C, 0xF3, 0xCF, 0xF7, 0x80, 0xC7, 0x8F, 0x1E,
  0x3C, 0x78, 0xF1, 0xE3, 0xFF, 0xFF, 0x1E, 0x3C, 0x78, 0xF1, 0xE3, 0xC7,
  0x8F, 0x18, 0xFF, 0xFF, 0xFF, 0xFF, 0xFC, 0x06, 0x0C, 0x18, 0x30, 0x60,
  0xC1, 0x83, 0x06, 0x0C, 0x18, 0x3C, 0x78, 0xF1, 0xF3, 0x6E, 0xFC, 0xF0,
  0xC7, 0x9F, 0x36, 0x6D, 0xDB, 0x36, 0x78, 0xF1, 0xE3, 0xE6, 0xCD, 0x9B,
  0xB3, 0x66, 0xCF, 0x9F, 0x18, 0xC6, 0x31, 0x8C, 0x63, 0x18, 0xC6, 0x31,
  0x8C, 0x63, 0x18, 0xC7, 0xFE, 0xE3, 0xF8, 0xFF, 0x3F, 0xCF, 0xF3, 0xFC,
  0xFF, 0x6F, 0xDB, 0xF6, 0xF7, 0xBD, 0xEF, 0x7B, 0xDC, 0xF7, 0x3D, 0xCF,
  0x33, 0xCC, 0xF3, 0x3C, 0x8C, 0xC7, 0xCF, 0x9F, 0x3E, 0x7E, 0xFD, 0xFB,
  0xD7, 0xBF, 0x7E, 0xFC, 0xF9, 0xF3, 0xE3, 0xC7, 0x8F, 0x18, 0x7B, 0xFC,
  0xF3, 0xCF, 0x3C, 0xF3, 0xCF, 0x3C, 0xF3, 0xCF, 0x3C, 0xF3, 0xCF, 0xF7,
  0x80, 0xFB, 0xFC, 0xF3, 0xCF, 0x3C, 0xF3, 0xCF, 0x3C, 0xFF, 0xFB, 0x0C,
  0x30, 0xC3, 0x0C, 0x00, 0x7B, 0xFC, 0xF3, 0xCF, 0x3C, 0xF3, 0xCF, 0x3C,
  0xF3, 0xCF, 0x3C, 0xF3, 0xCF, 0xF7, 0x86, 0x1C, 0xF9, 0xFB, 0x36, 0x6C,
  0xF9, 0xF3, 0x66, 0xCD, 0xFB, 0xE6, 0x6C, 0xD9, 0xB3, 0x66, 0xCD, 0x9B,
  0x38, 0x3C, 0xF9, 0xBE, 0x3C, 0x68, 0xD0, 0x30, 0x70, 0x78, 0x38, 0x30,
  0x68, 0xD1, 0xA3, 0x6E, 0xF8, 0xF0, 0xFF, 0xFC, 0x60, 0xC1, 0x83, 0x06,
  0x0C, 0x18, 0x30, 0x60, 0xC1, 0x83, 0x06, 0x0C, 0x18, 0x30, 0x60, 0xCF,
  0x9F, 0x3E, 0x7C, 0xF9, 0xF3, 0xE7, 0xCF, 0x9F, 0x3E, 0x7C, 0xF9, 0xF3,
  0xE6, 0xCD, 0xF9, 0xE0, 0xE7, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66,
  0x66, 0x66, 0x66, 0x3C, 0x3C, 0x3C, 0x3C, 0x3C, 0x3C, 0x3C, 0x3C, 0xE6,
  0x36, 0x63, 0x67, 0x36, 0x73, 0x67, 0x36, 0x73, 0x67, 0x36, 0xD3, 0x6D,
  0x26, 0xD6, 0x6D, 0x66, 0xDE, 0x6D, 0xE6, 0x9E, 0x29, 0xE3, 0x9E, 0x39,
  0xE3, 0x9E, 0x38, 0xE0, 0x67, 0x66, 0x66, 0x66, 0x76, 0x36, 0x3C, 0x3C,
  0x3C, 0x3C, 0x3C, 0x3C, 0x3C, 0x36, 0x66, 0x66, 0x66, 0x67, 0xE7, 0xC7,
  0x66, 0x66, 0x66, 0x6E, 0x3C, 0x3C, 0x3C, 0x3C, 0x18, 0x18, 0x18, 0x18,
  0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0xFF, 0xF8, 0x30, 0x61, 0xC3, 0x06,
  0x1C, 0x30, 0x61, 0xC3, 0x06, 0x1C, 0x30, 0x60, 0xC1, 0xFB, 0xF0, 0xFF,
  0xFC, 0xF3, 0xCF, 0x3C, 0xF3, 0xCF, 0x3C, 0xF3, 0xCF, 0x3C, 0xF3, 0xCF,
  0xFF, 0xC0, 0x30, 0xC3, 0x3C, 0xF0, 0xC3, 0x0C, 0x30, 0xC3, 0x0C, 0x30,
  0xC3, 0x0C, 0x33, 0xFF, 0xC0, 0x7B, 0xFC, 0xF3, 0xCF, 0x3C, 0xC3, 0x0C,
  0x30, 0xC6, 0x38, 0xC7, 0x38, 0xC3, 0xFF, 0xC0, 0x7B, 0xFC, 0xF3, 0xCF,
  0x30, 0xC3, 0x7D, 0xF0, 0xC3, 0xCF, 0x3C, 0xF3, 0xCF, 0xF7, 0x80, 0x0E,
  0x0E, 0x0E, 0x1E, 0x1E, 0x1E, 0x36, 0x36, 0x36, 0x66, 0x66, 0x66, 0x66,
  0xFF, 0xFF, 0x06, 0x06, 0x06, 0x06, 0xFF, 0xFC, 0x30, 0xC3, 0x0F, 0xFF,
  0xCC, 0x30, 0xC3, 0xCF, 0x3C, 0xF3, 0xCF, 0xF7, 0x80, 0x7B, 0xFC, 0xF3,
  0xCF, 0x0C, 0x3E, 0xFF, 0x3C, 0xF3, 0xCF, 0x3C, 0xF3, 0xCF, 0xF7, 0x80,
  0xFF, 0xF0, 0xC3, 0x0C, 0x71, 0x86, 0x18, 0x63, 0x8C, 0x30, 0xC7, 0x1C,
  0x61, 0x86, 0x00, 0x7E, 0xFD, 0x9B, 0x36, 0x6C, 0xD9, 0xB3, 0x7E, 0xFD,
  0x9B, 0x3E, 0x7C, 0xF9, 0xB3, 0x66, 0xFC, 0xF0, 0xFF, 0xFC, 0xF3, 0xCF,
  0x3C, 0xF3, 0xCF, 0x3F, 0xFF, 0x0C, 0x71, 0x86, 0x38, 0xC7, 0x00, 0xFF,
  0xC0, 0x70, 0xCE, 0x19, 0x42, 0x2C, 0xC5, 0x90, 0xB6, 0x16, 0xC2, 0x90,
  0x76, 0x8E, 0xB8, 0x35, 0x04, 0xA0, 0x96, 0x32, 0xC4, 0x59, 0x8B, 0x21,
  0x44, 0x39, 0x87, 0x00, 0xFC, 0xFF, 0xE0, 0xFF, 0xFF, 0xFF, 0xF0, 0xFF,
  0xFC, 0x00, 0x0F, 0xC0, 0xFF, 0xC0, 0xFF, 0xF1, 0x8C, 0x63, 0x18, 0xC6,
  0x31, 0x8C, 0x63, 0x18, 0xC6, 0x31, 0x8C, 0x63, 0x18, 0xC6, 0x31, 0xFF,
  0x80, 0xFF, 0xC6, 0x31, 0x8C, 0x63, 0x18, 0xC6, 0x31, 0x8C, 0x63, 0x18,
  0xC6, 0x31, 0x8C, 0x63, 0x18, 0xC7, 0xFF, 0x80, 0x33, 0x66, 0x4C, 0xCC,
  0xC8, 0x88, 0x88, 0x88, 0x88, 0x88, 0x8C, 0xCC, 0x44, 0x62, 0x30, 0xCC,
  0x66, 0x23, 0x33, 0x31, 0x11, 0x11, 0x11, 0x11, 0x11, 0x33, 0x33, 0x26,
  0x64, 0xC0 };

// Glyph, Offset to bitmap, Width, Height, xAdvance, xOffset, yOffset

const gfxglyph_t HotStuff12Glyphs[] PROGMEM = {
  {32,     0,   1,   1,   4,    0,    0 },   // 0x00 ' ' 
  {65,     1,   7,  19,   8,    0,  -18 },   // 0x01 'A' 
  {66,    18,   7,  19,   8,    1,  -18 },   // 0x02 'B' 
  {67,    35,   6,  19,   8,    1,  -18 },   // 0x03 'C' 
  {68,    50,   7,  19,   8,    1,  -18 },   // 0x04 'D' 
  {69,    67,   5,  19,   7,    1,  -18 },   // 0x05 'E' 
  {70,    79,   5,  19,   7,    1,  -18 },   // 0x06 'F' 
  {71,    91,   6,  19,   8,    1,  -18 },   // 0x07 'G' 
  {72,   106,   7,  19,   9,    1,  -18 },   // 0x08 'H' 
  {73,   123,   2,  19,   4,    1,  -18 },   // 0x09 'I' 
  {74,   128,   7,  19,   8,    0,  -18 },   // 0x0A 'J' 
  {75,   145,   7,  19,   9,    1,  -18 },   // 0x0B 'K' 
  {76,   162,   5,  19,   6,    1,  -18 },   // 0x0C 'L' 
  {77,   174,  10,  19,  12,    1,  -18 },   // 0x0D 'M' 
  {78,   198,   7,  19,   8,    1,  -18 },   // 0x0E 'N' 
  {79,   215,   6,  19,   8,    1,  -18 },   // 0x0F 'O' 
  {80,   230,   6,  19,   8,    1,  -18 },   // 0x10 'P' 
  {81,   245,   6,  21,   8,    1,  -18 },   // 0x11 'Q' 
  {82,   261,   7,  19,   8,    1,  -18 },   // 0x12 'R' 
  {83,   278,   7,  19,   7,    0,  -18 },   // 0x13 'S' 
  {84,   295,   7,  19,   7,    0,  -18 },   // 0x14 'T' 
  {85,   312,   7,  19,   8,    1,  -18 },   // 0x15 'U' 
  {86,   329,   8,  19,   8,    0,  -18 },   // 0x16 'V' 
  {87,   348,  12,  19,  13,    0,  -18 },   // 0x17 'W' 
  {88,   377,   8,  19,   8,    0,  -18 },   // 0x18 'X' 
  {89,   396,   8,  19,   8,    0,  -18 },   // 0x19 'Y' 
  {90,   415,   7,  19,   8,    1,  -18 },   // 0x1A 'Z' 
  {97,   432,   7,  19,   8,    0,  -18 },   // 0x1B 'a' 
  {98,   449,   7,  19,   8,    1,  -18 },   // 0x1C 'b' 
  {99,   466,   6,  19,   8,    1,  -18 },   // 0x1D 'c' 
  {100,   481,   7,  19,   8,    1,  -18 },   // 0x1E 'd' 
  {101,   498,   5,  19,   7,    1,  -18 },   // 0x1F 'e' 
  {102,   510,   5,  19,   7,    1,  -18 },   // 0x20 'f' 
  {103,   522,   6,  19,   8,    1,  -18 },   // 0x21 'g' 
  {104,   537,   7,  19,   9,    1,  -18 },   // 0x22 'h' 
  {105,   554,   2,  19,   4,    1,  -18 },   // 0x23 'i' 
  {106,   559,   7,  19,   8,    0,  -18 },   // 0x24 'j' 
  {107,   576,   7,  19,   9,    1,  -18 },   // 0x25 'k' 
  {108,   593,   5,  19,   6,    1,  -18 },   // 0x26 'l' 
  {109,   605,  10,  19,  12,    1,  -18 },   // 0x27 'm' 
  {110,   629,   7,  19,   8,    1,  -18 },   // 0x28 'n' 
  {111,   646,   6,  19,   8,    1,  -18 },   // 0x29 'o' 
  {112,   661,   6,  19,   8,    1,  -18 },   // 0x2A 'p' 
  {113,   676,   6,  21,   8,    1,  -18 },   // 0x2B 'q' 
  {114,   692,   7,  19,   8,    1,  -18 },   // 0x2C 'r' 
  {115,   709,   7,  19,   7,    0,  -18 },   // 0x2D 's' 
  {116,   726,   7,  19,   7,    0,  -18 },   // 0x2E 't' 
  {117,   743,   7,  19,   8,    1,  -18 },   // 0x2F 'u' 
  {118,   760,   8,  19,   8,    0,  -18 },   // 0x30 'v' 
  {119,   779,  12,  19,  13,    0,  -18 },   // 0x31 'w' 
  {120,   808,   8,  19,   8,    0,  -18 },   // 0x32 'x' 
  {121,   827,   8,  19,   8,    0,  -18 },   // 0x33 'y' 
  {122,   846,   7,  19,   8,    1,  -18 },   // 0x34 'z' 
  {48,   863,   6,  19,   8,    1,  -18 },   // 0x35 '0' 
  {49,   878,   6,  19,   8,    1,  -18 },   // 0x36 '1' 
  {50,   893,   6,  19,   8,    1,  -18 },   // 0x37 '2' 
  {51,   908,   6,  19,   8,    1,  -18 },   // 0x38 '3' 
  {52,   923,   8,  19,   8,    0,  -18 },   // 0x39 '4' 
  {53,   942,   6,  19,   8,    1,  -18 },   // 0x3A '5' 
  {54,   957,   6,  19,   8,    1,  -18 },   // 0x3B '6' 
  {55,   972,   6,  19,   8,    1,  -18 },   // 0x3C '7' 
  {56,   987,   7,  19,   8,    0,  -18 },   // 0x3D '8' 
  {57,  1004,   6,  19,   8,    1,  -18 },   // 0x3E '9' 
  {45,  1019,   5,   2,   7,    1,  -10 },   // 0x3F '-' 
  {37,  1021,  11,  19,  11,    0,  -18 },   // 0x40 '%' 
  {46,  1048,   2,   3,   4,    1,   -2 },   // 0x41 '.' 
  {44,  1049,   2,   6,   4,    1,   -2 },   // 0x42 ',' 
  {33,  1051,   2,  20,   4,    1,  -19 },   // 0x43 '!' 
  {58,  1056,   2,  13,   4,    1,  -12 },   // 0x44 ':' 
  {45,  1060,   5,   2,   7,    1,  -10 },   // 0x45 '-' 
  {91,  1062,   5,  29,   8,    2,  -22 },   // 0x46 '[' 
  {93,  1081,   5,  29,   8,    1,  -22 },   // 0x47 ']' 
  {40,  1100,   4,  29,   8,    3,  -22 },   // 0x48 '(' 
  {41,  1115,   4,  29,   8,    1,  -22 }   // 0x49 ')' 
};

const gfxfont_t HotStuff12 PROGMEM = 
{
  (uint8_t  *)HotStuff12Bitmaps, //< Glyph bitmaps, concatenated 
  (gfxglyph_t *)HotStuff12Glyphs, //< Glyph array
  74,// total glyphs in the string
  29,  // newline distance (y axis)
     0,  // minimum X - left most
    -6,  // minimum Y - bottom most (descenders can drive this negative)
    12,  // maximum X - right most
    23}; // maximum Y - top most
// Approx. 1662 bytes -  but your mileage may vary.

#endif