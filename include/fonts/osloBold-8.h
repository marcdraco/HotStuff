
#ifndef __FIXEDFONTOSLOIIBOLDTTF8
#define __FIXEDFONTOSLOIIBOLDTTF8
const uint8_t HotStuff8Bitmaps[] PROGMEM = {
  0x00, 0xB8, 0x8B, 0x0E, 0x1A, 0x34, 0x64, 0xC9, 0x8B, 0x16, 0x1A, 0x23,
  0xA0, 0xF0, 0x20, 0x40, 0x81, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x8F,
  0xE0, 0x3C, 0x8E, 0x0C, 0x10, 0x20, 0x82, 0x04, 0x10, 0x41, 0x04, 0x0F,
  0xE0, 0x3C, 0x8E, 0x0C, 0x10, 0x20, 0x86, 0x02, 0x03, 0x06, 0x0A, 0x33,
  0xC0, 0x04, 0x18, 0x50, 0xA2, 0x44, 0x91, 0x22, 0x84, 0xFE, 0x10, 0x20,
  0x40, 0xFF, 0x02, 0x05, 0xCC, 0x50, 0x60, 0x81, 0x03, 0x06, 0x0A, 0x23,
  0x80, 0x38, 0x8A, 0x0D, 0xDC, 0x50, 0x60, 0xC1, 0x83, 0x06, 0x0A, 0x23,
  0x80, 0xFF, 0x0A, 0x14, 0x40, 0x82, 0x04, 0x08, 0x20, 0x41, 0x02, 0x08,
  0x00, 0x3C, 0x8E, 0x0C, 0x18, 0x28, 0x8E, 0x22, 0x83, 0x06, 0x0A, 0x33,
  0xC0, 0x3C, 0x8E, 0x0C, 0x18, 0x28, 0x8F, 0x04, 0x10, 0x20, 0x82, 0x08,
  0x00, 0xFC, 0xCD, 0xAD, 0xE2, 0x10, 0x88, 0x42, 0x1C, 0x9F, 0x80, 0xC0 };

// Glyph, Offset to bitmap, Width, Height, xAdvance, xOffset, yOffset

const gfxglyph_t HotStuff8Glyphs[] PROGMEM = {
  {32,     0,   1,   1,   3,    0,    0 },   // 0x00 ' ' 
  {48,     1,   7,  13,   8,    0,  -12 },   // 0x01 '0' 
  {49,    13,   7,  13,   7,    0,  -12 },   // 0x02 '1' 
  {50,    25,   7,  13,   8,    0,  -12 },   // 0x03 '2' 
  {51,    37,   7,  13,   8,    0,  -12 },   // 0x04 '3' 
  {52,    49,   7,  13,   7,   -1,  -12 },   // 0x05 '4' 
  {53,    61,   7,  13,   8,    0,  -12 },   // 0x06 '5' 
  {54,    73,   7,  13,   8,    0,  -12 },   // 0x07 '6' 
  {55,    85,   7,  13,   7,    0,  -12 },   // 0x08 '7' 
  {56,    97,   7,  13,   8,    0,  -12 },   // 0x09 '8' 
  {57,   109,   7,  13,   8,    0,  -12 },   // 0x0A '9' 
  {45,   121,   6,   1,   7,    0,   -6 },   // 0x0B '-' 
  {37,   122,   5,  13,   6,    0,  -12 },   // 0x0C '%' 
  {46,   131,   1,   2,   1,    0,   -1 }   // 0x0D '.' 
};

const gfxfont_t HotStuff8 PROGMEM = 
{
  (uint8_t  *)HotStuff8Bitmaps, //< Glyph bitmaps, concatenated 
  (gfxglyph_t *)HotStuff8Glyphs, //< Glyph array
  14,// total glyphs in the string
  13,  // newline distance (y axis)
    -1,  // minimum X - left most
     0,  // minimum Y - bottom most (descenders can drive this negative)
     7,  // maximum X - right most
    13}; // maximum Y - top most
// Approx. 244 bytes -  but your mileage may vary.

#endif