
#ifndef __FIXEDFONTBUILTTITLINGRGTTF30
#define __FIXEDFONTBUILTTITLINGRGTTF30
const uint8_t HotStuff30Bitmaps[] PROGMEM = {
  0x00, 0x0F, 0xFC, 0x1F, 0xFF, 0x0F, 0xFF, 0xCF, 0xFF, 0xE7, 0xFF, 0xF3,
  0xFB, 0xFD, 0xF0, 0x7E, 0xF8, 0x1F, 0x7C, 0x0F, 0xBE, 0x07, 0xDF, 0x03,
  0xEF, 0x81, 0xFF, 0xC0, 0xFF, 0xE0, 0x7F, 0xF0, 0x3F, 0xF8, 0x1F, 0xFC,
  0x0F, 0xFE, 0x07, 0xFF, 0x03, 0xFF, 0x81, 0xFF, 0xC0, 0xFF, 0xE0, 0x7F,
  0xF0, 0x3F, 0xF8, 0x1F, 0xFC, 0x0F, 0xFE, 0x07, 0xFF, 0x03, 0xFF, 0x81,
  0xFF, 0xC0, 0xFF, 0xE0, 0x7F, 0xF0, 0x3F, 0xF8, 0x1F, 0xFC, 0x0F, 0xFE,
  0x07, 0xDF, 0x03, 0xEF, 0x81, 0xF7, 0xC0, 0xFB, 0xE0, 0x7D, 0xF0, 0x3E,
  0xF8, 0x1F, 0x7C, 0x1F, 0xBF, 0xBF, 0xDF, 0xFF, 0xCF, 0xFF, 0xE3, 0xFF,
  0xF1, 0xFF, 0xF0, 0x3F, 0xF0, 0x03, 0xE0, 0x03, 0xE0, 0x03, 0xE0, 0x03,
  0xE0, 0x03, 0xE0, 0x03, 0xE0, 0x07, 0xE0, 0xFF, 0xE0, 0xFF, 0xE0, 0xFF,
  0xE0, 0xFF, 0xE0, 0xFF, 0xE0, 0x07, 0xE0, 0x07, 0xE0, 0x07, 0xE0, 0x07,
  0xE0, 0x07, 0xE0, 0x07, 0xE0, 0x07, 0xE0, 0x07, 0xE0, 0x07, 0xE0, 0x07,
  0xE0, 0x07, 0xE0, 0x07, 0xE0, 0x07, 0xE0, 0x07, 0xE0, 0x07, 0xE0, 0x07,
  0xE0, 0x07, 0xE0, 0x07, 0xE0, 0x07, 0xE0, 0x07, 0xE0, 0x07, 0xE0, 0x07,
  0xE0, 0x07, 0xE0, 0x07, 0xE0, 0x07, 0xE0, 0x07, 0xE0, 0x07, 0xE0, 0x07,
  0xE0, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x0F,
  0xF0, 0x3F, 0xFC, 0x7F, 0xFE, 0x7F, 0xFE, 0xFF, 0xFF, 0xFE, 0xFF, 0xF8,
  0x3F, 0xF8, 0x1F, 0xF8, 0x1F, 0xF8, 0x1F, 0xF8, 0x1F, 0xF8, 0x1F, 0xF8,
  0x1F, 0xF8, 0x1F, 0xF8, 0x1F, 0xF8, 0x1F, 0xF8, 0x1F, 0xF8, 0x1F, 0x00,
  0x1F, 0x00, 0x1F, 0x00, 0x1F, 0x00, 0x1F, 0x00, 0x3F, 0x00, 0x3F, 0x00,
  0x3E, 0x00, 0x7E, 0x00, 0x7C, 0x00, 0xFC, 0x00, 0xF8, 0x01, 0xF8, 0x03,
  0xF0, 0x03, 0xF0, 0x07, 0xE0, 0x0F, 0xC0, 0x0F, 0xC0, 0x1F, 0x80, 0x3F,
  0x00, 0x7F, 0x00, 0x7E, 0x00, 0xFC, 0x00, 0xFC, 0x00, 0xFF, 0xFF, 0xFF,
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x0F, 0xF8, 0x0F, 0xFF, 0x0F,
  0xFF, 0xCF, 0xFF, 0xE7, 0xFF, 0xF3, 0xFB, 0xFD, 0xF0, 0x7E, 0xF8, 0x1F,
  0xF8, 0x0F, 0xFC, 0x07, 0xFE, 0x03, 0xFF, 0x01, 0xFF, 0x80, 0xFF, 0xC0,
  0x7F, 0xE0, 0x3E, 0xF0, 0x1F, 0x00, 0x0F, 0x80, 0x07, 0xC0, 0x03, 0xE0,
  0x03, 0xF0, 0x07, 0xF0, 0x3F, 0xF8, 0x1F, 0xF8, 0x0F, 0xFC, 0x07, 0xFF,
  0x03, 0xFF, 0xC0, 0x07, 0xE0, 0x01, 0xF0, 0x00, 0xF8, 0x00, 0x7C, 0x00,
  0x3F, 0xF0, 0x1F, 0xF8, 0x0F, 0xFC, 0x07, 0xFE, 0x03, 0xFF, 0x01, 0xFF,
  0x80, 0xFF, 0xC0, 0x7F, 0xE0, 0x3F, 0xF8, 0x1F, 0x7C, 0x0F, 0xBF, 0xBF,
  0xDF, 0xFF, 0xEF, 0xFF, 0xE3, 0xFF, 0xF0, 0xFF, 0xF0, 0x1F, 0xE0, 0x00,
  0x3E, 0x00, 0x1F, 0x80, 0x07, 0xE0, 0x01, 0xF8, 0x00, 0xFE, 0x00, 0x3F,
  0x80, 0x0F, 0xE0, 0x07, 0xF8, 0x01, 0xFE, 0x00, 0x7F, 0x80, 0x3F, 0xE0,
  0x0F, 0xF8, 0x03, 0xFE, 0x01, 0xFF, 0x80, 0x7F, 0xE0, 0x1F, 0xF8, 0x07,
  0xBE, 0x03, 0xEF, 0x80, 0xFB, 0xE0, 0x3C, 0xF8, 0x1F, 0x3E, 0x07, 0xCF,
  0x81, 0xE3, 0xE0, 0xF8, 0xF8, 0x3E, 0x3E, 0x0F, 0x8F, 0x87, 0xC3, 0xE1,
  0xF0, 0xF8, 0x7C, 0x3E, 0x3E, 0x0F, 0x8F, 0x83, 0xE3, 0xFF, 0xFF, 0xFF,
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x3E, 0x00, 0x0F,
  0x80, 0x03, 0xE0, 0x00, 0xF8, 0x00, 0x3E, 0x00, 0x0F, 0x80, 0x03, 0xE0,
  0x00, 0xF8, 0x00, 0x3E, 0x00, 0x3F, 0xFF, 0x9F, 0xFF, 0xCF, 0xFF, 0xE7,
  0xFF, 0xF3, 0xFF, 0xF9, 0xF0, 0x00, 0xF8, 0x00, 0x7C, 0x00, 0x3E, 0x00,
  0x1F, 0x00, 0x0F, 0x80, 0x07, 0xC0, 0x03, 0xE0, 0x01, 0xE0, 0x00, 0xF3,
  0xF0, 0xFB, 0xFC, 0x7F, 0xFF, 0x3F, 0xFF, 0x9F, 0xFF, 0xEF, 0xC3, 0xF1,
  0xC0, 0xF8, 0x00, 0x7C, 0x00, 0x3E, 0x00, 0x1F, 0x00, 0x0F, 0x80, 0x07,
  0xC0, 0x03, 0xE0, 0x01, 0xF7, 0xC0, 0xFF, 0xC0, 0x7F, 0xE0, 0x3F, 0xF0,
  0x1F, 0xF8, 0x0F, 0xFC, 0x07, 0xFE, 0x03, 0xEF, 0x01, 0xF7, 0xC0, 0xFB,
  0xE0, 0x7D, 0xF0, 0x3E, 0xF8, 0x3F, 0x7F, 0xFF, 0x3F, 0xFF, 0x8F, 0xFF,
  0xC7, 0xFF, 0xC1, 0xFF, 0xC0, 0x3F, 0x80, 0x07, 0xF8, 0x0F, 0xFF, 0x0F,
  0xFF, 0xC7, 0xFF, 0xE7, 0xFF, 0xF3, 0xFF, 0xFD, 0xF0, 0x3E, 0xF8, 0x1F,
  0x7C, 0x0F, 0xBE, 0x07, 0xDF, 0x03, 0xEF, 0x81, 0xFF, 0xC0, 0xFF, 0xE0,
  0x03, 0xF0, 0x01, 0xF8, 0x00, 0xFC, 0x00, 0x7E, 0x00, 0x3F, 0x7E, 0x1F,
  0xFF, 0xCF, 0xFF, 0xF7, 0xFF, 0xFB, 0xF8, 0x7F, 0xF8, 0x1F, 0xFC, 0x0F,
  0xFE, 0x07, 0xFF, 0x03, 0xFF, 0x81, 0xFF, 0xC0, 0xFF, 0xE0, 0x7F, 0xF0,
  0x3F, 0xF8, 0x1F, 0xFC, 0x0F, 0xFE, 0x07, 0xDF, 0x03, 0xEF, 0x81, 0xF7,
  0xC0, 0xFB, 0xE0, 0x7D, 0xF0, 0x3E, 0xF8, 0x1F, 0x7C, 0x1F, 0xBF, 0xFF,
  0xDF, 0xFF, 0xC7, 0xFF, 0xE3, 0xFF, 0xE0, 0xFF, 0xF0, 0x3F, 0xE0, 0xFF,
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF8, 0x00, 0xFC,
  0x00, 0x7E, 0x00, 0x3E, 0x00, 0x1F, 0x00, 0x0F, 0x80, 0x0F, 0xC0, 0x07,
  0xE0, 0x03, 0xE0, 0x01, 0xF0, 0x00, 0xF8, 0x00, 0xFC, 0x00, 0x7C, 0x00,
  0x3E, 0x00, 0x1F, 0x00, 0x1F, 0x80, 0x0F, 0xC0, 0x07, 0xC0, 0x03, 0xE0,
  0x01, 0xF0, 0x01, 0xF8, 0x00, 0xFC, 0x00, 0x7C, 0x00, 0x3E, 0x00, 0x3F,
  0x00, 0x1F, 0x80, 0x0F, 0x80, 0x07, 0xC0, 0x03, 0xE0, 0x03, 0xF0, 0x01,
  0xF8, 0x00, 0xF8, 0x00, 0x7C, 0x00, 0x7E, 0x00, 0x3F, 0x00, 0x1F, 0x80,
  0x0F, 0x80, 0x07, 0xC0, 0x07, 0xE0, 0x03, 0xF0, 0x01, 0xF8, 0x00, 0x0F,
  0xFC, 0x1F, 0xFF, 0x0F, 0xFF, 0xCF, 0xFF, 0xE7, 0xFF, 0xFB, 0xFB, 0xFD,
  0xF0, 0x7E, 0xF8, 0x1F, 0x7C, 0x0F, 0xBE, 0x07, 0xDF, 0x03, 0xEF, 0x81,
  0xF7, 0xC0, 0xFB, 0xE0, 0x7D, 0xF0, 0x3E, 0xF8, 0x1F, 0x7C, 0x0F, 0xBE,
  0x07, 0xDF, 0x03, 0xEF, 0x81, 0xF7, 0xC1, 0xFB, 0xFF, 0xF8, 0xFF, 0xF8,
  0x3F, 0xFC, 0x3F, 0xFF, 0x3F, 0xFF, 0xDF, 0x03, 0xFF, 0x81, 0xFF, 0x80,
  0xFF, 0xC0, 0x7F, 0xE0, 0x3F, 0xF0, 0x1F, 0xF8, 0x0F, 0xFC, 0x07, 0xFE,
  0x03, 0xFF, 0x01, 0xFF, 0x80, 0xFF, 0xC0, 0x7F, 0xE0, 0x3F, 0xF8, 0x1F,
  0xFC, 0x0F, 0xFF, 0xBF, 0xDF, 0xFF, 0xEF, 0xFF, 0xF3, 0xFF, 0xF1, 0xFF,
  0xF0, 0x3F, 0xE0, 0x0F, 0xFC, 0x1F, 0xFF, 0x0F, 0xFF, 0xCF, 0xFF, 0xF7,
  0xFF, 0xFB, 0xFB, 0xFD, 0xF0, 0x7F, 0xF8, 0x1F, 0xFC, 0x0F, 0xFE, 0x07,
  0xFF, 0x03, 0xFF, 0x81, 0xFF, 0xC0, 0xFF, 0xE0, 0x7F, 0xF0, 0x3F, 0xF8,
  0x1F, 0xFC, 0x0F, 0xFE, 0x07, 0xFF, 0x03, 0xFF, 0x81, 0xFF, 0xC0, 0xFB,
  0xE0, 0x7D, 0xF0, 0x7E, 0xFE, 0xFF, 0x7F, 0xFF, 0xBF, 0xFF, 0x8F, 0xFF,
  0xC7, 0xFF, 0xE1, 0xF9, 0xF0, 0x01, 0xF8, 0x00, 0xFC, 0x00, 0x7C, 0x00,
  0x3E, 0x00, 0x3F, 0x00, 0x1F, 0x80, 0x0F, 0x80, 0x0F, 0xC0, 0x07, 0xE0,
  0x03, 0xE0, 0x03, 0xF0, 0x01, 0xF8, 0x01, 0xF8, 0x00, 0xFC, 0x00, 0xFC,
  0x00, 0x7E, 0x00, 0x7E, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
  0x3F, 0x00, 0x00, 0x3F, 0xC0, 0x07, 0x9F, 0xF0, 0x03, 0x8F, 0xF8, 0x03,
  0xC7, 0x3C, 0x01, 0xC7, 0x9E, 0x01, 0xE3, 0xC7, 0x00, 0xE1, 0xE3, 0x80,
  0x70, 0xF1, 0xC0, 0x78, 0x78, 0xE0, 0x38, 0x3C, 0x70, 0x3C, 0x1E, 0x38,
  0x1C, 0x0F, 0x1C, 0x1E, 0x07, 0x8E, 0x0F, 0x03, 0xC7, 0x07, 0x01, 0xE3,
  0x87, 0x80, 0xF1, 0xC3, 0x80, 0x78, 0xE3, 0xC0, 0x3C, 0x71, 0xE0, 0x1E,
  0x38, 0xE0, 0x0F, 0x3C, 0xF0, 0x03, 0x9E, 0x73, 0xF1, 0xFF, 0x7B, 0xFC,
  0xFF, 0xB9, 0xFF, 0x7F, 0x9C, 0xFF, 0x9F, 0xDE, 0x73, 0xC0, 0x0E, 0x79,
  0xE0, 0x0F, 0x3C, 0x70, 0x07, 0x1E, 0x38, 0x07, 0x8F, 0x1C, 0x03, 0xC7,
  0x8E, 0x01, 0xC3, 0xC7, 0x01, 0xE1, 0xE3, 0x80, 0xE0, 0xF1, 0xC0, 0xF0,
  0x78, 0xE0, 0x78, 0x3C, 0x70, 0x38, 0x1E, 0x38, 0x3C, 0x0F, 0x1C, 0x1C,
  0x07, 0x8E, 0x1E, 0x03, 0xC7, 0x0E, 0x01, 0xE3, 0x87, 0x00, 0xF3, 0xC7,
  0x80, 0x39, 0xE3, 0x80, 0x1F, 0xF3, 0xC0, 0x0F, 0xF9, 0xC0, 0x07, 0xF8,
  0x00, 0x01, 0xF8, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF };

// Glyph, Offset to bitmap, Width, Height, xAdvance, xOffset, yOffset

const gfxglyph_t HotStuff30Glyphs[] PROGMEM = {
  {32,     0,   1,   1,   9,    0,    0 },   // 0x00 ' ' 
  {48,     1,  17,  47,  20,    1,  -45 },   // 0x01 '0' 
  {49,   101,  16,  45,  20,    2,  -44 },   // 0x02 '1' 
  {50,   191,  16,  46,  20,    2,  -45 },   // 0x03 '2' 
  {51,   283,  17,  47,  20,    1,  -45 },   // 0x04 '3' 
  {52,   383,  18,  45,  20,    1,  -44 },   // 0x05 '4' 
  {53,   485,  17,  46,  20,    1,  -44 },   // 0x06 '5' 
  {54,   583,  17,  47,  20,    1,  -45 },   // 0x07 '6' 
  {55,   683,  17,  45,  20,    1,  -44 },   // 0x08 '7' 
  {56,   779,  17,  47,  20,    1,  -45 },   // 0x09 '8' 
  {57,   879,  17,  46,  20,    1,  -45 },   // 0x0A '9' 
  {45,   977,  14,   4,  16,    1,  -24 },   // 0x0B '-' 
  {37,   984,  25,  47,  27,    1,  -45 },   // 0x0C '%' 
  {46,  1131,   5,   8,   9,    2,   -7 }   // 0x0D '.' 
};

const gfxfont_t HotStuff30 PROGMEM = 
{
  (uint8_t  *)HotStuff30Bitmaps, //< Glyph bitmaps, concatenated 
  (gfxglyph_t *)HotStuff30Glyphs, //< Glyph array
  14,// total glyphs in the string
  47,  // newline distance (y axis)
     0,  // minimum X - left most
    -1,  // minimum Y - bottom most (descenders can drive this negative)
    26,  // maximum X - right most
    46}; // maximum Y - top most
// Approx. 1248 bytes -  but your mileage may vary.

#endif