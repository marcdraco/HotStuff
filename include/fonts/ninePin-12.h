
#ifndef __FIXEDFONTNINEPINTTF12
#define __FIXEDFONTNINEPINTTF12
const uint8_t HotStuff12Bitmaps[] PROGMEM = {
  0x00, 0x1F, 0xF0, 0x7F, 0xC0, 0x00, 0x00, 0x00, 0xE0, 0x0F, 0x80, 0x3E,
  0x07, 0xF8, 0x1F, 0x00, 0x03, 0x8E, 0x3E, 0x38, 0xC0, 0x00, 0xFC, 0x0F,
  0xF0, 0x30, 0x00, 0x38, 0x03, 0xE0, 0x0C, 0x00, 0x01, 0xFF, 0x07, 0xFC,
  0x1C, 0x0E, 0x00, 0x00, 0x0F, 0xC7, 0xE0, 0x70, 0x38, 0x00, 0x0E, 0x07,
  0x00, 0x01, 0xC0, 0xE0, 0x00, 0x38, 0x1C, 0x00, 0x3F, 0xFF, 0xF0, 0x1F,
  0xF0, 0x7F, 0xC0, 0x00, 0x00, 0x00, 0xE0, 0x0F, 0x80, 0x3E, 0x00, 0xF8,
  0x03, 0x00, 0x00, 0x01, 0xC0, 0x07, 0x00, 0x00, 0x03, 0x80, 0x0E, 0x00,
  0x00, 0x07, 0x00, 0x1C, 0x00, 0x00, 0x0F, 0xFF, 0xFF, 0xFF, 0x1F, 0xF0,
  0x7F, 0xC0, 0x00, 0x00, 0x00, 0xE0, 0x0F, 0x80, 0x30, 0x00, 0xC0, 0x03,
  0x00, 0x00, 0x7F, 0xC1, 0xFF, 0x00, 0x00, 0x00, 0x0C, 0x00, 0x30, 0x00,
  0x38, 0x03, 0xE0, 0x0C, 0x00, 0x01, 0xFF, 0x07, 0xFC, 0xE0, 0x0F, 0x80,
  0x30, 0x00, 0x00, 0x00, 0xE0, 0x0F, 0x80, 0x3E, 0x00, 0xF8, 0x03, 0x00,
  0x03, 0xFF, 0xFF, 0xFF, 0xC0, 0x00, 0x00, 0x0C, 0x00, 0x30, 0x00, 0x00,
  0x03, 0x00, 0x0C, 0x00, 0x00, 0x00, 0xC0, 0x03, 0xFF, 0xFF, 0xFF, 0xF0,
  0x00, 0x00, 0x00, 0xE0, 0x03, 0x80, 0x0E, 0x00, 0x38, 0x00, 0x00, 0x03,
  0xFF, 0xCF, 0xFF, 0x00, 0x00, 0x00, 0x0C, 0x00, 0x30, 0x00, 0x00, 0x03,
  0x00, 0x0C, 0x00, 0x0F, 0xFF, 0x3F, 0xFC, 0x1F, 0xF0, 0x7F, 0xC0, 0x00,
  0x00, 0x00, 0xE0, 0x0F, 0x80, 0x3E, 0x00, 0x38, 0x00, 0x00, 0x03, 0xFF,
  0xCF, 0xFF, 0x00, 0x00, 0xE0, 0x0F, 0x80, 0x30, 0x00, 0x38, 0x03, 0xE0,
  0x0C, 0x00, 0x01, 0xFF, 0x07, 0xFC, 0xFF, 0xFF, 0xFF, 0xF0, 0x00, 0x00,
  0x00, 0x00, 0x0C, 0x00, 0x30, 0x00, 0xC0, 0x03, 0x00, 0x00, 0x01, 0xC0,
  0x07, 0x00, 0x00, 0x00, 0x70, 0x01, 0xC0, 0x00, 0x00, 0xE0, 0x03, 0x80,
  0x00, 0x00, 0x38, 0x00, 0xE0, 0x1F, 0xF0, 0x7F, 0xC0, 0x00, 0x00, 0x00,
  0xE0, 0x0F, 0x80, 0x3E, 0x00, 0xF8, 0x03, 0x00, 0x00, 0x7F, 0xC1, 0xFF,
  0x00, 0x00, 0xE0, 0x0F, 0x80, 0x30, 0x00, 0x38, 0x03, 0xE0, 0x0C, 0x00,
  0x01, 0xFF, 0x07, 0xFC, 0x1F, 0xF0, 0x7F, 0xC0, 0x00, 0x00, 0x00, 0xE0,
  0x0F, 0x80, 0x3E, 0x00, 0xF8, 0x03, 0x00, 0x00, 0x7F, 0xF1, 0xFF, 0xC0,
  0x00, 0x00, 0x0C, 0x00, 0x30, 0x00, 0x38, 0x03, 0xE0, 0x0C, 0x00, 0x01,
  0xFF, 0x07, 0xFC, 0xFF, 0xFF, 0xFF, 0x00, 0x0C, 0x00, 0x30, 0x00, 0x00,
  0x00, 0xFC, 0x0F, 0xF0, 0x3F, 0xC7, 0x3F, 0x1C, 0x00, 0x00, 0x0E, 0x00,
  0x38, 0x00, 0x00, 0x1C, 0x7C, 0x71, 0xF0, 0x00, 0x38, 0x1F, 0xE0, 0x7C,
  0x00, 0x0E, 0x00, 0x38, 0x00, 0xFC, 0x1F, 0xF0, 0x7F, 0xC0, 0x00, 0x38,
  0x03, 0xE0, 0x0C, 0x00, 0x0E, 0x00, 0x38, 0x00, 0x00, 0x03, 0x80, 0x3E,
  0x00, 0xC0, 0x00, 0x1F, 0xF0, 0x7F, 0xC0, 0x03, 0xF0, 0x0F, 0xC0, 0x00,
  0x00, 0x00, 0x1C, 0x0C, 0x70, 0x31, 0xC0, 0x07, 0x00, 0x00, 0x03, 0xFE,
  0x0F, 0xF8, 0x00, 0x00, 0x1C, 0x00, 0x70, 0x00, 0x00, 0x07, 0x00, 0x1C,
  0x00, 0x00, 0x01, 0xC0, 0x07, 0x00 };

// Glyph, Offset to bitmap, Width, Height, xAdvance, xOffset, yOffset

const gfxglyph_t HotStuff12Glyphs[] PROGMEM = {
  {32,     0,   1,   1,  15,    0,    0 },   // 0x00 ' ' 
  {48,     1,  14,  20,  15,    0,  -19 },   // 0x01 '0' 
  {49,    36,   9,  20,  15,    3,  -19 },   // 0x02 '1' 
  {50,    59,  14,  20,  15,    0,  -19 },   // 0x03 '2' 
  {51,    94,  14,  20,  15,    0,  -19 },   // 0x04 '3' 
  {52,   129,  14,  20,  15,    0,  -19 },   // 0x05 '4' 
  {53,   164,  14,  20,  15,    0,  -19 },   // 0x06 '5' 
  {54,   199,  14,  20,  15,    0,  -19 },   // 0x07 '6' 
  {55,   234,  14,  20,  15,    0,  -19 },   // 0x08 '7' 
  {56,   269,  14,  20,  15,    0,  -19 },   // 0x09 '8' 
  {57,   304,  14,  20,  15,    0,  -19 },   // 0x0A '9' 
  {45,   339,  12,   2,  16,    0,  -10 },   // 0x0B '-' 
  {37,   342,  14,  20,  15,    0,  -19 },   // 0x0C '%' 
  {46,   377,   3,   2,  16,    6,   -1 },   // 0x0D '.' 
  {99,   378,  14,  14,  15,    0,  -13 },   // 0x0E 'c' 
  {102,   403,  14,  20,  15,    0,  -19 }   // 0x0F 'f' 
};

const gfxfont_t HotStuff12 PROGMEM = 
{
  (uint8_t  *)HotStuff12Bitmaps, //< Glyph bitmaps, concatenated 
  (gfxglyph_t *)HotStuff12Glyphs, //< Glyph array
  16,// total glyphs in the string
  20,  // newline distance (y axis)
     0,  // minimum X - left most
     0,  // minimum Y - bottom most (descenders can drive this negative)
    14,  // maximum X - right most
    20}; // maximum Y - top most
// Approx. 564 bytes -  but your mileage may vary.

#endif