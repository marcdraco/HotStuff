
#ifndef __FIXEDFONTDEALERPLATECALIFORNIATTF12
#define __FIXEDFONTDEALERPLATECALIFORNIATTF12
const uint8_t HotStuff12Bitmaps[] PROGMEM = {
  0x00, 0x38, 0x70, 0xE1, 0xC3, 0x85, 0x9B, 0x36, 0x6C, 0xD9, 0x92, 0x24,
  0x7F, 0xFF, 0xE3, 0xC7, 0x86, 0x08, 0xFD, 0xFF, 0x1E, 0x1C, 0x38, 0x71,
  0xE3, 0xFF, 0xFB, 0x1E, 0x1C, 0x38, 0x70, 0xE1, 0xC7, 0xFF, 0xF0, 0x38,
  0xFB, 0x1E, 0x3C, 0x78, 0x30, 0x60, 0xC1, 0x83, 0x06, 0x0C, 0x18, 0x31,
  0xE3, 0xC6, 0xF8, 0xE0, 0xFD, 0xFD, 0x1A, 0x14, 0x28, 0x50, 0xA1, 0x42,
  0x85, 0x0A, 0x14, 0x28, 0x50, 0xA1, 0x47, 0xFF, 0xF0, 0xFF, 0xFF, 0x06,
  0x0C, 0x18, 0x30, 0x60, 0xFD, 0xFB, 0x06, 0x0C, 0x18, 0x30, 0x60, 0xC1,
  0xFF, 0xF8, 0xFF, 0xFF, 0x06, 0x0C, 0x18, 0x30, 0x60, 0xC1, 0xFB, 0xF6,
  0x0C, 0x18, 0x30, 0x60, 0xC1, 0x83, 0x00, 0x38, 0xFB, 0x1E, 0x3C, 0x78,
  0x30, 0x60, 0xC1, 0x83, 0x3E, 0x7C, 0x78, 0xF1, 0xE3, 0xC6, 0xF8, 0xE0,
  0xC7, 0x8F, 0x1E, 0x3C, 0x78, 0xF1, 0xE3, 0xFF, 0xFF, 0x1E, 0x3C, 0x78,
  0xF1, 0xE3, 0xC7, 0x8F, 0x18, 0xFF, 0xFC, 0x40, 0x81, 0x02, 0x04, 0x08,
  0x10, 0x20, 0x40, 0x81, 0x02, 0x04, 0x08, 0x11, 0xFF, 0xF8, 0x06, 0x0C,
  0x18, 0x30, 0x60, 0xC1, 0x83, 0x06, 0x0C, 0x18, 0x30, 0x60, 0xF1, 0xE3,
  0xC6, 0xF8, 0xE0, 0xC7, 0x8B, 0x36, 0x4D, 0x9A, 0x3C, 0x70, 0xE1, 0xC3,
  0xC7, 0x8D, 0x9B, 0x36, 0x66, 0xCD, 0x8F, 0x18, 0xC1, 0x83, 0x06, 0x0C,
  0x18, 0x30, 0x60, 0xC1, 0x83, 0x06, 0x0C, 0x18, 0x30, 0x60, 0xC1, 0xFF,
  0xF8, 0xC7, 0x8F, 0x1F, 0x7E, 0xFD, 0xFF, 0xFF, 0xFF, 0xF7, 0x4E, 0x9C,
  0x38, 0x70, 0xE1, 0xC3, 0x87, 0x08, 0xC7, 0x8F, 0x9F, 0x3E, 0x7E, 0xFD,
  0xFB, 0xF7, 0xBF, 0x7E, 0xFC, 0xF9, 0xF3, 0xE7, 0xC7, 0x8F, 0x18, 0x7D,
  0xFF, 0x1E, 0x3C, 0x78, 0xF1, 0xE3, 0xC7, 0x8F, 0x1E, 0x3C, 0x78, 0xF1,
  0xE3, 0xC7, 0xFD, 0xF0, 0xF9, 0xFB, 0x1E, 0x3C, 0x78, 0xF1, 0xE3, 0xFD,
  0xF3, 0x06, 0x0C, 0x18, 0x30, 0x60, 0xC1, 0x83, 0x00, 0x38, 0xFB, 0x1E,
  0x3C, 0x78, 0xF1, 0xE3, 0xC7, 0x8F, 0x1E, 0x3D, 0xF9, 0xF3, 0xBE, 0x3C,
  0x18, 0x18, 0xF9, 0xFB, 0x1E, 0x3C, 0x78, 0xF1, 0xE3, 0xFD, 0xF3, 0x26,
  0x6C, 0xD9, 0xB3, 0x62, 0xC7, 0x8F, 0x18, 0x38, 0xF9, 0x9B, 0x26, 0x0C,
  0x0C, 0x18, 0x18, 0x30, 0x30, 0x60, 0x60, 0xE0, 0xC1, 0xC7, 0xFC, 0xF0,
  0xFF, 0xFC, 0x40, 0x81, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x81, 0x02,
  0x04, 0x08, 0x10, 0x20, 0x40, 0xC7, 0x8F, 0x1E, 0x3C, 0x78, 0xF1, 0xE3,
  0xC7, 0x8F, 0x1E, 0x3C, 0x78, 0xF1, 0xE3, 0xC6, 0xF8, 0xE0, 0x83, 0x87,
  0x1E, 0x3C, 0x78, 0xD1, 0xA2, 0x44, 0xD9, 0xB3, 0x66, 0xC5, 0x8E, 0x1C,
  0x38, 0x70, 0xE0, 0xC1, 0xE0, 0xF0, 0x68, 0x34, 0x1A, 0x0D, 0x04, 0x82,
  0x69, 0x35, 0x9B, 0xCF, 0xE7, 0xF3, 0xF9, 0xDC, 0xEE, 0x77, 0x39, 0x98,
  0xC0, 0xC3, 0x8D, 0x1B, 0x36, 0xCD, 0x8F, 0x1C, 0x38, 0x70, 0xE1, 0xC6,
  0xCD, 0x9B, 0x23, 0xC7, 0x8F, 0x18, 0xC7, 0x8F, 0x1B, 0x26, 0xCD, 0x8E,
  0x1C, 0x38, 0x30, 0x40, 0x81, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0xFF,
  0xFC, 0x18, 0x30, 0xC1, 0x83, 0x0C, 0x18, 0x30, 0xC1, 0x83, 0x0C, 0x18,
  0x20, 0xC1, 0xFF, 0xF8, 0x38, 0x70, 0xE1, 0xC3, 0x85, 0x9B, 0x36, 0x6C,
  0xD9, 0x92, 0x24, 0x7F, 0xFF, 0xE3, 0xC7, 0x86, 0x08, 0xFD, 0xFF, 0x1E,
  0x1C, 0x38, 0x71, 0xE3, 0xFF, 0xFB, 0x1E, 0x1C, 0x38, 0x70, 0xE1, 0xC7,
  0xFF, 0xF0, 0x38, 0xFB, 0x1E, 0x3C, 0x78, 0x30, 0x60, 0xC1, 0x83, 0x06,
  0x0C, 0x18, 0x31, 0xE3, 0xC6, 0xF8, 0xE0, 0xFD, 0xFD, 0x1A, 0x14, 0x28,
  0x50, 0xA1, 0x42, 0x85, 0x0A, 0x14, 0x28, 0x50, 0xA1, 0x47, 0xFF, 0xF0,
  0xFF, 0xFF, 0x06, 0x0C, 0x18, 0x30, 0x60, 0xFD, 0xFB, 0x06, 0x0C, 0x18,
  0x30, 0x60, 0xC1, 0xFF, 0xF8, 0xFF, 0xFF, 0x06, 0x0C, 0x18, 0x30, 0x60,
  0xC1, 0xFB, 0xF6, 0x0C, 0x18, 0x30, 0x60, 0xC1, 0x83, 0x00, 0x38, 0xFB,
  0x1E, 0x3C, 0x78, 0x30, 0x60, 0xC1, 0x83, 0x3E, 0x7C, 0x78, 0xF1, 0xE3,
  0xC6, 0xF8, 0xE0, 0xC7, 0x8F, 0x1E, 0x3C, 0x78, 0xF1, 0xE3, 0xFF, 0xFF,
  0x1E, 0x3C, 0x78, 0xF1, 0xE3, 0xC7, 0x8F, 0x18, 0xFF, 0xFC, 0x40, 0x81,
  0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x81, 0x02, 0x04, 0x08, 0x11, 0xFF,
  0xF8, 0x06, 0x0C, 0x18, 0x30, 0x60, 0xC1, 0x83, 0x06, 0x0C, 0x18, 0x30,
  0x60, 0xF1, 0xE3, 0xC6, 0xF8, 0xE0, 0xC7, 0x8B, 0x36, 0x4D, 0x9A, 0x3C,
  0x70, 0xE1, 0xC3, 0xC7, 0x8D, 0x9B, 0x36, 0x66, 0xCD, 0x8F, 0x18, 0xC1,
  0x83, 0x06, 0x0C, 0x18, 0x30, 0x60, 0xC1, 0x83, 0x06, 0x0C, 0x18, 0x30,
  0x60, 0xC1, 0xFF, 0xF8, 0xC7, 0x8F, 0x1F, 0x7E, 0xFD, 0xFF, 0xFF, 0xFF,
  0xF7, 0x4E, 0x9C, 0x38, 0x70, 0xE1, 0xC3, 0x87, 0x08, 0xC7, 0x8F, 0x9F,
  0x3E, 0x7E, 0xFD, 0xFB, 0xF7, 0xBF, 0x7E, 0xFC, 0xF9, 0xF3, 0xE7, 0xC7,
  0x8F, 0x18, 0x7D, 0xFF, 0x1E, 0x3C, 0x78, 0xF1, 0xE3, 0xC7, 0x8F, 0x1E,
  0x3C, 0x78, 0xF1, 0xE3, 0xC7, 0xFD, 0xF0, 0xF9, 0xFB, 0x1E, 0x3C, 0x78,
  0xF1, 0xE3, 0xFD, 0xF3, 0x06, 0x0C, 0x18, 0x30, 0x60, 0xC1, 0x83, 0x00,
  0x38, 0xFB, 0x1E, 0x3C, 0x78, 0xF1, 0xE3, 0xC7, 0x8F, 0x1E, 0x3D, 0xF9,
  0xF3, 0xBE, 0x3C, 0x18, 0x18, 0xF9, 0xFB, 0x1E, 0x3C, 0x78, 0xF1, 0xE3,
  0xFD, 0xF3, 0x26, 0x6C, 0xD9, 0xB3, 0x62, 0xC7, 0x8F, 0x18, 0x38, 0xF9,
  0x9B, 0x26, 0x0C, 0x0C, 0x18, 0x18, 0x30, 0x30, 0x60, 0x60, 0xE0, 0xC1,
  0xC7, 0xFC, 0xF0, 0xFF, 0xFC, 0x40, 0x81, 0x02, 0x04, 0x08, 0x10, 0x20,
  0x40, 0x81, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0xC7, 0x8F, 0x1E, 0x3C,
  0x78, 0xF1, 0xE3, 0xC7, 0x8F, 0x1E, 0x3C, 0x78, 0xF1, 0xE3, 0xC6, 0xF8,
  0xE0, 0x83, 0x87, 0x1E, 0x3C, 0x78, 0xD1, 0xA2, 0x44, 0xD9, 0xB3, 0x66,
  0xC5, 0x8E, 0x1C, 0x38, 0x70, 0xE0, 0xC1, 0xE0, 0xF0, 0x68, 0x34, 0x1A,
  0x0D, 0x04, 0x82, 0x69, 0x35, 0x9B, 0xCF, 0xE7, 0xF3, 0xF9, 0xDC, 0xEE,
  0x77, 0x39, 0x98, 0xC0, 0xC3, 0x8D, 0x1B, 0x36, 0xCD, 0x8F, 0x1C, 0x38,
  0x70, 0xE1, 0xC6, 0xCD, 0x9B, 0x23, 0xC7, 0x8F, 0x18, 0xC7, 0x8F, 0x1B,
  0x26, 0xCD, 0x8E, 0x1C, 0x38, 0x30, 0x40, 0x81, 0x02, 0x04, 0x08, 0x10,
  0x20, 0x40, 0xFF, 0xFC, 0x18, 0x30, 0xC1, 0x83, 0x0C, 0x18, 0x30, 0xC1,
  0x83, 0x0C, 0x18, 0x20, 0xC1, 0xFF, 0xF8, 0x38, 0xFB, 0x1E, 0x3C, 0x78,
  0xF1, 0xE3, 0xC7, 0x8F, 0x1E, 0x3C, 0x78, 0xF1, 0xE3, 0xC6, 0xF8, 0xE0,
  0x18, 0x71, 0xE0, 0xC1, 0x83, 0x06, 0x0C, 0x18, 0x30, 0x60, 0xC1, 0x83,
  0x06, 0x0C, 0x19, 0xFF, 0xF8, 0x38, 0xFD, 0x18, 0x30, 0x60, 0xC1, 0x86,
  0x0C, 0x30, 0xC1, 0x86, 0x0C, 0x30, 0x60, 0xC1, 0xFF, 0xF8, 0x39, 0xF9,
  0x18, 0x30, 0x60, 0xC1, 0x83, 0x1C, 0x38, 0x18, 0x30, 0x60, 0xC1, 0x83,
  0x47, 0xF8, 0xE0, 0x30, 0x60, 0xC1, 0x83, 0x0C, 0x18, 0x30, 0x60, 0xC1,
  0x06, 0x2C, 0x59, 0xB3, 0x7F, 0xFE, 0x18, 0x10, 0xFF, 0xFB, 0x06, 0x0C,
  0x18, 0x30, 0x7E, 0xFF, 0x8C, 0x18, 0x30, 0x60, 0xC1, 0x83, 0x47, 0xFC,
  0xE0, 0x0E, 0x18, 0x61, 0x83, 0x04, 0x18, 0x30, 0x41, 0xFB, 0xF6, 0x3C,
  0x78, 0xF1, 0xE3, 0xC6, 0xF8, 0xE0, 0xFF, 0xFC, 0x08, 0x30, 0x61, 0x83,
  0x04, 0x18, 0x30, 0x60, 0x83, 0x06, 0x0C, 0x18, 0x30, 0x60, 0xC0, 0x38,
  0xFB, 0x1E, 0x3C, 0x78, 0xF1, 0xE3, 0x7C, 0xFB, 0x1E, 0x3C, 0x78, 0xF1,
  0xE3, 0xC6, 0xFC, 0xE0, 0x38, 0xFB, 0x1E, 0x3C, 0x78, 0xF1, 0xE3, 0x7E,
  0x7C, 0x18, 0x60, 0xC1, 0x86, 0x0C, 0x30, 0xC1, 0x80, 0xFF, 0x71, 0xF8,
  0xB4, 0xDA, 0x6D, 0x26, 0xB3, 0xD8, 0xE8, 0x0C, 0x04, 0x06, 0x03, 0x61,
  0x79, 0xA4, 0x92, 0xC9, 0x64, 0xA3, 0xF0, 0xC0, 0x70, 0xF5, 0x40, 0xFF,
  0xFF, 0xFF, 0x50, 0x1C, 0xD0, 0x00, 0x70, 0xFE, 0x49, 0x24, 0x92, 0x49,
  0x24, 0x92, 0x49, 0x27, 0xE0, 0xFF, 0x33, 0x33, 0x33, 0x33, 0x33, 0x33,
  0x33, 0x33, 0x33, 0x33, 0x3F, 0xF0, 0x2F, 0xE9, 0x24, 0x92, 0x49, 0x24,
  0x92, 0x49, 0xB3, 0x20, 0x8C, 0x63, 0x33, 0x33, 0x33, 0x33, 0x33, 0x33,
  0x33, 0x33, 0x33, 0x6E, 0xC0 };

// Glyph, Offset to bitmap, Width, Height, xAdvance, xOffset, yOffset

const gfxglyph_t HotStuff12Glyphs[] PROGMEM = {
  {32,     0,   1,   1,   5,    0,    0 },   // 0x00 ' ' 
  {65,     1,   7,  19,   9,    1,  -18 },   // 0x01 'A' 
  {66,    18,   7,  19,   9,    1,  -18 },   // 0x02 'B' 
  {67,    35,   7,  19,   9,    1,  -18 },   // 0x03 'C' 
  {68,    52,   7,  19,   9,    1,  -18 },   // 0x04 'D' 
  {69,    69,   7,  19,   9,    1,  -18 },   // 0x05 'E' 
  {70,    86,   7,  19,   9,    1,  -18 },   // 0x06 'F' 
  {71,   103,   7,  19,   9,    1,  -18 },   // 0x07 'G' 
  {72,   120,   7,  19,   9,    1,  -18 },   // 0x08 'H' 
  {73,   137,   7,  19,   9,    1,  -18 },   // 0x09 'I' 
  {74,   154,   7,  19,   9,    1,  -18 },   // 0x0A 'J' 
  {75,   171,   7,  19,   9,    1,  -18 },   // 0x0B 'K' 
  {76,   188,   7,  19,   9,    1,  -18 },   // 0x0C 'L' 
  {77,   205,   7,  19,   9,    1,  -18 },   // 0x0D 'M' 
  {78,   222,   7,  19,   9,    1,  -18 },   // 0x0E 'N' 
  {79,   239,   7,  19,   9,    1,  -18 },   // 0x0F 'O' 
  {80,   256,   7,  19,   9,    1,  -18 },   // 0x10 'P' 
  {81,   273,   7,  19,   9,    1,  -18 },   // 0x11 'Q' 
  {82,   290,   7,  19,   9,    1,  -18 },   // 0x12 'R' 
  {83,   307,   7,  19,   9,    1,  -18 },   // 0x13 'S' 
  {84,   324,   7,  19,   9,    1,  -18 },   // 0x14 'T' 
  {85,   341,   7,  19,   9,    1,  -18 },   // 0x15 'U' 
  {86,   358,   7,  19,   9,    1,  -18 },   // 0x16 'V' 
  {87,   375,   9,  19,   9,    0,  -18 },   // 0x17 'W' 
  {88,   397,   7,  19,   9,    1,  -18 },   // 0x18 'X' 
  {89,   414,   7,  19,   9,    1,  -18 },   // 0x19 'Y' 
  {90,   431,   7,  19,   9,    1,  -18 },   // 0x1A 'Z' 
  {97,   448,   7,  19,   9,    1,  -18 },   // 0x1B 'a' 
  {98,   465,   7,  19,   9,    1,  -18 },   // 0x1C 'b' 
  {99,   482,   7,  19,   9,    1,  -18 },   // 0x1D 'c' 
  {100,   499,   7,  19,   9,    1,  -18 },   // 0x1E 'd' 
  {101,   516,   7,  19,   9,    1,  -18 },   // 0x1F 'e' 
  {102,   533,   7,  19,   9,    1,  -18 },   // 0x20 'f' 
  {103,   550,   7,  19,   9,    1,  -18 },   // 0x21 'g' 
  {104,   567,   7,  19,   9,    1,  -18 },   // 0x22 'h' 
  {105,   584,   7,  19,   9,    1,  -18 },   // 0x23 'i' 
  {106,   601,   7,  19,   9,    1,  -18 },   // 0x24 'j' 
  {107,   618,   7,  19,   9,    1,  -18 },   // 0x25 'k' 
  {108,   635,   7,  19,   9,    1,  -18 },   // 0x26 'l' 
  {109,   652,   7,  19,   9,    1,  -18 },   // 0x27 'm' 
  {110,   669,   7,  19,   9,    1,  -18 },   // 0x28 'n' 
  {111,   686,   7,  19,   9,    1,  -18 },   // 0x29 'o' 
  {112,   703,   7,  19,   9,    1,  -18 },   // 0x2A 'p' 
  {113,   720,   7,  19,   9,    1,  -18 },   // 0x2B 'q' 
  {114,   737,   7,  19,   9,    1,  -18 },   // 0x2C 'r' 
  {115,   754,   7,  19,   9,    1,  -18 },   // 0x2D 's' 
  {116,   771,   7,  19,   9,    1,  -18 },   // 0x2E 't' 
  {117,   788,   7,  19,   9,    1,  -18 },   // 0x2F 'u' 
  {118,   805,   7,  19,   9,    1,  -18 },   // 0x30 'v' 
  {119,   822,   9,  19,   9,    0,  -18 },   // 0x31 'w' 
  {120,   844,   7,  19,   9,    1,  -18 },   // 0x32 'x' 
  {121,   861,   7,  19,   9,    1,  -18 },   // 0x33 'y' 
  {122,   878,   7,  19,   9,    1,  -18 },   // 0x34 'z' 
  {48,   895,   7,  19,   9,    1,  -18 },   // 0x35 '0' 
  {49,   912,   7,  19,   9,    1,  -18 },   // 0x36 '1' 
  {50,   929,   7,  19,   9,    1,  -18 },   // 0x37 '2' 
  {51,   946,   7,  19,   9,    1,  -18 },   // 0x38 '3' 
  {52,   963,   7,  19,   9,    1,  -18 },   // 0x39 '4' 
  {53,   980,   7,  19,   9,    1,  -18 },   // 0x3A '5' 
  {54,   997,   7,  19,   9,    1,  -18 },   // 0x3B '6' 
  {55,  1014,   7,  19,   9,    1,  -18 },   // 0x3C '7' 
  {56,  1031,   7,  19,   9,    1,  -18 },   // 0x3D '8' 
  {57,  1048,   7,  19,   9,    1,  -18 },   // 0x3E '9' 
  {45,  1065,   4,   2,   5,    0,  -10 },   // 0x3F '-' 
  {37,  1066,   9,  19,   9,    0,  -18 },   // 0x40 '%' 
  {46,  1088,   2,   2,   5,    1,   -1 },   // 0x41 '.' 
  {44,  1089,   2,   5,   5,    1,   -1 },   // 0x42 ',' 
  {33,  1091,   2,  19,   5,    1,  -18 },   // 0x43 '!' 
  {58,  1096,   2,  10,   5,    1,  -13 },   // 0x44 ':' 
  {91,  1099,   3,  25,   5,    1,  -21 },   // 0x45 '[' 
  {93,  1109,   4,  25,   5,    0,  -21 },   // 0x46 ']' 
  {40,  1122,   3,  25,   5,    1,  -21 },   // 0x47 '(' 
  {41,  1132,   4,  25,   5,    0,  -21 }   // 0x48 ')' 
};

const gfxfont_t HotStuff12 PROGMEM = 
{
  (uint8_t  *)HotStuff12Bitmaps, //< Glyph bitmaps, concatenated 
  (gfxglyph_t *)HotStuff12Glyphs, //< Glyph array
  73,// total glyphs in the string
  25,  // newline distance (y axis)
     0,  // minimum X - left most
    -3,  // minimum Y - bottom most (descenders can drive this negative)
     9,  // maximum X - right most
    22}; // maximum Y - top most
// Approx. 1670 bytes -  but your mileage may vary.

#endif