
#ifndef __FIXEDFONTBPMONOBOLDSTENCILTTF18
#define __FIXEDFONTBPMONOBOLDSTENCILTTF18
const uint8_t HotStuff18Bitmaps[] PROGMEM = {
  0x03, 0xF0, 0x01, 0xFF, 0x01, 0xFF, 0xE0, 0x7F, 0xFC, 0x0F, 0xFF, 0x19,
  0x87, 0xE6, 0x00, 0xF9, 0xC0, 0x3E, 0xF8, 0x07, 0xFE, 0x01, 0xFF, 0x80,
  0x7F, 0xE0, 0x1F, 0xF8, 0x07, 0xFE, 0x01, 0xFF, 0x80, 0x7F, 0xF0, 0x0E,
  0x7C, 0x01, 0x9F, 0x86, 0x23, 0xFF, 0xC0, 0xFF, 0xF8, 0x1F, 0xFC, 0x03,
  0xFE, 0x00, 0x3F, 0x00, 0x00, 0x70, 0x00, 0x7C, 0x03, 0x9F, 0x03, 0xE7,
  0xC0, 0x79, 0xF0, 0x1E, 0x7C, 0x07, 0x9F, 0x00, 0x07, 0xC0, 0x01, 0xF0,
  0x00, 0x7C, 0x00, 0x1F, 0x00, 0x07, 0xC0, 0x01, 0xF0, 0x00, 0x7C, 0x00,
  0x1F, 0x00, 0x07, 0xC0, 0x01, 0xF0, 0x00, 0x7C, 0x0F, 0xFF, 0x7F, 0xFF,
  0xDF, 0xFF, 0xF7, 0xFF, 0xFD, 0xFF, 0xFF, 0x7C, 0x07, 0xE0, 0x0F, 0xFC,
  0x1F, 0xFE, 0x1F, 0xFC, 0x4F, 0xC4, 0x63, 0x80, 0x78, 0x80, 0x7C, 0x00,
  0x3E, 0x00, 0x1F, 0x00, 0x1F, 0x00, 0x1F, 0x80, 0x0F, 0x80, 0x0F, 0xC0,
  0x0F, 0xC0, 0x0F, 0xC0, 0x0F, 0xC0, 0x0F, 0xC0, 0x00, 0x00, 0x00, 0x00,
  0x0F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFE, 0x0F, 0xF0, 0x3F,
  0xFE, 0x1F, 0xFF, 0x8F, 0xFF, 0xC3, 0x87, 0xC0, 0x00, 0x00, 0x00, 0x1C,
  0x00, 0x3C, 0x00, 0x7E, 0x07, 0xFC, 0x03, 0xFE, 0x01, 0xFF, 0xC0, 0xFF,
  0xF0, 0x00, 0xF8, 0x00, 0x3E, 0x00, 0x1F, 0x00, 0x00, 0xA0, 0x08, 0x1F,
  0x1F, 0xDF, 0xFF, 0xEF, 0xFF, 0xE7, 0xFF, 0xE0, 0x7F, 0x80, 0x00, 0x3E,
  0x00, 0x1F, 0x00, 0x1F, 0x00, 0x1F, 0x00, 0x1F, 0x20, 0x0F, 0x90, 0x0F,
  0x98, 0x0F, 0x9C, 0x07, 0xDE, 0x07, 0xCF, 0x07, 0xCF, 0x83, 0xC7, 0xC3,
  0xE3, 0xE3, 0xE1, 0xF1, 0xFE, 0xFF, 0xFF, 0x7F, 0xFF, 0xBF, 0xFF, 0xDF,
  0xC0, 0x0F, 0x80, 0x07, 0xC0, 0x03, 0xE0, 0x01, 0xF0, 0x00, 0xF8, 0x1F,
  0xFF, 0x0F, 0xFF, 0x8F, 0xFF, 0xC7, 0xFF, 0xC3, 0xFF, 0xE0, 0x00, 0x00,
  0xF8, 0x00, 0x7F, 0xE0, 0x7F, 0xFC, 0x3F, 0xFF, 0x0F, 0xFF, 0xC3, 0x87,
  0xE0, 0x00, 0xF8, 0x00, 0x7C, 0x00, 0x00, 0x00, 0x1F, 0x00, 0x0F, 0xB8,
  0x0F, 0xDF, 0xFF, 0xCF, 0xFF, 0xEF, 0xFF, 0xE3, 0xFF, 0xC0, 0x3F, 0x80,
  0x00, 0x06, 0x00, 0x1F, 0x80, 0x1F, 0xE0, 0x0F, 0xF8, 0x07, 0xFF, 0x03,
  0xFC, 0x01, 0xFC, 0x00, 0xFC, 0x00, 0x3E, 0x38, 0x1F, 0x7F, 0x87, 0xFF,
  0xF1, 0xFF, 0xFE, 0x7E, 0x1F, 0x81, 0x03, 0xF8, 0x00, 0x7D, 0xE0, 0x1F,
  0x78, 0x01, 0xDF, 0x00, 0x07, 0xE0, 0xE0, 0xFF, 0xFE, 0x3F, 0xFF, 0x07,
  0xFF, 0x80, 0xFF, 0xC0, 0x0F, 0xC0, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
  0xFF, 0xFF, 0xFF, 0xFF, 0xF8, 0x00, 0x00, 0x00, 0xFC, 0x00, 0x7C, 0x00,
  0x3E, 0x00, 0x3E, 0x00, 0x1F, 0x00, 0x1F, 0x00, 0x0F, 0x80, 0x0F, 0xC0,
  0x07, 0xC0, 0x03, 0xE0, 0x03, 0xE0, 0x01, 0xF0, 0x01, 0xF0, 0x00, 0xF8,
  0x00, 0xF8, 0x00, 0x7C, 0x00, 0x7E, 0x00, 0x03, 0x60, 0x07, 0xBC, 0x0F,
  0xDF, 0x87, 0xEF, 0xC7, 0xE3, 0xF3, 0xE0, 0xF9, 0xF0, 0x7C, 0xF8, 0x3E,
  0x3E, 0x3E, 0x1F, 0xBE, 0x07, 0xDE, 0x07, 0xEF, 0xC7, 0xE3, 0xE3, 0xE0,
  0xFB, 0xE0, 0x3F, 0xF0, 0x1F, 0xF8, 0x0F, 0xFE, 0x0F, 0xFF, 0x8F, 0xEF,
  0xEF, 0xE3, 0xF7, 0xE0, 0xFB, 0xE0, 0x1D, 0xC0, 0x03, 0xF0, 0x07, 0xFE,
  0x0F, 0xFF, 0x87, 0xFF, 0xC3, 0xFF, 0xF0, 0x20, 0xFB, 0x00, 0x3F, 0xF0,
  0x1F, 0xF8, 0x07, 0xFC, 0x00, 0x7F, 0x02, 0x0F, 0xFF, 0xE7, 0xFF, 0xF8,
  0xFF, 0xF8, 0x3F, 0xFC, 0x00, 0x7E, 0x00, 0x7E, 0x00, 0xFE, 0x1F, 0xFE,
  0x07, 0xFE, 0x03, 0xFE, 0x01, 0xFC, 0x00, 0xF0, 0x00, 0x00, 0xFB, 0xFF,
  0xFB, 0xFF, 0xFB, 0xFF, 0xFB, 0xFF, 0xFB, 0xFF, 0xF8, 0x00, 0xF8, 0x00,
  0xF8, 0x00, 0xF8, 0x00, 0xF8, 0x00, 0xF8, 0x00, 0xFB, 0xFE, 0xFB, 0xFE,
  0xFB, 0xFE, 0xFB, 0xFE, 0xFB, 0xFE, 0xF8, 0x00, 0xF8, 0x00, 0xF8, 0x00,
  0xF8, 0x00, 0xF8, 0x00, 0xF8, 0x00, 0xF8, 0x00, 0xF8, 0x00, 0xF8, 0x00,
  0x00, 0xDE, 0x00, 0x7B, 0xF8, 0x3F, 0x7F, 0x0F, 0xEF, 0xE3, 0xFD, 0xF8,
  0x7F, 0x03, 0x1F, 0xC0, 0x03, 0xF0, 0x00, 0xFC, 0x00, 0x1F, 0x80, 0x03,
  0xE0, 0x00, 0x7C, 0x00, 0x0F, 0x80, 0x01, 0xF0, 0x00, 0x3E, 0x00, 0x07,
  0xE0, 0x00, 0xFC, 0x00, 0x0F, 0xC0, 0x01, 0xFC, 0x00, 0x1F, 0xC0, 0xC3,
  0xFD, 0xFC, 0x3F, 0xBF, 0x83, 0xF7, 0xF0, 0x1E, 0xFE, 0x00, 0xDE, 0x00,
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF8, 0x00,
  0x07, 0xE0, 0x00, 0xF8, 0x00, 0x3F, 0x00, 0x07, 0xC0, 0x01, 0xF8, 0x00,
  0x3E, 0x00, 0x0F, 0xC0, 0x01, 0xF0, 0x00, 0x7E, 0x00, 0x0F, 0x80, 0x03,
  0xF0, 0x00, 0x7C, 0x00, 0x1F, 0x80, 0x03, 0xE0, 0x00, 0xFC, 0x00, 0x1F,
  0x00, 0x07, 0xE0, 0x00, 0xF8, 0x00, 0x3F, 0x00, 0x07, 0xC0, 0x01, 0xF8,
  0x00, 0x7E, 0x00, 0x0F, 0xC0, 0x03, 0xF0, 0x00, 0x7C, 0x00, 0x1F, 0x80,
  0x00, 0x1F, 0xFF, 0xE7, 0xFF, 0xF9, 0xFF, 0xFE, 0x7F, 0xFF, 0xCF, 0x3C,
  0xF0, 0x00, 0x3E, 0x3C, 0xF7, 0x83, 0xFD, 0xF0, 0x7F, 0xBC, 0x07, 0xEF,
  0x80, 0x33, 0xE0, 0x00, 0x7C, 0x00, 0x1F, 0x00, 0x03, 0xC0, 0x00, 0xFB,
  0xC0, 0x1E, 0xFE, 0x07, 0xFF, 0xC0, 0xF7, 0xFC, 0x3F, 0xE7, 0x87, 0x80,
  0x01, 0xF7, 0x9E, 0x7C, 0x7F, 0xCF, 0x8F, 0xF3, 0xE0, 0xFE, 0x78, 0x0F,
  0x00, 0x7C, 0xFB, 0xFF, 0xFF, 0xEF, 0x8E, 0x00 };

// Glyph, Offset to bitmap, Width, Height, xAdvance, xOffset, yOffset

const fixedgfxglyph_t HotStuff18Glyphs[] PROGMEM = {
  {48,     0,  18,  23,  21,    1,  -22 },   // 0x00 '0' 
  {49,    52,  18,  23,  21,    1,  -22 },   // 0x01 '1' 
  {50,   104,  17,  23,  21,    2,  -22 },   // 0x02 '2' 
  {51,   153,  17,  23,  21,    2,  -22 },   // 0x03 '3' 
  {52,   202,  17,  23,  21,    2,  -22 },   // 0x04 '4' 
  {53,   251,  17,  23,  21,    2,  -22 },   // 0x05 '5' 
  {54,   300,  18,  24,  21,    1,  -23 },   // 0x06 '6' 
  {55,   354,  17,  23,  21,    2,  -22 },   // 0x07 '7' 
  {56,   403,  17,  23,  21,    2,  -22 },   // 0x08 '8' 
  {57,   452,  17,  23,  21,    2,  -22 },   // 0x09 '9' 
  {32,   501,   1,   1,  21,    0,    0 },   // 0x0A ' ' 
  {70,   502,  16,  25,  21,    2,  -24 },   // 0x0B 'F' 
  {67,   552,  19,  25,  21,    1,  -24 },   // 0x0C 'C' 
  {45,   612,  17,   5,  21,    2,  -11 },   // 0x0D '-' 
  {47,   623,  19,  26,  21,    1,  -24 },   // 0x0E '/' 
  {37,   685,  19,  25,  21,    1,  -24 },   // 0x0F '%' 
  {46,   745,   7,   7,  21,    3,   -6 }   // 0x10 '.' 
};

const fixedgfxfont_t HotStuff18 PROGMEM = 
{
  (uint8_t  *)HotStuff18Bitmaps, //< Glyph bitmaps, concatenated 
  (fixedgfxglyph_t *)HotStuff18Glyphs, //< Glyph array
  17,// total glyphs in the string
  23,  // newline distance (y axis)
     0,  // minimum X - left most
    -1,  // minimum Y - bottom most (descenders can drive this negative)
    20,  // maximum X - right most
    25}; // maximum Y - top most
// Approx. 885 bytes -  but your mileage may vary.

#endif