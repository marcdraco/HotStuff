
#ifndef __FIXEDFONTDIGITALMONOTTF12
#define __FIXEDFONTDIGITALMONOTTF12
const uint8_t HotStuff12Bitmaps[] PROGMEM = {
  0x00, 0xFE, 0x3F, 0xF0, 0x78, 0x3C, 0x1E, 0x0F, 0x07, 0x7D, 0x3E, 0x60,
  0xF0, 0x78, 0x3C, 0x1E, 0x0F, 0x07, 0x01, 0xFF, 0x3F, 0xB0, 0x78, 0x3C,
  0x1E, 0x0F, 0x07, 0x7D, 0xBE, 0x60, 0xF0, 0x78, 0x3C, 0x1E, 0x0D, 0xFD,
  0xFE, 0xFF, 0xFF, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0x80, 0x80, 0xC0, 0xC0,
  0xC0, 0xC0, 0xC0, 0x7F, 0x7F, 0xFF, 0x3F, 0xB0, 0x78, 0x3C, 0x1E, 0x0F,
  0x07, 0x01, 0x80, 0x60, 0xF0, 0x78, 0x3C, 0x1E, 0x0D, 0xFD, 0xFE, 0xFF,
  0xFF, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xFF, 0xFF, 0xC0, 0xC0, 0xC0, 0xC0,
  0xC0, 0x7F, 0x7F, 0xFF, 0xFF, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xBF, 0x3F,
  0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0x80, 0xFF, 0x3F, 0xB0, 0x18, 0x0C,
  0x06, 0x03, 0x01, 0x0C, 0x86, 0xE0, 0xF0, 0x78, 0x3C, 0x1E, 0x0D, 0xFE,
  0xFC, 0xC0, 0xE0, 0xF0, 0x78, 0x3C, 0x1E, 0x0E, 0xFE, 0x7C, 0xC1, 0xE0,
  0xF0, 0x78, 0x3C, 0x1E, 0x0E, 0x02, 0x7F, 0xFC, 0xFF, 0xF4, 0x00, 0x80,
  0xC0, 0x60, 0x30, 0x18, 0x0C, 0x07, 0x01, 0xC1, 0xE0, 0xF0, 0x78, 0x3C,
  0x1B, 0xFD, 0xF8, 0x83, 0xE3, 0xB3, 0x9B, 0x8F, 0x87, 0x83, 0xF8, 0x7C,
  0xC1, 0xE0, 0xF0, 0x78, 0x3C, 0x1E, 0x0E, 0x02, 0x80, 0x60, 0x30, 0x18,
  0x0C, 0x06, 0x03, 0x01, 0x00, 0xC0, 0x60, 0x30, 0x18, 0x0C, 0x07, 0xFC,
  0xFE, 0xFF, 0x1F, 0xFC, 0x0F, 0x33, 0xCC, 0xF3, 0x3C, 0xCE, 0x31, 0x00,
  0x30, 0x3C, 0x0F, 0x03, 0xC0, 0xF0, 0x3C, 0x0E, 0x01, 0x80, 0xE0, 0xFC,
  0x7B, 0x3C, 0xDE, 0x3F, 0x06, 0x00, 0xC1, 0xE0, 0xF0, 0x78, 0x3C, 0x1E,
  0x0E, 0x02, 0x3E, 0x1F, 0x30, 0x78, 0x3C, 0x1E, 0x0F, 0x07, 0x01, 0x00,
  0x60, 0xF0, 0x78, 0x3C, 0x1E, 0x0D, 0xFC, 0x7C, 0xFF, 0x3F, 0xB0, 0x78,
  0x3C, 0x1E, 0x0F, 0x07, 0x7D, 0x3E, 0x60, 0x30, 0x18, 0x0C, 0x06, 0x03,
  0x01, 0x00, 0xFE, 0x3F, 0xF0, 0x78, 0x3C, 0x1E, 0x0F, 0x07, 0x01, 0x80,
  0x60, 0xF0, 0x78, 0x3C, 0x7E, 0x3D, 0xFE, 0xFF, 0xFE, 0x3F, 0xF0, 0x78,
  0x3C, 0x1E, 0x0F, 0x07, 0x7D, 0x3E, 0x60, 0x3C, 0x1F, 0x0D, 0xC6, 0x73,
  0x1D, 0x07, 0xFF, 0xBF, 0xB0, 0x18, 0x0C, 0x06, 0x03, 0x01, 0x7C, 0x3E,
  0x80, 0xC0, 0x60, 0x30, 0x18, 0x0D, 0xFF, 0xFC, 0xFF, 0x7F, 0x80, 0x03,
  0x01, 0x80, 0xC0, 0x60, 0x30, 0x00, 0x0C, 0x06, 0x03, 0x01, 0x80, 0xC0,
  0x60, 0x10, 0xC0, 0xE0, 0xF0, 0x78, 0x3C, 0x1E, 0x0E, 0x07, 0x01, 0xC1,
  0xE0, 0xF0, 0x78, 0x3C, 0x1B, 0xFD, 0xF8, 0x80, 0xE0, 0xF0, 0x78, 0x3C,
  0x1E, 0x0F, 0x06, 0x00, 0x80, 0xE0, 0xD8, 0xC6, 0xC3, 0x60, 0xA0, 0x00,
  0x80, 0x70, 0x3C, 0x0F, 0x03, 0xC0, 0xF0, 0x3C, 0x0E, 0x01, 0xCC, 0xF3,
  0x3C, 0xCF, 0x33, 0xCC, 0xDF, 0xFF, 0xF0, 0xC1, 0xE0, 0xD8, 0xCC, 0x63,
  0x61, 0xB0, 0x50, 0x00, 0x14, 0x1B, 0x0D, 0x8C, 0x66, 0x36, 0x0F, 0x06,
  0x00, 0xE0, 0xF0, 0x78, 0x3C, 0x1E, 0x0E, 0xFE, 0x7D, 0x01, 0x80, 0xC0,
  0x60, 0x30, 0x1B, 0xFF, 0xF8, 0xFD, 0xFF, 0xC0, 0xC0, 0x60, 0x60, 0x30,
  0x30, 0x00, 0x00, 0x0C, 0x0C, 0x06, 0x06, 0x03, 0x03, 0x79, 0xFE, 0xFE,
  0x3F, 0xF0, 0x78, 0x3C, 0x1E, 0x0F, 0x07, 0x7D, 0x3E, 0x60, 0xF0, 0x78,
  0x3C, 0x1E, 0x0F, 0x07, 0x01, 0xFF, 0x3F, 0xB0, 0x78, 0x3C, 0x1E, 0x0F,
  0x07, 0x7D, 0xBE, 0x60, 0xF0, 0x78, 0x3C, 0x1E, 0x0D, 0xFD, 0xFE, 0xFF,
  0xFF, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0x80, 0x80, 0xC0, 0xC0, 0xC0, 0xC0,
  0xC0, 0x7F, 0x7F, 0xFF, 0x3F, 0xB0, 0x78, 0x3C, 0x1E, 0x0F, 0x07, 0x01,
  0x80, 0x60, 0xF0, 0x78, 0x3C, 0x1E, 0x0D, 0xFD, 0xFE, 0xFF, 0xFF, 0xC0,
  0xC0, 0xC0, 0xC0, 0xC0, 0xFF, 0xFF, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0x7F,
  0x7F, 0xFF, 0xFF, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xBF, 0x3F, 0xC0, 0xC0,
  0xC0, 0xC0, 0xC0, 0xC0, 0x80, 0xFF, 0x3F, 0xB0, 0x18, 0x0C, 0x06, 0x03,
  0x01, 0x0C, 0x86, 0xE0, 0xF0, 0x78, 0x3C, 0x1E, 0x0D, 0xFE, 0xFC, 0xC0,
  0xE0, 0xF0, 0x78, 0x3C, 0x1E, 0x0E, 0xFE, 0x7C, 0xC1, 0xE0, 0xF0, 0x78,
  0x3C, 0x1E, 0x0E, 0x02, 0x7F, 0xFC, 0xFF, 0xF4, 0x00, 0x80, 0xC0, 0x60,
  0x30, 0x18, 0x0C, 0x07, 0x01, 0xC1, 0xE0, 0xF0, 0x78, 0x3C, 0x1B, 0xFD,
  0xF8, 0x83, 0xE3, 0xB3, 0x9B, 0x8F, 0x87, 0x83, 0xF8, 0x7C, 0xC1, 0xE0,
  0xF0, 0x78, 0x3C, 0x1E, 0x0E, 0x02, 0x80, 0x60, 0x30, 0x18, 0x0C, 0x06,
  0x03, 0x01, 0x00, 0xC0, 0x60, 0x30, 0x18, 0x0C, 0x07, 0xFC, 0xFE, 0xFF,
  0x1F, 0xFC, 0x0F, 0x33, 0xCC, 0xF3, 0x3C, 0xCE, 0x31, 0x00, 0x30, 0x3C,
  0x0F, 0x03, 0xC0, 0xF0, 0x3C, 0x0E, 0x01, 0x80, 0xE0, 0xFC, 0x7B, 0x3C,
  0xDE, 0x3F, 0x06, 0x00, 0xC1, 0xE0, 0xF0, 0x78, 0x3C, 0x1E, 0x0E, 0x02,
  0x3E, 0x1F, 0x30, 0x78, 0x3C, 0x1E, 0x0F, 0x07, 0x01, 0x00, 0x60, 0xF0,
  0x78, 0x3C, 0x1E, 0x0D, 0xFC, 0x7C, 0xFF, 0x3F, 0xB0, 0x78, 0x3C, 0x1E,
  0x0F, 0x07, 0x7D, 0x3E, 0x60, 0x30, 0x18, 0x0C, 0x06, 0x03, 0x01, 0x00,
  0xFE, 0x3F, 0xF0, 0x78, 0x3C, 0x1E, 0x0F, 0x07, 0x01, 0x80, 0x60, 0xF0,
  0x78, 0x3C, 0x7E, 0x3D, 0xFE, 0xFF, 0xFE, 0x3F, 0xF0, 0x78, 0x3C, 0x1E,
  0x0F, 0x07, 0x7D, 0x3E, 0x60, 0x3C, 0x1F, 0x0D, 0xC6, 0x73, 0x1D, 0x07,
  0xFF, 0xBF, 0xB0, 0x18, 0x0C, 0x06, 0x03, 0x01, 0x7C, 0x3E, 0x80, 0xC0,
  0x60, 0x30, 0x18, 0x0D, 0xFF, 0xFC, 0xFF, 0x7F, 0x80, 0x03, 0x01, 0x80,
  0xC0, 0x60, 0x30, 0x00, 0x0C, 0x06, 0x03, 0x01, 0x80, 0xC0, 0x60, 0x10,
  0xC0, 0xE0, 0xF0, 0x78, 0x3C, 0x1E, 0x0E, 0x07, 0x01, 0xC1, 0xE0, 0xF0,
  0x78, 0x3C, 0x1B, 0xFD, 0xF8, 0x80, 0xE0, 0xF0, 0x78, 0x3C, 0x1E, 0x0F,
  0x06, 0x00, 0x80, 0xE0, 0xD8, 0xC6, 0xC3, 0x60, 0xA0, 0x00, 0x80, 0x70,
  0x3C, 0x0F, 0x03, 0xC0, 0xF0, 0x3C, 0x0E, 0x01, 0xCC, 0xF3, 0x3C, 0xCF,
  0x33, 0xCC, 0xDF, 0xFF, 0xF0, 0xC1, 0xE0, 0xD8, 0xCC, 0x63, 0x61, 0xB0,
  0x50, 0x00, 0x14, 0x1B, 0x0D, 0x8C, 0x66, 0x36, 0x0F, 0x06, 0x00, 0xE0,
  0xF0, 0x78, 0x3C, 0x1E, 0x0E, 0xFE, 0x7D, 0x01, 0x80, 0xC0, 0x60, 0x30,
  0x1B, 0xFF, 0xF8, 0xFD, 0xFF, 0xC0, 0xC0, 0x60, 0x60, 0x30, 0x30, 0x00,
  0x00, 0x0C, 0x0C, 0x06, 0x06, 0x03, 0x03, 0x79, 0xFE, 0xFE, 0x3F, 0xF0,
  0x78, 0x3C, 0x1E, 0x0F, 0x07, 0x01, 0x80, 0xE0, 0xF0, 0x78, 0x3C, 0x1E,
  0x0D, 0xFE, 0xFC, 0x7F, 0xFC, 0xFF, 0xF4, 0xFE, 0x3F, 0xC0, 0x60, 0x30,
  0x18, 0x0C, 0x06, 0x7D, 0xBE, 0x60, 0x30, 0x18, 0x0C, 0x06, 0x01, 0xFC,
  0xFE, 0xFE, 0x7F, 0xC0, 0x60, 0x30, 0x18, 0x0C, 0x06, 0xFD, 0x7E, 0x80,
  0xC0, 0x60, 0x30, 0x18, 0x0F, 0xFF, 0xFC, 0x00, 0xE0, 0xF0, 0x78, 0x3C,
  0x1E, 0x0F, 0xFE, 0x7C, 0x01, 0x80, 0xC0, 0x60, 0x30, 0x18, 0x0C, 0x02,
  0xFF, 0x3F, 0xB0, 0x18, 0x0C, 0x06, 0x03, 0x01, 0x7C, 0x3E, 0x80, 0xC0,
  0x60, 0x30, 0x18, 0x0D, 0xFF, 0xFC, 0xFF, 0x3F, 0xB0, 0x18, 0x0C, 0x06,
  0x03, 0x01, 0x7C, 0xBE, 0xE0, 0xF0, 0x78, 0x3C, 0x1E, 0x0D, 0xFE, 0xFC,
  0xFE, 0x3F, 0xF0, 0x78, 0x3C, 0x1E, 0x0F, 0x07, 0x01, 0x00, 0x00, 0xC0,
  0x60, 0x30, 0x18, 0x0C, 0x06, 0x01, 0xFE, 0x3F, 0xF0, 0x78, 0x3C, 0x1E,
  0x0F, 0x07, 0x7D, 0xBE, 0xE0, 0xF0, 0x78, 0x3C, 0x1E, 0x0D, 0xFE, 0xFC,
  0xFE, 0x3F, 0xF0, 0x78, 0x3C, 0x1E, 0x0F, 0x07, 0x7D, 0x3E, 0x80, 0xC0,
  0x60, 0x30, 0x18, 0x0D, 0xFF, 0xFC, 0xFF, 0xFC, 0xE8, 0xCF, 0x1B, 0x66,
  0x78, 0xCB, 0xB0, 0x06, 0x00, 0x80, 0x00, 0x08, 0x03, 0x00, 0x6E, 0x98,
  0xF3, 0x36, 0xC7, 0x98, 0xB8, 0xF0, 0xFF, 0xC0, 0x7F, 0xFD, 0xFC, 0x3C,
  0xF0, 0x03, 0xC0, 0xFF, 0xFC, 0xFF, 0xCC, 0xCC, 0xC8, 0x8C, 0xCC, 0xCC,
  0xEF, 0xEB, 0xC6, 0x31, 0x8C, 0x60, 0x18, 0xC6, 0x31, 0xBF, 0xA0, 0x39,
  0xF1, 0x8C, 0x63, 0x10, 0x06, 0x31, 0x8C, 0x61, 0xE7, 0xF3, 0xC0, 0xC3,
  0x0C, 0x30, 0xC1, 0x00, 0x30, 0xC3, 0x0C, 0x3F, 0xBC };

// Glyph, Offset to bitmap, Width, Height, xAdvance, xOffset, yOffset

const gfxglyph_t HotStuff12Glyphs[] PROGMEM = {
  {32,     0,   1,   1,  11,    0,    0 },   // 0x00 ' ' 
  {65,     1,   9,  16,  11,    1,  -15 },   // 0x01 'A' 
  {66,    19,   9,  16,  11,    1,  -15 },   // 0x02 'B' 
  {67,    37,   8,  16,  11,    1,  -15 },   // 0x03 'C' 
  {68,    53,   9,  16,  11,    1,  -15 },   // 0x04 'D' 
  {69,    71,   8,  16,  11,    1,  -15 },   // 0x05 'E' 
  {70,    87,   8,  16,  11,    1,  -15 },   // 0x06 'F' 
  {71,   103,   9,  16,  11,    1,  -15 },   // 0x07 'G' 
  {72,   121,   9,  15,  11,    1,  -14 },   // 0x08 'H' 
  {73,   138,   2,  15,  11,    4,  -14 },   // 0x09 'I' 
  {74,   142,   9,  15,  11,    1,  -14 },   // 0x0A 'J' 
  {75,   159,   9,  15,  11,    1,  -14 },   // 0x0B 'K' 
  {76,   176,   9,  15,  11,    1,  -14 },   // 0x0C 'L' 
  {77,   193,  10,  16,  11,    1,  -15 },   // 0x0D 'M' 
  {78,   213,   9,  15,  11,    1,  -14 },   // 0x0E 'N' 
  {79,   230,   9,  16,  11,    1,  -15 },   // 0x0F 'O' 
  {80,   248,   9,  16,  11,    1,  -15 },   // 0x10 'P' 
  {81,   266,   9,  16,  11,    1,  -15 },   // 0x11 'Q' 
  {82,   284,   9,  16,  11,    1,  -15 },   // 0x12 'R' 
  {83,   302,   9,  16,  11,    1,  -15 },   // 0x13 'S' 
  {84,   320,   9,  16,  11,    1,  -15 },   // 0x14 'T' 
  {85,   338,   9,  15,  11,    1,  -14 },   // 0x15 'U' 
  {86,   355,   9,  15,  11,    1,  -14 },   // 0x16 'V' 
  {87,   372,  10,  15,  11,    1,  -14 },   // 0x17 'W' 
  {88,   391,   9,  15,  11,    1,  -14 },   // 0x18 'X' 
  {89,   408,   9,  15,  11,    1,  -14 },   // 0x19 'Y' 
  {90,   425,   9,  16,  11,    1,  -15 },   // 0x1A 'Z' 
  {97,   443,   9,  16,  11,    1,  -15 },   // 0x1B 'a' 
  {98,   461,   9,  16,  11,    1,  -15 },   // 0x1C 'b' 
  {99,   479,   8,  16,  11,    1,  -15 },   // 0x1D 'c' 
  {100,   495,   9,  16,  11,    1,  -15 },   // 0x1E 'd' 
  {101,   513,   8,  16,  11,    1,  -15 },   // 0x1F 'e' 
  {102,   529,   8,  16,  11,    1,  -15 },   // 0x20 'f' 
  {103,   545,   9,  16,  11,    1,  -15 },   // 0x21 'g' 
  {104,   563,   9,  15,  11,    1,  -14 },   // 0x22 'h' 
  {105,   580,   2,  15,  11,    4,  -14 },   // 0x23 'i' 
  {106,   584,   9,  15,  11,    1,  -14 },   // 0x24 'j' 
  {107,   601,   9,  15,  11,    1,  -14 },   // 0x25 'k' 
  {108,   618,   9,  15,  11,    1,  -14 },   // 0x26 'l' 
  {109,   635,  10,  16,  11,    1,  -15 },   // 0x27 'm' 
  {110,   655,   9,  15,  11,    1,  -14 },   // 0x28 'n' 
  {111,   672,   9,  16,  11,    1,  -15 },   // 0x29 'o' 
  {112,   690,   9,  16,  11,    1,  -15 },   // 0x2A 'p' 
  {113,   708,   9,  16,  11,    1,  -15 },   // 0x2B 'q' 
  {114,   726,   9,  16,  11,    1,  -15 },   // 0x2C 'r' 
  {115,   744,   9,  16,  11,    1,  -15 },   // 0x2D 's' 
  {116,   762,   9,  16,  11,    1,  -15 },   // 0x2E 't' 
  {117,   780,   9,  15,  11,    1,  -14 },   // 0x2F 'u' 
  {118,   797,   9,  15,  11,    1,  -14 },   // 0x30 'v' 
  {119,   814,  10,  15,  11,    1,  -14 },   // 0x31 'w' 
  {120,   833,   9,  15,  11,    1,  -14 },   // 0x32 'x' 
  {121,   850,   9,  15,  11,    1,  -14 },   // 0x33 'y' 
  {122,   867,   9,  16,  11,    1,  -15 },   // 0x34 'z' 
  {48,   885,   9,  16,  11,    1,  -15 },   // 0x35 '0' 
  {49,   903,   2,  15,  11,    8,  -14 },   // 0x36 '1' 
  {50,   907,   9,  16,  11,    1,  -15 },   // 0x37 '2' 
  {51,   925,   9,  16,  11,    1,  -15 },   // 0x38 '3' 
  {52,   943,   9,  15,  11,    1,  -14 },   // 0x39 '4' 
  {53,   960,   9,  16,  11,    1,  -15 },   // 0x3A '5' 
  {54,   978,   9,  16,  11,    1,  -15 },   // 0x3B '6' 
  {55,   996,   9,  16,  11,    1,  -15 },   // 0x3C '7' 
  {56,  1014,   9,  16,  11,    1,  -15 },   // 0x3D '8' 
  {57,  1032,   9,  16,  11,    1,  -15 },   // 0x3E '9' 
  {45,  1050,   7,   2,  11,    2,   -8 },   // 0x3F '-' 
  {37,  1052,  11,  15,  11,    0,  -14 },   // 0x40 '%' 
  {46,  1073,   2,   2,  11,    4,   -1 },   // 0x41 '.' 
  {44,  1074,   2,   5,  11,    4,   -1 },   // 0x42 ',' 
  {33,  1076,   2,  15,  11,    4,  -14 },   // 0x43 '!' 
  {58,  1080,   2,   9,  11,    4,  -11 },   // 0x44 ':' 
  {45,  1083,   7,   2,  11,    2,   -8 },   // 0x45 '-' 
  {91,  1085,   4,  16,  11,    1,  -15 },   // 0x46 '[' 
  {93,  1093,   5,  15,  11,    5,  -14 },   // 0x47 ']' 
  {40,  1103,   5,  16,  11,    1,  -15 },   // 0x48 '(' 
  {41,  1113,   6,  16,  11,    4,  -15 }   // 0x49 ')' 
};

const gfxfont_t HotStuff12 PROGMEM = 
{
  (uint8_t  *)HotStuff12Bitmaps, //< Glyph bitmaps, concatenated 
  (gfxglyph_t *)HotStuff12Glyphs, //< Glyph array
  74,// total glyphs in the string
  16,  // newline distance (y axis)
     0,  // minimum X - left most
    -3,  // minimum Y - bottom most (descenders can drive this negative)
    11,  // maximum X - right most
    16}; // maximum Y - top most
// Approx. 1657 bytes -  but your mileage may vary.

#endif