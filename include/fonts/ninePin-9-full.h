
#ifndef __FIXEDFONTNINEPINTTF9
#define __FIXEDFONTNINEPINTTF9
const uint8_t HotStuff9Bitmaps[] PROGMEM = {
  0x00, 0x0C, 0x01, 0x80, 0xF6, 0x1E, 0xCC, 0x07, 0x80, 0xFF, 0x7F, 0xEF,
  0x00, 0x18, 0x0F, 0x01, 0xE0, 0x3C, 0x07, 0x80, 0xF0, 0x18, 0xFD, 0x9F,
  0xB3, 0x01, 0xE0, 0x3C, 0x07, 0x80, 0xFF, 0x67, 0xEC, 0x00, 0x18, 0x0F,
  0x01, 0xE0, 0x3C, 0x07, 0xFB, 0x3F, 0x60, 0x3D, 0x87, 0xB3, 0x01, 0xE0,
  0x3C, 0x01, 0x80, 0x30, 0x06, 0x00, 0x00, 0x18, 0x03, 0x00, 0x60, 0x3C,
  0x06, 0x7B, 0x0F, 0x60, 0xFD, 0x9F, 0xB3, 0x01, 0xE0, 0x3C, 0x07, 0x80,
  0xF0, 0x1E, 0x03, 0x00, 0x18, 0x0F, 0x01, 0xE0, 0x3C, 0x07, 0xFB, 0x3F,
  0x60, 0xFD, 0xFF, 0xBF, 0x00, 0x60, 0x0C, 0x01, 0x80, 0x3F, 0x67, 0xEC,
  0x00, 0x18, 0x03, 0x00, 0x60, 0x0C, 0x01, 0xFB, 0xFF, 0x78, 0xFD, 0xFF,
  0xBF, 0x00, 0x60, 0x0C, 0x01, 0x80, 0x3F, 0x67, 0xEC, 0x00, 0x18, 0x03,
  0x00, 0x60, 0x0C, 0x01, 0x80, 0x30, 0x00, 0x3D, 0x87, 0xB3, 0x01, 0xE0,
  0x3C, 0x01, 0x80, 0x33, 0x7E, 0x6F, 0x00, 0x18, 0x0F, 0x01, 0xE0, 0x3C,
  0x06, 0x7B, 0x0F, 0x60, 0xC0, 0x78, 0x0F, 0x01, 0xE0, 0x3C, 0x07, 0x80,
  0xFF, 0x7F, 0xEF, 0x00, 0x18, 0x0F, 0x01, 0xE0, 0x3C, 0x07, 0x80, 0xF0,
  0x18, 0xFF, 0xF3, 0x0C, 0x30, 0xC3, 0x0C, 0x00, 0xC3, 0x0C, 0x33, 0xFF,
  0xC0, 0x0D, 0xE1, 0xBC, 0x06, 0x00, 0xC0, 0x18, 0x03, 0x00, 0x60, 0x0C,
  0x00, 0x18, 0x33, 0x06, 0x60, 0xCC, 0x18, 0x78, 0x0F, 0x00, 0xC0, 0x78,
  0x0F, 0x06, 0x60, 0xCC, 0xC1, 0x98, 0x3C, 0x07, 0x80, 0x00, 0x19, 0x83,
  0x30, 0x60, 0xCC, 0x19, 0x80, 0xF0, 0x18, 0xC0, 0x18, 0x03, 0x00, 0x60,
  0x0C, 0x01, 0x80, 0x30, 0x06, 0x00, 0x00, 0x18, 0x03, 0x00, 0x60, 0x0C,
  0x01, 0xFB, 0xFF, 0x78, 0xC0, 0x78, 0x0F, 0xC7, 0xF8, 0xFC, 0xC7, 0x98,
  0xF0, 0x1E, 0x03, 0x00, 0x18, 0x0F, 0x01, 0xE0, 0x3C, 0x07, 0x80, 0xF0,
  0x18, 0xC0, 0x78, 0x0F, 0xC1, 0xF8, 0x3F, 0x07, 0xE0, 0xF3, 0x1E, 0x63,
  0x00, 0x18, 0x3F, 0x07, 0xE0, 0xFC, 0x1F, 0x80, 0xF0, 0x18, 0x3D, 0x87,
  0xB3, 0x01, 0xE0, 0x3C, 0x07, 0x80, 0xF0, 0x1E, 0x03, 0x00, 0x18, 0x0F,
  0x01, 0xE0, 0x3C, 0x06, 0x7B, 0x0F, 0x60, 0xFD, 0x9F, 0xB3, 0x01, 0xE0,
  0x3C, 0x07, 0x80, 0xFF, 0x67, 0xEC, 0x00, 0x18, 0x03, 0x00, 0x60, 0x0C,
  0x01, 0x80, 0x30, 0x00, 0x3D, 0x87, 0xB3, 0x01, 0xE0, 0x3C, 0x07, 0x80,
  0xF0, 0x1E, 0x03, 0x00, 0x18, 0x0F, 0x01, 0xE0, 0xCC, 0x18, 0x78, 0xCF,
  0x18, 0xFD, 0x9F, 0xB3, 0x01, 0xE0, 0x3C, 0x07, 0x80, 0xFF, 0x67, 0xEC,
  0x00, 0x18, 0x0F, 0x01, 0xE0, 0x3C, 0x07, 0x80, 0xF0, 0x18, 0x3D, 0x87,
  0xB3, 0x01, 0xE0, 0x3C, 0x01, 0x80, 0x0F, 0x61, 0xEC, 0x00, 0x00, 0x0C,
  0x01, 0xE0, 0x3C, 0x06, 0x7B, 0x0F, 0x60, 0xFD, 0xFF, 0xBC, 0x30, 0x06,
  0x00, 0xC0, 0x18, 0x03, 0x00, 0x60, 0x00, 0x01, 0x80, 0x30, 0x06, 0x00,
  0xC0, 0x18, 0x03, 0x00, 0xC0, 0x78, 0x0F, 0x01, 0xE0, 0x3C, 0x07, 0x80,
  0xF0, 0x1E, 0x03, 0x00, 0x18, 0x0F, 0x01, 0xE0, 0x3C, 0x06, 0x7B, 0x0F,
  0x60, 0xC0, 0x78, 0x0F, 0x01, 0xE0, 0x3C, 0x07, 0x80, 0xF0, 0x1E, 0x03,
  0x00, 0x18, 0x0F, 0x01, 0x98, 0xC3, 0x18, 0x18, 0x03, 0x00, 0xC0, 0x78,
  0x0F, 0x01, 0xE0, 0x3C, 0x07, 0x80, 0xF3, 0x1E, 0x63, 0x00, 0x1E, 0x3F,
  0xC7, 0xE0, 0x3C, 0x07, 0x80, 0xF0, 0x18, 0xC0, 0x78, 0x0F, 0x01, 0xE0,
  0x33, 0x18, 0x63, 0x03, 0x00, 0x60, 0x00, 0x06, 0x30, 0xC6, 0x60, 0x3C,
  0x07, 0x80, 0xF0, 0x18, 0xC0, 0x78, 0x0F, 0x01, 0xE0, 0x33, 0x18, 0x63,
  0x03, 0x00, 0x60, 0x00, 0x01, 0x80, 0x30, 0x06, 0x00, 0xC0, 0x18, 0x03,
  0x00, 0xFD, 0xFF, 0xBC, 0x01, 0x80, 0x30, 0x18, 0x03, 0x03, 0x00, 0x60,
  0x00, 0x06, 0x00, 0xC0, 0x60, 0x0C, 0x01, 0xFB, 0xFF, 0x78, 0x3D, 0x87,
  0xB3, 0x01, 0xE0, 0x30, 0x01, 0x80, 0xF0, 0x1E, 0x0F, 0xC1, 0xE7, 0x8C,
  0xF1, 0x80, 0xC0, 0x18, 0x03, 0x00, 0x60, 0x0C, 0xD9, 0x9B, 0x3C, 0x1F,
  0x83, 0x00, 0x18, 0x0F, 0x01, 0xE0, 0x3C, 0x06, 0x7B, 0x0F, 0x60, 0x3D,
  0x87, 0xB3, 0x01, 0xE0, 0x30, 0x01, 0x80, 0x30, 0x06, 0x03, 0xC0, 0x67,
  0xB0, 0xF6, 0x00, 0x00, 0x60, 0x0C, 0x01, 0x80, 0x33, 0xC6, 0x78, 0xF0,
  0x7E, 0x0F, 0x00, 0x18, 0x0F, 0x01, 0xE0, 0x3C, 0x06, 0x7B, 0x0F, 0x60,
  0x3D, 0x87, 0xB3, 0x01, 0xE0, 0x30, 0x01, 0xFB, 0xFF, 0x7E, 0x00, 0xC0,
  0x07, 0xB0, 0xF6, 0x00, 0x0D, 0x81, 0xB0, 0xC1, 0x98, 0x33, 0x00, 0x60,
  0x3F, 0x07, 0xE0, 0x00, 0x06, 0x00, 0xC0, 0x18, 0x03, 0x00, 0x60, 0x0C,
  0x00, 0x3D, 0x87, 0xB3, 0x01, 0xE0, 0x3C, 0x07, 0x80, 0xCF, 0x79, 0xEF,
  0x00, 0x00, 0x0C, 0x01, 0x9E, 0xC3, 0xD8, 0xC0, 0x18, 0x03, 0x00, 0x60,
  0x0C, 0xD9, 0x9B, 0x3C, 0x1F, 0x83, 0x00, 0x18, 0x0F, 0x01, 0xE0, 0x3C,
  0x07, 0x80, 0xF0, 0x18, 0xF0, 0xFF, 0x3F, 0xFC, 0x01, 0x80, 0xC0, 0x00,
  0x00, 0x18, 0x0C, 0x06, 0x03, 0x01, 0x80, 0xC0, 0x60, 0x30, 0x06, 0x0F,
  0x06, 0x78, 0x3C, 0x00, 0xC0, 0x18, 0x03, 0x01, 0xE0, 0x3C, 0x19, 0x83,
  0x33, 0x06, 0x60, 0x00, 0x1F, 0x83, 0xF0, 0x60, 0xCC, 0x19, 0x80, 0xF0,
  0x18, 0xF3, 0xC3, 0x0C, 0x30, 0xC3, 0x0C, 0x00, 0xC3, 0x0C, 0x33, 0xFF,
  0xC0, 0xF1, 0x9E, 0x33, 0x31, 0xE6, 0x30, 0x01, 0x80, 0xF0, 0x1E, 0x03,
  0xC0, 0x78, 0x0F, 0x01, 0x80, 0xFD, 0x9F, 0xB3, 0x01, 0xE0, 0x30, 0x01,
  0x80, 0xF0, 0x1E, 0x03, 0xC0, 0x78, 0x0F, 0x01, 0x80, 0x3D, 0x87, 0xB3,
  0x01, 0xE0, 0x30, 0x01, 0x80, 0xF0, 0x1E, 0x03, 0xC0, 0x67, 0xB0, 0xF6,
  0x00, 0xFD, 0x9F, 0xB3, 0x01, 0xE0, 0x3C, 0x07, 0x80, 0xFF, 0x67, 0xEC,
  0x00, 0x18, 0x03, 0x00, 0x60, 0x0C, 0x00, 0x3D, 0xE7, 0xBF, 0x01, 0xE0,
  0x3C, 0x07, 0x80, 0xCF, 0x79, 0xEF, 0x00, 0x00, 0x0C, 0x01, 0x80, 0x30,
  0x06, 0xCD, 0x99, 0xB3, 0xC1, 0xF8, 0x30, 0x01, 0x80, 0x30, 0x06, 0x00,
  0xC0, 0x18, 0x03, 0x00, 0x00, 0x3D, 0x87, 0xB3, 0x00, 0x60, 0x00, 0x00,
  0x7B, 0x0F, 0x60, 0x03, 0x00, 0x7F, 0xB3, 0xF6, 0x00, 0x30, 0xC3, 0x0C,
  0xFF, 0xF3, 0x0C, 0x00, 0xC3, 0x0C, 0x30, 0x30, 0xC0, 0xC0, 0x78, 0x0F,
  0x01, 0xE0, 0x30, 0x01, 0x80, 0xF0, 0x1E, 0x0F, 0xC1, 0xE7, 0x8C, 0xF1,
  0x80, 0xC0, 0x78, 0x0F, 0x01, 0xE0, 0x30, 0x01, 0x80, 0xF0, 0x19, 0x8C,
  0x31, 0x81, 0x80, 0x30, 0x00, 0xC0, 0x78, 0x0F, 0x01, 0xE0, 0x30, 0x01,
  0x80, 0xF0, 0x1E, 0x63, 0xCC, 0x66, 0x30, 0xC6, 0x00, 0xC0, 0x78, 0x0F,
  0x01, 0xE0, 0x30, 0x00, 0x7B, 0x0F, 0x66, 0x03, 0xC0, 0x78, 0x0F, 0x01,
  0x80, 0xC0, 0x78, 0x0F, 0x01, 0xE0, 0x33, 0xD8, 0x7B, 0x00, 0x60, 0x0C,
  0x00, 0x00, 0x30, 0x06, 0x06, 0x00, 0xC0, 0xFD, 0xFF, 0xBC, 0x01, 0x80,
  0x30, 0x00, 0x7B, 0x0F, 0x66, 0x00, 0xC0, 0x1F, 0xBF, 0xF7, 0x80, 0x3D,
  0x87, 0xB3, 0x01, 0xE0, 0x3C, 0x1F, 0x83, 0xF3, 0x1E, 0x63, 0x00, 0x1E,
  0x0F, 0xC1, 0xE0, 0x3C, 0x06, 0x7B, 0x0F, 0x60, 0x30, 0xCF, 0x3C, 0x30,
  0xC3, 0x0C, 0x00, 0xC3, 0x0C, 0x33, 0xFF, 0xC0, 0x3D, 0x87, 0xB3, 0x01,
  0xE0, 0x3C, 0x07, 0x80, 0xC0, 0x60, 0x0C, 0x00, 0x01, 0x80, 0x30, 0x18,
  0x03, 0x01, 0xFB, 0xFF, 0x78, 0x3D, 0x87, 0xB3, 0x01, 0xE0, 0x30, 0x06,
  0x00, 0xCF, 0x61, 0xEC, 0x00, 0x00, 0x0C, 0x01, 0xE0, 0x3C, 0x06, 0x7B,
  0x0F, 0x60, 0xC0, 0x78, 0x0F, 0x01, 0xE0, 0x3C, 0x07, 0x80, 0xFF, 0x7F,
  0xEF, 0x00, 0x00, 0x0C, 0x01, 0x80, 0x30, 0x06, 0x00, 0xC0, 0x18, 0xFD,
  0xFF, 0xBF, 0x00, 0x60, 0x0C, 0x01, 0x80, 0x3F, 0x67, 0xEC, 0x00, 0x00,
  0x0C, 0x01, 0x80, 0x30, 0x07, 0xFB, 0x3F, 0x60, 0x3D, 0x87, 0xB3, 0x01,
  0xE0, 0x3C, 0x01, 0x80, 0x3F, 0x67, 0xEC, 0x00, 0x18, 0x0F, 0x01, 0xE0,
  0x3C, 0x06, 0x7B, 0x0F, 0x60, 0xFD, 0xFF, 0xBC, 0x01, 0x80, 0x30, 0x06,
  0x00, 0xC0, 0x60, 0x0C, 0x00, 0x00, 0x30, 0x06, 0x06, 0x00, 0xC0, 0x18,
  0x03, 0x00, 0x3D, 0x87, 0xB3, 0x01, 0xE0, 0x3C, 0x07, 0x80, 0xCF, 0x61,
  0xEC, 0x00, 0x18, 0x0F, 0x01, 0xE0, 0x3C, 0x06, 0x7B, 0x0F, 0x60, 0x3D,
  0x87, 0xB3, 0x01, 0xE0, 0x3C, 0x07, 0x80, 0xCF, 0x79, 0xEF, 0x00, 0x00,
  0x0C, 0x01, 0xE0, 0x3C, 0x06, 0x7B, 0x0F, 0x60, 0xFD, 0xFE, 0xC0, 0x00,
  0x60, 0x0F, 0xC1, 0xF8, 0x3F, 0x19, 0xE3, 0x03, 0x00, 0x60, 0x00, 0x06,
  0x3C, 0xC7, 0xE0, 0xFC, 0x1F, 0x80, 0x30, 0x00, 0xF0, 0xFF, 0x33, 0xCC,
  0xFF, 0xFF, 0x3C, 0x3C, 0xF0, 0x03, 0xC0, 0xFD, 0xFE, 0xC0, 0xFF, 0xFC,
  0x30, 0xC3, 0x0C, 0x30, 0x03, 0x0C, 0x30, 0xC3, 0xFF, 0xC0, 0xFF, 0xF0,
  0xC3, 0x0C, 0x30, 0xC3, 0x00, 0x30, 0xC3, 0x0F, 0xFF, 0xC0, 0x0D, 0x86,
  0xCC, 0x06, 0x0C, 0x06, 0x03, 0x01, 0x80, 0x00, 0x60, 0x30, 0x06, 0x03,
  0x00, 0x6C, 0x36, 0xF0, 0x78, 0x03, 0x01, 0x80, 0x18, 0x0C, 0x06, 0x03,
  0x00, 0x00, 0xC0, 0x61, 0x80, 0xC7, 0x83, 0xC0 };

// Glyph, Offset to bitmap, Width, Height, xAdvance, xOffset, yOffset

const gfxglyph_t HotStuff9Glyphs[] PROGMEM = {
  {32,     0,   1,   1,  11,    0,    0 },   // 0x00 ' ' 
  {65,     1,  11,  15,  12,    0,  -14 },   // 0x01 'A' 
  {66,    22,  11,  15,  12,    0,  -14 },   // 0x02 'B' 
  {67,    43,  11,  15,  12,    0,  -14 },   // 0x03 'C' 
  {68,    64,  11,  15,  12,    0,  -14 },   // 0x04 'D' 
  {69,    85,  11,  15,  12,    0,  -14 },   // 0x05 'E' 
  {70,   106,  11,  15,  12,    0,  -14 },   // 0x06 'F' 
  {71,   127,  11,  15,  12,    0,  -14 },   // 0x07 'G' 
  {72,   148,  11,  15,  12,    0,  -14 },   // 0x08 'H' 
  {73,   169,   6,  15,  11,    2,  -14 },   // 0x09 'I' 
  {74,   181,  11,  15,  12,    0,  -14 },   // 0x0A 'J' 
  {75,   202,  11,  15,  12,    0,  -14 },   // 0x0B 'K' 
  {76,   223,  11,  15,  12,    0,  -14 },   // 0x0C 'L' 
  {77,   244,  11,  15,  12,    0,  -14 },   // 0x0D 'M' 
  {78,   265,  11,  15,  12,    0,  -14 },   // 0x0E 'N' 
  {79,   286,  11,  15,  12,    0,  -14 },   // 0x0F 'O' 
  {80,   307,  11,  15,  12,    0,  -14 },   // 0x10 'P' 
  {81,   328,  11,  15,  12,    0,  -14 },   // 0x11 'Q' 
  {82,   349,  11,  15,  12,    0,  -14 },   // 0x12 'R' 
  {83,   370,  11,  15,  12,    0,  -14 },   // 0x13 'S' 
  {84,   391,  11,  15,  12,    0,  -14 },   // 0x14 'T' 
  {85,   412,  11,  15,  12,    0,  -14 },   // 0x15 'U' 
  {86,   433,  11,  15,  12,    0,  -14 },   // 0x16 'V' 
  {87,   454,  11,  15,  12,    0,  -14 },   // 0x17 'W' 
  {88,   475,  11,  15,  12,    0,  -14 },   // 0x18 'X' 
  {89,   496,  11,  15,  12,    0,  -14 },   // 0x19 'Y' 
  {90,   517,  11,  15,  12,    0,  -14 },   // 0x1A 'Z' 
  {97,   538,  11,  11,  12,    0,  -10 },   // 0x1B 'a' 
  {98,   554,  11,  15,  12,    0,  -14 },   // 0x1C 'b' 
  {99,   575,  11,  11,  12,    0,  -10 },   // 0x1D 'c' 
  {100,   591,  11,  15,  12,    0,  -14 },   // 0x1E 'd' 
  {101,   612,  11,  11,  12,    0,  -10 },   // 0x1F 'e' 
  {102,   628,  11,  15,  12,    0,  -14 },   // 0x20 'f' 
  {103,   649,  11,  13,  12,    0,  -10 },   // 0x21 'g' 
  {104,   667,  11,  15,  12,    0,  -14 },   // 0x22 'h' 
  {105,   688,   2,  15,  11,    4,  -14 },   // 0x23 'i' 
  {106,   692,   9,  17,  12,    0,  -14 },   // 0x24 'j' 
  {107,   712,  11,  15,  12,    0,  -14 },   // 0x25 'k' 
  {108,   733,   6,  15,  11,    2,  -14 },   // 0x26 'l' 
  {109,   745,  11,  11,  12,    0,  -10 },   // 0x27 'm' 
  {110,   761,  11,  11,  12,    0,  -10 },   // 0x28 'n' 
  {111,   777,  11,  11,  12,    0,  -10 },   // 0x29 'o' 
  {112,   793,  11,  13,  12,    0,  -10 },   // 0x2A 'p' 
  {113,   811,  11,  13,  12,    0,  -10 },   // 0x2B 'q' 
  {114,   829,  11,  11,  12,    0,  -10 },   // 0x2C 'r' 
  {115,   845,  11,  11,  12,    0,  -10 },   // 0x2D 's' 
  {116,   861,   6,  15,  11,    2,  -14 },   // 0x2E 't' 
  {117,   873,  11,  11,  12,    0,  -10 },   // 0x2F 'u' 
  {118,   889,  11,  11,  12,    0,  -10 },   // 0x30 'v' 
  {119,   905,  11,  11,  12,    0,  -10 },   // 0x31 'w' 
  {120,   921,  11,  11,  12,    0,  -10 },   // 0x32 'x' 
  {121,   937,  11,  13,  12,    0,  -10 },   // 0x33 'y' 
  {122,   955,  11,  11,  12,    0,  -10 },   // 0x34 'z' 
  {48,   971,  11,  15,  11,    0,  -14 },   // 0x35 '0' 
  {49,   992,   6,  15,  11,    2,  -14 },   // 0x36 '1' 
  {50,  1004,  11,  15,  11,    0,  -14 },   // 0x37 '2' 
  {51,  1025,  11,  15,  11,    0,  -14 },   // 0x38 '3' 
  {52,  1046,  11,  15,  11,    0,  -14 },   // 0x39 '4' 
  {53,  1067,  11,  15,  11,    0,  -14 },   // 0x3A '5' 
  {54,  1088,  11,  15,  11,    0,  -14 },   // 0x3B '6' 
  {55,  1109,  11,  15,  11,    0,  -14 },   // 0x3C '7' 
  {56,  1130,  11,  15,  11,    0,  -14 },   // 0x3D '8' 
  {57,  1151,  11,  15,  11,    0,  -14 },   // 0x3E '9' 
  {45,  1172,   9,   2,  12,    0,   -8 },   // 0x3F '-' 
  {37,  1175,  11,  15,  12,    0,  -14 },   // 0x40 '%' 
  {46,  1196,   2,   2,  11,    4,   -1 },   // 0x41 '.' 
  {44,  1197,   4,   6,  11,    2,   -3 },   // 0x42 ',' 
  {33,  1200,   2,  15,  11,    4,  -14 },   // 0x43 '!' 
  {58,  1204,   2,   9,  11,    2,  -10 },   // 0x44 ':' 
  {45,  1207,   9,   2,  12,    0,   -8 },   // 0x45 '-' 
  {91,  1210,   6,  15,  11,    2,  -14 },   // 0x46 '[' 
  {93,  1222,   6,  15,  11,    2,  -14 },   // 0x47 ']' 
  {40,  1234,   9,  15,  12,    0,  -14 },   // 0x48 '(' 
  {41,  1251,   9,  15,  12,    2,  -14 }   // 0x49 ')' 
};

const gfxfont_t HotStuff9 PROGMEM = 
{
  (uint8_t  *)HotStuff9Bitmaps, //< Glyph bitmaps, concatenated 
  (gfxglyph_t *)HotStuff9Glyphs, //< Glyph array
  74,// total glyphs in the string
  17,  // newline distance (y axis)
     0,  // minimum X - left most
    -2,  // minimum Y - bottom most (descenders can drive this negative)
    11,  // maximum X - right most
    15}; // maximum Y - top most
// Approx. 1800 bytes -  but your mileage may vary.

#endif