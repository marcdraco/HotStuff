
#ifndef __FIXEDFONTNOVASQUARETTF8
#define __FIXEDFONTNOVASQUARETTF8
const uint8_t HotStuff8Bitmaps[] PROGMEM = {
  0x00, 0x7E, 0xC3, 0xC3, 0xC3, 0xC3, 0xC3, 0xFF, 0xC3, 0xC3, 0xC3, 0xC3,
  0xC3, 0xFC, 0xC6, 0xC6, 0xC6, 0xC6, 0xFE, 0xC3, 0xC3, 0xC3, 0xC3, 0xC3,
  0xFE, 0x7E, 0xC3, 0xC3, 0xC3, 0xC0, 0xC0, 0xC0, 0xC0, 0xC3, 0xC3, 0xC3,
  0x7E, 0xFE, 0xC3, 0xC3, 0xC3, 0xC3, 0xC3, 0xC3, 0xC3, 0xC3, 0xC3, 0xC3,
  0xFE, 0xF9, 0x83, 0x06, 0x0C, 0x1F, 0x30, 0x60, 0xC1, 0x83, 0x07, 0xF0,
  0xFE, 0x31, 0x8C, 0x63, 0xF8, 0xC6, 0x31, 0x80, 0x7E, 0xC3, 0xC3, 0xC2,
  0xC0, 0xCF, 0xC3, 0xC3, 0xC3, 0xC3, 0xC3, 0x7E, 0xC3, 0xC3, 0xC3, 0xC3,
  0xC3, 0xFF, 0xC3, 0xC3, 0xC3, 0xC3, 0xC3, 0x82, 0xFF, 0xFF, 0xFF, 0x3F,
  0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0xC3, 0xC3, 0xC3, 0x7E, 0xC6,
  0xC6, 0xCC, 0xD8, 0xD0, 0xFE, 0xC3, 0xC3, 0xC3, 0xC3, 0xC3, 0x82, 0x43,
  0x0C, 0x30, 0xC3, 0x0C, 0x30, 0xC3, 0x0C, 0x3F, 0x7F, 0xFB, 0x0C, 0x3C,
  0x30, 0xF0, 0xC3, 0xC3, 0x0F, 0x0C, 0x3C, 0x30, 0xF0, 0xC3, 0xC3, 0x0F,
  0x0C, 0x3C, 0x30, 0xE0, 0x82, 0x7E, 0xC3, 0xC3, 0xC3, 0xC3, 0xC3, 0xC3,
  0xC3, 0xC3, 0xC3, 0xC3, 0x82, 0x7E, 0xC3, 0xC3, 0xC3, 0xC3, 0xC3, 0xC3,
  0xC3, 0xC3, 0xC3, 0xC3, 0x7E, 0xFE, 0xC3, 0xC3, 0xC3, 0xC3, 0xC3, 0xFE,
  0xC0, 0xC0, 0xC0, 0xC0, 0x80, 0x7E, 0xC3, 0xC3, 0xC3, 0xC3, 0xC3, 0xC3,
  0xC3, 0xDB, 0xCF, 0xC7, 0x7E, 0xFE, 0xC3, 0xC3, 0xC3, 0xC3, 0xC3, 0xFF,
  0xDC, 0xCC, 0xCC, 0xC6, 0x82, 0x3E, 0x31, 0x98, 0xCC, 0x06, 0x01, 0xF8,
  0x06, 0x03, 0xC1, 0xE0, 0xF0, 0x6F, 0xE0, 0xFE, 0x30, 0x60, 0xC1, 0x83,
  0x06, 0x0C, 0x18, 0x30, 0x60, 0x80, 0x41, 0xC3, 0xC3, 0xC3, 0xC3, 0xC3,
  0xC3, 0xC3, 0xC3, 0xC3, 0xC3, 0x7E, 0xC0, 0xE0, 0xD8, 0x6C, 0x26, 0x11,
  0x98, 0xC8, 0x24, 0x16, 0x0E, 0x03, 0x01, 0x00, 0x41, 0x07, 0x0C, 0x3C,
  0x30, 0xF0, 0xC3, 0xC3, 0x0F, 0x0C, 0x3C, 0x30, 0xF0, 0xC3, 0xC3, 0x0F,
  0x0C, 0x3C, 0x30, 0xDF, 0xFE, 0xC3, 0x43, 0x66, 0x36, 0x3C, 0x18, 0x18,
  0x3C, 0x36, 0x66, 0x43, 0xC3, 0x41, 0xC3, 0xC3, 0xC3, 0xC3, 0xC3, 0xC3,
  0x7E, 0x18, 0x18, 0x18, 0x10, 0x7E, 0x0C, 0x30, 0x60, 0x83, 0x04, 0x18,
  0x20, 0xC1, 0x07, 0xF0, 0x3C, 0x0C, 0x1B, 0xFC, 0x78, 0xF1, 0xE3, 0x7E,
  0xC3, 0x0C, 0x3E, 0xCF, 0x3C, 0xF3, 0xCF, 0x3C, 0xDE, 0x7D, 0x8F, 0x1E,
  0x0C, 0x18, 0x30, 0xE3, 0x7C, 0x06, 0x0C, 0x1B, 0xFC, 0x78, 0xF1, 0xE3,
  0xC7, 0x8F, 0x1B, 0xE0, 0x7D, 0x8F, 0x1E, 0x7D, 0x9E, 0x38, 0xE3, 0x7C,
  0x39, 0x86, 0x18, 0xF9, 0x86, 0x18, 0x61, 0x86, 0x10, 0x7D, 0x8F, 0x1E,
  0x3C, 0x78, 0xF1, 0xE3, 0x7E, 0x0C, 0x1B, 0xE0, 0xC3, 0x0C, 0x3E, 0xCF,
  0x3C, 0xF3, 0xCF, 0x3C, 0xE2, 0xF1, 0xFF, 0xFE, 0x6C, 0x16, 0xDB, 0x6D,
  0xB6, 0xF0, 0xC3, 0x0C, 0x32, 0xDB, 0xCF, 0xB3, 0xCF, 0x3C, 0xE2, 0xFF,
  0xFF, 0xFF, 0x7F, 0xEC, 0x63, 0xC6, 0x3C, 0x63, 0xC6, 0x3C, 0x63, 0xC6,
  0x3C, 0x63, 0x84, 0x20, 0x7D, 0x8F, 0x1E, 0x3C, 0x78, 0xF1, 0xE3, 0x84,
  0x7D, 0x8F, 0x1E, 0x3C, 0x78, 0xF1, 0xE3, 0x7C, 0x7B, 0x3C, 0xF3, 0xCF,
  0x3C, 0xF3, 0xFB, 0x0C, 0x30, 0x7D, 0x8F, 0x1E, 0x3C, 0x78, 0xF1, 0xE3,
  0x7E, 0x0C, 0x18, 0x30, 0x76, 0x31, 0x8C, 0x63, 0x18, 0x80, 0x7D, 0x9B,
  0x06, 0x07, 0xC0, 0xF1, 0xE3, 0x7C, 0x30, 0xC3, 0x3F, 0x30, 0xC3, 0x0C,
  0x30, 0xC3, 0x08, 0x43, 0x8F, 0x1E, 0x3C, 0x78, 0xF1, 0xE3, 0x7C, 0x42,
  0x42, 0x66, 0x66, 0x34, 0x3C, 0x18, 0x18, 0x18, 0x42, 0x1C, 0x63, 0xC6,
  0x3C, 0x63, 0xC6, 0x3C, 0x63, 0xC6, 0x3C, 0x63, 0x7F, 0xE0, 0xC7, 0x37,
  0x8E, 0x31, 0xE7, 0xB3, 0x84, 0x43, 0x8F, 0x1E, 0x3C, 0x78, 0xF1, 0xE3,
  0x7E, 0x0C, 0x1B, 0xE0, 0x7E, 0x08, 0x30, 0xC1, 0x86, 0x08, 0x30, 0x7C,
  0x7E, 0xC3, 0xC3, 0xC3, 0xC3, 0xC3, 0xC3, 0xC3, 0xC3, 0xC3, 0xC3, 0x7E,
  0x3F, 0xB6, 0xDB, 0x6D, 0xA0, 0x7E, 0xC3, 0xC3, 0xC3, 0x03, 0x03, 0x06,
  0x0C, 0x18, 0x30, 0x60, 0x7F, 0x7F, 0x03, 0x01, 0x81, 0x80, 0x80, 0xF8,
  0x06, 0x03, 0xC1, 0xE0, 0xF0, 0x6F, 0xE0, 0x01, 0x03, 0x81, 0xC1, 0xE1,
  0xB1, 0x98, 0xCC, 0xC6, 0xFF, 0x81, 0x80, 0xC0, 0x60, 0x3F, 0x10, 0x08,
  0x0C, 0x06, 0x03, 0xF8, 0x06, 0x03, 0xC1, 0xE0, 0xF0, 0x6F, 0xE0, 0x7E,
  0xC3, 0xC3, 0xC0, 0xC0, 0xFE, 0xC3, 0xC3, 0xC3, 0xC3, 0xC3, 0x7E, 0x7F,
  0x06, 0x06, 0x06, 0x0C, 0x0C, 0x08, 0x18, 0x18, 0x10, 0x30, 0x30, 0x3E,
  0x31, 0x98, 0xCC, 0x66, 0x33, 0xFB, 0x07, 0x83, 0xC1, 0xE0, 0xF0, 0x6F,
  0xE0, 0x7E, 0xC3, 0xC3, 0xC3, 0xC3, 0xC3, 0x7F, 0x03, 0x03, 0xC3, 0xC3,
  0x7E, 0xFE, 0x7C, 0x61, 0x8C, 0x83, 0x1B, 0x06, 0x34, 0x0C, 0x68, 0x0F,
  0xA0, 0x00, 0x5F, 0x01, 0xE3, 0x02, 0xC6, 0x0D, 0x8C, 0x13, 0x18, 0x63,
  0xE0, 0xF0, 0xD6, 0xFF, 0xFF, 0x0F, 0xF0, 0x3C, 0xFC, 0xCC, 0xCC, 0xCC,
  0xCC, 0xCC, 0xCC, 0xCF, 0xF3, 0x33, 0x33, 0x33, 0x33, 0x33, 0x33, 0x3F,
  0x7B, 0x6D, 0xB6, 0xDB, 0x6D, 0x98, 0xCD, 0xB6, 0xDB, 0x6D, 0xB6, 0xF0,
  0x02, 0x02, 0x06, 0x04, 0x0C, 0x08, 0x18, 0x10, 0x30, 0x20, 0x20, 0x40,
  0x40, 0xC0 };

// Glyph, Offset to bitmap, Width, Height, xAdvance, xOffset, yOffset

const gfxglyph_t HotStuff8Glyphs[] PROGMEM = {
  {32,     0,   1,   1,   6,    0,    0 },   // 0x00 ' ' 
  {65,     1,   8,  12,  11,    2,  -11 },   // 0x01 'A' 
  {66,    13,   8,  12,  11,    2,  -11 },   // 0x02 'B' 
  {67,    25,   8,  12,  11,    2,  -11 },   // 0x03 'C' 
  {68,    37,   8,  12,  11,    2,  -11 },   // 0x04 'D' 
  {69,    49,   7,  12,   9,    2,  -11 },   // 0x05 'E' 
  {70,    60,   5,  12,   9,    2,  -11 },   // 0x06 'F' 
  {71,    68,   8,  12,  11,    2,  -11 },   // 0x07 'G' 
  {72,    80,   8,  12,  11,    2,  -11 },   // 0x08 'H' 
  {73,    92,   2,  12,   5,    2,  -11 },   // 0x09 'I' 
  {74,    95,   8,  12,  10,    1,  -11 },   // 0x0A 'J' 
  {75,   107,   8,  12,  11,    2,  -11 },   // 0x0B 'K' 
  {76,   119,   6,  12,   9,    2,  -11 },   // 0x0C 'L' 
  {77,   128,  14,  12,  17,    2,  -11 },   // 0x0D 'M' 
  {78,   149,   8,  12,  11,    2,  -11 },   // 0x0E 'N' 
  {79,   161,   8,  12,  11,    2,  -11 },   // 0x0F 'O' 
  {80,   173,   8,  12,  10,    2,  -11 },   // 0x10 'P' 
  {81,   185,   8,  12,  11,    2,  -11 },   // 0x11 'Q' 
  {82,   197,   8,  12,  11,    2,  -11 },   // 0x12 'R' 
  {83,   209,   9,  12,  10,    1,  -11 },   // 0x13 'S' 
  {84,   223,   7,  12,   8,    0,  -11 },   // 0x14 'T' 
  {85,   234,   8,  12,  11,    2,  -11 },   // 0x15 'U' 
  {86,   246,   9,  12,   9,    0,  -11 },   // 0x16 'V' 
  {87,   260,  14,  12,  17,    2,  -11 },   // 0x17 'W' 
  {88,   281,   8,  12,  10,    1,  -11 },   // 0x18 'X' 
  {89,   293,   8,  12,  10,    1,  -11 },   // 0x19 'Y' 
  {90,   305,   7,  12,  10,    1,  -11 },   // 0x1A 'Z' 
  {97,   316,   7,   9,   8,    1,   -8 },   // 0x1B 'a' 
  {98,   324,   6,  12,   9,    2,  -11 },   // 0x1C 'b' 
  {99,   333,   7,   9,   9,    1,   -8 },   // 0x1D 'c' 
  {100,   341,   7,  12,   9,    1,  -11 },   // 0x1E 'd' 
  {101,   352,   7,   9,   9,    1,   -8 },   // 0x1F 'e' 
  {102,   360,   6,  12,   7,    1,  -11 },   // 0x20 'f' 
  {103,   369,   7,  12,   9,    1,   -8 },   // 0x21 'g' 
  {104,   380,   6,  12,   9,    2,  -11 },   // 0x22 'h' 
  {105,   389,   2,  12,   5,    1,  -11 },   // 0x23 'i' 
  {106,   392,   3,  15,   5,    1,  -11 },   // 0x24 'j' 
  {107,   398,   6,  12,   9,    2,  -11 },   // 0x25 'k' 
  {108,   407,   2,  12,   5,    2,  -11 },   // 0x26 'l' 
  {109,   410,  12,   9,  14,    1,   -8 },   // 0x27 'm' 
  {110,   424,   7,   9,   9,    1,   -8 },   // 0x28 'n' 
  {111,   432,   7,   9,   9,    1,   -8 },   // 0x29 'o' 
  {112,   440,   6,  12,   9,    2,   -8 },   // 0x2A 'p' 
  {113,   449,   7,  12,   9,    1,   -8 },   // 0x2B 'q' 
  {114,   460,   5,   9,   6,    1,   -8 },   // 0x2C 'r' 
  {115,   466,   7,   9,   8,    1,   -8 },   // 0x2D 's' 
  {116,   474,   6,  12,   6,    0,  -11 },   // 0x2E 't' 
  {117,   483,   7,   9,   9,    1,   -8 },   // 0x2F 'u' 
  {118,   491,   8,   9,   8,    0,   -8 },   // 0x30 'v' 
  {119,   500,  12,   9,  14,    1,   -8 },   // 0x31 'w' 
  {120,   514,   6,   9,   8,    1,   -8 },   // 0x32 'x' 
  {121,   521,   7,  12,   9,    1,   -8 },   // 0x33 'y' 
  {122,   532,   7,   9,   8,    0,   -8 },   // 0x34 'z' 
  {48,   540,   8,  12,  11,    2,  -11 },   // 0x35 '0' 
  {49,   552,   3,  12,   6,    1,  -11 },   // 0x36 '1' 
  {50,   557,   8,  12,  10,    1,  -11 },   // 0x37 '2' 
  {51,   569,   9,  12,  10,    1,  -11 },   // 0x38 '3' 
  {52,   583,   9,  12,   9,    0,  -11 },   // 0x39 '4' 
  {53,   597,   9,  12,  10,    1,  -11 },   // 0x3A '5' 
  {54,   611,   8,  12,  11,    2,  -11 },   // 0x3B '6' 
  {55,   623,   8,  12,   8,    0,  -11 },   // 0x3C '7' 
  {56,   635,   9,  12,  10,    1,  -11 },   // 0x3D '8' 
  {57,   649,   8,  12,  11,    2,  -11 },   // 0x3E '9' 
  {45,   661,   7,   1,   9,    1,   -5 },   // 0x3F '-' 
  {37,   662,  15,  12,  17,    1,  -11 },   // 0x40 '%' 
  {46,   685,   2,   2,   5,    1,   -1 },   // 0x41 '.' 
  {44,   686,   2,   4,   5,    1,   -1 },   // 0x42 ',' 
  {33,   687,   2,  12,   5,    1,  -11 },   // 0x43 '!' 
  {58,   690,   2,   7,   5,    1,   -6 },   // 0x44 ':' 
  {91,   692,   4,  16,   7,    2,  -13 },   // 0x45 '[' 
  {93,   700,   4,  16,   7,    2,  -13 },   // 0x46 ']' 
  {40,   708,   3,  15,   6,    2,  -12 },   // 0x47 '(' 
  {41,   714,   3,  15,   6,    2,  -12 },   // 0x48 ')' 
  {47,   720,   8,  14,   8,    0,  -12 }   // 0x49 '/' 
};

const gfxfont_t HotStuff8 PROGMEM = 
{
  (uint8_t  *)HotStuff8Bitmaps, //< Glyph bitmaps, concatenated 
  (gfxglyph_t *)HotStuff8Glyphs, //< Glyph array
  74,// total glyphs in the string
  16,  // newline distance (y axis)
     0,  // minimum X - left most
    -3,  // minimum Y - bottom most (descenders can drive this negative)
    16,  // maximum X - right most
    14}; // maximum Y - top most
// Approx. 1266 bytes -  but your mileage may vary.

#endif