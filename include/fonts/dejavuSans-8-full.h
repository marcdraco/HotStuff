
#ifndef __FIXEDFONTDEJAVUSANSTTF8
#define __FIXEDFONTDEJAVUSANSTTF8
const uint8_t HotStuff8Bitmaps[] PROGMEM = {
  0x00, 0x04, 0x00, 0x80, 0x28, 0x05, 0x01, 0x10, 0x22, 0x08, 0x21, 0x04,
  0x3F, 0x88, 0x09, 0x01, 0x40, 0x10, 0xFE, 0x40, 0xE0, 0x30, 0x18, 0x1F,
  0xFA, 0x07, 0x01, 0x80, 0xC0, 0x60, 0x5F, 0xC0, 0x1F, 0x10, 0xD0, 0x10,
  0x08, 0x04, 0x02, 0x01, 0x00, 0x80, 0x20, 0x08, 0x63, 0xE0, 0xFE, 0x20,
  0xC8, 0x0A, 0x01, 0x80, 0x60, 0x18, 0x06, 0x01, 0x80, 0x60, 0x28, 0x33,
  0xF8, 0xFF, 0x80, 0x80, 0x80, 0x80, 0xFF, 0x80, 0x80, 0x80, 0x80, 0x80,
  0xFF, 0xFF, 0x02, 0x04, 0x08, 0x1F, 0xA0, 0x40, 0x81, 0x02, 0x04, 0x00,
  0x1F, 0x88, 0x34, 0x06, 0x00, 0x80, 0x20, 0x08, 0x3E, 0x01, 0x80, 0x50,
  0x12, 0x04, 0x7E, 0x80, 0x60, 0x18, 0x06, 0x01, 0x80, 0x7F, 0xF8, 0x06,
  0x01, 0x80, 0x60, 0x18, 0x06, 0x01, 0xFF, 0xF0, 0x24, 0x92, 0x49, 0x24,
  0x92, 0x70, 0x81, 0x41, 0x21, 0x11, 0x09, 0x07, 0x02, 0x81, 0x20, 0x88,
  0x42, 0x20, 0x90, 0x20, 0x81, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x81,
  0x02, 0x07, 0xF0, 0xC0, 0x78, 0x0E, 0x82, 0xD0, 0x5A, 0x0B, 0x22, 0x64,
  0x4C, 0x51, 0x8A, 0x30, 0x86, 0x00, 0xC0, 0x10, 0xC0, 0x68, 0x1A, 0x06,
  0x41, 0x88, 0x62, 0x18, 0x46, 0x09, 0x82, 0x60, 0x58, 0x16, 0x03, 0x1F,
  0x04, 0x11, 0x01, 0x40, 0x18, 0x03, 0x00, 0x60, 0x0C, 0x01, 0x80, 0x28,
  0x08, 0x82, 0x0F, 0x80, 0xFC, 0x82, 0x81, 0x81, 0x81, 0x82, 0xFC, 0x80,
  0x80, 0x80, 0x80, 0x80, 0x1F, 0x04, 0x11, 0x01, 0x40, 0x18, 0x03, 0x00,
  0x60, 0x0C, 0x01, 0x80, 0x28, 0x08, 0x83, 0x0F, 0x80, 0x08, 0x00, 0x80,
  0xFC, 0x20, 0x88, 0x12, 0x04, 0x81, 0x20, 0x8F, 0xE2, 0x08, 0x81, 0x20,
  0x48, 0x0A, 0x02, 0x3C, 0xC6, 0x80, 0x80, 0x80, 0x70, 0x1E, 0x03, 0x01,
  0x81, 0xC3, 0x7C, 0xFF, 0x84, 0x02, 0x01, 0x00, 0x80, 0x40, 0x20, 0x10,
  0x08, 0x04, 0x02, 0x01, 0x00, 0x80, 0x60, 0x18, 0x06, 0x01, 0x80, 0x60,
  0x18, 0x06, 0x01, 0x80, 0x60, 0x14, 0x08, 0xFC, 0x80, 0x30, 0x05, 0x01,
  0x20, 0x22, 0x08, 0x41, 0x04, 0x40, 0x88, 0x11, 0x01, 0x40, 0x28, 0x02,
  0x00, 0x81, 0x03, 0x02, 0x05, 0x0A, 0x12, 0x14, 0x24, 0x28, 0x44, 0x51,
  0x09, 0x12, 0x12, 0x24, 0x14, 0x50, 0x28, 0xA0, 0x20, 0x80, 0x41, 0x00,
  0xC1, 0xA0, 0x88, 0x84, 0x41, 0x40, 0x40, 0x20, 0x28, 0x22, 0x11, 0x10,
  0x50, 0x10, 0x80, 0xA0, 0x88, 0x84, 0x41, 0x40, 0x40, 0x20, 0x10, 0x08,
  0x04, 0x02, 0x01, 0x00, 0xFF, 0xC0, 0x10, 0x08, 0x04, 0x02, 0x01, 0x00,
  0x80, 0x40, 0x20, 0x10, 0x08, 0x03, 0xFF, 0x3C, 0x8C, 0x0B, 0xFC, 0x30,
  0x60, 0xE3, 0x7A, 0x80, 0x80, 0x80, 0xBC, 0xC2, 0x81, 0x81, 0x81, 0x81,
  0x81, 0xC2, 0xBC, 0x3C, 0x86, 0x04, 0x08, 0x10, 0x20, 0x21, 0x3C, 0x01,
  0x01, 0x01, 0x3D, 0x43, 0x81, 0x81, 0x81, 0x81, 0x81, 0x43, 0x3D, 0x38,
  0x8A, 0x0C, 0x1F, 0xF0, 0x20, 0x21, 0x3C, 0x3A, 0x11, 0xE4, 0x21, 0x08,
  0x42, 0x10, 0x80, 0x3D, 0x43, 0x81, 0x81, 0x81, 0x81, 0x81, 0x43, 0x3D,
  0x01, 0x42, 0x3C, 0x80, 0x80, 0x80, 0xBC, 0xC2, 0x81, 0x81, 0x81, 0x81,
  0x81, 0x81, 0x81, 0xDF, 0xF0, 0x24, 0x12, 0x49, 0x24, 0x92, 0x70, 0x80,
  0x80, 0x80, 0x82, 0x84, 0x88, 0x90, 0xE0, 0x90, 0x88, 0x84, 0x82, 0xFF,
  0xF0, 0xBC, 0xF6, 0x38, 0xE0, 0x83, 0x04, 0x18, 0x20, 0xC1, 0x06, 0x08,
  0x30, 0x41, 0x82, 0x08, 0xBC, 0xC2, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81,
  0x81, 0x3C, 0x42, 0x81, 0x81, 0x81, 0x81, 0x81, 0x42, 0x3C, 0xBC, 0xC2,
  0x81, 0x81, 0x81, 0x81, 0x81, 0xC2, 0xBC, 0x80, 0x80, 0x80, 0x3D, 0x43,
  0x81, 0x81, 0x81, 0x81, 0x81, 0x43, 0x3D, 0x01, 0x01, 0x01, 0xBE, 0x21,
  0x08, 0x42, 0x10, 0x80, 0x7D, 0x06, 0x06, 0x07, 0x80, 0xC0, 0xC1, 0x7C,
  0x42, 0x3E, 0x84, 0x21, 0x08, 0x42, 0x0E, 0x81, 0x81, 0x81, 0x81, 0x81,
  0x81, 0x81, 0x43, 0x3D, 0x80, 0xA0, 0x24, 0x11, 0x04, 0x22, 0x08, 0x81,
  0x40, 0x70, 0x08, 0x00, 0x82, 0x0C, 0x10, 0x51, 0x44, 0x8A, 0x24, 0x89,
  0x14, 0x50, 0xA2, 0x82, 0x08, 0x10, 0x40, 0xC3, 0x42, 0x24, 0x24, 0x18,
  0x24, 0x24, 0x42, 0xC3, 0x80, 0xA0, 0x90, 0x44, 0x22, 0x21, 0x10, 0x50,
  0x28, 0x0C, 0x04, 0x02, 0x0E, 0x00, 0xFE, 0x04, 0x10, 0x41, 0x04, 0x10,
  0x40, 0xFE, 0x3C, 0x42, 0x42, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x42,
  0x42, 0x3C, 0x71, 0xA0, 0x40, 0x81, 0x02, 0x04, 0x08, 0x10, 0x20, 0x47,
  0xF0, 0x79, 0x8A, 0x08, 0x10, 0x20, 0x82, 0x08, 0x20, 0x82, 0x07, 0xF0,
  0x7C, 0x83, 0x01, 0x01, 0x03, 0x3C, 0x03, 0x01, 0x01, 0x01, 0x82, 0x7C,
  0x06, 0x05, 0x02, 0x82, 0x42, 0x22, 0x11, 0x09, 0x04, 0xFF, 0x81, 0x00,
  0x80, 0x40, 0x7E, 0x40, 0x40, 0x40, 0x7C, 0x42, 0x01, 0x01, 0x01, 0x01,
  0x82, 0x7C, 0x1C, 0x62, 0x40, 0x80, 0xBC, 0xC2, 0x81, 0x81, 0x81, 0x81,
  0x42, 0x3C, 0xFF, 0x01, 0x02, 0x02, 0x04, 0x04, 0x08, 0x08, 0x08, 0x10,
  0x10, 0x20, 0x3C, 0xC3, 0x81, 0x81, 0xC3, 0x3C, 0xC3, 0x81, 0x81, 0x81,
  0x42, 0x3C, 0x3C, 0x42, 0x82, 0x81, 0x81, 0x81, 0x43, 0x3D, 0x01, 0x02,
  0x46, 0x38, 0xF0, 0x70, 0x44, 0x42, 0x22, 0x21, 0x13, 0x08, 0x90, 0x39,
  0x00, 0x09, 0xC0, 0x91, 0x0C, 0x88, 0x44, 0x44, 0x22, 0x20, 0xE0, 0xC0,
  0x56, 0xFF, 0x30, 0xC3, 0xF0, 0xF2, 0x49, 0x24, 0x92, 0x49, 0xC0, 0xE4,
  0x92, 0x49, 0x24, 0x93, 0xC0, 0x36, 0x44, 0x88, 0x88, 0x88, 0x44, 0x63,
  0xC6, 0x22, 0x11, 0x11, 0x11, 0x22, 0x6C };

// Glyph, Offset to bitmap, Width, Height, xAdvance, xOffset, yOffset

const gfxglyph_t HotStuff8Glyphs[] PROGMEM = {
  {32,     0,   1,   1,   5,    0,    0 },   // 0x00 ' ' 
  {65,     1,  11,  12,  11,    0,  -11 },   // 0x01 'A' 
  {66,    18,   9,  12,  11,    1,  -11 },   // 0x02 'B' 
  {67,    32,   9,  12,  11,    1,  -11 },   // 0x03 'C' 
  {68,    46,  10,  12,  12,    1,  -11 },   // 0x04 'D' 
  {69,    61,   8,  12,  10,    1,  -11 },   // 0x05 'E' 
  {70,    73,   7,  12,   9,    1,  -11 },   // 0x06 'F' 
  {71,    84,  10,  12,  12,    1,  -11 },   // 0x07 'G' 
  {72,    99,  10,  12,  12,    1,  -11 },   // 0x08 'H' 
  {73,   114,   1,  12,   5,    2,  -11 },   // 0x09 'I' 
  {74,   116,   3,  15,   5,    0,  -11 },   // 0x0A 'J' 
  {75,   122,   9,  12,  10,    1,  -11 },   // 0x0B 'K' 
  {76,   136,   7,  12,   9,    1,  -11 },   // 0x0C 'L' 
  {77,   147,  11,  12,  13,    1,  -11 },   // 0x0D 'M' 
  {78,   164,  10,  12,  12,    1,  -11 },   // 0x0E 'N' 
  {79,   179,  11,  12,  13,    1,  -11 },   // 0x0F 'O' 
  {80,   196,   8,  12,  10,    1,  -11 },   // 0x10 'P' 
  {81,   208,  11,  14,  13,    1,  -11 },   // 0x11 'Q' 
  {82,   228,  10,  12,  11,    1,  -11 },   // 0x12 'R' 
  {83,   243,   8,  12,  10,    1,  -11 },   // 0x13 'S' 
  {84,   255,   9,  12,   9,    0,  -11 },   // 0x14 'T' 
  {85,   269,  10,  12,  12,    1,  -11 },   // 0x15 'U' 
  {86,   284,  11,  12,  11,    0,  -11 },   // 0x16 'V' 
  {87,   301,  15,  12,  17,    1,  -11 },   // 0x17 'W' 
  {88,   324,   9,  12,  11,    1,  -11 },   // 0x18 'X' 
  {89,   338,   9,  12,   9,    0,  -11 },   // 0x19 'Y' 
  {90,   352,  10,  12,  12,    1,  -11 },   // 0x1A 'Z' 
  {97,   367,   7,   9,   9,    1,   -8 },   // 0x1B 'a' 
  {98,   375,   8,  12,  10,    1,  -11 },   // 0x1C 'b' 
  {99,   387,   7,   9,   9,    1,   -8 },   // 0x1D 'c' 
  {100,   395,   8,  12,  10,    1,  -11 },   // 0x1E 'd' 
  {101,   407,   7,   9,   9,    1,   -8 },   // 0x1F 'e' 
  {102,   415,   5,  12,   6,    1,  -11 },   // 0x20 'f' 
  {103,   423,   8,  12,  10,    1,   -8 },   // 0x21 'g' 
  {104,   435,   8,  12,  10,    1,  -11 },   // 0x22 'h' 
  {105,   447,   1,  12,   3,    1,  -11 },   // 0x23 'i' 
  {106,   449,   3,  15,   3,   -1,  -11 },   // 0x24 'j' 
  {107,   455,   8,  12,   9,    1,  -11 },   // 0x25 'k' 
  {108,   467,   1,  12,   3,    1,  -11 },   // 0x26 'l' 
  {109,   469,  13,   9,  15,    1,   -8 },   // 0x27 'm' 
  {110,   484,   8,   9,  10,    1,   -8 },   // 0x28 'n' 
  {111,   493,   8,   9,  10,    1,   -8 },   // 0x29 'o' 
  {112,   502,   8,  12,  10,    1,   -8 },   // 0x2A 'p' 
  {113,   514,   8,  12,  10,    1,   -8 },   // 0x2B 'q' 
  {114,   526,   5,   9,   7,    1,   -8 },   // 0x2C 'r' 
  {115,   532,   7,   9,   9,    1,   -8 },   // 0x2D 's' 
  {116,   540,   5,  11,   6,    0,  -10 },   // 0x2E 't' 
  {117,   547,   8,   9,  10,    1,   -8 },   // 0x2F 'u' 
  {118,   556,  10,   9,   9,    0,   -8 },   // 0x30 'v' 
  {119,   568,  13,   9,  13,    0,   -8 },   // 0x31 'w' 
  {120,   583,   8,   9,  10,    1,   -8 },   // 0x32 'x' 
  {121,   592,   9,  12,   9,    0,   -8 },   // 0x33 'y' 
  {122,   606,   7,   9,   9,    1,   -8 },   // 0x34 'z' 
  {48,   614,   8,  12,  10,    1,  -11 },   // 0x35 '0' 
  {49,   626,   7,  12,  10,    2,  -11 },   // 0x36 '1' 
  {50,   637,   7,  12,  10,    1,  -11 },   // 0x37 '2' 
  {51,   648,   8,  12,  10,    1,  -11 },   // 0x38 '3' 
  {52,   660,   9,  12,  10,    1,  -11 },   // 0x39 '4' 
  {53,   674,   8,  12,  10,    1,  -11 },   // 0x3A '5' 
  {54,   686,   8,  12,  10,    1,  -11 },   // 0x3B '6' 
  {55,   698,   8,  12,  10,    1,  -11 },   // 0x3C '7' 
  {56,   710,   8,  12,  10,    1,  -11 },   // 0x3D '8' 
  {57,   722,   8,  12,  10,    1,  -11 },   // 0x3E '9' 
  {45,   734,   4,   1,   6,    1,   -4 },   // 0x3F '-' 
  {37,   735,  13,  12,  15,    1,  -11 },   // 0x40 '%' 
  {46,   755,   1,   2,   5,    2,   -1 },   // 0x41 '.' 
  {44,   756,   2,   4,   5,    1,   -1 },   // 0x42 ',' 
  {33,   757,   1,  12,   6,    2,  -11 },   // 0x43 '!' 
  {58,   759,   1,   8,   5,    2,   -7 },   // 0x44 ':' 
  {45,   760,   4,   1,   6,    1,   -4 },   // 0x45 '-' 
  {91,   761,   3,  14,   6,    1,  -11 },   // 0x46 '[' 
  {93,   767,   3,  14,   6,    2,  -11 },   // 0x47 ']' 
  {40,   773,   4,  14,   6,    1,  -11 },   // 0x48 '(' 
  {41,   780,   4,  14,   6,    1,  -11 }   // 0x49 ')' 
};

const gfxfont_t HotStuff8 PROGMEM = 
{
  (uint8_t  *)HotStuff8Bitmaps, //< Glyph bitmaps, concatenated 
  (gfxglyph_t *)HotStuff8Glyphs, //< Glyph array
  74,// total glyphs in the string
  15,  // newline distance (y axis)
    -1,  // minimum X - left most
    -3,  // minimum Y - bottom most (descenders can drive this negative)
    16,  // maximum X - right most
    12}; // maximum Y - top most
// Approx. 1319 bytes -  but your mileage may vary.

#endif