
#ifndef __FIXEDFONTLEKTONBOLDTTF9
#define __FIXEDFONTLEKTONBOLDTTF9
const uint8_t HotStuff9Bitmaps[] PROGMEM = {
  0x00, 0x1C, 0x0F, 0x0D, 0x86, 0xC3, 0x61, 0x11, 0x8C, 0xC6, 0x7F, 0x3F,
  0xB0, 0x78, 0x30, 0xF8, 0xFE, 0xC6, 0xC2, 0xC6, 0xFC, 0xFE, 0xC6, 0xC3,
  0xC7, 0xFE, 0xFC, 0x3E, 0xFF, 0x06, 0x0C, 0x18, 0x30, 0x60, 0xC1, 0x81,
  0xD9, 0xF0, 0xF9, 0xFB, 0x1E, 0x3C, 0x78, 0xF1, 0xE3, 0xC7, 0x8F, 0xF7,
  0xC0, 0xFF, 0xFF, 0x06, 0x0C, 0x1F, 0xBF, 0x60, 0xC1, 0x83, 0xFF, 0xF0,
  0xFF, 0xFF, 0x06, 0x0C, 0x18, 0x3F, 0x7E, 0xC1, 0x83, 0x06, 0x00, 0x1F,
  0x7F, 0x60, 0x60, 0xC0, 0xC0, 0xC7, 0xC1, 0x61, 0x61, 0x7F, 0x3F, 0x83,
  0x06, 0x0C, 0x18, 0x3F, 0xFF, 0xC1, 0x83, 0x06, 0x0C, 0x10, 0xFF, 0xFC,
  0x40, 0x81, 0x02, 0x04, 0x08, 0x10, 0x23, 0xFF, 0xF0, 0xFF, 0xF1, 0x86,
  0x18, 0x61, 0x86, 0x18, 0x69, 0xBC, 0xC7, 0xC6, 0xCC, 0xCC, 0xD8, 0xF8,
  0xF8, 0xD8, 0xCC, 0xCC, 0xC6, 0xC7, 0xC1, 0x83, 0x06, 0x0C, 0x18, 0x30,
  0x60, 0xC1, 0x83, 0xFF, 0xF0, 0xC1, 0xF1, 0xF8, 0xFC, 0x7F, 0x7E, 0xAF,
  0x77, 0xBB, 0xC1, 0xE0, 0xF0, 0x78, 0x30, 0x83, 0x87, 0x8D, 0x1B, 0x32,
  0x66, 0xC7, 0x87, 0x0E, 0x0C, 0x10, 0x3E, 0x3F, 0x98, 0xCC, 0x64, 0x16,
  0x0F, 0x06, 0x82, 0x63, 0x31, 0x9F, 0xC7, 0xC0, 0xF9, 0xFF, 0x1E, 0x1C,
  0x38, 0xF7, 0xFE, 0xC1, 0x83, 0x06, 0x00, 0x3E, 0x3F, 0x98, 0xCC, 0x64,
  0x16, 0x0F, 0x06, 0x82, 0x67, 0x37, 0x9D, 0xC7, 0xE0, 0x18, 0xF9, 0xFF,
  0x1E, 0x3C, 0x78, 0xFF, 0x7C, 0xCD, 0x9B, 0x1E, 0x30, 0x7D, 0xFF, 0x06,
  0x0C, 0x0F, 0x0F, 0x83, 0x06, 0x0F, 0xFF, 0xE0, 0xFF, 0xFF, 0x08, 0x08,
  0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0xC1, 0xE0, 0xF0, 0x78,
  0x3C, 0x1E, 0x0F, 0x07, 0x83, 0xC1, 0xB1, 0x9F, 0xC7, 0xC0, 0xC1, 0xB1,
  0x98, 0xCC, 0x66, 0x31, 0x98, 0xD8, 0x6C, 0x36, 0x0B, 0x07, 0x03, 0x80,
  0xC1, 0xE0, 0xF0, 0x78, 0x3C, 0x1E, 0x6D, 0x36, 0xBA, 0x55, 0x3A, 0x9D,
  0xCE, 0xE0, 0xE3, 0x31, 0x9D, 0x86, 0xC3, 0xC0, 0xE0, 0x70, 0x78, 0x36,
  0x33, 0x18, 0xDC, 0x70, 0xC1, 0xB1, 0x98, 0xC6, 0xC3, 0x60, 0xE0, 0x70,
  0x10, 0x08, 0x04, 0x02, 0x01, 0x00, 0xFF, 0xFC, 0x30, 0x61, 0x83, 0x0C,
  0x18, 0x60, 0xC3, 0xFF, 0xF0, 0x39, 0xFA, 0x18, 0x37, 0xF8, 0xF1, 0xFF,
  0xFE, 0xC0, 0xC0, 0xC0, 0xD8, 0xFE, 0xC6, 0xC6, 0xC7, 0xC6, 0xC6, 0xFE,
  0xFC, 0x3C, 0xFF, 0x86, 0x0C, 0x18, 0x30, 0x3F, 0x7E, 0x06, 0x0C, 0x19,
  0xF7, 0xF8, 0xF1, 0xE3, 0xC7, 0x8F, 0xFB, 0xF0, 0x38, 0xFB, 0x1E, 0x3F,
  0xFF, 0xF0, 0x73, 0x7E, 0x1E, 0x74, 0xC7, 0xFF, 0xE6, 0x0C, 0x18, 0x30,
  0x63, 0xFF, 0xF0, 0x36, 0xFF, 0x1E, 0x3C, 0x78, 0xF1, 0xFF, 0x7E, 0x0E,
  0x1F, 0xF3, 0x80, 0xC1, 0x83, 0x06, 0xCF, 0xF8, 0xF1, 0xE3, 0xC7, 0x8F,
  0x1E, 0x30, 0x30, 0xC0, 0x3C, 0xF0, 0xC3, 0x0C, 0x30, 0xCF, 0xFF, 0x33,
  0x0F, 0xF3, 0x33, 0x33, 0x33, 0x33, 0xFC, 0xC0, 0xC0, 0xC0, 0xC3, 0xC6,
  0xCC, 0xCC, 0xF8, 0xCC, 0xCC, 0xC6, 0xC7, 0xF3, 0xC3, 0x0C, 0x30, 0xC3,
  0x0C, 0x30, 0xCF, 0xFF, 0xD3, 0x7F, 0xB2, 0x79, 0x3C, 0x9E, 0x4F, 0x07,
  0x83, 0xC1, 0x80, 0xD9, 0xFF, 0x1E, 0x3C, 0x78, 0xF1, 0xE3, 0xC6, 0x38,
  0xFB, 0x1E, 0x3C, 0x78, 0xF1, 0xFF, 0x7C, 0xD8, 0xFE, 0xC6, 0xC6, 0xC7,
  0xC6, 0xC6, 0xFE, 0xFC, 0xC0, 0xC0, 0xC0, 0x3E, 0xFF, 0x1E, 0x3C, 0x78,
  0xF1, 0xFF, 0x7E, 0x0C, 0x18, 0x30, 0xF3, 0xFC, 0xE1, 0x83, 0x06, 0x0C,
  0x7E, 0xFC, 0x3C, 0xFF, 0x07, 0x07, 0xC3, 0xC1, 0xFF, 0xFC, 0x20, 0x43,
  0xFF, 0xF2, 0x04, 0x08, 0x10, 0x20, 0x78, 0xF8, 0xC7, 0x8F, 0x1E, 0x3C,
  0x78, 0xF1, 0xFF, 0x7E, 0xC7, 0x8F, 0x1E, 0x36, 0xCD, 0x9B, 0x1E, 0x38,
  0xC1, 0xE0, 0xF0, 0x7B, 0xBD, 0xDA, 0xA9, 0x54, 0xEE, 0x77, 0x00, 0x63,
  0x31, 0x8D, 0x83, 0x81, 0xC0, 0xE0, 0xD8, 0xEE, 0xE3, 0x80, 0xC7, 0x8F,
  0x1A, 0x36, 0xCD, 0x8B, 0x1C, 0x38, 0x30, 0xE7, 0x8C, 0x00, 0xFF, 0xFC,
  0x30, 0xE3, 0x86, 0x18, 0x7F, 0xFE, 0x10, 0xFB, 0x1E, 0x3C, 0x78, 0xF1,
  0xE3, 0xC7, 0x8F, 0xB3, 0xE0, 0x78, 0xF8, 0x98, 0x18, 0x18, 0x18, 0x18,
  0x18, 0x18, 0xFF, 0xFF, 0x11, 0xFB, 0x18, 0x30, 0x60, 0xC7, 0x1C, 0x71,
  0xC3, 0xFF, 0xF0, 0x11, 0xFB, 0x18, 0x30, 0x6F, 0x9F, 0x03, 0x06, 0x0F,
  0xFF, 0xE0, 0x30, 0x30, 0x60, 0x60, 0x6C, 0xCC, 0xCC, 0xFF, 0xFF, 0x0C,
  0x0C, 0xFF, 0x83, 0x06, 0xCF, 0xF8, 0xC1, 0x83, 0x07, 0xFF, 0xF0, 0x04,
  0x1C, 0x38, 0x70, 0xC0, 0xFC, 0xE6, 0xC2, 0x83, 0xC6, 0xEE, 0x7C, 0xFF,
  0x0C, 0x38, 0x61, 0x83, 0x0C, 0x18, 0x30, 0x41, 0x80, 0x18, 0xFB, 0x1E,
  0x3C, 0x6F, 0x9F, 0x63, 0xC7, 0x8F, 0xBB, 0xE0, 0x18, 0x7E, 0xC6, 0xC3,
  0xC3, 0xC7, 0xFE, 0x3E, 0x0E, 0x0C, 0x18, 0x70, 0xFF, 0xC0, 0x63, 0x7B,
  0x25, 0x9A, 0x87, 0xC0, 0x60, 0x60, 0x36, 0x17, 0x9A, 0x4D, 0x6C, 0xE0,
  0xFF, 0x80, 0xFF, 0xBC, 0x80, 0xFF, 0xFF, 0xCF, 0xFF, 0x81, 0xFF, 0xFC,
  0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCF, 0xF0, 0xF3, 0x33, 0x33, 0x33,
  0x33, 0x33, 0x33, 0x3F, 0xF0, 0x23, 0x36, 0x64, 0xCC, 0xCC, 0xCC, 0xC4,
  0x66, 0x31, 0x46, 0x18, 0x43, 0x18, 0x42, 0x18, 0xC4, 0x23, 0x18, 0xCC,
  0x66, 0x00 };

// Glyph, Offset to bitmap, Width, Height, xAdvance, xOffset, yOffset

const gfxglyph_t HotStuff9Glyphs[] PROGMEM = {
  {32,     0,   1,   1,   9,    0,    0 },   // 0x00 ' ' 
  {65,     1,   9,  12,   9,    0,  -11 },   // 0x01 'A' 
  {66,    15,   8,  12,   9,    1,  -11 },   // 0x02 'B' 
  {67,    27,   7,  12,   9,    1,  -11 },   // 0x03 'C' 
  {68,    38,   7,  12,   9,    1,  -11 },   // 0x04 'D' 
  {69,    49,   7,  12,   9,    1,  -11 },   // 0x05 'E' 
  {70,    60,   7,  12,   9,    1,  -11 },   // 0x06 'F' 
  {71,    71,   8,  12,   9,    0,  -11 },   // 0x07 'G' 
  {72,    83,   7,  12,   9,    1,  -11 },   // 0x08 'H' 
  {73,    94,   7,  12,   9,    1,  -11 },   // 0x09 'I' 
  {74,   105,   6,  12,   9,    1,  -11 },   // 0x0A 'J' 
  {75,   114,   8,  12,   9,    1,  -11 },   // 0x0B 'K' 
  {76,   126,   7,  12,   9,    1,  -11 },   // 0x0C 'L' 
  {77,   137,   9,  12,   9,    0,  -11 },   // 0x0D 'M' 
  {78,   151,   7,  12,   9,    1,  -11 },   // 0x0E 'N' 
  {79,   162,   9,  12,   9,    0,  -11 },   // 0x0F 'O' 
  {80,   176,   7,  12,   9,    1,  -11 },   // 0x10 'P' 
  {81,   187,   9,  13,   9,    0,  -11 },   // 0x11 'Q' 
  {82,   202,   7,  12,   9,    1,  -11 },   // 0x12 'R' 
  {83,   213,   7,  12,   9,    1,  -11 },   // 0x13 'S' 
  {84,   224,   8,  12,   9,    0,  -11 },   // 0x14 'T' 
  {85,   236,   9,  12,   9,    0,  -11 },   // 0x15 'U' 
  {86,   250,   9,  12,   9,    0,  -11 },   // 0x16 'V' 
  {87,   264,   9,  12,   9,    0,  -11 },   // 0x17 'W' 
  {88,   278,   9,  12,   9,    0,  -11 },   // 0x18 'X' 
  {89,   292,   9,  12,   9,    0,  -11 },   // 0x19 'Y' 
  {90,   306,   7,  12,   9,    1,  -11 },   // 0x1A 'Z' 
  {97,   317,   7,   9,   9,    1,   -8 },   // 0x1B 'a' 
  {98,   325,   8,  12,   9,    1,  -11 },   // 0x1C 'b' 
  {99,   337,   7,   9,   9,    1,   -8 },   // 0x1D 'c' 
  {100,   345,   7,  12,   9,    1,  -11 },   // 0x1E 'd' 
  {101,   356,   7,   9,   9,    1,   -8 },   // 0x1F 'e' 
  {102,   364,   7,  12,   9,    1,  -11 },   // 0x20 'f' 
  {103,   375,   7,  13,   9,    1,   -8 },   // 0x21 'g' 
  {104,   387,   7,  12,   9,    1,  -11 },   // 0x22 'h' 
  {105,   398,   6,  12,   9,    2,  -11 },   // 0x23 'i' 
  {106,   407,   4,  16,   9,    2,  -11 },   // 0x24 'j' 
  {107,   415,   8,  12,   9,    1,  -11 },   // 0x25 'k' 
  {108,   427,   6,  12,   9,    2,  -11 },   // 0x26 'l' 
  {109,   436,   9,   9,   9,    0,   -8 },   // 0x27 'm' 
  {110,   447,   7,   9,   9,    1,   -8 },   // 0x28 'n' 
  {111,   455,   7,   9,   9,    1,   -8 },   // 0x29 'o' 
  {112,   463,   8,  12,   9,    1,   -8 },   // 0x2A 'p' 
  {113,   475,   7,  12,   9,    1,   -8 },   // 0x2B 'q' 
  {114,   486,   7,   9,   9,    1,   -8 },   // 0x2C 'r' 
  {115,   494,   7,   9,   9,    1,   -8 },   // 0x2D 's' 
  {116,   502,   7,  11,   9,    1,  -10 },   // 0x2E 't' 
  {117,   512,   7,   9,   9,    1,   -8 },   // 0x2F 'u' 
  {118,   520,   7,   9,   9,    1,   -8 },   // 0x30 'v' 
  {119,   528,   9,   9,   9,    0,   -8 },   // 0x31 'w' 
  {120,   539,   9,   9,   9,    0,   -8 },   // 0x32 'x' 
  {121,   550,   7,  13,   9,    1,   -8 },   // 0x33 'y' 
  {122,   562,   7,   9,   9,    1,   -8 },   // 0x34 'z' 
  {48,   570,   7,  12,   9,    1,  -11 },   // 0x35 '0' 
  {49,   581,   8,  11,   9,    1,  -10 },   // 0x36 '1' 
  {50,   592,   7,  12,   9,    1,  -11 },   // 0x37 '2' 
  {51,   603,   7,  12,   9,    1,  -11 },   // 0x38 '3' 
  {52,   614,   8,  11,   9,    1,  -10 },   // 0x39 '4' 
  {53,   625,   7,  11,   9,    1,  -10 },   // 0x3A '5' 
  {54,   635,   8,  12,   9,    1,  -11 },   // 0x3B '6' 
  {55,   647,   7,  11,   9,    1,  -10 },   // 0x3C '7' 
  {56,   657,   7,  12,   9,    1,  -11 },   // 0x3D '8' 
  {57,   668,   8,  12,   9,    1,  -11 },   // 0x3E '9' 
  {45,   680,   5,   2,   9,    2,   -5 },   // 0x3F '-' 
  {37,   682,   9,  12,   9,    0,  -11 },   // 0x40 '%' 
  {46,   696,   3,   3,   9,    3,   -2 },   // 0x41 '.' 
  {44,   698,   3,   6,   9,    3,   -2 },   // 0x42 ',' 
  {33,   701,   2,  12,   9,    4,  -11 },   // 0x43 '!' 
  {58,   704,   3,   8,   9,    3,   -7 },   // 0x44 ':' 
  {91,   707,   4,  17,   9,    3,  -13 },   // 0x45 '[' 
  {93,   716,   4,  17,   9,    2,  -13 },   // 0x46 ']' 
  {40,   725,   4,  18,   9,    3,  -14 },   // 0x47 '(' 
  {41,   734,   5,  18,   9,    1,  -14 }   // 0x48 ')' 
};

const gfxfont_t HotStuff9 PROGMEM = 
{
  (uint8_t  *)HotStuff9Bitmaps, //< Glyph bitmaps, concatenated 
  (gfxglyph_t *)HotStuff9Glyphs, //< Glyph array
  73,// total glyphs in the string
  18,  // newline distance (y axis)
     0,  // minimum X - left most
    -4,  // minimum Y - bottom most (descenders can drive this negative)
     9,  // maximum X - right most
    15}; // maximum Y - top most
// Approx. 1271 bytes -  but your mileage may vary.

#endif