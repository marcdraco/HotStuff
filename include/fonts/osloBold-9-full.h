
#ifndef __FIXEDFONTOSLOIIBOLDTTF9
#define __FIXEDFONTOSLOIIBOLDTTF9
const uint8_t HotStuff9Bitmaps[] PROGMEM = {
  0x00, 0x10, 0x20, 0x61, 0x42, 0x85, 0x0E, 0x22, 0x44, 0x89, 0x14, 0x18,
  0x30, 0x40, 0xFD, 0x0E, 0x0C, 0x18, 0x30, 0xFE, 0x42, 0x83, 0x06, 0x0C,
  0x18, 0x5F, 0x00, 0x38, 0x8A, 0x0C, 0x18, 0x30, 0x20, 0x40, 0x81, 0x06,
  0x0C, 0x14, 0x47, 0x00, 0xF9, 0x0A, 0x0C, 0x18, 0x30, 0x60, 0xC1, 0x83,
  0x06, 0x0C, 0x18, 0x5F, 0x00, 0xFF, 0x02, 0x04, 0x08, 0x10, 0x3F, 0xC0,
  0x81, 0x02, 0x04, 0x08, 0x1F, 0xC0, 0xFF, 0x02, 0x04, 0x08, 0x10, 0x3F,
  0xC0, 0x81, 0x02, 0x04, 0x08, 0x10, 0x00, 0x38, 0x8A, 0x0C, 0x18, 0x30,
  0x27, 0xC1, 0x83, 0x06, 0x0C, 0x14, 0x67, 0x40, 0x83, 0x06, 0x0C, 0x18,
  0x30, 0x7F, 0xC1, 0x83, 0x06, 0x0C, 0x18, 0x30, 0x40, 0xFE, 0x20, 0x40,
  0x81, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x81, 0x1F, 0xC0, 0x1E, 0x04,
  0x08, 0x10, 0x20, 0x40, 0x81, 0x02, 0x06, 0x0C, 0x14, 0x47, 0x00, 0x83,
  0x0A, 0x24, 0x8A, 0x1C, 0x30, 0x60, 0xE1, 0x42, 0x44, 0x48, 0x50, 0x40,
  0x81, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x81, 0x02, 0x04, 0x08, 0x1F,
  0xC0, 0x83, 0x8F, 0x1E, 0x5A, 0xB5, 0x64, 0xC9, 0x83, 0x06, 0x0C, 0x18,
  0x30, 0x40, 0x83, 0x07, 0x0E, 0x1A, 0x34, 0x64, 0xC9, 0x8B, 0x16, 0x2C,
  0x38, 0x30, 0x40, 0x38, 0x8A, 0x0C, 0x18, 0x30, 0x60, 0xC1, 0x83, 0x06,
  0x0C, 0x14, 0x47, 0x00, 0xF9, 0x0E, 0x0C, 0x18, 0x30, 0xFF, 0x40, 0x81,
  0x02, 0x04, 0x08, 0x10, 0x00, 0x38, 0x8A, 0x0C, 0x18, 0x30, 0x60, 0xC1,
  0x83, 0x06, 0x4C, 0x54, 0x47, 0x40, 0xF9, 0x0E, 0x0C, 0x18, 0x30, 0xFF,
  0x44, 0x89, 0x12, 0x14, 0x28, 0x30, 0x40, 0x38, 0x8A, 0x0C, 0x18, 0x08,
  0x0E, 0x02, 0x02, 0x06, 0x0C, 0x14, 0x47, 0x00, 0xFE, 0x20, 0x40, 0x81,
  0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x81, 0x02, 0x00, 0x83, 0x06, 0x0C,
  0x18, 0x30, 0x60, 0xC1, 0x83, 0x06, 0x0C, 0x14, 0x47, 0x00, 0x83, 0x06,
  0x0A, 0x24, 0x48, 0x91, 0x14, 0x28, 0x50, 0xA0, 0xC1, 0x02, 0x00, 0x83,
  0x06, 0x0C, 0x18, 0x30, 0x64, 0xC9, 0xAB, 0x57, 0x2E, 0x38, 0x30, 0x40,
  0x82, 0x85, 0x12, 0x22, 0x85, 0x04, 0x08, 0x28, 0x51, 0x12, 0x24, 0x30,
  0x40, 0x83, 0x05, 0x12, 0x22, 0x85, 0x04, 0x08, 0x10, 0x20, 0x40, 0x81,
  0x02, 0x00, 0xFE, 0x04, 0x10, 0x20, 0x81, 0x04, 0x08, 0x20, 0x41, 0x02,
  0x04, 0x1F, 0xC0, 0x10, 0x20, 0x61, 0x42, 0x85, 0x0E, 0x22, 0x44, 0x89,
  0x14, 0x18, 0x30, 0x40, 0xFD, 0x0E, 0x0C, 0x18, 0x30, 0xFE, 0x42, 0x83,
  0x06, 0x0C, 0x18, 0x5F, 0x00, 0x38, 0x8A, 0x0C, 0x18, 0x30, 0x20, 0x40,
  0x81, 0x06, 0x0C, 0x14, 0x47, 0x00, 0xF9, 0x0A, 0x0C, 0x18, 0x30, 0x60,
  0xC1, 0x83, 0x06, 0x0C, 0x18, 0x5F, 0x00, 0xFF, 0x02, 0x04, 0x08, 0x10,
  0x3F, 0xC0, 0x81, 0x02, 0x04, 0x08, 0x1F, 0xC0, 0xFF, 0x02, 0x04, 0x08,
  0x10, 0x3F, 0xC0, 0x81, 0x02, 0x04, 0x08, 0x10, 0x00, 0x38, 0x8A, 0x0C,
  0x18, 0x30, 0x27, 0xC1, 0x83, 0x06, 0x0C, 0x14, 0x67, 0x40, 0x83, 0x06,
  0x0C, 0x18, 0x30, 0x7F, 0xC1, 0x83, 0x06, 0x0C, 0x18, 0x30, 0x40, 0xFE,
  0x20, 0x40, 0x81, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x81, 0x1F, 0xC0,
  0x1E, 0x04, 0x08, 0x10, 0x20, 0x40, 0x81, 0x02, 0x06, 0x0C, 0x14, 0x47,
  0x00, 0x83, 0x0A, 0x24, 0x8A, 0x1C, 0x30, 0x60, 0xE1, 0x42, 0x44, 0x48,
  0x50, 0x40, 0x81, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x81, 0x02, 0x04,
  0x08, 0x1F, 0xC0, 0x83, 0x8F, 0x1E, 0x5A, 0xB5, 0x64, 0xC9, 0x83, 0x06,
  0x0C, 0x18, 0x30, 0x40, 0x83, 0x07, 0x0E, 0x1A, 0x34, 0x64, 0xC9, 0x8B,
  0x16, 0x2C, 0x38, 0x30, 0x40, 0x38, 0x8A, 0x0C, 0x18, 0x30, 0x60, 0xC1,
  0x83, 0x06, 0x0C, 0x14, 0x47, 0x00, 0xF9, 0x0E, 0x0C, 0x18, 0x30, 0xFF,
  0x40, 0x81, 0x02, 0x04, 0x08, 0x10, 0x00, 0x38, 0x8A, 0x0C, 0x18, 0x30,
  0x60, 0xC1, 0x83, 0x06, 0x4C, 0x54, 0x47, 0x40, 0xF9, 0x0E, 0x0C, 0x18,
  0x30, 0xFF, 0x44, 0x89, 0x12, 0x14, 0x28, 0x30, 0x40, 0x38, 0x8A, 0x0C,
  0x18, 0x08, 0x0E, 0x02, 0x02, 0x06, 0x0C, 0x14, 0x47, 0x00, 0xFE, 0x20,
  0x40, 0x81, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x81, 0x02, 0x00, 0x83,
  0x06, 0x0C, 0x18, 0x30, 0x60, 0xC1, 0x83, 0x06, 0x0C, 0x14, 0x47, 0x00,
  0x83, 0x06, 0x0A, 0x24, 0x48, 0x91, 0x14, 0x28, 0x50, 0xA0, 0xC1, 0x02,
  0x00, 0x83, 0x06, 0x0C, 0x18, 0x30, 0x64, 0xC9, 0xAB, 0x57, 0x2E, 0x38,
  0x30, 0x40, 0x82, 0x85, 0x12, 0x22, 0x85, 0x04, 0x08, 0x28, 0x51, 0x12,
  0x24, 0x30, 0x40, 0x83, 0x05, 0x12, 0x22, 0x85, 0x04, 0x08, 0x10, 0x20,
  0x40, 0x81, 0x02, 0x00, 0xFE, 0x04, 0x10, 0x20, 0x81, 0x04, 0x08, 0x20,
  0x41, 0x02, 0x04, 0x1F, 0xC0, 0xBC, 0x62, 0xC1, 0xA1, 0xA1, 0xA1, 0x91,
  0x91, 0x89, 0x89, 0x85, 0x85, 0x83, 0x46, 0x3D, 0xF0, 0x20, 0x40, 0x81,
  0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x81, 0x02, 0x3F, 0x80, 0x1C, 0x62,
  0x41, 0x81, 0x01, 0x01, 0x02, 0x04, 0x08, 0x08, 0x10, 0x20, 0x40, 0x40,
  0x7F, 0x1C, 0x62, 0xC1, 0x81, 0x01, 0x01, 0x02, 0x0C, 0x02, 0x01, 0x01,
  0x81, 0x41, 0x62, 0x1C, 0x04, 0x0C, 0x14, 0x14, 0x24, 0x24, 0x44, 0x44,
  0x84, 0x84, 0xFF, 0x04, 0x04, 0x04, 0xFF, 0x80, 0x80, 0x80, 0xBC, 0xC2,
  0xC1, 0x81, 0x01, 0x01, 0x81, 0x81, 0x41, 0x42, 0x3C, 0x3C, 0x46, 0x82,
  0x81, 0xBD, 0xC2, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x42, 0x3C,
  0xFF, 0x82, 0x82, 0x84, 0x04, 0x08, 0x08, 0x10, 0x10, 0x10, 0x20, 0x20,
  0x40, 0x40, 0x80, 0x3C, 0x42, 0x81, 0x81, 0x81, 0x81, 0x42, 0x3C, 0x62,
  0x81, 0x81, 0x81, 0x81, 0x42, 0x3C, 0x3C, 0x42, 0x81, 0x81, 0x81, 0x81,
  0x42, 0x3E, 0x04, 0x08, 0x10, 0x10, 0x20, 0x40, 0x80, 0xFE, 0x6A, 0x69,
  0x9C, 0x10, 0x42, 0x08, 0x21, 0x04, 0x16, 0xA6, 0x99, 0x80, 0xC0, 0xF0,
  0xFF, 0xEC, 0xC6, 0xF2, 0x49, 0x24, 0x92, 0x49, 0x24, 0x9C, 0xE4, 0x92,
  0x49, 0x24, 0x92, 0x49, 0x3C, 0x6A, 0xAA, 0xAA, 0xA9, 0xA9, 0x55, 0x55,
  0x6A, 0x55, 0x6A, 0xAA, 0xA0 };

// Glyph, Offset to bitmap, Width, Height, xAdvance, xOffset, yOffset

const gfxglyph_t HotStuff9Glyphs[] PROGMEM = {
  {32,     0,   1,   1,   4,    0,    0 },   // 0x00 ' ' 
  {65,     1,   7,  14,   8,    0,  -13 },   // 0x01 'A' 
  {66,    14,   7,  14,   8,    0,  -13 },   // 0x02 'B' 
  {67,    27,   7,  14,   8,    0,  -13 },   // 0x03 'C' 
  {68,    40,   7,  14,   8,    0,  -13 },   // 0x04 'D' 
  {69,    53,   7,  14,   8,    0,  -13 },   // 0x05 'E' 
  {70,    66,   7,  14,   8,    0,  -13 },   // 0x06 'F' 
  {71,    79,   7,  14,   8,    0,  -13 },   // 0x07 'G' 
  {72,    92,   7,  14,   8,    0,  -13 },   // 0x08 'H' 
  {73,   105,   7,  14,   8,    0,  -13 },   // 0x09 'I' 
  {74,   118,   7,  14,   8,    0,  -13 },   // 0x0A 'J' 
  {75,   131,   7,  14,   8,    0,  -13 },   // 0x0B 'K' 
  {76,   144,   7,  14,   8,    0,  -13 },   // 0x0C 'L' 
  {77,   157,   7,  14,   8,    0,  -13 },   // 0x0D 'M' 
  {78,   170,   7,  14,   8,    0,  -13 },   // 0x0E 'N' 
  {79,   183,   7,  14,   8,    0,  -13 },   // 0x0F 'O' 
  {80,   196,   7,  14,   8,    0,  -13 },   // 0x10 'P' 
  {81,   209,   7,  14,   8,    0,  -13 },   // 0x11 'Q' 
  {82,   222,   7,  14,   8,    0,  -13 },   // 0x12 'R' 
  {83,   235,   7,  14,   8,    0,  -13 },   // 0x13 'S' 
  {84,   248,   7,  14,   8,    0,  -13 },   // 0x14 'T' 
  {85,   261,   7,  14,   8,    0,  -13 },   // 0x15 'U' 
  {86,   274,   7,  14,   8,    0,  -13 },   // 0x16 'V' 
  {87,   287,   7,  14,   8,    0,  -13 },   // 0x17 'W' 
  {88,   300,   7,  14,   8,    0,  -13 },   // 0x18 'X' 
  {89,   313,   7,  14,   8,    0,  -13 },   // 0x19 'Y' 
  {90,   326,   7,  14,   8,    0,  -13 },   // 0x1A 'Z' 
  {97,   339,   7,  14,   8,    0,  -13 },   // 0x1B 'a' 
  {98,   352,   7,  14,   8,    0,  -13 },   // 0x1C 'b' 
  {99,   365,   7,  14,   8,    0,  -13 },   // 0x1D 'c' 
  {100,   378,   7,  14,   8,    0,  -13 },   // 0x1E 'd' 
  {101,   391,   7,  14,   8,    0,  -13 },   // 0x1F 'e' 
  {102,   404,   7,  14,   8,    0,  -13 },   // 0x20 'f' 
  {103,   417,   7,  14,   8,    0,  -13 },   // 0x21 'g' 
  {104,   430,   7,  14,   8,    0,  -13 },   // 0x22 'h' 
  {105,   443,   7,  14,   8,    0,  -13 },   // 0x23 'i' 
  {106,   456,   7,  14,   8,    0,  -13 },   // 0x24 'j' 
  {107,   469,   7,  14,   8,    0,  -13 },   // 0x25 'k' 
  {108,   482,   7,  14,   8,    0,  -13 },   // 0x26 'l' 
  {109,   495,   7,  14,   8,    0,  -13 },   // 0x27 'm' 
  {110,   508,   7,  14,   8,    0,  -13 },   // 0x28 'n' 
  {111,   521,   7,  14,   8,    0,  -13 },   // 0x29 'o' 
  {112,   534,   7,  14,   8,    0,  -13 },   // 0x2A 'p' 
  {113,   547,   7,  14,   8,    0,  -13 },   // 0x2B 'q' 
  {114,   560,   7,  14,   8,    0,  -13 },   // 0x2C 'r' 
  {115,   573,   7,  14,   8,    0,  -13 },   // 0x2D 's' 
  {116,   586,   7,  14,   8,    0,  -13 },   // 0x2E 't' 
  {117,   599,   7,  14,   8,    0,  -13 },   // 0x2F 'u' 
  {118,   612,   7,  14,   8,    0,  -13 },   // 0x30 'v' 
  {119,   625,   7,  14,   8,    0,  -13 },   // 0x31 'w' 
  {120,   638,   7,  14,   8,    0,  -13 },   // 0x32 'x' 
  {121,   651,   7,  14,   8,    0,  -13 },   // 0x33 'y' 
  {122,   664,   7,  14,   8,    0,  -13 },   // 0x34 'z' 
  {48,   677,   8,  15,   9,    0,  -14 },   // 0x35 '0' 
  {49,   692,   7,  15,   8,    0,  -14 },   // 0x36 '1' 
  {50,   706,   8,  15,   9,    0,  -14 },   // 0x37 '2' 
  {51,   721,   8,  15,   9,    0,  -14 },   // 0x38 '3' 
  {52,   736,   8,  14,   8,    0,  -13 },   // 0x39 '4' 
  {53,   750,   8,  15,   9,    0,  -14 },   // 0x3A '5' 
  {54,   765,   8,  15,   9,    0,  -14 },   // 0x3B '6' 
  {55,   780,   8,  15,   8,    0,  -14 },   // 0x3C '7' 
  {56,   795,   8,  15,   9,    0,  -14 },   // 0x3D '8' 
  {57,   810,   8,  15,   9,    0,  -14 },   // 0x3E '9' 
  {45,   825,   7,   1,   8,    0,   -7 },   // 0x3F '-' 
  {37,   826,   6,  15,   7,    0,  -14 },   // 0x40 '%' 
  {46,   838,   1,   2,   1,    0,   -1 },   // 0x41 '.' 
  {44,   839,   1,   4,   2,    0,   -1 },   // 0x42 ',' 
  {33,   840,   1,  14,   1,    0,  -13 },   // 0x43 '!' 
  {58,   842,   1,   7,   1,    0,   -6 },   // 0x44 ':' 
  {91,   843,   3,  18,   3,    0,  -15 },   // 0x45 '[' 
  {93,   850,   3,  18,   3,   -1,  -15 },   // 0x46 ']' 
  {40,   857,   2,  16,   3,    0,  -14 },   // 0x47 '(' 
  {41,   861,   2,  16,   3,    0,  -14 },   // 0x48 ')' 
  {47,   865,   2,  14,   3,    0,  -13 }   // 0x49 '/' 
};

const gfxfont_t HotStuff9 PROGMEM = 
{
  (uint8_t  *)HotStuff9Bitmaps, //< Glyph bitmaps, concatenated 
  (gfxglyph_t *)HotStuff9Glyphs, //< Glyph array
  74,// total glyphs in the string
  18,  // newline distance (y axis)
    -1,  // minimum X - left most
    -2,  // minimum Y - bottom most (descenders can drive this negative)
     8,  // maximum X - right most
    16}; // maximum Y - top most
// Approx. 1401 bytes -  but your mileage may vary.

#endif