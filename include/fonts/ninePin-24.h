
#ifndef __FIXEDFONTNINEPINTTF24
#define __FIXEDFONTNINEPINTTF24
const uint8_t HotStuff24Bitmaps[] PROGMEM = {
  0x00, 0x03, 0xEF, 0xBE, 0x00, 0x3E, 0xFB, 0xE0, 0x03, 0xEF, 0xBE, 0x00,
  0x3E, 0xFB, 0xE0, 0x03, 0xEF, 0xBE, 0x00, 0x00, 0x00, 0x00, 0xF8, 0x00,
  0x01, 0xFF, 0x80, 0x00, 0x1F, 0xF8, 0x00, 0x01, 0xFF, 0x80, 0x00, 0x1F,
  0xF8, 0x00, 0x01, 0xF0, 0x00, 0x00, 0x00, 0xF8, 0x00, 0x3F, 0xFF, 0x80,
  0x03, 0xFF, 0xF8, 0x00, 0x3F, 0xFF, 0x80, 0x03, 0xFF, 0xF8, 0x00, 0x3F,
  0xF0, 0x00, 0x00, 0x00, 0xF8, 0x0F, 0x81, 0xFF, 0x80, 0xF8, 0x1F, 0xF8,
  0x0F, 0x81, 0xFF, 0x80, 0xF8, 0x1F, 0xF8, 0x0F, 0x81, 0xF0, 0x00, 0x00,
  0x00, 0xFB, 0xE0, 0x01, 0xFF, 0xBE, 0x00, 0x1F, 0xFB, 0xE0, 0x01, 0xFF,
  0xBE, 0x00, 0x1F, 0xFB, 0xE0, 0x01, 0xF0, 0x00, 0x00, 0x00, 0xF8, 0x00,
  0x01, 0xFF, 0x80, 0x00, 0x1F, 0xF8, 0x00, 0x01, 0xFF, 0x80, 0x00, 0x1F,
  0xF8, 0x00, 0x01, 0xF0, 0x00, 0x00, 0x00, 0x03, 0xEF, 0xBE, 0x00, 0x3E,
  0xFB, 0xE0, 0x03, 0xEF, 0xBE, 0x00, 0x3E, 0xFB, 0xE0, 0x03, 0xEF, 0xBE,
  0x00, 0x03, 0xE0, 0x01, 0xF0, 0x00, 0xF8, 0x00, 0x7C, 0x00, 0x3E, 0x00,
  0x00, 0x03, 0xEF, 0x81, 0xF7, 0xC0, 0xFB, 0xE0, 0x7D, 0xF0, 0x3E, 0xF8,
  0x00, 0x00, 0x00, 0x3E, 0x00, 0x1F, 0x00, 0x0F, 0x80, 0x07, 0xC0, 0x03,
  0xE0, 0x00, 0x00, 0x00, 0xF8, 0x00, 0x7C, 0x00, 0x3E, 0x00, 0x1F, 0x00,
  0x0F, 0x80, 0x00, 0x00, 0x03, 0xE0, 0x01, 0xF0, 0x00, 0xF8, 0x00, 0x7C,
  0x00, 0x3E, 0x00, 0x00, 0x00, 0x0F, 0x80, 0x07, 0xC0, 0x03, 0xE0, 0x01,
  0xF0, 0x00, 0xF8, 0x00, 0x00, 0x0F, 0xBE, 0xFF, 0xDF, 0x7F, 0xEF, 0xBF,
  0xF7, 0xDF, 0xFB, 0xEF, 0x80, 0x03, 0xEF, 0xBE, 0x00, 0x3E, 0xFB, 0xE0,
  0x03, 0xEF, 0xBE, 0x00, 0x3E, 0xFB, 0xE0, 0x03, 0xEF, 0xBE, 0x00, 0x00,
  0x00, 0x00, 0xF8, 0x00, 0x01, 0xFF, 0x80, 0x00, 0x1F, 0xF8, 0x00, 0x01,
  0xFF, 0x80, 0x00, 0x1F, 0xF8, 0x00, 0x01, 0xF0, 0x00, 0x00, 0x00, 0xF8,
  0x00, 0x01, 0xFF, 0x80, 0x00, 0x1F, 0xF8, 0x00, 0x01, 0xFF, 0x80, 0x00,
  0x1F, 0xF8, 0x00, 0x01, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3E, 0x00,
  0x00, 0x03, 0xE0, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x03, 0xE0, 0x00, 0x00,
  0x3E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0x80, 0x00, 0x00, 0xF8, 0x00,
  0x00, 0x0F, 0x80, 0x00, 0x00, 0xF8, 0x00, 0x00, 0x0F, 0x80, 0x00, 0x00,
  0x00, 0x00, 0x03, 0xE0, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x03, 0xE0, 0x00,
  0x00, 0x3E, 0x00, 0x00, 0x03, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFB,
  0xEF, 0xBF, 0xFF, 0xBE, 0xFB, 0xFF, 0xFB, 0xEF, 0xBF, 0xFF, 0xBE, 0xFB,
  0xFF, 0xFB, 0xEF, 0xBF, 0xF0, 0x03, 0xEF, 0xBE, 0x00, 0x3E, 0xFB, 0xE0,
  0x03, 0xEF, 0xBE, 0x00, 0x3E, 0xFB, 0xE0, 0x03, 0xEF, 0xBE, 0x00, 0x00,
  0x00, 0x00, 0xF8, 0x00, 0x01, 0xFF, 0x80, 0x00, 0x1F, 0xF8, 0x00, 0x01,
  0xFF, 0x80, 0x00, 0x1F, 0xF8, 0x00, 0x01, 0xF0, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x01, 0xF0, 0x00, 0x00, 0x1F, 0x00, 0x00, 0x01, 0xF0, 0x00, 0x00,
  0x1F, 0x00, 0x00, 0x01, 0xF0, 0x00, 0x00, 0x00, 0x03, 0xEF, 0xBE, 0x00,
  0x3E, 0xFB, 0xE0, 0x03, 0xEF, 0xBE, 0x00, 0x3E, 0xFB, 0xE0, 0x03, 0xEF,
  0xBE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xF0, 0x00, 0x00, 0x1F,
  0x00, 0x00, 0x01, 0xF0, 0x00, 0x00, 0x1F, 0x00, 0x00, 0x01, 0xF0, 0x00,
  0x00, 0x00, 0xF8, 0x00, 0x01, 0xFF, 0x80, 0x00, 0x1F, 0xF8, 0x00, 0x01,
  0xFF, 0x80, 0x00, 0x1F, 0xF8, 0x00, 0x01, 0xF0, 0x00, 0x00, 0x00, 0x03,
  0xEF, 0xBE, 0x00, 0x3E, 0xFB, 0xE0, 0x03, 0xEF, 0xBE, 0x00, 0x3E, 0xFB,
  0xE0, 0x03, 0xEF, 0xBE, 0x00, 0xF8, 0x00, 0x01, 0xFF, 0x80, 0x00, 0x1F,
  0xF8, 0x00, 0x01, 0xFF, 0x80, 0x00, 0x1F, 0xF8, 0x00, 0x01, 0xF0, 0x00,
  0x00, 0x00, 0xF8, 0x00, 0x01, 0xFF, 0x80, 0x00, 0x1F, 0xF8, 0x00, 0x01,
  0xFF, 0x80, 0x00, 0x1F, 0xF8, 0x00, 0x01, 0xF0, 0x00, 0x00, 0x00, 0xF8,
  0x00, 0x01, 0xFF, 0x80, 0x00, 0x1F, 0xF8, 0x00, 0x01, 0xFF, 0x80, 0x00,
  0x1F, 0xF8, 0x00, 0x01, 0xF0, 0x00, 0x00, 0x00, 0xFB, 0xEF, 0xBF, 0xFF,
  0xBE, 0xFB, 0xFF, 0xFB, 0xEF, 0xBF, 0xFF, 0xBE, 0xFB, 0xFF, 0xFB, 0xEF,
  0xBF, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xF0, 0x00, 0x00, 0x1F,
  0x00, 0x00, 0x01, 0xF0, 0x00, 0x00, 0x1F, 0x00, 0x00, 0x01, 0xF0, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0xF0, 0x00, 0x00, 0x1F, 0x00, 0x00, 0x01,
  0xF0, 0x00, 0x00, 0x1F, 0x00, 0x00, 0x01, 0xF0, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x01, 0xF0, 0x00, 0x00, 0x1F, 0x00, 0x00, 0x01, 0xF0, 0x00, 0x00,
  0x1F, 0x00, 0x00, 0x01, 0xF0, 0xFB, 0xEF, 0xBF, 0xFF, 0xBE, 0xFB, 0xFF,
  0xFB, 0xEF, 0xBF, 0xFF, 0xBE, 0xFB, 0xFF, 0xFB, 0xEF, 0xBF, 0xF0, 0x00,
  0x00, 0x00, 0xF8, 0x00, 0x00, 0x0F, 0x80, 0x00, 0x00, 0xF8, 0x00, 0x00,
  0x0F, 0x80, 0x00, 0x00, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8,
  0x00, 0x00, 0x0F, 0x80, 0x00, 0x00, 0xF8, 0x00, 0x00, 0x0F, 0x80, 0x00,
  0x00, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFB, 0xEF, 0xBE, 0x0F,
  0xBE, 0xFB, 0xE0, 0xFB, 0xEF, 0xBE, 0x0F, 0xBE, 0xFB, 0xE0, 0xFB, 0xEF,
  0xBE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xF0, 0x00, 0x00, 0x1F,
  0x00, 0x00, 0x01, 0xF0, 0x00, 0x00, 0x1F, 0x00, 0x00, 0x01, 0xF0, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0xF0, 0x00, 0x00, 0x1F, 0x00, 0x00, 0x01,
  0xF0, 0x00, 0x00, 0x1F, 0x00, 0x00, 0x01, 0xF0, 0x00, 0x00, 0x00, 0xFB,
  0xEF, 0xBE, 0x0F, 0xBE, 0xFB, 0xE0, 0xFB, 0xEF, 0xBE, 0x0F, 0xBE, 0xFB,
  0xE0, 0xFB, 0xEF, 0xBE, 0x00, 0x03, 0xEF, 0xBE, 0x00, 0x3E, 0xFB, 0xE0,
  0x03, 0xEF, 0xBE, 0x00, 0x3E, 0xFB, 0xE0, 0x03, 0xEF, 0xBE, 0x00, 0x00,
  0x00, 0x00, 0xF8, 0x00, 0x01, 0xFF, 0x80, 0x00, 0x1F, 0xF8, 0x00, 0x01,
  0xFF, 0x80, 0x00, 0x1F, 0xF8, 0x00, 0x01, 0xF0, 0x00, 0x00, 0x00, 0xF8,
  0x00, 0x00, 0x0F, 0x80, 0x00, 0x00, 0xF8, 0x00, 0x00, 0x0F, 0x80, 0x00,
  0x00, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFB, 0xEF, 0xBE, 0x0F,
  0xBE, 0xFB, 0xE0, 0xFB, 0xEF, 0xBE, 0x0F, 0xBE, 0xFB, 0xE0, 0xFB, 0xEF,
  0xBE, 0x00, 0x00, 0x00, 0x00, 0xF8, 0x00, 0x01, 0xFF, 0x80, 0x00, 0x1F,
  0xF8, 0x00, 0x01, 0xFF, 0x80, 0x00, 0x1F, 0xF8, 0x00, 0x01, 0xF0, 0x00,
  0x00, 0x00, 0xF8, 0x00, 0x01, 0xFF, 0x80, 0x00, 0x1F, 0xF8, 0x00, 0x01,
  0xFF, 0x80, 0x00, 0x1F, 0xF8, 0x00, 0x01, 0xF0, 0x00, 0x00, 0x00, 0x03,
  0xEF, 0xBE, 0x00, 0x3E, 0xFB, 0xE0, 0x03, 0xEF, 0xBE, 0x00, 0x3E, 0xFB,
  0xE0, 0x03, 0xEF, 0xBE, 0x00, 0xFB, 0xEF, 0xBF, 0xFF, 0xBE, 0xFB, 0xFF,
  0xFB, 0xEF, 0xBF, 0xFF, 0xBE, 0xFB, 0xFF, 0xFB, 0xEF, 0xBF, 0xF0, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0xF0, 0x00, 0x00, 0x1F, 0x00, 0x00, 0x01,
  0xF0, 0x00, 0x00, 0x1F, 0x00, 0x00, 0x01, 0xF0, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x01, 0xF0, 0x00, 0x00, 0x1F, 0x00, 0x00, 0x01, 0xF0, 0x00, 0x00,
  0x1F, 0x00, 0x00, 0x01, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3E, 0x00,
  0x00, 0x03, 0xE0, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x03, 0xE0, 0x00, 0x00,
  0x3E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x03, 0xE0,
  0x00, 0x00, 0x3E, 0x00, 0x00, 0x03, 0xE0, 0x00, 0x00, 0x3E, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x0F, 0x80, 0x00, 0x00, 0xF8, 0x00, 0x00, 0x0F, 0x80,
  0x00, 0x00, 0xF8, 0x00, 0x00, 0x0F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x0F, 0x80, 0x00, 0x00, 0xF8, 0x00, 0x00, 0x0F, 0x80, 0x00, 0x00, 0xF8,
  0x00, 0x00, 0x0F, 0x80, 0x00, 0x03, 0xEF, 0xBE, 0x00, 0x3E, 0xFB, 0xE0,
  0x03, 0xEF, 0xBE, 0x00, 0x3E, 0xFB, 0xE0, 0x03, 0xEF, 0xBE, 0x00, 0x00,
  0x00, 0x00, 0xF8, 0x00, 0x01, 0xFF, 0x80, 0x00, 0x1F, 0xF8, 0x00, 0x01,
  0xFF, 0x80, 0x00, 0x1F, 0xF8, 0x00, 0x01, 0xF0, 0x00, 0x00, 0x00, 0xF8,
  0x00, 0x01, 0xFF, 0x80, 0x00, 0x1F, 0xF8, 0x00, 0x01, 0xFF, 0x80, 0x00,
  0x1F, 0xF8, 0x00, 0x01, 0xF0, 0x00, 0x00, 0x00, 0x03, 0xEF, 0xBE, 0x00,
  0x3E, 0xFB, 0xE0, 0x03, 0xEF, 0xBE, 0x00, 0x3E, 0xFB, 0xE0, 0x03, 0xEF,
  0xBE, 0x00, 0x00, 0x00, 0x00, 0xF8, 0x00, 0x01, 0xFF, 0x80, 0x00, 0x1F,
  0xF8, 0x00, 0x01, 0xFF, 0x80, 0x00, 0x1F, 0xF8, 0x00, 0x01, 0xF0, 0x00,
  0x00, 0x00, 0xF8, 0x00, 0x01, 0xFF, 0x80, 0x00, 0x1F, 0xF8, 0x00, 0x01,
  0xFF, 0x80, 0x00, 0x1F, 0xF8, 0x00, 0x01, 0xF0, 0x00, 0x00, 0x00, 0x03,
  0xEF, 0xBE, 0x00, 0x3E, 0xFB, 0xE0, 0x03, 0xEF, 0xBE, 0x00, 0x3E, 0xFB,
  0xE0, 0x03, 0xEF, 0xBE, 0x00, 0x03, 0xEF, 0xBE, 0x00, 0x3E, 0xFB, 0xE0,
  0x03, 0xEF, 0xBE, 0x00, 0x3E, 0xFB, 0xE0, 0x03, 0xEF, 0xBE, 0x00, 0x00,
  0x00, 0x00, 0xF8, 0x00, 0x01, 0xFF, 0x80, 0x00, 0x1F, 0xF8, 0x00, 0x01,
  0xFF, 0x80, 0x00, 0x1F, 0xF8, 0x00, 0x01, 0xF0, 0x00, 0x00, 0x00, 0xF8,
  0x00, 0x01, 0xFF, 0x80, 0x00, 0x1F, 0xF8, 0x00, 0x01, 0xFF, 0x80, 0x00,
  0x1F, 0xF8, 0x00, 0x01, 0xF0, 0x00, 0x00, 0x00, 0x03, 0xEF, 0xBF, 0xF0,
  0x3E, 0xFB, 0xFF, 0x03, 0xEF, 0xBF, 0xF0, 0x3E, 0xFB, 0xFF, 0x03, 0xEF,
  0xBF, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xF0, 0x00, 0x00, 0x1F,
  0x00, 0x00, 0x01, 0xF0, 0x00, 0x00, 0x1F, 0x00, 0x00, 0x01, 0xF0, 0x00,
  0x00, 0x00, 0xF8, 0x00, 0x01, 0xFF, 0x80, 0x00, 0x1F, 0xF8, 0x00, 0x01,
  0xFF, 0x80, 0x00, 0x1F, 0xF8, 0x00, 0x01, 0xF0, 0x00, 0x00, 0x00, 0x03,
  0xEF, 0xBE, 0x00, 0x3E, 0xFB, 0xE0, 0x03, 0xEF, 0xBE, 0x00, 0x3E, 0xFB,
  0xE0, 0x03, 0xEF, 0xBE, 0x00, 0xFB, 0xEF, 0xBF, 0xF7, 0xDF, 0x7F, 0xEF,
  0xBE, 0xFF, 0xDF, 0x7D, 0xFF, 0xBE, 0xFB, 0xE0, 0x00, 0x00, 0x01, 0xF0,
  0x00, 0x00, 0x1F, 0x00, 0x00, 0x01, 0xF0, 0x00, 0x00, 0x1F, 0x00, 0x00,
  0x01, 0xF0, 0x00, 0x00, 0x00, 0xFB, 0xE0, 0x01, 0xFF, 0xBE, 0x00, 0x1F,
  0xFB, 0xE0, 0x01, 0xFF, 0xBE, 0x00, 0x1F, 0xFB, 0xE0, 0x01, 0xF0, 0x00,
  0x00, 0x00, 0xFB, 0xE0, 0x3E, 0x0F, 0xBE, 0x03, 0xE0, 0xFB, 0xE0, 0x3E,
  0x0F, 0xBE, 0x03, 0xE0, 0xFB, 0xE0, 0x3E, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x0F, 0x80, 0x00, 0x00, 0xF8, 0x00, 0x00, 0x0F, 0x80, 0x00, 0x00, 0xF8,
  0x00, 0x00, 0x0F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x03, 0xE0, 0x3F, 0xF0,
  0x3E, 0x03, 0xFF, 0x03, 0xE0, 0x3F, 0xF0, 0x3E, 0x03, 0xFF, 0x03, 0xE0,
  0x3F, 0xF0, 0x00, 0x00, 0x00, 0xF8, 0x00, 0x3F, 0xFF, 0x80, 0x03, 0xFF,
  0xF8, 0x00, 0x3F, 0xFF, 0x80, 0x03, 0xFF, 0xF8, 0x00, 0x3F, 0xF0, 0x00,
  0x00, 0x00, 0xF8, 0x00, 0x00, 0x0F, 0x80, 0x00, 0x00, 0xF8, 0x00, 0x00,
  0x0F, 0x80, 0x00, 0x00, 0xF8, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0x80 };

// Glyph, Offset to bitmap, Width, Height, xAdvance, xOffset, yOffset

const gfxglyph_t HotStuff24Glyphs[] PROGMEM = {
  {32,     0,   1,   1,  30,    0,    0 },   // 0x00 ' ' 
  {48,     1,  28,  41,  30,    0,  -40 },   // 0x01 '0' 
  {49,   145,  17,  41,  30,    6,  -40 },   // 0x02 '1' 
  {50,   233,  28,  41,  30,    0,  -40 },   // 0x03 '2' 
  {51,   377,  28,  41,  30,    0,  -40 },   // 0x04 '3' 
  {52,   521,  28,  41,  30,    0,  -40 },   // 0x05 '4' 
  {53,   665,  28,  41,  30,    0,  -40 },   // 0x06 '5' 
  {54,   809,  28,  41,  30,    0,  -40 },   // 0x07 '6' 
  {55,   953,  28,  41,  30,    0,  -40 },   // 0x08 '7' 
  {56,  1097,  28,  41,  30,    0,  -40 },   // 0x09 '8' 
  {57,  1241,  28,  41,  30,    0,  -40 },   // 0x0A '9' 
  {45,  1385,  23,   5,  30,    0,  -22 },   // 0x0B '-' 
  {37,  1400,  28,  41,  29,    0,  -40 },   // 0x0C '%' 
  {46,  1544,   5,   5,  30,   12,   -4 }   // 0x0D '.' 
};

const gfxfont_t HotStuff24 PROGMEM = 
{
  (uint8_t  *)HotStuff24Bitmaps, //< Glyph bitmaps, concatenated 
  (gfxglyph_t *)HotStuff24Glyphs, //< Glyph array
  14,// total glyphs in the string
  41,  // newline distance (y axis)
     0,  // minimum X - left most
     0,  // minimum Y - bottom most (descenders can drive this negative)
    28,  // maximum X - right most
    41}; // maximum Y - top most
// Approx. 1660 bytes -  but your mileage may vary.

#endif