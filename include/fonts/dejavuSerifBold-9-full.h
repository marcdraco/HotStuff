
#ifndef __FIXEDFONTDEJAVUSERIFBOLDTTF9
#define __FIXEDFONTDEJAVUSERIFBOLDTTF9
const uint8_t HotStuff9Bitmaps[] PROGMEM = {
  0x00, 0x03, 0x00, 0x1C, 0x00, 0x78, 0x02, 0xE0, 0x0B, 0xC0, 0x27, 0x01,
  0x1E, 0x04, 0x38, 0x3F, 0xE0, 0x81, 0xC2, 0x07, 0x10, 0x1E, 0xF0, 0xFC,
  0xFF, 0xE0, 0xE1, 0xC3, 0x83, 0x8E, 0x0E, 0x38, 0x38, 0xE1, 0xC3, 0xFE,
  0x0E, 0x0E, 0x38, 0x1C, 0xE0, 0x73, 0x81, 0xCE, 0x0E, 0xFF, 0xF0, 0x0F,
  0xE1, 0xC1, 0xDC, 0x06, 0xC0, 0x1E, 0x00, 0x70, 0x03, 0x80, 0x1C, 0x00,
  0xE0, 0x03, 0x00, 0xDC, 0x0C, 0x70, 0xE0, 0xFC, 0x00, 0xFF, 0xC0, 0xE1,
  0xC3, 0x83, 0x8E, 0x06, 0x38, 0x1C, 0xE0, 0x73, 0x81, 0xCE, 0x07, 0x38,
  0x1C, 0xE0, 0x63, 0x83, 0x8E, 0x1C, 0xFF, 0xC0, 0xFF, 0xF3, 0x81, 0x38,
  0x13, 0x80, 0x38, 0x43, 0x84, 0x3F, 0xC3, 0x84, 0x38, 0x43, 0x80, 0x38,
  0x13, 0x81, 0xFF, 0xF0, 0xFF, 0xF3, 0x81, 0x38, 0x13, 0x80, 0x38, 0x43,
  0x84, 0x3F, 0xC3, 0x84, 0x38, 0x43, 0x80, 0x38, 0x03, 0x80, 0xFE, 0x00,
  0x0F, 0xE1, 0xC1, 0xDC, 0x06, 0xC0, 0x1E, 0x00, 0x70, 0x03, 0x80, 0x1C,
  0x1F, 0xE0, 0x3B, 0x01, 0xDC, 0x0E, 0x70, 0x70, 0xFE, 0x00, 0xFE, 0x7F,
  0x38, 0x1C, 0x38, 0x1C, 0x38, 0x1C, 0x38, 0x1C, 0x38, 0x1C, 0x3F, 0xFC,
  0x38, 0x1C, 0x38, 0x1C, 0x38, 0x1C, 0x38, 0x1C, 0x38, 0x1C, 0xFE, 0x7F,
  0xFE, 0x70, 0xE1, 0xC3, 0x87, 0x0E, 0x1C, 0x38, 0x70, 0xE1, 0xCF, 0xE0,
  0x3F, 0x87, 0x03, 0x81, 0xC0, 0xE0, 0x70, 0x38, 0x1C, 0x0E, 0x07, 0x03,
  0x81, 0xC0, 0xE0, 0x72, 0x39, 0x18, 0x78, 0x00, 0xFE, 0x3E, 0x38, 0x10,
  0x38, 0x60, 0x38, 0xC0, 0x39, 0x80, 0x3B, 0x00, 0x3F, 0x80, 0x3B, 0xC0,
  0x39, 0xE0, 0x38, 0xF0, 0x38, 0x78, 0x38, 0x3C, 0xFE, 0x1F, 0xFE, 0x03,
  0x80, 0x38, 0x03, 0x80, 0x38, 0x03, 0x80, 0x38, 0x03, 0x80, 0x38, 0x03,
  0x80, 0x38, 0x13, 0x81, 0xFF, 0xF0, 0xFC, 0x07, 0xE7, 0xC0, 0xF0, 0xB8,
  0x2E, 0x17, 0x05, 0xC2, 0x71, 0xB8, 0x4E, 0x27, 0x09, 0xEC, 0xE1, 0x1D,
  0x1C, 0x23, 0xE3, 0x84, 0x38, 0x70, 0x87, 0x0E, 0x10, 0x01, 0xCF, 0x80,
  0xFE, 0xF0, 0x1F, 0x38, 0x04, 0x3C, 0x04, 0x3E, 0x04, 0x2F, 0x04, 0x27,
  0x84, 0x23, 0xC4, 0x21, 0xE4, 0x20, 0xF4, 0x20, 0x7C, 0x20, 0x3C, 0x20,
  0x1C, 0xF8, 0x0C, 0x0F, 0xC0, 0xE1, 0xC7, 0x03, 0x98, 0x06, 0xE0, 0x1F,
  0x80, 0x7E, 0x01, 0xF8, 0x07, 0xE0, 0x1D, 0x80, 0x67, 0x03, 0x8E, 0x1C,
  0x0F, 0xC0, 0xFF, 0xE1, 0xC7, 0x8E, 0x0E, 0x70, 0x73, 0x83, 0x9C, 0x1C,
  0xE3, 0xC7, 0xF8, 0x38, 0x01, 0xC0, 0x0E, 0x00, 0x70, 0x0F, 0xE0, 0x00,
  0x0F, 0xC0, 0xE1, 0xC7, 0x03, 0x98, 0x06, 0xE0, 0x1F, 0x80, 0x7E, 0x01,
  0xF8, 0x07, 0xE0, 0x1D, 0x80, 0x67, 0x03, 0x8E, 0x1C, 0x0F, 0xC0, 0x07,
  0x00, 0x0F, 0x00, 0x1C, 0xFF, 0xE0, 0x70, 0xE0, 0xE0, 0xE1, 0xC1, 0xC3,
  0x83, 0x87, 0x07, 0x0E, 0x1C, 0x1F, 0xE0, 0x38, 0xF0, 0x70, 0xE0, 0xE1,
  0xE1, 0xC1, 0xCF, 0xE3, 0xE0, 0x3F, 0x0E, 0x1B, 0x81, 0x70, 0x2F, 0x01,
  0xFE, 0x1F, 0xF0, 0xFF, 0x01, 0xF0, 0x1F, 0x03, 0xF0, 0xE3, 0xF8, 0xFF,
  0xFC, 0x38, 0x61, 0xC2, 0x0E, 0x00, 0x70, 0x03, 0x80, 0x1C, 0x00, 0xE0,
  0x07, 0x00, 0x38, 0x01, 0xC0, 0x0E, 0x01, 0xFC, 0x00, 0xFE, 0x3E, 0x70,
  0x10, 0xE0, 0x21, 0xC0, 0x43, 0x80, 0x87, 0x01, 0x0E, 0x02, 0x1C, 0x04,
  0x38, 0x08, 0x70, 0x10, 0xE0, 0x20, 0xE0, 0x80, 0xFE, 0x00, 0xFC, 0x3D,
  0xE0, 0x23, 0x81, 0x0E, 0x04, 0x1C, 0x30, 0x70, 0x81, 0xE2, 0x03, 0x90,
  0x0E, 0x40, 0x1E, 0x00, 0x78, 0x01, 0xE0, 0x03, 0x00, 0xFC, 0x38, 0x7B,
  0x81, 0xC1, 0x0E, 0x1F, 0x08, 0x70, 0xB8, 0x43, 0x85, 0xC4, 0x0E, 0x6F,
  0x20, 0x72, 0x39, 0x03, 0x91, 0xD8, 0x0E, 0x8F, 0x80, 0x78, 0x3C, 0x03,
  0xC1, 0xE0, 0x0E, 0x0E, 0x00, 0x60, 0x30, 0x00, 0xFC, 0x78, 0xE0, 0x83,
  0xC6, 0x07, 0x90, 0x0E, 0x80, 0x3E, 0x00, 0x78, 0x01, 0xF0, 0x0D, 0xC0,
  0x27, 0x81, 0x0F, 0x08, 0x1C, 0xF8, 0xFC, 0xFC, 0x7B, 0xC1, 0x8E, 0x08,
  0x38, 0x81, 0xEC, 0x07, 0x40, 0x3C, 0x00, 0xE0, 0x07, 0x00, 0x38, 0x01,
  0xC0, 0x0E, 0x01, 0xFC, 0x00, 0xFF, 0xF8, 0x0F, 0x81, 0xE0, 0x3C, 0x03,
  0x80, 0x78, 0x0F, 0x01, 0xE0, 0x1C, 0x03, 0xC0, 0x78, 0x1F, 0x01, 0xFF,
  0xF0, 0x3E, 0x18, 0xE4, 0x38, 0xFE, 0xE3, 0xB8, 0xEE, 0x3B, 0x8E, 0x7F,
  0xC0, 0xF0, 0x0E, 0x01, 0xC0, 0x38, 0x07, 0x00, 0xEF, 0x1E, 0x73, 0x87,
  0x70, 0xEE, 0x1D, 0xC3, 0xB8, 0x77, 0x9D, 0xEF, 0x00, 0x3F, 0x38, 0xF8,
  0x3C, 0x0E, 0x07, 0x03, 0x82, 0xE2, 0x3E, 0x00, 0x03, 0xC0, 0x38, 0x07,
  0x00, 0xE0, 0x1C, 0x7B, 0x9C, 0xF7, 0x0E, 0xE1, 0xDC, 0x3B, 0x87, 0x70,
  0xE7, 0x3C, 0x7B, 0xC0, 0x3F, 0x1C, 0xEE, 0x1B, 0x87, 0xFF, 0xF8, 0x0E,
  0x05, 0xC2, 0x3F, 0x00, 0x1F, 0x71, 0x70, 0x70, 0x70, 0xFC, 0x70, 0x70,
  0x70, 0x70, 0x70, 0x70, 0x70, 0xFC, 0x3D, 0xEE, 0x7B, 0x87, 0x70, 0xEE,
  0x1D, 0xC3, 0xB8, 0x73, 0x9E, 0x3D, 0xC0, 0x39, 0x07, 0x31, 0xC3, 0xF0,
  0xF0, 0x0E, 0x01, 0xC0, 0x38, 0x07, 0x00, 0xEF, 0x1E, 0x73, 0x8E, 0x71,
  0xCE, 0x39, 0xC7, 0x38, 0xE7, 0x1D, 0xF7, 0xC0, 0x73, 0x9C, 0x0F, 0x39,
  0xCE, 0x73, 0x9C, 0xEF, 0x80, 0x1C, 0x71, 0xC0, 0x3C, 0x71, 0xC7, 0x1C,
  0x71, 0xC7, 0x1C, 0x71, 0xE7, 0xF8, 0xF0, 0x07, 0x00, 0x70, 0x07, 0x00,
  0x70, 0x07, 0x1E, 0x71, 0x87, 0x30, 0x76, 0x07, 0xF0, 0x77, 0x87, 0x3C,
  0x71, 0xCF, 0xFF, 0xF3, 0x9C, 0xE7, 0x39, 0xCE, 0x73, 0x9C, 0xE7, 0x7C,
  0xF7, 0x9E, 0x3C, 0xF3, 0x9C, 0x71, 0xCE, 0x38, 0xE7, 0x1C, 0x73, 0x8E,
  0x39, 0xC7, 0x1C, 0xE3, 0x8E, 0xFB, 0xEF, 0x80, 0xF7, 0x8F, 0x39, 0xC7,
  0x38, 0xE7, 0x1C, 0xE3, 0x9C, 0x73, 0x8E, 0xFB, 0xE0, 0x3F, 0x1C, 0xEE,
  0x1F, 0x87, 0xE1, 0xF8, 0x7E, 0x1D, 0xCE, 0x3F, 0x00, 0xF7, 0x8F, 0x39,
  0xC3, 0xB8, 0x77, 0x0E, 0xE1, 0xDC, 0x3B, 0xCE, 0x77, 0x8E, 0x01, 0xC0,
  0x38, 0x0F, 0x80, 0x3D, 0xEE, 0x7B, 0x87, 0x70, 0xEE, 0x1D, 0xC3, 0xB8,
  0x73, 0x9E, 0x3D, 0xC0, 0x38, 0x07, 0x00, 0xE0, 0x3E, 0xF7, 0xBC, 0x5C,
  0x0E, 0x07, 0x03, 0x81, 0xC0, 0xE0, 0xF8, 0x00, 0x3F, 0x70, 0xF8, 0x3F,
  0x8F, 0xF1, 0xFE, 0x0F, 0x87, 0x7E, 0x00, 0x70, 0xE1, 0xC7, 0xE7, 0x0E,
  0x1C, 0x38, 0x70, 0xE5, 0xC9, 0xE0, 0xF3, 0xCE, 0x39, 0xC7, 0x38, 0xE7,
  0x1C, 0xE3, 0x9C, 0x73, 0x9E, 0x3D, 0xE0, 0xF8, 0xEE, 0x09, 0xE2, 0x1C,
  0x43, 0x90, 0x3A, 0x07, 0x40, 0xF0, 0x0E, 0x00, 0xF8, 0xC7, 0x71, 0xC2,
  0x79, 0xE4, 0x39, 0xE4, 0x3A, 0xE4, 0x3E, 0x78, 0x1E, 0x78, 0x1C, 0x78,
  0x0C, 0x30, 0xFD, 0xE7, 0x10, 0xF4, 0x0F, 0x00, 0xE0, 0x3E, 0x0D, 0xE1,
  0x1C, 0xF7, 0xE0, 0xF8, 0xEE, 0x08, 0xE2, 0x1C, 0x43, 0xD0, 0x3A, 0x07,
  0xC0, 0x70, 0x0E, 0x00, 0x80, 0x10, 0x22, 0x07, 0x80, 0xFF, 0xC3, 0xE3,
  0xC3, 0xC1, 0xC1, 0xE1, 0xE3, 0xE1, 0xFF, 0x80, 0x1F, 0x06, 0x31, 0x83,
  0x70, 0x7E, 0x0F, 0xC1, 0xF8, 0x3F, 0x07, 0xE0, 0xFC, 0x1D, 0x83, 0x18,
  0xC1, 0xF0, 0x3C, 0x7C, 0x9C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C,
  0x1C, 0x1C, 0x7F, 0x7F, 0x30, 0xE8, 0x1C, 0x07, 0x01, 0xC0, 0x70, 0x38,
  0x1C, 0x0C, 0x0C, 0x1E, 0x07, 0xFF, 0xFF, 0xC0, 0x7E, 0x31, 0xE8, 0x38,
  0x0E, 0x07, 0x87, 0x80, 0x38, 0x07, 0x01, 0xE0, 0x78, 0x1F, 0x0E, 0x7F,
  0x00, 0x07, 0x80, 0xF0, 0x2E, 0x09, 0xC3, 0x38, 0x47, 0x10, 0xE6, 0x1C,
  0xFF, 0xE0, 0x70, 0x0E, 0x01, 0xC0, 0xFE, 0x7F, 0x9F, 0xE4, 0x01, 0x00,
  0x5E, 0x18, 0xE0, 0x1C, 0x07, 0x01, 0xE0, 0x78, 0x1F, 0x0E, 0x7E, 0x00,
  0x1F, 0x0C, 0x66, 0x0B, 0x80, 0xEF, 0x3C, 0xEE, 0x1F, 0x87, 0xE1, 0xF8,
  0x76, 0x1D, 0xCE, 0x1F, 0x00, 0xFF, 0xFF, 0xF8, 0x0E, 0x02, 0x01, 0x80,
  0xC0, 0x30, 0x18, 0x06, 0x03, 0x00, 0xC0, 0x60, 0x10, 0x00, 0x1F, 0x0E,
  0x39, 0xC7, 0x38, 0xE7, 0x1C, 0x3E, 0x1C, 0x77, 0x07, 0xE0, 0xFC, 0x1F,
  0x83, 0xB8, 0xE3, 0xF8, 0x3E, 0x1C, 0xEE, 0x1B, 0x87, 0xE1, 0xF8, 0x7E,
  0x1D, 0xCF, 0x3D, 0xC0, 0x74, 0x19, 0x8C, 0x3E, 0x00, 0xFF, 0xF0, 0x7C,
  0x18, 0xC6, 0x10, 0xC6, 0x20, 0xC6, 0x60, 0xC6, 0x40, 0xC6, 0x80, 0x7D,
  0xBE, 0x01, 0x63, 0x02, 0x63, 0x06, 0x63, 0x04, 0x63, 0x08, 0x63, 0x18,
  0x3E, 0xFF, 0x80, 0x39, 0xCE, 0xE6, 0x60, 0xFF, 0xF4, 0x92, 0x43, 0xFE,
  0xFF, 0x80, 0x3F, 0xE0, 0xFF, 0xF0, 0xFF, 0x39, 0xCE, 0x73, 0x9C, 0xE7,
  0x39, 0xCE, 0x73, 0x9F, 0xF9, 0xCE, 0x73, 0x9C, 0xE7, 0x39, 0xCE, 0x73,
  0x9C, 0xFF, 0x04, 0x63, 0x1C, 0x63, 0x8E, 0x38, 0xE3, 0x8E, 0x18, 0x70,
  0xC1, 0x81, 0x81, 0x83, 0x0E, 0x18, 0x71, 0xC7, 0x1C, 0x71, 0xC6, 0x38,
  0xC6, 0x20 };

// Glyph, Offset to bitmap, Width, Height, xAdvance, xOffset, yOffset

const gfxglyph_t HotStuff9Glyphs[] PROGMEM = {
  {32,     0,   1,   1,   6,    0,    0 },   // 0x00 ' ' 
  {65,     1,  14,  13,  14,    0,  -12 },   // 0x01 'A' 
  {66,    24,  14,  13,  15,    1,  -12 },   // 0x02 'B' 
  {67,    47,  13,  13,  15,    1,  -12 },   // 0x03 'C' 
  {68,    69,  14,  13,  16,    1,  -12 },   // 0x04 'D' 
  {69,    92,  12,  13,  14,    1,  -12 },   // 0x05 'E' 
  {70,   112,  12,  13,  13,    1,  -12 },   // 0x06 'F' 
  {71,   132,  13,  13,  15,    1,  -12 },   // 0x07 'G' 
  {72,   154,  16,  13,  18,    1,  -12 },   // 0x08 'H' 
  {73,   180,   7,  13,   8,    1,  -12 },   // 0x09 'I' 
  {74,   192,   9,  17,   8,   -1,  -12 },   // 0x0A 'J' 
  {75,   212,  16,  13,  16,    1,  -12 },   // 0x0B 'K' 
  {76,   238,  12,  13,  13,    1,  -12 },   // 0x0C 'L' 
  {77,   258,  19,  13,  21,    1,  -12 },   // 0x0D 'M' 
  {78,   289,  16,  13,  17,    1,  -12 },   // 0x0E 'N' 
  {79,   315,  14,  13,  16,    1,  -12 },   // 0x0F 'O' 
  {80,   338,  13,  13,  14,    1,  -12 },   // 0x10 'P' 
  {81,   360,  14,  16,  16,    1,  -12 },   // 0x11 'Q' 
  {82,   388,  15,  13,  15,    1,  -12 },   // 0x12 'R' 
  {83,   413,  11,  13,  13,    1,  -12 },   // 0x13 'S' 
  {84,   431,  13,  13,  13,    0,  -12 },   // 0x14 'T' 
  {85,   453,  15,  13,  17,    1,  -12 },   // 0x15 'U' 
  {86,   478,  14,  13,  14,    0,  -12 },   // 0x16 'V' 
  {87,   501,  21,  13,  20,    0,  -12 },   // 0x17 'W' 
  {88,   536,  14,  13,  14,    0,  -12 },   // 0x18 'X' 
  {89,   559,  13,  13,  13,    0,  -12 },   // 0x19 'Y' 
  {90,   581,  12,  13,  13,    1,  -12 },   // 0x1A 'Z' 
  {97,   601,  10,   9,  12,    1,   -8 },   // 0x1B 'a' 
  {98,   613,  11,  14,  13,    1,  -13 },   // 0x1C 'b' 
  {99,   633,   9,   9,  11,    1,   -8 },   // 0x1D 'c' 
  {100,   644,  11,  14,  13,    1,  -13 },   // 0x1E 'd' 
  {101,   664,  10,   9,  12,    1,   -8 },   // 0x1F 'e' 
  {102,   676,   8,  14,   8,    1,  -13 },   // 0x20 'f' 
  {103,   690,  11,  13,  13,    1,   -8 },   // 0x21 'g' 
  {104,   708,  11,  14,  13,    1,  -13 },   // 0x22 'h' 
  {105,   728,   5,  13,   7,    1,  -12 },   // 0x23 'i' 
  {106,   737,   6,  17,   7,   -1,  -12 },   // 0x24 'j' 
  {107,   750,  12,  14,  12,    1,  -13 },   // 0x25 'k' 
  {108,   771,   5,  14,   7,    1,  -13 },   // 0x26 'l' 
  {109,   780,  17,   9,  19,    1,   -8 },   // 0x27 'm' 
  {110,   800,  11,   9,  13,    1,   -8 },   // 0x28 'n' 
  {111,   813,  10,   9,  12,    1,   -8 },   // 0x29 'o' 
  {112,   825,  11,  13,  13,    1,   -8 },   // 0x2A 'p' 
  {113,   843,  11,  13,  13,    1,   -8 },   // 0x2B 'q' 
  {114,   861,   9,   9,   9,    1,   -8 },   // 0x2C 'r' 
  {115,   872,   9,   9,  11,    1,   -8 },   // 0x2D 's' 
  {116,   883,   7,  12,   8,    1,  -11 },   // 0x2E 't' 
  {117,   894,  11,   9,  13,    1,   -8 },   // 0x2F 'u' 
  {118,   907,  11,   9,  10,    0,   -8 },   // 0x30 'v' 
  {119,   920,  16,   9,  16,    0,   -8 },   // 0x31 'w' 
  {120,   938,  11,   9,  11,    0,   -8 },   // 0x32 'x' 
  {121,   951,  11,  13,  10,    0,   -8 },   // 0x33 'y' 
  {122,   969,   9,   9,  10,    1,   -8 },   // 0x34 'z' 
  {48,   980,  11,  13,  13,    1,  -12 },   // 0x35 '0' 
  {49,   998,   8,  13,  13,    2,  -12 },   // 0x36 '1' 
  {50,  1011,  10,  13,  13,    1,  -12 },   // 0x37 '2' 
  {51,  1028,  10,  13,  13,    1,  -12 },   // 0x38 '3' 
  {52,  1045,  11,  13,  13,    1,  -12 },   // 0x39 '4' 
  {53,  1063,  10,  13,  13,    1,  -12 },   // 0x3A '5' 
  {54,  1080,  10,  13,  13,    1,  -12 },   // 0x3B '6' 
  {55,  1097,  10,  13,  13,    1,  -12 },   // 0x3C '7' 
  {56,  1114,  11,  13,  13,    1,  -12 },   // 0x3D '8' 
  {57,  1132,  10,  13,  13,    1,  -12 },   // 0x3E '9' 
  {45,  1149,   6,   2,   7,    1,   -5 },   // 0x3F '-' 
  {37,  1151,  16,  13,  17,    0,  -12 },   // 0x40 '%' 
  {46,  1177,   3,   3,   5,    1,   -2 },   // 0x41 '.' 
  {44,  1179,   5,   6,   6,    0,   -2 },   // 0x42 ',' 
  {33,  1183,   3,  13,   8,    2,  -12 },   // 0x43 '!' 
  {58,  1188,   3,   9,   7,    2,   -8 },   // 0x44 ':' 
  {45,  1192,   6,   2,   7,    1,   -5 },   // 0x45 '-' 
  {91,  1194,   5,  16,   9,    2,  -13 },   // 0x46 '[' 
  {93,  1204,   5,  16,   9,    1,  -13 },   // 0x47 ']' 
  {40,  1214,   6,  16,   9,    2,  -13 },   // 0x48 '(' 
  {41,  1226,   6,  16,   9,    1,  -13 }   // 0x49 ')' 
};

const gfxfont_t HotStuff9 PROGMEM = 
{
  (uint8_t  *)HotStuff9Bitmaps, //< Glyph bitmaps, concatenated 
  (gfxglyph_t *)HotStuff9Glyphs, //< Glyph array
  74,// total glyphs in the string
  17,  // newline distance (y axis)
    -1,  // minimum X - left most
    -4,  // minimum Y - bottom most (descenders can drive this negative)
    21,  // maximum X - right most
    14}; // maximum Y - top most
// Approx. 1770 bytes -  but your mileage may vary.

#endif