
#ifndef __FIXEDFONTPINBALLTTF8
#define __FIXEDFONTPINBALLTTF8
const uint8_t HotStuff8Bitmaps[] PROGMEM = {
  0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xA1, 0x02, 0x00, 0x20, 0x00,
  0x00, 0x00, 0x05, 0x81, 0xA1, 0x06, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x20, 0x04, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0xA1, 0x06,
  0x00, 0x20, 0x00, 0x00, 0x00, 0x07, 0x80, 0x20, 0x00, 0x08, 0x20, 0x00,
  0x00, 0x00, 0x07, 0x80, 0x20, 0x00, 0x00, 0x20, 0x00, 0x00, 0x20, 0x00,
  0x03, 0xA3, 0x06, 0x08, 0x00, 0x00, 0x00, 0x00, 0x07, 0x80, 0xA1, 0x02,
  0x00, 0x20, 0x00, 0x00, 0xC1, 0x83, 0x06, 0x0C, 0x18, 0x08, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xA1, 0x06, 0x08, 0x00, 0x00, 0x06, 0x30, 0xC3,
  0x16, 0x0C, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x08,
  0x00, 0x00, 0x00, 0xE3, 0x83, 0x00, 0xA1, 0x02, 0x00, 0x20, 0x00, 0x00,
  0xC0, 0x80, 0x80, 0xA1, 0x02, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xA1, 0x06, 0x08, 0x20, 0x00, 0x00, 0x00, 0x05, 0x00, 0x20, 0x00, 0x00,
  0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0xA7, 0x06, 0x08, 0x20, 0x00, 0x00,
  0x00, 0x05, 0x02, 0x22, 0x00, 0x00, 0x20, 0x00, 0x00, 0x02, 0x07, 0x80,
  0xA1, 0x06, 0x08, 0x20, 0x00, 0x00, 0xC1, 0x83, 0x06, 0x0C, 0x18, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0xA1, 0x06, 0x08, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0xB3, 0x1C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0xAD, 0x1E,
  0x08, 0x00, 0x00, 0x00, 0x03, 0x83, 0x0F, 0x33, 0x26, 0x00, 0x00, 0x00,
  0x00, 0x02, 0x07, 0x86, 0x0C, 0x18, 0x20, 0x00, 0x00, 0x20, 0x83, 0x0C,
  0x30, 0x00, 0x08, 0xFF, 0xF0, 0x06, 0x00, 0xC0, 0x18, 0x03, 0x00, 0x60,
  0x0C, 0x01, 0x80, 0x30, 0x06, 0x00, 0xFF, 0xF0, 0xFF, 0xF0, 0x06, 0x00,
  0xC0, 0x18, 0x03, 0x00, 0x60, 0x0C, 0x01, 0x80, 0x30, 0x06, 0x00, 0xFF,
  0xF0, 0xFF, 0xF0, 0x06, 0x00, 0xC0, 0x18, 0x03, 0x00, 0x60, 0x0C, 0x01,
  0x80, 0x30, 0x06, 0x00, 0xFF, 0xF0, 0xFF, 0xF0, 0x06, 0x00, 0xC0, 0x18,
  0x03, 0x00, 0x60, 0x0C, 0x01, 0x80, 0x30, 0x06, 0x00, 0xFF, 0xF0, 0xFF,
  0xF0, 0x06, 0x00, 0xC0, 0x18, 0x03, 0x00, 0x60, 0x0C, 0x01, 0x80, 0x30,
  0x06, 0x00, 0xFF, 0xF0, 0xFF, 0xF0, 0x06, 0x00, 0xC0, 0x18, 0x03, 0x00,
  0x60, 0x0C, 0x01, 0x80, 0x30, 0x06, 0x00, 0xFF, 0xF0, 0xFF, 0xF0, 0x06,
  0x00, 0xC0, 0x18, 0x03, 0x00, 0x60, 0x0C, 0x01, 0x80, 0x30, 0x06, 0x00,
  0xFF, 0xF0, 0xFF, 0xF0, 0x06, 0x00, 0xC0, 0x18, 0x03, 0x00, 0x60, 0x0C,
  0x01, 0x80, 0x30, 0x06, 0x00, 0xFF, 0xF0, 0xFF, 0xF0, 0x06, 0x00, 0xC0,
  0x18, 0x03, 0x00, 0x60, 0x0C, 0x01, 0x80, 0x30, 0x06, 0x00, 0xFF, 0xF0,
  0xFF, 0xF0, 0x06, 0x00, 0xC0, 0x18, 0x03, 0x00, 0x60, 0x0C, 0x01, 0x80,
  0x30, 0x06, 0x00, 0xFF, 0xF0, 0xFF, 0xF0, 0x06, 0x00, 0xC0, 0x18, 0x03,
  0x00, 0x60, 0x0C, 0x01, 0x80, 0x30, 0x06, 0x00, 0xFF, 0xF0, 0xFF, 0xF0,
  0x06, 0x00, 0xC0, 0x18, 0x03, 0x00, 0x60, 0x0C, 0x01, 0x80, 0x30, 0x06,
  0x00, 0xFF, 0xF0, 0xFF, 0xF0, 0x06, 0x00, 0xC0, 0x18, 0x03, 0x00, 0x60,
  0x0C, 0x01, 0x80, 0x30, 0x06, 0x00, 0xFF, 0xF0, 0xFF, 0xF0, 0x06, 0x00,
  0xC0, 0x18, 0x03, 0x00, 0x60, 0x0C, 0x01, 0x80, 0x30, 0x06, 0x00, 0xFF,
  0xF0, 0xFF, 0xF0, 0x06, 0x00, 0xC0, 0x18, 0x03, 0x00, 0x60, 0x0C, 0x01,
  0x80, 0x30, 0x06, 0x00, 0xFF, 0xF0, 0xFF, 0xF0, 0x06, 0x00, 0xC0, 0x18,
  0x03, 0x00, 0x60, 0x0C, 0x01, 0x80, 0x30, 0x06, 0x00, 0xFF, 0xF0, 0xFF,
  0xF0, 0x06, 0x00, 0xC0, 0x18, 0x03, 0x00, 0x60, 0x0C, 0x01, 0x80, 0x30,
  0x06, 0x00, 0xFF, 0xF0, 0xFF, 0xF0, 0x06, 0x00, 0xC0, 0x18, 0x03, 0x00,
  0x60, 0x0C, 0x01, 0x80, 0x30, 0x06, 0x00, 0xFF, 0xF0, 0xFF, 0xF0, 0x06,
  0x00, 0xC0, 0x18, 0x03, 0x00, 0x60, 0x0C, 0x01, 0x80, 0x30, 0x06, 0x00,
  0xFF, 0xF0, 0xFF, 0xF0, 0x06, 0x00, 0xC0, 0x18, 0x03, 0x00, 0x60, 0x0C,
  0x01, 0x80, 0x30, 0x06, 0x00, 0xFF, 0xF0, 0xFF, 0xF0, 0x06, 0x00, 0xC0,
  0x18, 0x03, 0x00, 0x60, 0x0C, 0x01, 0x80, 0x30, 0x06, 0x00, 0xFF, 0xF0,
  0xFF, 0xF0, 0x06, 0x00, 0xC0, 0x18, 0x03, 0x00, 0x60, 0x0C, 0x01, 0x80,
  0x30, 0x06, 0x00, 0xFF, 0xF0, 0xFF, 0xF0, 0x06, 0x00, 0xC0, 0x18, 0x03,
  0x00, 0x60, 0x0C, 0x01, 0x80, 0x30, 0x06, 0x00, 0xFF, 0xF0, 0xFF, 0xF0,
  0x06, 0x00, 0xC0, 0x18, 0x03, 0x00, 0x60, 0x0C, 0x01, 0x80, 0x30, 0x06,
  0x00, 0xFF, 0xF0, 0xFF, 0xF0, 0x06, 0x00, 0xC0, 0x18, 0x03, 0x00, 0x60,
  0x0C, 0x01, 0x80, 0x30, 0x06, 0x00, 0xFF, 0xF0, 0xFF, 0xF0, 0x06, 0x00,
  0xC0, 0x18, 0x03, 0x00, 0x60, 0x0C, 0x01, 0x80, 0x30, 0x06, 0x00, 0xFF,
  0xF0, 0x20, 0x00, 0x00, 0x01, 0x83, 0x00, 0xA1, 0x06, 0x08, 0x20, 0x03,
  0x00, 0xC1, 0x83, 0x06, 0x0C, 0x18, 0x08, 0x40, 0x00, 0x02, 0x00, 0x63,
  0x18, 0x40, 0x20, 0x42, 0x00, 0x00, 0x00, 0xE0, 0x41, 0x0C, 0x20, 0x00,
  0x80, 0x00, 0x20, 0x07, 0x81, 0x83, 0x06, 0x08, 0x20, 0x80, 0x00, 0x03,
  0x80, 0x80, 0x81, 0x06, 0x08, 0x20, 0x00, 0x80, 0x00, 0x07, 0x00, 0xA1,
  0x1E, 0x08, 0x42, 0x0C, 0x02, 0x00, 0x61, 0x0C, 0x61, 0x80, 0x20, 0x00,
  0x00, 0x00, 0x01, 0x80, 0xA1, 0x06, 0x08, 0x20, 0x00, 0x00, 0x00, 0x05,
  0x00, 0x81, 0x06, 0x08, 0xE8, 0x20, 0x80, 0x00, 0x20, 0x83, 0x0C, 0x33,
  0x04, 0x08, 0x80, 0xE0, 0x00, 0x06, 0x66, 0x00, 0x60, 0xF3, 0xC0, 0x44,
  0x10, 0x04, 0x21, 0x18, 0x00, 0x40, 0x80, 0x00, 0x20, 0x08, 0x63, 0x18,
  0x80, 0x00, 0x00, 0x00, 0x4C, 0x42, 0x00, 0x01, 0x33, 0x33, 0x64 };

// Glyph, Offset to bitmap, Width, Height, xAdvance, xOffset, yOffset

const gfxglyph_t HotStuff8Glyphs[] PROGMEM = {
  {32,     0,   1,   1,   9,    0,    0 },   // 0x00 ' ' 
  {65,     1,   7,  10,   9,    0,   -9 },   // 0x01 'A' 
  {66,    10,   7,  10,   9,    0,   -9 },   // 0x02 'B' 
  {67,    19,   7,  10,   9,    0,   -9 },   // 0x03 'C' 
  {68,    28,   7,  10,   9,    0,   -9 },   // 0x04 'D' 
  {69,    37,   7,  10,   9,    0,   -9 },   // 0x05 'E' 
  {70,    46,   7,  10,   9,    0,   -9 },   // 0x06 'F' 
  {71,    55,   7,  10,   9,    0,   -9 },   // 0x07 'G' 
  {72,    64,   7,  10,   9,    0,   -9 },   // 0x08 'H' 
  {73,    73,   7,  10,   9,    0,   -9 },   // 0x09 'I' 
  {74,    82,   7,  10,   9,    0,   -9 },   // 0x0A 'J' 
  {75,    91,   6,  10,   9,    0,   -9 },   // 0x0B 'K' 
  {76,    99,   7,  10,   9,    0,   -9 },   // 0x0C 'L' 
  {77,   108,   7,  10,   9,    0,   -9 },   // 0x0D 'M' 
  {78,   117,   7,  10,   9,    0,   -9 },   // 0x0E 'N' 
  {79,   126,   7,  10,   9,    0,   -9 },   // 0x0F 'O' 
  {80,   135,   7,  10,   9,    0,   -9 },   // 0x10 'P' 
  {81,   144,   7,  10,   9,    0,   -9 },   // 0x11 'Q' 
  {82,   153,   7,  10,   9,    0,   -9 },   // 0x12 'R' 
  {83,   162,   7,  10,   9,    0,   -9 },   // 0x13 'S' 
  {84,   171,   7,   9,   9,    0,   -9 },   // 0x14 'T' 
  {85,   179,   7,  10,   9,    0,   -9 },   // 0x15 'U' 
  {86,   188,   7,   9,   9,    0,   -9 },   // 0x16 'V' 
  {87,   196,   7,  10,   9,    0,   -9 },   // 0x17 'W' 
  {88,   205,   7,  10,   9,    0,   -9 },   // 0x18 'X' 
  {89,   214,   7,   9,   9,    0,   -9 },   // 0x19 'Y' 
  {90,   222,   7,  10,   9,    0,   -9 },   // 0x1A 'Z' 
  {97,   231,  11,  12,  13,    1,  -12 },   // 0x1B 'a' 
  {98,   248,  11,  12,  13,    1,  -12 },   // 0x1C 'b' 
  {99,   265,  11,  12,  13,    1,  -12 },   // 0x1D 'c' 
  {100,   282,  11,  12,  13,    1,  -12 },   // 0x1E 'd' 
  {101,   299,  11,  12,  13,    1,  -12 },   // 0x1F 'e' 
  {102,   316,  11,  12,  13,    1,  -12 },   // 0x20 'f' 
  {103,   333,  11,  12,  13,    1,  -12 },   // 0x21 'g' 
  {104,   350,  11,  12,  13,    1,  -12 },   // 0x22 'h' 
  {105,   367,  11,  12,  13,    1,  -12 },   // 0x23 'i' 
  {106,   384,  11,  12,  13,    1,  -12 },   // 0x24 'j' 
  {107,   401,  11,  12,  13,    1,  -12 },   // 0x25 'k' 
  {108,   418,  11,  12,  13,    1,  -12 },   // 0x26 'l' 
  {109,   435,  11,  12,  13,    1,  -12 },   // 0x27 'm' 
  {110,   452,  11,  12,  13,    1,  -12 },   // 0x28 'n' 
  {111,   469,  11,  12,  13,    1,  -12 },   // 0x29 'o' 
  {112,   486,  11,  12,  13,    1,  -12 },   // 0x2A 'p' 
  {113,   503,  11,  12,  13,    1,  -12 },   // 0x2B 'q' 
  {114,   520,  11,  12,  13,    1,  -12 },   // 0x2C 'r' 
  {115,   537,  11,  12,  13,    1,  -12 },   // 0x2D 's' 
  {116,   554,  11,  12,  13,    1,  -12 },   // 0x2E 't' 
  {117,   571,  11,  12,  13,    1,  -12 },   // 0x2F 'u' 
  {118,   588,  11,  12,  13,    1,  -12 },   // 0x30 'v' 
  {119,   605,  11,  12,  13,    1,  -12 },   // 0x31 'w' 
  {120,   622,  11,  12,  13,    1,  -12 },   // 0x32 'x' 
  {121,   639,  11,  12,  13,    1,  -12 },   // 0x33 'y' 
  {122,   656,  11,  12,  13,    1,  -12 },   // 0x34 'z' 
  {48,   673,   7,  10,   9,    0,   -9 },   // 0x35 '0' 
  {49,   682,   7,  10,   9,    0,   -9 },   // 0x36 '1' 
  {50,   691,   6,  10,   9,    1,   -9 },   // 0x37 '2' 
  {51,   699,   6,  10,   9,    1,   -9 },   // 0x38 '3' 
  {52,   707,   7,  10,   9,    0,   -9 },   // 0x39 '4' 
  {53,   716,   7,  10,   9,    0,   -9 },   // 0x3A '5' 
  {54,   725,   7,  10,   9,    0,   -9 },   // 0x3B '6' 
  {55,   734,   6,  10,   9,    1,   -9 },   // 0x3C '7' 
  {56,   742,   7,  10,   9,    0,   -9 },   // 0x3D '8' 
  {57,   751,   7,  10,   9,    0,   -9 },   // 0x3E '9' 
  {45,   760,   5,   1,   9,    1,   -4 },   // 0x3F '-' 
  {37,   761,   7,  10,   9,    0,   -9 },   // 0x40 '%' 
  {46,   770,   1,   1,   9,    3,   -1 },   // 0x41 '.' 
  {44,   771,   1,   3,   9,    3,   -3 },   // 0x42 ',' 
  {33,   772,   4,   9,   9,    2,   -9 },   // 0x43 '!' 
  {58,   777,   2,   5,   9,    3,   -6 },   // 0x44 ':' 
  {91,   779,   5,  10,   9,    1,   -9 },   // 0x45 '[' 
  {93,   786,   5,  10,   9,    2,   -9 },   // 0x46 ']' 
  {40,   793,   4,  10,   9,    1,   -9 },   // 0x47 '(' 
  {41,   798,   4,  10,   9,    2,   -9 }   // 0x48 ')' 
};

const gfxfont_t HotStuff8 PROGMEM = 
{
  (uint8_t  *)HotStuff8Bitmaps, //< Glyph bitmaps, concatenated 
  (gfxglyph_t *)HotStuff8Glyphs, //< Glyph array
  73,// total glyphs in the string
  12,  // newline distance (y axis)
     0,  // minimum X - left most
     0,  // minimum Y - bottom most (descenders can drive this negative)
    12,  // maximum X - right most
    13}; // maximum Y - top most
// Approx. 1328 bytes -  but your mileage may vary.

#endif