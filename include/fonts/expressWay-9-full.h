
#ifndef __FIXEDFONTEXPRESSWAYRGTTF9
#define __FIXEDFONTEXPRESSWAYRGTTF9
const uint8_t HotStuff9Bitmaps[] PROGMEM = {
  0x00, 0x06, 0x00, 0xF0, 0x0F, 0x00, 0xF0, 0x19, 0x81, 0x98, 0x10, 0x83,
  0x0C, 0x3F, 0xC3, 0xFC, 0x60, 0x66, 0x06, 0xC0, 0x30, 0xFF, 0x3F, 0xEC,
  0x0B, 0x03, 0xC0, 0xBF, 0xEF, 0xFB, 0x03, 0xC0, 0xF0, 0x3C, 0x0F, 0xFE,
  0xFF, 0x00, 0x1F, 0x0F, 0xE6, 0x0D, 0x82, 0xC0, 0x30, 0x0C, 0x03, 0x00,
  0xC0, 0x18, 0x26, 0x0C, 0xFE, 0x1F, 0x00, 0xFE, 0x1F, 0xE3, 0x06, 0x60,
  0x6C, 0x0D, 0x80, 0xF0, 0x1E, 0x02, 0xC0, 0xD8, 0x1B, 0x06, 0x7F, 0x8F,
  0xE0, 0xFF, 0xFF, 0xC0, 0xC0, 0xC0, 0xFE, 0xFE, 0xC0, 0xC0, 0xC0, 0xC0,
  0xFF, 0xFF, 0xFF, 0xFF, 0xC0, 0xC0, 0xC0, 0xC0, 0xFE, 0xFE, 0xC0, 0xC0,
  0xC0, 0xC0, 0xC0, 0x1F, 0x07, 0xF1, 0x83, 0x30, 0x2C, 0x01, 0x80, 0x30,
  0xFE, 0x1F, 0xC0, 0x6C, 0x09, 0x83, 0x1F, 0xC1, 0xF0, 0xC0, 0xF0, 0x3C,
  0x0F, 0x03, 0xC0, 0xFF, 0xFF, 0xFF, 0x03, 0xC0, 0xF0, 0x3C, 0x0F, 0x03,
  0xC0, 0xC0, 0xFF, 0xFF, 0xFF, 0xC0, 0x01, 0x80, 0xC0, 0x60, 0x30, 0x18,
  0x0C, 0x06, 0x03, 0x01, 0xA0, 0xF0, 0x6F, 0xE3, 0xE0, 0xC1, 0xF0, 0xCC,
  0x33, 0x18, 0xCC, 0x37, 0x0F, 0xC3, 0xD8, 0xE7, 0x30, 0xCC, 0x1B, 0x06,
  0xC0, 0xC0, 0xC0, 0x60, 0x30, 0x18, 0x0C, 0x06, 0x03, 0x01, 0x80, 0xC0,
  0x60, 0x30, 0x1F, 0xFF, 0xF8, 0xE0, 0x3E, 0x03, 0xE0, 0x3F, 0x07, 0xF0,
  0x7D, 0x8D, 0xD8, 0xDC, 0xD9, 0xCD, 0x9C, 0xD1, 0xC7, 0x1C, 0x61, 0xC2,
  0x10, 0xE0, 0xF8, 0x3F, 0x0F, 0xC3, 0xD8, 0xF3, 0x3C, 0xCF, 0x1B, 0xC7,
  0xF0, 0xFC, 0x1F, 0x07, 0xC0, 0xC0, 0x1F, 0x07, 0xF1, 0x83, 0x30, 0x2C,
  0x07, 0x80, 0xF0, 0x1E, 0x03, 0xC0, 0x6C, 0x09, 0x83, 0x1F, 0xC1, 0xF0,
  0xFF, 0x3F, 0xEC, 0x0F, 0x03, 0xC0, 0xF0, 0x3F, 0xFB, 0xFC, 0xC0, 0x30,
  0x0C, 0x03, 0x00, 0xC0, 0x00, 0x1F, 0x07, 0xF1, 0x83, 0x30, 0x2C, 0x07,
  0x80, 0xF0, 0x1E, 0x03, 0xC6, 0x6C, 0x6D, 0x87, 0x1F, 0xC1, 0xFC, 0x00,
  0x80, 0xFF, 0x3F, 0xEC, 0x0F, 0x03, 0xC0, 0xF0, 0x3F, 0xFB, 0xFC, 0xC3,
  0x30, 0xCC, 0x1B, 0x06, 0xC0, 0xC0, 0x3E, 0x1F, 0xE4, 0x1B, 0x00, 0x60,
  0x1F, 0x01, 0xF8, 0x06, 0x00, 0xC0, 0x3C, 0x0F, 0xFE, 0x3E, 0x00, 0xFF,
  0xFF, 0xF0, 0xC0, 0x30, 0x0C, 0x03, 0x00, 0xC0, 0x30, 0x0C, 0x03, 0x00,
  0xC0, 0x30, 0x0C, 0x00, 0xC0, 0xF0, 0x3C, 0x0F, 0x03, 0xC0, 0xF0, 0x3C,
  0x0F, 0x03, 0xC0, 0xF0, 0x36, 0x19, 0xFE, 0x1E, 0x00, 0xC0, 0x36, 0x06,
  0x60, 0x62, 0x04, 0x30, 0xC3, 0x0C, 0x19, 0x81, 0x98, 0x19, 0x80, 0xF0,
  0x0F, 0x00, 0xF0, 0x06, 0x00, 0xC1, 0x83, 0x61, 0x86, 0x63, 0xC6, 0x63,
  0xC6, 0x63, 0xC6, 0x32, 0x4C, 0x36, 0x6C, 0x36, 0x6C, 0x34, 0x6C, 0x1C,
  0x38, 0x1C, 0x38, 0x1C, 0x38, 0x18, 0x18, 0x60, 0x66, 0x18, 0xC6, 0x0C,
  0xC0, 0xF0, 0x1C, 0x03, 0x80, 0x78, 0x1B, 0x03, 0x30, 0xC3, 0x30, 0x6E,
  0x06, 0xE0, 0x6C, 0x0C, 0xC3, 0x18, 0xC1, 0x98, 0x36, 0x03, 0xC0, 0x70,
  0x06, 0x00, 0xC0, 0x18, 0x03, 0x00, 0x60, 0xFF, 0xFF, 0xC0, 0xC0, 0xC0,
  0x60, 0x60, 0x60, 0x30, 0x30, 0x30, 0x18, 0x1F, 0xFF, 0xF8, 0x3C, 0x7E,
  0x03, 0x1B, 0x7F, 0xC3, 0xC3, 0xC3, 0xFF, 0x7F, 0x40, 0xC0, 0xC0, 0xC0,
  0xDE, 0xFF, 0xE3, 0xC1, 0xC1, 0xC1, 0xC1, 0xC3, 0xFF, 0xDE, 0x3C, 0x7F,
  0xC2, 0xC0, 0xC0, 0xC0, 0xC0, 0xC2, 0x7F, 0x3C, 0x01, 0x03, 0x03, 0x03,
  0x3B, 0x7F, 0xC3, 0xC3, 0xC3, 0xC3, 0xC3, 0xC3, 0x7F, 0x3D, 0x3C, 0x7E,
  0xC3, 0xC3, 0xFF, 0xFF, 0xC0, 0xC2, 0x7E, 0x3C, 0x39, 0xD8, 0xCF, 0xFD,
  0x8C, 0x63, 0x18, 0xC6, 0x30, 0x3D, 0x7F, 0xC3, 0xC1, 0xC1, 0xC1, 0xC1,
  0xC3, 0x7F, 0x3D, 0x03, 0x06, 0x1E, 0x18, 0x40, 0xC0, 0xC0, 0xC0, 0xDE,
  0xFF, 0xE3, 0xC1, 0xC1, 0xC1, 0xC1, 0xC1, 0xC1, 0xC1, 0xE0, 0xFF, 0xFF,
  0xF0, 0x32, 0x00, 0x33, 0x33, 0x33, 0x33, 0x33, 0x33, 0xFE, 0x40, 0x60,
  0x30, 0x18, 0x0C, 0x36, 0x33, 0x31, 0xB0, 0xF8, 0x7E, 0x3B, 0x18, 0xCC,
  0x36, 0x1C, 0x7F, 0xFF, 0xFF, 0xF0, 0xDE, 0x7B, 0xFF, 0xEC, 0x30, 0xF0,
  0xC3, 0xC3, 0x0F, 0x0C, 0x3C, 0x30, 0xF0, 0xC3, 0xC3, 0x0F, 0x0C, 0x30,
  0xDE, 0xFF, 0xE3, 0xC1, 0xC1, 0xC1, 0xC1, 0xC1, 0xC1, 0xC1, 0x3C, 0x7E,
  0xC3, 0xC3, 0xC3, 0xC3, 0xC3, 0xC3, 0x7E, 0x3C, 0xDE, 0xFF, 0xE3, 0xC1,
  0xC1, 0xC1, 0xC1, 0xC3, 0xFF, 0xDE, 0xC0, 0xC0, 0xC0, 0x80, 0x39, 0x7F,
  0xC3, 0xC3, 0xC3, 0xC3, 0xC3, 0xC3, 0x7F, 0x3F, 0x03, 0x03, 0x03, 0xDF,
  0xFE, 0x30, 0xC3, 0x0C, 0x30, 0xC3, 0x00, 0x3E, 0x7F, 0x61, 0x60, 0x3C,
  0x0F, 0x03, 0x43, 0xFF, 0x3E, 0x61, 0x86, 0x3F, 0xFD, 0x86, 0x18, 0x61,
  0x86, 0x0F, 0x38, 0xC3, 0xC3, 0xC3, 0xC3, 0xC3, 0xC3, 0xC3, 0xC3, 0x7F,
  0x3D, 0xC1, 0xB0, 0xD8, 0x44, 0x63, 0x31, 0x90, 0x58, 0x38, 0x1C, 0x06,
  0x00, 0xC6, 0x14, 0x63, 0x47, 0x36, 0x72, 0x6D, 0x22, 0x9E, 0x29, 0xE3,
  0x8C, 0x38, 0xC1, 0x0C, 0x61, 0x8C, 0xC1, 0x20, 0x78, 0x0C, 0x07, 0x81,
  0xE0, 0xCC, 0x61, 0xB0, 0x70, 0xC1, 0xB0, 0xD8, 0x44, 0x63, 0x31, 0x90,
  0x58, 0x3C, 0x1C, 0x06, 0x02, 0x03, 0x01, 0x81, 0x80, 0xFE, 0xFE, 0x06,
  0x0C, 0x18, 0x30, 0x30, 0x60, 0xFF, 0xFF, 0x1E, 0x1F, 0x98, 0x48, 0x3C,
  0x1E, 0x07, 0x03, 0x81, 0xC1, 0xA0, 0xD8, 0x47, 0xE1, 0xE0, 0x7F, 0xB6,
  0xDB, 0x6D, 0xB6, 0x3E, 0x7F, 0xC3, 0x01, 0x01, 0x03, 0x0E, 0x38, 0x60,
  0xC0, 0xC0, 0xFF, 0xFF, 0x3E, 0x3F, 0x90, 0xC0, 0x60, 0x30, 0xF0, 0x7C,
  0x03, 0x01, 0xA0, 0xF0, 0x4F, 0xE3, 0xE0, 0x03, 0x03, 0x83, 0xC1, 0xE1,
  0xB1, 0x99, 0x8C, 0xC6, 0xC3, 0x7F, 0xFF, 0xE0, 0x60, 0x30, 0x7F, 0x3F,
  0x90, 0x08, 0x05, 0xE7, 0xFB, 0x06, 0x03, 0x01, 0x80, 0xF0, 0x6F, 0xE3,
  0xE0, 0x0E, 0x0F, 0x0C, 0x0C, 0x04, 0xC7, 0xFB, 0x87, 0x83, 0xC1, 0xE0,
  0xD8, 0x6F, 0xE1, 0xE0, 0xFF, 0xFF, 0x06, 0x04, 0x0C, 0x08, 0x18, 0x18,
  0x10, 0x30, 0x30, 0x30, 0x30, 0x3C, 0x3F, 0x30, 0xD8, 0x64, 0x33, 0xF3,
  0xFD, 0x86, 0x81, 0xC0, 0xF0, 0xDF, 0xE3, 0xC0, 0x3E, 0x3F, 0xB0, 0xD8,
  0x3C, 0x1E, 0x0F, 0x0E, 0xFF, 0x19, 0x01, 0x81, 0x87, 0x83, 0x80, 0xFF,
  0xC0, 0x70, 0x0F, 0x0B, 0x23, 0x44, 0x48, 0x91, 0x92, 0x1E, 0x83, 0xBE,
  0x05, 0x21, 0x44, 0x28, 0x89, 0x13, 0x1E, 0x43, 0x80, 0xB0, 0x6D, 0x64,
  0xFF, 0xFF, 0xC3, 0xC0, 0xE0, 0x0E, 0x00, 0xFF, 0xC0, 0xFF, 0x88, 0x88,
  0x88, 0x88, 0x88, 0x88, 0x88, 0x88, 0x8F, 0xF0, 0xFF, 0x33, 0x33, 0x33,
  0x33, 0x33, 0x33, 0x33, 0x33, 0x3F, 0xF0, 0x13, 0x26, 0x44, 0xC8, 0x88,
  0x88, 0x88, 0x8C, 0x44, 0x22, 0x10, 0x88, 0x44, 0x22, 0x23, 0x11, 0x11,
  0x11, 0x32, 0x26, 0x4C, 0x80 };

// Glyph, Offset to bitmap, Width, Height, xAdvance, xOffset, yOffset

const gfxglyph_t HotStuff9Glyphs[] PROGMEM = {
  {32,     0,   1,   1,   5,    0,    0 },   // 0x00 ' ' 
  {65,     1,  12,  13,  12,    0,  -12 },   // 0x01 'A' 
  {66,    21,  10,  13,  12,    1,  -12 },   // 0x02 'B' 
  {67,    38,  10,  13,  12,    1,  -12 },   // 0x03 'C' 
  {68,    55,  11,  13,  13,    1,  -12 },   // 0x04 'D' 
  {69,    73,   8,  13,  10,    1,  -12 },   // 0x05 'E' 
  {70,    86,   8,  13,   9,    1,  -12 },   // 0x06 'F' 
  {71,    99,  11,  13,  13,    1,  -12 },   // 0x07 'G' 
  {72,   117,  10,  13,  12,    1,  -12 },   // 0x08 'H' 
  {73,   134,   2,  13,   5,    1,  -12 },   // 0x09 'I' 
  {74,   138,   9,  13,  10,    0,  -12 },   // 0x0A 'J' 
  {75,   153,  10,  13,  11,    1,  -12 },   // 0x0B 'K' 
  {76,   170,   9,  13,  10,    1,  -12 },   // 0x0C 'L' 
  {77,   185,  12,  13,  15,    1,  -12 },   // 0x0D 'M' 
  {78,   205,  10,  13,  12,    1,  -12 },   // 0x0E 'N' 
  {79,   222,  11,  13,  13,    1,  -12 },   // 0x0F 'O' 
  {80,   240,  10,  13,  12,    1,  -12 },   // 0x10 'P' 
  {81,   257,  11,  14,  13,    1,  -12 },   // 0x11 'Q' 
  {82,   277,  10,  13,  12,    1,  -12 },   // 0x12 'R' 
  {83,   294,  10,  13,  11,    1,  -12 },   // 0x13 'S' 
  {84,   311,  10,  13,  10,    0,  -12 },   // 0x14 'T' 
  {85,   328,  10,  13,  12,    1,  -12 },   // 0x15 'U' 
  {86,   345,  12,  13,  12,    0,  -12 },   // 0x16 'V' 
  {87,   365,  16,  13,  16,    0,  -12 },   // 0x17 'W' 
  {88,   391,  11,  13,  12,    0,  -12 },   // 0x18 'X' 
  {89,   409,  11,  13,  12,    0,  -12 },   // 0x19 'Y' 
  {90,   427,   9,  13,  11,    1,  -12 },   // 0x1A 'Z' 
  {97,   442,   8,  10,  10,    1,   -9 },   // 0x1B 'a' 
  {98,   452,   8,  14,  11,    1,  -13 },   // 0x1C 'b' 
  {99,   466,   8,  10,   9,    1,   -9 },   // 0x1D 'c' 
  {100,   476,   8,  14,  11,    1,  -13 },   // 0x1E 'd' 
  {101,   490,   8,  10,  10,    1,   -9 },   // 0x1F 'e' 
  {102,   500,   5,  14,   5,    0,  -13 },   // 0x20 'f' 
  {103,   509,   8,  14,  11,    1,   -9 },   // 0x21 'g' 
  {104,   523,   8,  14,  11,    1,  -13 },   // 0x22 'h' 
  {105,   537,   2,  14,   4,    1,  -13 },   // 0x23 'i' 
  {106,   541,   4,  18,   5,    0,  -13 },   // 0x24 'j' 
  {107,   550,   9,  14,  10,    1,  -13 },   // 0x25 'k' 
  {108,   566,   2,  14,   4,    1,  -13 },   // 0x26 'l' 
  {109,   570,  14,  10,  16,    1,   -9 },   // 0x27 'm' 
  {110,   588,   8,  10,  11,    1,   -9 },   // 0x28 'n' 
  {111,   598,   8,  10,  10,    1,   -9 },   // 0x29 'o' 
  {112,   608,   8,  14,  11,    1,   -9 },   // 0x2A 'p' 
  {113,   622,   8,  13,  11,    1,   -9 },   // 0x2B 'q' 
  {114,   635,   6,  10,   8,    1,   -9 },   // 0x2C 'r' 
  {115,   643,   8,  10,   9,    0,   -9 },   // 0x2D 's' 
  {116,   653,   6,  13,   6,    0,  -12 },   // 0x2E 't' 
  {117,   663,   8,  10,  11,    1,   -9 },   // 0x2F 'u' 
  {118,   673,   9,  10,   9,    0,   -9 },   // 0x30 'v' 
  {119,   685,  12,  10,  12,    0,   -9 },   // 0x31 'w' 
  {120,   700,  10,  10,  10,    0,   -9 },   // 0x32 'x' 
  {121,   713,   9,  14,  10,    0,   -9 },   // 0x33 'y' 
  {122,   729,   8,  10,   9,    1,   -9 },   // 0x34 'z' 
  {48,   739,   9,  13,  11,    1,  -12 },   // 0x35 '0' 
  {49,   754,   3,  13,   5,    1,  -12 },   // 0x36 '1' 
  {50,   759,   8,  13,  10,    1,  -12 },   // 0x37 '2' 
  {51,   772,   9,  13,  10,    1,  -12 },   // 0x38 '3' 
  {52,   787,   9,  13,  11,    1,  -12 },   // 0x39 '4' 
  {53,   802,   9,  13,  11,    1,  -12 },   // 0x3A '5' 
  {54,   817,   9,  13,  11,    1,  -12 },   // 0x3B '6' 
  {55,   832,   8,  13,   9,    1,  -12 },   // 0x3C '7' 
  {56,   845,   9,  13,  10,    1,  -12 },   // 0x3D '8' 
  {57,   860,   9,  13,  11,    1,  -12 },   // 0x3E '9' 
  {45,   875,   5,   2,   6,    1,   -6 },   // 0x3F '-' 
  {37,   877,  11,  14,  11,    0,  -13 },   // 0x40 '%' 
  {46,   897,   2,   2,   3,    1,   -1 },   // 0x41 '.' 
  {44,   898,   3,   5,   3,    0,   -1 },   // 0x42 ',' 
  {33,   900,   2,  13,   4,    1,  -12 },   // 0x43 '!' 
  {58,   904,   2,   9,   4,    1,   -9 },   // 0x44 ':' 
  {45,   907,   5,   2,   6,    1,   -6 },   // 0x45 '-' 
  {91,   909,   4,  21,   7,    2,  -16 },   // 0x46 '[' 
  {93,   920,   4,  21,   7,    1,  -16 },   // 0x47 ']' 
  {40,   931,   4,  21,   7,    2,  -16 },   // 0x48 '(' 
  {41,   942,   4,  21,   7,    1,  -16 }   // 0x49 ')' 
};

const gfxfont_t HotStuff9 PROGMEM = 
{
  (uint8_t  *)HotStuff9Bitmaps, //< Glyph bitmaps, concatenated 
  (gfxglyph_t *)HotStuff9Glyphs, //< Glyph array
  74,// total glyphs in the string
  21,  // newline distance (y axis)
     0,  // minimum X - left most
    -4,  // minimum Y - bottom most (descenders can drive this negative)
    16,  // maximum X - right most
    17}; // maximum Y - top most
// Approx. 1485 bytes -  but your mileage may vary.

#endif