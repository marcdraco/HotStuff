
#ifndef __FIXEDFONTNOTOSANSMONOBOLDTTF8
#define __FIXEDFONTNOTOSANSMONOBOLDTTF8
const uint8_t HotStuff8Bitmaps[] PROGMEM = {
  0x00, 0xFF, 0xB6, 0xDB, 0x0F, 0xB0, 0xDE, 0xF7, 0xB0, 0x1B, 0x0D, 0x86,
  0x8F, 0xF7, 0xF8, 0xB0, 0xD9, 0xFF, 0xFF, 0x9A, 0x09, 0x05, 0x80, 0x3C,
  0xFF, 0x4E, 0x8F, 0x0F, 0x0F, 0x8F, 0x17, 0x2F, 0xFB, 0xC1, 0x00, 0x73,
  0x79, 0xB5, 0x9A, 0xCF, 0xC3, 0xE0, 0x2C, 0x3F, 0x16, 0x9A, 0x49, 0xAC,
  0x70, 0x3C, 0x1E, 0x19, 0x8C, 0x83, 0xC1, 0xC0, 0xE6, 0xDE, 0x6F, 0x73,
  0x1F, 0xC7, 0x70, 0xFF, 0x36, 0x6C, 0xCC, 0xCC, 0xCC, 0xC6, 0x63, 0xC6,
  0x63, 0x33, 0x33, 0x33, 0x36, 0x6C, 0x18, 0x33, 0x5F, 0xF3, 0x8D, 0x89,
  0x00, 0x18, 0x30, 0x67, 0xFF, 0xE3, 0x06, 0x0C, 0x6D, 0xEC, 0xFF, 0xC0,
  0x7D, 0x80, 0x0C, 0x61, 0x86, 0x30, 0xC3, 0x18, 0x63, 0x0C, 0x30, 0x3C,
  0x7E, 0xE6, 0xCE, 0xCF, 0xDF, 0xF7, 0xF7, 0xE6, 0xE6, 0x7E, 0x3C, 0x18,
  0xF3, 0xE2, 0xC1, 0x83, 0x06, 0x0C, 0x18, 0x31, 0xFB, 0xF0, 0x7C, 0xFE,
  0x46, 0x06, 0x06, 0x0E, 0x1C, 0x18, 0x30, 0x60, 0xFF, 0xFF, 0x7D, 0xFD,
  0x18, 0x30, 0xE7, 0x8F, 0x83, 0x07, 0x0F, 0xFF, 0xE0, 0x0C, 0x1C, 0x1C,
  0x3C, 0x3C, 0x6C, 0x6C, 0xCC, 0xFF, 0xFF, 0x0C, 0x0C, 0x7E, 0xFD, 0x83,
  0x0F, 0x9F, 0x93, 0x83, 0x07, 0x1F, 0xF7, 0xC0, 0x1E, 0x7E, 0x60, 0xE0,
  0xDC, 0xFE, 0xE6, 0xC7, 0xC7, 0xE6, 0x7E, 0x3C, 0xFF, 0xFF, 0x06, 0x0E,
  0x0C, 0x0C, 0x1C, 0x18, 0x38, 0x30, 0x30, 0x70, 0x3C, 0xFF, 0x9F, 0x37,
  0xE7, 0x9F, 0x73, 0xC7, 0x8F, 0xFB, 0xE0, 0x38, 0x7E, 0xC6, 0xC6, 0xC7,
  0xE7, 0xFF, 0x76, 0x06, 0x0E, 0x7C, 0x78, 0x7D, 0x80, 0x1F, 0x60, 0x6D,
  0x80, 0x03, 0x6F, 0x60, 0x02, 0x0C, 0x73, 0x8C, 0x0F, 0x07, 0x83, 0xFF,
  0xFC, 0x07, 0xFF, 0xE0, 0x81, 0x81, 0xC0, 0xE0, 0x67, 0xBC, 0x60, 0x7D,
  0xFD, 0x18, 0x30, 0xE3, 0x8E, 0x18, 0x00, 0x60, 0xE1, 0x80, 0x1E, 0x1F,
  0x98, 0x69, 0xFD, 0xEE, 0xB7, 0xDB, 0xED, 0xF6, 0xEF, 0xF6, 0xCC, 0x03,
  0xF0, 0xF0, 0x1C, 0x0F, 0x07, 0x86, 0xC3, 0x61, 0xB8, 0xCC, 0xFE, 0x7F,
  0x31, 0xD8, 0x78, 0x30, 0xFC, 0xFE, 0xC7, 0xC7, 0xC6, 0xFE, 0xFE, 0xC7,
  0xC7, 0xC7, 0xFE, 0xFC, 0x1F, 0x7E, 0x61, 0xE0, 0xC0, 0xC0, 0xC0, 0xC0,
  0xC0, 0xE1, 0x7E, 0x3E, 0xF8, 0xFE, 0xC6, 0xC7, 0xC3, 0xC3, 0xC3, 0xC3,
  0xC7, 0xC6, 0xFE, 0xF8, 0xFF, 0xFF, 0x06, 0x0C, 0x1F, 0xFF, 0xE0, 0xC1,
  0x83, 0xFF, 0xF0, 0xFF, 0xFF, 0x06, 0x0C, 0x1F, 0xFF, 0xE0, 0xC1, 0x83,
  0x06, 0x00, 0x1F, 0x9F, 0x9C, 0x0C, 0x06, 0x07, 0x3F, 0x9E, 0xC3, 0x61,
  0xB8, 0xCF, 0xE3, 0xE0, 0xC7, 0xC7, 0xC7, 0xC7, 0xC7, 0xFF, 0xFF, 0xC7,
  0xC7, 0xC7, 0xC7, 0xC7, 0xFF, 0xFC, 0x60, 0xC1, 0x83, 0x06, 0x0C, 0x18,
  0x33, 0xFF, 0xF0, 0x0E, 0x1C, 0x38, 0x70, 0xE1, 0xC3, 0x87, 0x0E, 0x1B,
  0xF7, 0xC0, 0xC7, 0xCE, 0xCC, 0xDC, 0xD8, 0xF0, 0xF8, 0xF8, 0xCC, 0xCC,
  0xC6, 0xC7, 0xE1, 0xC3, 0x87, 0x0E, 0x1C, 0x38, 0x70, 0xE1, 0xC3, 0xFF,
  0xF0, 0xE7, 0xE7, 0xEF, 0xAF, 0xAF, 0xEB, 0xFB, 0xFB, 0xDB, 0xC3, 0xC3,
  0xC3, 0xE3, 0xE3, 0xF3, 0xF3, 0xF3, 0xD3, 0xDB, 0xDB, 0xCB, 0xCF, 0xCF,
  0xCF, 0x1E, 0x1F, 0x98, 0xCC, 0x76, 0x1F, 0x0F, 0x86, 0xC3, 0x63, 0xB1,
  0x8F, 0xC3, 0xC0, 0xFC, 0xFE, 0xC7, 0xC7, 0xC7, 0xC7, 0xFE, 0xFC, 0xC0,
  0xC0, 0xC0, 0xC0, 0x1E, 0x1F, 0x98, 0xCC, 0x76, 0x1F, 0x0F, 0x86, 0xC3,
  0x63, 0xB1, 0x8F, 0xC3, 0xC0, 0x60, 0x1C, 0xFC, 0xFE, 0xE6, 0xE6, 0xE6,
  0xE6, 0xFC, 0xF8, 0xEC, 0xEE, 0xE6, 0xE7, 0x3E, 0x7E, 0xE2, 0xE0, 0x70,
  0x78, 0x1E, 0x0E, 0x07, 0x86, 0xFE, 0xFC, 0xFF, 0xFF, 0xC3, 0x01, 0x80,
  0xC0, 0x60, 0x30, 0x18, 0x0C, 0x06, 0x03, 0x01, 0x80, 0xC7, 0xC7, 0xC7,
  0xC7, 0xC7, 0xC7, 0xC7, 0xC7, 0xC7, 0xC6, 0xFE, 0x7C, 0xE1, 0xB0, 0xD8,
  0xEC, 0x66, 0x31, 0x98, 0xD8, 0x6C, 0x36, 0x0F, 0x07, 0x03, 0x80, 0xC1,
  0xE0, 0xF0, 0x79, 0xBD, 0xDB, 0xED, 0xF6, 0xEB, 0x77, 0xBB, 0xDD, 0xEE,
  0x70, 0x63, 0xB9, 0x8D, 0xC7, 0xC1, 0xC0, 0xE0, 0x70, 0x3C, 0x36, 0x1B,
  0x98, 0xDC, 0x70, 0xE1, 0xB1, 0x9C, 0xC6, 0xE3, 0x60, 0xF0, 0x70, 0x18,
  0x0C, 0x06, 0x03, 0x01, 0x80, 0x7E, 0xFC, 0x38, 0x61, 0xC3, 0x0E, 0x18,
  0x70, 0xC3, 0xFF, 0xF0, 0xFF, 0x6D, 0xB6, 0xDB, 0x6D, 0xF8, 0xC1, 0x86,
  0x18, 0x30, 0xC3, 0x06, 0x18, 0x30, 0xC3, 0xFD, 0xB6, 0xDB, 0x6D, 0xB7,
  0xF8, 0x10, 0x18, 0x38, 0x3C, 0x6C, 0x66, 0xC6, 0xC3, 0xFF, 0xFF, 0xC0,
  0xE6, 0x30, 0xFC, 0xFC, 0x1B, 0xFF, 0xF8, 0xF1, 0xFF, 0x72, 0xC0, 0xC0,
  0xC0, 0xDC, 0xFE, 0xE7, 0xC7, 0xC7, 0xC7, 0xE7, 0xFE, 0xDC, 0x3E, 0xFF,
  0x87, 0x0C, 0x18, 0x38, 0xBF, 0x3E, 0x07, 0x07, 0x07, 0x7F, 0xFF, 0xC7,
  0xC7, 0xC7, 0xC7, 0xC7, 0xFF, 0x7B, 0x3C, 0x7E, 0xC6, 0xFF, 0xFF, 0xC0,
  0xE1, 0x7E, 0x3E, 0x1F, 0x1F, 0x38, 0xFE, 0xFE, 0x38, 0x38, 0x38, 0x38,
  0x38, 0x38, 0x38, 0x7B, 0xFF, 0xC7, 0xC7, 0xC7, 0xC7, 0xC7, 0xFF, 0x7F,
  0x07, 0x86, 0xFE, 0xFC, 0xC0, 0xC0, 0xC0, 0xDC, 0xFE, 0xE7, 0xC7, 0xC7,
  0xC7, 0xC7, 0xC7, 0xC7, 0x18, 0x18, 0x18, 0xF8, 0xF8, 0x18, 0x18, 0x18,
  0x18, 0x18, 0xFE, 0xFF, 0x1C, 0x71, 0x9F, 0x7C, 0x71, 0xC7, 0x1C, 0x71,
  0xC7, 0x1C, 0x7F, 0xBC, 0xC0, 0xC0, 0xC0, 0xC7, 0xCE, 0xDC, 0xD8, 0xF8,
  0xEC, 0xCE, 0xC6, 0xC7, 0xF8, 0xF8, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18,
  0x18, 0x18, 0x7E, 0xFF, 0xDB, 0x7F, 0xF3, 0x79, 0xBC, 0xDE, 0x6F, 0x37,
  0x9B, 0xCD, 0x80, 0xDC, 0xFE, 0xE7, 0xC7, 0xC7, 0xC7, 0xC7, 0xC7, 0xC7,
  0x3C, 0xFE, 0xC6, 0xC7, 0xC7, 0xC7, 0xC6, 0xFE, 0x3C, 0xDC, 0xFE, 0xE7,
  0xC7, 0xC7, 0xC7, 0xE7, 0xFE, 0xDC, 0xC0, 0xC0, 0xC0, 0xC0, 0x7B, 0xFF,
  0xC7, 0xC7, 0xC7, 0xC7, 0xC7, 0xFF, 0x7F, 0x07, 0x07, 0x07, 0x07, 0xF7,
  0xFF, 0x38, 0x30, 0x30, 0x30, 0x30, 0xFC, 0xFC, 0x7E, 0xFF, 0x87, 0x87,
  0xC1, 0xE1, 0xFF, 0xFC, 0x30, 0x63, 0xFF, 0xF3, 0x06, 0x0C, 0x18, 0x30,
  0x7C, 0x78, 0xC7, 0xC7, 0xC7, 0xC7, 0xC7, 0xC7, 0xC7, 0xFF, 0x7B, 0xE1,
  0xB1, 0xDC, 0xC6, 0x63, 0x61, 0xB0, 0x78, 0x38, 0x1C, 0x00, 0xC1, 0xE6,
  0xF7, 0x6B, 0xB5, 0xDB, 0xAD, 0xDE, 0xEE, 0x77, 0x00, 0xE3, 0xB9, 0x8F,
  0x83, 0xC1, 0xC0, 0xF0, 0xD8, 0xE6, 0xE3, 0x80, 0xE1, 0xB1, 0xDC, 0xC6,
  0x63, 0x71, 0xF0, 0x78, 0x38, 0x0C, 0x06, 0x06, 0x0F, 0x07, 0x00, 0xFF,
  0xFC, 0x38, 0xE3, 0x86, 0x18, 0x7F, 0xFE, 0x19, 0xCC, 0x63, 0x1B, 0x9C,
  0x31, 0x8C, 0x63, 0x8C, 0xFF, 0xFF, 0xFF, 0xFF, 0xC7, 0x18, 0xC6, 0x30,
  0xE7, 0x63, 0x18, 0xCE, 0x60, 0x73, 0xFE, 0x38 };

// Glyph, Offset to bitmap, Width, Height, xAdvance, xOffset, yOffset

const gfxglyph_t HotStuff8Glyphs[] PROGMEM = {
  {32,     0,   1,   1,   9,    0,    0 },   // 0x00 ' ' 
  {33,     1,   3,  12,   9,    3,  -11 },   // 0x01 '!' 
  {34,     6,   5,   4,   9,    2,  -11 },   // 0x02 '"' 
  {35,     9,   9,  12,   9,    0,  -11 },   // 0x03 '#' 
  {36,    23,   7,  13,   9,    1,  -11 },   // 0x04 '$' 
  {37,    35,   9,  12,   9,    0,  -11 },   // 0x05 '%' 
  {38,    49,   9,  12,   9,    0,  -11 },   // 0x06 '&' 
  {39,    63,   2,   4,   9,    4,  -11 },   // 0x07 ''' 
  {40,    64,   4,  14,   9,    3,  -11 },   // 0x08 '(' 
  {41,    71,   4,  14,   9,    2,  -10 },   // 0x09 ')' 
  {42,    78,   7,   7,   9,    1,  -11 },   // 0x0A '*' 
  {43,    85,   7,   8,   9,    1,   -9 },   // 0x0B '+' 
  {44,    92,   3,   5,   9,    3,   -2 },   // 0x0C ',' 
  {45,    94,   5,   2,   9,    2,   -4 },   // 0x0D '-' 
  {46,    96,   3,   3,   9,    3,   -2 },   // 0x0E '.' 
  {47,    98,   6,  12,   9,    2,  -11 },   // 0x0F '/' 
  {48,   107,   8,  12,   9,    1,  -11 },   // 0x10 '0' 
  {49,   119,   7,  12,   9,    1,  -11 },   // 0x11 '1' 
  {50,   130,   8,  12,   9,    1,  -11 },   // 0x12 '2' 
  {51,   142,   7,  12,   9,    1,  -11 },   // 0x13 '3' 
  {52,   153,   8,  12,   9,    1,  -11 },   // 0x14 '4' 
  {53,   165,   7,  12,   9,    1,  -11 },   // 0x15 '5' 
  {54,   176,   8,  12,   9,    1,  -11 },   // 0x16 '6' 
  {55,   188,   8,  12,   9,    1,  -11 },   // 0x17 '7' 
  {56,   200,   7,  12,   9,    1,  -11 },   // 0x18 '8' 
  {57,   211,   8,  12,   9,    1,  -11 },   // 0x19 '9' 
  {58,   223,   3,   9,   9,    3,   -8 },   // 0x1A ':' 
  {59,   227,   3,  12,   9,    3,   -8 },   // 0x1B ';' 
  {60,   232,   7,   8,   9,    1,   -9 },   // 0x1C '<' 
  {61,   239,   7,   5,   9,    1,   -7 },   // 0x1D '=' 
  {62,   244,   7,   8,   9,    1,   -9 },   // 0x1E '>' 
  {63,   251,   7,  12,   9,    1,  -11 },   // 0x1F '?' 
  {64,   262,   9,  14,   9,    0,  -11 },   // 0x20 '@' 
  {65,   278,   9,  12,   9,    0,  -11 },   // 0x21 'A' 
  {66,   292,   8,  12,   9,    1,  -11 },   // 0x22 'B' 
  {67,   304,   8,  12,   9,    1,  -11 },   // 0x23 'C' 
  {68,   316,   8,  12,   9,    1,  -11 },   // 0x24 'D' 
  {69,   328,   7,  12,   9,    1,  -11 },   // 0x25 'E' 
  {70,   339,   7,  12,   9,    1,  -11 },   // 0x26 'F' 
  {71,   350,   9,  12,   9,    0,  -11 },   // 0x27 'G' 
  {72,   364,   8,  12,   9,    1,  -11 },   // 0x28 'H' 
  {73,   376,   7,  12,   9,    1,  -11 },   // 0x29 'I' 
  {74,   387,   7,  12,   9,    1,  -11 },   // 0x2A 'J' 
  {75,   398,   8,  12,   9,    1,  -11 },   // 0x2B 'K' 
  {76,   410,   7,  12,   9,    1,  -11 },   // 0x2C 'L' 
  {77,   421,   8,  12,   9,    1,  -11 },   // 0x2D 'M' 
  {78,   433,   8,  12,   9,    1,  -11 },   // 0x2E 'N' 
  {79,   445,   9,  12,   9,    0,  -11 },   // 0x2F 'O' 
  {80,   459,   8,  12,   9,    1,  -11 },   // 0x30 'P' 
  {81,   471,   9,  14,   9,    0,  -11 },   // 0x31 'Q' 
  {82,   487,   8,  12,   9,    1,  -11 },   // 0x32 'R' 
  {83,   499,   8,  12,   9,    1,  -11 },   // 0x33 'S' 
  {84,   511,   9,  12,   9,    0,  -11 },   // 0x34 'T' 
  {85,   525,   8,  12,   9,    1,  -11 },   // 0x35 'U' 
  {86,   537,   9,  12,   9,    0,  -11 },   // 0x36 'V' 
  {87,   551,   9,  12,   9,    0,  -11 },   // 0x37 'W' 
  {88,   565,   9,  12,   9,    0,  -11 },   // 0x38 'X' 
  {89,   579,   9,  12,   9,    0,  -11 },   // 0x39 'Y' 
  {90,   593,   7,  12,   9,    1,  -11 },   // 0x3A 'Z' 
  {91,   604,   3,  15,   9,    4,  -11 },   // 0x3B '[' 
  {92,   610,   6,  12,   9,    1,  -11 },   // 0x3C '\' 
  {93,   619,   3,  15,   9,    2,  -11 },   // 0x3D ']' 
  {94,   625,   8,   8,   9,    1,  -11 },   // 0x3E '^' 
  {95,   633,   9,   2,   9,    0,    2 },   // 0x3F '_' 
  {96,   636,   4,   3,   9,    2,  -12 },   // 0x40 '`' 
  {97,   638,   7,   9,   9,    1,   -8 },   // 0x41 'a' 
  {98,   646,   8,  12,   9,    1,  -11 },   // 0x42 'b' 
  {99,   658,   7,   9,   9,    1,   -8 },   // 0x43 'c' 
  {100,   666,   8,  12,   9,    1,  -11 },   // 0x44 'd' 
  {101,   678,   8,   9,   9,    1,   -8 },   // 0x45 'e' 
  {102,   687,   8,  12,   9,    1,  -11 },   // 0x46 'f' 
  {103,   699,   8,  13,   9,    1,   -8 },   // 0x47 'g' 
  {104,   712,   8,  12,   9,    1,  -11 },   // 0x48 'h' 
  {105,   724,   8,  12,   9,    1,  -11 },   // 0x49 'i' 
  {106,   736,   6,  16,   9,    1,  -11 },   // 0x4A 'j' 
  {107,   748,   8,  12,   9,    1,  -11 },   // 0x4B 'k' 
  {108,   760,   8,  12,   9,    1,  -11 },   // 0x4C 'l' 
  {109,   772,   9,   9,   9,    0,   -8 },   // 0x4D 'm' 
  {110,   783,   8,   9,   9,    1,   -8 },   // 0x4E 'n' 
  {111,   792,   8,   9,   9,    1,   -8 },   // 0x4F 'o' 
  {112,   801,   8,  13,   9,    1,   -8 },   // 0x50 'p' 
  {113,   814,   8,  13,   9,    1,   -8 },   // 0x51 'q' 
  {114,   827,   8,   9,   9,    1,   -8 },   // 0x52 'r' 
  {115,   836,   7,   9,   9,    1,   -8 },   // 0x53 's' 
  {116,   844,   7,  11,   9,    1,  -10 },   // 0x54 't' 
  {117,   854,   8,   9,   9,    1,   -8 },   // 0x55 'u' 
  {118,   863,   9,   9,   9,    0,   -8 },   // 0x56 'v' 
  {119,   874,   9,   9,   9,    0,   -8 },   // 0x57 'w' 
  {120,   885,   9,   9,   9,    0,   -8 },   // 0x58 'x' 
  {121,   896,   9,  13,   9,    0,   -8 },   // 0x59 'y' 
  {122,   911,   7,   9,   9,    1,   -8 },   // 0x5A 'z' 
  {123,   919,   5,  14,   9,    2,  -11 },   // 0x5B '{' 
  {124,   928,   2,  16,   9,    4,  -11 },   // 0x5C '|' 
  {125,   932,   5,  14,   9,    2,  -10 },   // 0x5D '}' 
  {126,   941,   7,   3,   9,    1,   -6 }   // 0x5E '~' 
};

const gfxfont_t HotStuff8 PROGMEM = 
{
  (uint8_t  *)HotStuff8Bitmaps, //< Glyph bitmaps, concatenated 
  (gfxglyph_t *)HotStuff8Glyphs, //< Glyph array
  95,// total glyphs in the string
  16,  // newline distance (y axis)
     0,  // minimum X - left most
    -4,  // minimum Y - bottom most (descenders can drive this negative)
     9,  // maximum X - right most
    13}; // maximum Y - top most
// Approx. 1623 bytes -  but your mileage may vary.

#endif