
#ifndef __FIXEDFONTIBMPLEXMONOMEDIUMTTF8
#define __FIXEDFONTIBMPLEXMONOMEDIUMTTF8
const uint8_t HotStuff8Bitmaps[] PROGMEM = {
  0x00, 0x18, 0x1E, 0x0F, 0x05, 0x86, 0x63, 0x31, 0x98, 0xFC, 0xC3, 0x61,
  0xA0, 0xE0, 0xF9, 0x1A, 0x1C, 0x38, 0xDF, 0x21, 0xC3, 0x87, 0x0F, 0xF0,
  0x3E, 0x63, 0x42, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0x42, 0x63, 0x3E, 0xFC,
  0xC6, 0xC3, 0xC3, 0xC3, 0xC3, 0xC3, 0xC3, 0xC3, 0xC6, 0xFC, 0xFF, 0xC0,
  0xC0, 0xC0, 0xC0, 0xFE, 0xC0, 0xC0, 0xC0, 0xC0, 0xFF, 0xFF, 0xC0, 0xC0,
  0xC0, 0xC0, 0xFE, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0x3C, 0x66, 0xC3, 0xC0,
  0xC0, 0xCF, 0xC3, 0xC3, 0xC3, 0x67, 0x3B, 0xC3, 0xC3, 0xC3, 0xC3, 0xC3,
  0xFF, 0xC3, 0xC3, 0xC3, 0xC3, 0xC3, 0xFE, 0x30, 0x60, 0xC1, 0x83, 0x06,
  0x0C, 0x18, 0x33, 0xF8, 0x7E, 0x0C, 0x18, 0x30, 0x60, 0xC1, 0x83, 0x47,
  0x8D, 0xF0, 0xC3, 0x63, 0x33, 0x19, 0x8D, 0x87, 0xC3, 0xB1, 0x8C, 0xC6,
  0x61, 0xB0, 0xE0, 0xC1, 0x83, 0x06, 0x0C, 0x18, 0x30, 0x60, 0xC1, 0x83,
  0xF8, 0xC3, 0xE7, 0xE7, 0xFF, 0xDB, 0xDB, 0xDB, 0xD3, 0xC3, 0xC3, 0xC3,
  0xE3, 0xE3, 0xF3, 0xF3, 0xD3, 0xDB, 0xCB, 0xCF, 0xCF, 0xC7, 0xC7, 0x3C,
  0x66, 0xC3, 0xC3, 0xC3, 0xC3, 0xC3, 0xC3, 0xC3, 0x66, 0x3C, 0xFD, 0x0E,
  0x1C, 0x38, 0x7F, 0xA0, 0x40, 0x81, 0x02, 0x00, 0x3C, 0x66, 0xC3, 0xC3,
  0xC3, 0xC3, 0xC3, 0xC3, 0xC3, 0x66, 0x3C, 0x18, 0x0E, 0xFD, 0x0E, 0x1C,
  0x38, 0x7F, 0xA6, 0x44, 0x8D, 0x1A, 0x18, 0x3E, 0x63, 0xC0, 0xC0, 0x60,
  0x3E, 0x03, 0x03, 0x03, 0xC2, 0x7C, 0xFF, 0x18, 0x18, 0x18, 0x18, 0x18,
  0x18, 0x18, 0x18, 0x18, 0x18, 0xC3, 0xC3, 0xC3, 0xC3, 0xC3, 0xC3, 0xC3,
  0xC3, 0xC3, 0x66, 0x3C, 0xC3, 0xC3, 0xC3, 0x42, 0x66, 0x66, 0x66, 0x34,
  0x3C, 0x3C, 0x18, 0x81, 0x81, 0x81, 0x99, 0x99, 0xD9, 0xFF, 0xE7, 0xE7,
  0xE7, 0xE7, 0x61, 0x8C, 0x43, 0x30, 0x78, 0x1E, 0x03, 0x01, 0xE0, 0x58,
  0x33, 0x18, 0x6E, 0x1C, 0xE1, 0xD8, 0x63, 0x30, 0xCC, 0x1E, 0x07, 0x80,
  0xC0, 0x30, 0x0C, 0x03, 0x00, 0xC0, 0xFF, 0x03, 0x06, 0x0C, 0x0C, 0x18,
  0x30, 0x30, 0x60, 0xC0, 0xFF, 0x7C, 0xC6, 0x06, 0x7E, 0xC6, 0xC6, 0xC6,
  0x7B, 0xC0, 0xC0, 0xC0, 0xC0, 0xDE, 0xE6, 0xC3, 0xC3, 0xC3, 0xC3, 0xE6,
  0xDE, 0x3E, 0x62, 0x41, 0xC0, 0xC0, 0x40, 0x63, 0x3E, 0x03, 0x03, 0x03,
  0x03, 0x7B, 0x67, 0xC3, 0xC3, 0xC3, 0xC3, 0x67, 0x7B, 0x3C, 0x62, 0xC3,
  0xFF, 0xC0, 0xC2, 0x63, 0x3C, 0x0F, 0x18, 0x18, 0x18, 0xFF, 0x18, 0x18,
  0x18, 0x18, 0x18, 0x18, 0xFF, 0x03, 0x3C, 0x66, 0x42, 0x42, 0x66, 0x7C,
  0x40, 0x3F, 0xC1, 0xC3, 0x7E, 0x81, 0x02, 0x04, 0x0B, 0x99, 0xA1, 0xC3,
  0x87, 0x0E, 0x1C, 0x30, 0x38, 0x70, 0x00, 0x0F, 0x02, 0x04, 0x08, 0x10,
  0x20, 0x47, 0xF0, 0x18, 0xC0, 0x0F, 0x8C, 0x63, 0x18, 0xC6, 0x31, 0x8F,
  0xE0, 0x81, 0x02, 0x04, 0x08, 0xF3, 0x2C, 0x78, 0xD9, 0x1A, 0x34, 0x30,
  0xF8, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0xFF,
  0xB7, 0xDB, 0x99, 0x99, 0x99, 0x99, 0x99, 0x99, 0xB9, 0x9A, 0x1C, 0x38,
  0x70, 0xE1, 0xC3, 0x3C, 0x66, 0xC3, 0xC3, 0xC3, 0xC3, 0x66, 0x3C, 0xDE,
  0xE6, 0xC3, 0xC3, 0xC3, 0xC3, 0xE6, 0xDE, 0xC0, 0xC0, 0xC0, 0x7B, 0x67,
  0xC3, 0xC3, 0xC3, 0xC3, 0x67, 0x7B, 0x03, 0x03, 0x03, 0xF3, 0x1C, 0x18,
  0x10, 0x10, 0x10, 0x10, 0xFE, 0x3E, 0x63, 0x40, 0x78, 0x0E, 0x03, 0xC2,
  0x7C, 0x10, 0x10, 0x30, 0xFF, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x1F,
  0xC3, 0x87, 0x0E, 0x1C, 0x38, 0x5B, 0x9D, 0xC3, 0x42, 0x66, 0x66, 0x24,
  0x3C, 0x3C, 0x18, 0x99, 0x99, 0x99, 0x99, 0xE5, 0xE7, 0xE7, 0x66, 0xC3,
  0x66, 0x3C, 0x18, 0x18, 0x3C, 0x66, 0xC3, 0xC3, 0xC3, 0x66, 0x66, 0x24,
  0x3C, 0x18, 0x18, 0x18, 0x10, 0xE0, 0x7E, 0x06, 0x0C, 0x18, 0x18, 0x30,
  0x60, 0xFF, 0x3C, 0x66, 0xC3, 0xC3, 0xDB, 0xDB, 0xC3, 0xC3, 0xC3, 0x66,
  0x3C, 0x3C, 0x6C, 0xCC, 0x8C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x7F,
  0x7C, 0xC6, 0x43, 0x03, 0x06, 0x06, 0x0C, 0x18, 0x70, 0xE0, 0xFF, 0x7C,
  0xC6, 0x02, 0x03, 0x06, 0x38, 0x06, 0x03, 0x83, 0xC6, 0x7C, 0x0E, 0x1E,
  0x16, 0x36, 0x26, 0x66, 0xC6, 0x86, 0xFF, 0x06, 0x06, 0x7E, 0x40, 0x40,
  0x40, 0x5C, 0x66, 0x03, 0x03, 0x83, 0xC6, 0x7C, 0x1E, 0x38, 0x70, 0x60,
  0xDE, 0xE7, 0xC3, 0xC3, 0xC3, 0x66, 0x3C, 0xFF, 0xC3, 0xC6, 0x06, 0x06,
  0x0C, 0x0C, 0x18, 0x18, 0x10, 0x30, 0x3C, 0x66, 0xC3, 0xC3, 0x66, 0x3C,
  0xC3, 0xC3, 0xC3, 0xC3, 0x3C, 0x3C, 0x66, 0xC3, 0xC3, 0xC3, 0xE7, 0x7B,
  0x06, 0x0E, 0x1C, 0x78, 0xF8, 0x70, 0xD2, 0x6C, 0x93, 0x28, 0x48, 0x1C,
  0xE0, 0x48, 0x53, 0x24, 0xD9, 0x2C, 0x38, 0xFC, 0x76, 0x4C, 0xFF, 0xE0,
  0xFC, 0xFC, 0x0F, 0xC0, 0xF8, 0xF8, 0x88, 0x88, 0x88, 0x88, 0x88, 0x8F,
  0xF1, 0x11, 0x11, 0x11, 0x11, 0x11, 0x1F, 0x19, 0x98, 0x84, 0x63, 0x18,
  0xC2, 0x10, 0xC3, 0x0C, 0xC3, 0x0C, 0x21, 0x0C, 0x63, 0x18, 0x84, 0x66,
  0x60 };

// Glyph, Offset to bitmap, Width, Height, xAdvance, xOffset, yOffset

const gfxglyph_t HotStuff8Glyphs[] PROGMEM = {
  {32,     0,   1,   1,  10,    0,    0 },   // 0x00 ' ' 
  {65,     1,   9,  11,  10,    1,  -10 },   // 0x01 'A' 
  {66,    14,   7,  11,  10,    2,  -10 },   // 0x02 'B' 
  {67,    24,   8,  11,  10,    1,  -10 },   // 0x03 'C' 
  {68,    35,   8,  11,  10,    1,  -10 },   // 0x04 'D' 
  {69,    46,   8,  11,  10,    1,  -10 },   // 0x05 'E' 
  {70,    57,   8,  11,  10,    1,  -10 },   // 0x06 'F' 
  {71,    68,   8,  11,  10,    1,  -10 },   // 0x07 'G' 
  {72,    79,   8,  11,  10,    1,  -10 },   // 0x08 'H' 
  {73,    90,   7,  11,  10,    1,  -10 },   // 0x09 'I' 
  {74,   100,   7,  11,  10,    1,  -10 },   // 0x0A 'J' 
  {75,   110,   9,  11,  10,    1,  -10 },   // 0x0B 'K' 
  {76,   123,   7,  11,  10,    2,  -10 },   // 0x0C 'L' 
  {77,   133,   8,  11,  10,    1,  -10 },   // 0x0D 'M' 
  {78,   144,   8,  11,  10,    1,  -10 },   // 0x0E 'N' 
  {79,   155,   8,  11,  10,    1,  -10 },   // 0x0F 'O' 
  {80,   166,   7,  11,  10,    2,  -10 },   // 0x10 'P' 
  {81,   176,   8,  13,  10,    1,  -10 },   // 0x11 'Q' 
  {82,   189,   7,  11,  10,    2,  -10 },   // 0x12 'R' 
  {83,   199,   8,  11,  10,    1,  -10 },   // 0x13 'S' 
  {84,   210,   8,  11,  10,    1,  -10 },   // 0x14 'T' 
  {85,   221,   8,  11,  10,    1,  -10 },   // 0x15 'U' 
  {86,   232,   8,  11,  10,    1,  -10 },   // 0x16 'V' 
  {87,   243,   8,  11,  10,    1,  -10 },   // 0x17 'W' 
  {88,   254,  10,  11,  10,    0,  -10 },   // 0x18 'X' 
  {89,   268,  10,  11,  10,    0,  -10 },   // 0x19 'Y' 
  {90,   282,   8,  11,  10,    1,  -10 },   // 0x1A 'Z' 
  {97,   293,   8,   8,  10,    1,   -7 },   // 0x1B 'a' 
  {98,   301,   8,  12,  10,    1,  -11 },   // 0x1C 'b' 
  {99,   313,   8,   8,  10,    1,   -7 },   // 0x1D 'c' 
  {100,   321,   8,  12,  10,    1,  -11 },   // 0x1E 'd' 
  {101,   333,   8,   8,  10,    1,   -7 },   // 0x1F 'e' 
  {102,   341,   8,  12,  10,    1,  -11 },   // 0x20 'f' 
  {103,   353,   8,  12,  10,    1,   -8 },   // 0x21 'g' 
  {104,   365,   7,  12,  10,    2,  -11 },   // 0x22 'h' 
  {105,   376,   7,  12,  10,    2,  -11 },   // 0x23 'i' 
  {106,   387,   5,  15,  10,    2,  -11 },   // 0x24 'j' 
  {107,   397,   7,  12,  10,    2,  -11 },   // 0x25 'k' 
  {108,   408,   8,  12,  10,    1,  -11 },   // 0x26 'l' 
  {109,   420,   8,   8,  10,    1,   -7 },   // 0x27 'm' 
  {110,   428,   7,   8,  10,    2,   -7 },   // 0x28 'n' 
  {111,   435,   8,   8,  10,    1,   -7 },   // 0x29 'o' 
  {112,   443,   8,  11,  10,    1,   -7 },   // 0x2A 'p' 
  {113,   454,   8,  11,  10,    1,   -7 },   // 0x2B 'q' 
  {114,   465,   8,   8,  10,    1,   -7 },   // 0x2C 'r' 
  {115,   473,   8,   8,  10,    1,   -7 },   // 0x2D 's' 
  {116,   481,   8,  11,  10,    1,  -10 },   // 0x2E 't' 
  {117,   492,   7,   8,  10,    1,   -7 },   // 0x2F 'u' 
  {118,   499,   8,   8,  10,    1,   -7 },   // 0x30 'v' 
  {119,   507,   8,   8,  10,    1,   -7 },   // 0x31 'w' 
  {120,   515,   8,   8,  10,    1,   -7 },   // 0x32 'x' 
  {121,   523,   8,  11,  10,    1,   -7 },   // 0x33 'y' 
  {122,   534,   8,   8,  10,    1,   -7 },   // 0x34 'z' 
  {48,   542,   8,  11,  10,    1,  -10 },   // 0x35 '0' 
  {49,   553,   8,  11,  10,    1,  -10 },   // 0x36 '1' 
  {50,   564,   8,  11,  10,    1,  -10 },   // 0x37 '2' 
  {51,   575,   8,  11,  10,    1,  -10 },   // 0x38 '3' 
  {52,   586,   8,  11,  10,    1,  -10 },   // 0x39 '4' 
  {53,   597,   8,  11,  10,    1,  -10 },   // 0x3A '5' 
  {54,   608,   8,  11,  10,    1,  -10 },   // 0x3B '6' 
  {55,   619,   8,  11,  10,    1,  -10 },   // 0x3C '7' 
  {56,   630,   8,  11,  10,    1,  -10 },   // 0x3D '8' 
  {57,   641,   8,  11,  10,    1,  -10 },   // 0x3E '9' 
  {45,   652,   5,   1,  10,    2,   -4 },   // 0x3F '-' 
  {37,   653,  10,  11,  10,    0,  -10 },   // 0x40 '%' 
  {46,   667,   2,   3,  10,    4,   -2 },   // 0x41 '.' 
  {44,   668,   4,   4,  10,    3,   -1 },   // 0x42 ',' 
  {33,   670,   2,  11,  10,    4,  -10 },   // 0x43 '!' 
  {58,   673,   2,   9,  10,    4,   -8 },   // 0x44 ':' 
  {45,   676,   5,   1,  10,    2,   -4 },   // 0x45 '-' 
  {91,   677,   4,  14,  10,    4,  -11 },   // 0x46 '[' 
  {93,   684,   4,  14,  10,    2,  -11 },   // 0x47 ']' 
  {40,   691,   5,  14,  10,    3,  -11 },   // 0x48 '(' 
  {41,   700,   5,  14,  10,    2,  -11 }   // 0x49 ')' 
};

const gfxfont_t HotStuff8 PROGMEM = 
{
  (uint8_t  *)HotStuff8Bitmaps, //< Glyph bitmaps, concatenated 
  (gfxglyph_t *)HotStuff8Glyphs, //< Glyph array
  74,// total glyphs in the string
  15,  // newline distance (y axis)
     0,  // minimum X - left most
    -3,  // minimum Y - bottom most (descenders can drive this negative)
    10,  // maximum X - right most
    12}; // maximum Y - top most
// Approx. 1241 bytes -  but your mileage may vary.

#endif