
#ifndef __FIXEDFONTNOVAMONOTTF7
#define __FIXEDFONTNOVAMONOTTF7
const uint8_t HotStuff7Bitmaps[] PROGMEM = {
  0x00, 0x7B, 0x38, 0x61, 0x87, 0xF8, 0x61, 0x86, 0x18, 0x40, 0xF2, 0x28,
  0xA2, 0xFA, 0x38, 0x61, 0x8F, 0xE0, 0x7B, 0x38, 0x61, 0x82, 0x08, 0x21,
  0x87, 0x37, 0x80, 0xFA, 0x38, 0x61, 0x86, 0x18, 0x61, 0x8F, 0xE0, 0xFA,
  0x08, 0x20, 0xFA, 0x08, 0x20, 0x83, 0xF0, 0xFC, 0x21, 0x0F, 0xC2, 0x10,
  0x84, 0x00, 0x7B, 0x38, 0x61, 0x82, 0x78, 0x61, 0x87, 0x37, 0x80, 0x86,
  0x18, 0x61, 0x87, 0xF8, 0x61, 0x86, 0x18, 0x40, 0xF9, 0x08, 0x42, 0x10,
  0x84, 0x27, 0xC0, 0x7C, 0x10, 0x41, 0x04, 0x10, 0x61, 0xCD, 0xE0, 0x86,
  0x29, 0xAC, 0xA3, 0xEC, 0xE1, 0x86, 0x18, 0x40, 0x82, 0x08, 0x20, 0x82,
  0x08, 0x20, 0x82, 0x0F, 0xC0, 0x7A, 0x9A, 0x69, 0xA6, 0x9A, 0x69, 0xA6,
  0x9A, 0x40, 0x7B, 0x38, 0x61, 0x86, 0x18, 0x61, 0x86, 0x18, 0x40, 0x7B,
  0x38, 0x61, 0x86, 0x18, 0x61, 0x87, 0x37, 0x80, 0xFA, 0x38, 0x61, 0x8F,
  0xE8, 0x20, 0x82, 0x00, 0x7B, 0x38, 0x61, 0x86, 0x18, 0x61, 0x87, 0xE7,
  0x83, 0xFA, 0x38, 0x61, 0x8F, 0xE9, 0xA2, 0x8E, 0x10, 0x72, 0x28, 0xA0,
  0x70, 0xE0, 0x61, 0x87, 0x27, 0x00, 0xFE, 0x20, 0x40, 0x81, 0x02, 0x04,
  0x08, 0x10, 0x20, 0x86, 0x18, 0x61, 0x86, 0x18, 0x61, 0x87, 0x37, 0x80,
  0x81, 0x81, 0x42, 0x42, 0x42, 0x24, 0x24, 0x24, 0x3C, 0x18, 0x18, 0xA6,
  0x9A, 0x69, 0xA6, 0x9A, 0x69, 0xA6, 0x9F, 0x80, 0x87, 0x34, 0x9E, 0x30,
  0xC3, 0x1E, 0x4B, 0x38, 0x40, 0x86, 0x18, 0x61, 0x86, 0x1C, 0x9C, 0x20,
  0x82, 0x00, 0xFC, 0x21, 0x84, 0x30, 0x86, 0x10, 0xC3, 0xF0, 0x74, 0x62,
  0x36, 0xC6, 0x2D, 0x84, 0x21, 0xE8, 0xC6, 0x31, 0x8C, 0x5C, 0x74, 0x63,
  0x08, 0x46, 0x2E, 0x08, 0x42, 0xF8, 0xC6, 0x31, 0x8C, 0x5C, 0x74, 0xE3,
  0x7E, 0x46, 0x2E, 0x39, 0x14, 0x50, 0x43, 0xE4, 0x10, 0x41, 0x04, 0x00,
  0x74, 0x63, 0x18, 0xC6, 0x2F, 0x0C, 0x5C, 0x84, 0x21, 0xE8, 0xC6, 0x31,
  0x8C, 0x62, 0xC3, 0x00, 0x10, 0x41, 0x04, 0x10, 0x45, 0x13, 0x80, 0x18,
  0xC0, 0x10, 0x84, 0x21, 0x8C, 0x63, 0x19, 0xB8, 0x84, 0x21, 0x3B, 0x73,
  0xD1, 0x8C, 0x62, 0x84, 0x21, 0x08, 0x42, 0x10, 0x8C, 0x5C, 0xFA, 0x9A,
  0x69, 0xA6, 0x9A, 0x69, 0x74, 0x63, 0x18, 0xC6, 0x31, 0x74, 0x63, 0x18,
  0xC6, 0x2E, 0x74, 0x63, 0x18, 0xC6, 0x3E, 0x84, 0x20, 0x71, 0x12, 0x24,
  0x48, 0x91, 0x22, 0x3C, 0x08, 0x18, 0x20, 0x74, 0x63, 0x08, 0x42, 0x10,
  0x32, 0x90, 0x60, 0xC6, 0x2E, 0x41, 0x04, 0x3E, 0x41, 0x04, 0x10, 0x45,
  0x13, 0x80, 0x8C, 0x63, 0x18, 0xC6, 0x2E, 0x87, 0x34, 0x92, 0x30, 0xC3,
  0x00, 0xA6, 0x9A, 0x69, 0xA6, 0x9A, 0x7E, 0x85, 0x27, 0x8C, 0x31, 0xE4,
  0xA1, 0x8C, 0x63, 0x18, 0xC6, 0x2F, 0x0C, 0x5C, 0x78, 0x21, 0x0C, 0x21,
  0x0F, 0x80, 0x7B, 0x38, 0xE7, 0x96, 0xDA, 0x79, 0xC7, 0x37, 0x80, 0x05,
  0xD2, 0x49, 0x24, 0x80, 0x7B, 0x38, 0x61, 0x04, 0x63, 0x08, 0x43, 0x0F,
  0xC0, 0xF8, 0x61, 0x0C, 0x38, 0x30, 0x61, 0xCD, 0xE0, 0x04, 0x18, 0x30,
  0xA3, 0x44, 0x91, 0x3F, 0x04, 0x08, 0x10, 0x79, 0x04, 0x10, 0xF9, 0x30,
  0x61, 0xCD, 0xE0, 0x7B, 0x28, 0x61, 0x83, 0xEC, 0xE1, 0x87, 0x37, 0x80,
  0xFC, 0x20, 0x84, 0x10, 0x82, 0x10, 0x42, 0x00, 0x7B, 0x38, 0x61, 0x79,
  0xE8, 0x61, 0x87, 0x37, 0x80, 0x7B, 0x38, 0x61, 0xCD, 0xF0, 0x61, 0x85,
  0x37, 0x80, 0xFC, 0x60, 0x90, 0x91, 0x66, 0x0C, 0x30, 0x60, 0x86, 0x09,
  0x09, 0x06, 0xF0, 0xF6, 0x55, 0x55, 0x3C, 0xF0, 0xF0, 0xFC, 0xE8, 0x88,
  0x88, 0x88, 0x88, 0x88, 0x88, 0xE0, 0x71, 0x11, 0x11, 0x11, 0x11, 0x11,
  0x11, 0x70, 0x2D, 0x69, 0x24, 0x92, 0x44, 0x98, 0x99, 0x32, 0x49, 0x24,
  0x94, 0xB0 };

// Glyph, Offset to bitmap, Width, Height, xAdvance, xOffset, yOffset

const gfxglyph_t HotStuff7Glyphs[] PROGMEM = {
  {32,     0,   1,   1,   8,    0,    0 },   // 0x00 ' ' 
  {65,     1,   6,  11,   8,    1,  -10 },   // 0x01 'A' 
  {66,    10,   6,  10,   8,    1,   -9 },   // 0x02 'B' 
  {67,    18,   6,  11,   8,    1,  -10 },   // 0x03 'C' 
  {68,    27,   6,  10,   8,    1,   -9 },   // 0x04 'D' 
  {69,    35,   6,  10,   8,    1,   -9 },   // 0x05 'E' 
  {70,    43,   5,  10,   8,    1,   -9 },   // 0x06 'F' 
  {71,    50,   6,  11,   8,    1,  -10 },   // 0x07 'G' 
  {72,    59,   6,  11,   8,    1,  -10 },   // 0x08 'H' 
  {73,    68,   5,  10,   8,    1,   -9 },   // 0x09 'I' 
  {74,    75,   6,  10,   8,    1,   -9 },   // 0x0A 'J' 
  {75,    83,   6,  11,   8,    1,  -10 },   // 0x0B 'K' 
  {76,    92,   6,  11,   8,    1,  -10 },   // 0x0C 'L' 
  {77,   101,   6,  11,   8,    1,  -10 },   // 0x0D 'M' 
  {78,   110,   6,  11,   8,    1,  -10 },   // 0x0E 'N' 
  {79,   119,   6,  11,   8,    1,  -10 },   // 0x0F 'O' 
  {80,   128,   6,  10,   8,    1,   -9 },   // 0x10 'P' 
  {81,   136,   6,  12,   8,    1,  -10 },   // 0x11 'Q' 
  {82,   145,   6,  10,   8,    1,   -9 },   // 0x12 'R' 
  {83,   153,   6,  11,   8,    1,  -10 },   // 0x13 'S' 
  {84,   162,   7,  10,   8,    0,   -9 },   // 0x14 'T' 
  {85,   171,   6,  11,   8,    1,  -10 },   // 0x15 'U' 
  {86,   180,   8,  11,   8,    0,  -10 },   // 0x16 'V' 
  {87,   191,   6,  11,   8,    1,  -10 },   // 0x17 'W' 
  {88,   200,   6,  11,   8,    1,  -10 },   // 0x18 'X' 
  {89,   209,   6,  11,   8,    1,  -10 },   // 0x19 'Y' 
  {90,   218,   6,  10,   8,    1,   -9 },   // 0x1A 'Z' 
  {97,   226,   5,   8,   8,    1,   -7 },   // 0x1B 'a' 
  {98,   231,   5,  11,   8,    1,  -10 },   // 0x1C 'b' 
  {99,   238,   5,   8,   8,    1,   -7 },   // 0x1D 'c' 
  {100,   243,   5,  11,   8,    1,  -10 },   // 0x1E 'd' 
  {101,   250,   5,   8,   8,    1,   -7 },   // 0x1F 'e' 
  {102,   255,   6,  11,   8,    0,  -10 },   // 0x20 'f' 
  {103,   264,   5,  11,   8,    1,   -7 },   // 0x21 'g' 
  {104,   271,   5,  11,   8,    1,  -10 },   // 0x22 'h' 
  {105,   278,   6,  11,   8,    0,  -10 },   // 0x23 'i' 
  {106,   287,   5,  14,   8,    1,  -10 },   // 0x24 'j' 
  {107,   296,   5,  11,   8,    1,  -10 },   // 0x25 'k' 
  {108,   303,   5,  11,   8,    1,  -10 },   // 0x26 'l' 
  {109,   310,   6,   8,   8,    1,   -7 },   // 0x27 'm' 
  {110,   316,   5,   8,   8,    1,   -7 },   // 0x28 'n' 
  {111,   321,   5,   8,   8,    1,   -7 },   // 0x29 'o' 
  {112,   326,   5,  11,   8,    1,   -7 },   // 0x2A 'p' 
  {113,   333,   7,  11,   8,    1,   -7 },   // 0x2B 'q' 
  {114,   343,   5,   8,   8,    1,   -7 },   // 0x2C 'r' 
  {115,   348,   5,   8,   8,    1,   -7 },   // 0x2D 's' 
  {116,   353,   6,  11,   8,    0,  -10 },   // 0x2E 't' 
  {117,   362,   5,   8,   8,    1,   -7 },   // 0x2F 'u' 
  {118,   367,   6,   8,   8,    1,   -7 },   // 0x30 'v' 
  {119,   373,   6,   8,   8,    1,   -7 },   // 0x31 'w' 
  {120,   379,   6,   8,   8,    1,   -7 },   // 0x32 'x' 
  {121,   385,   5,  11,   8,    1,   -7 },   // 0x33 'y' 
  {122,   392,   6,   7,   8,    1,   -6 },   // 0x34 'z' 
  {48,   398,   6,  11,   8,    1,  -10 },   // 0x35 '0' 
  {49,   407,   3,  11,   8,    1,  -10 },   // 0x36 '1' 
  {50,   412,   6,  11,   8,    1,  -10 },   // 0x37 '2' 
  {51,   421,   6,  10,   8,    1,   -9 },   // 0x38 '3' 
  {52,   429,   7,  11,   8,    0,  -10 },   // 0x39 '4' 
  {53,   439,   6,  10,   8,    1,   -9 },   // 0x3A '5' 
  {54,   447,   6,  11,   8,    1,  -10 },   // 0x3B '6' 
  {55,   456,   6,  10,   8,    1,   -9 },   // 0x3C '7' 
  {56,   464,   6,  11,   8,    1,  -10 },   // 0x3D '8' 
  {57,   473,   6,  11,   8,    1,  -10 },   // 0x3E '9' 
  {45,   482,   6,   1,   8,    1,   -5 },   // 0x3F '-' 
  {37,   483,   8,  11,   8,    0,  -10 },   // 0x40 '%' 
  {46,   494,   2,   2,   8,    3,   -1 },   // 0x41 '.' 
  {44,   495,   2,   4,   8,    3,   -1 },   // 0x42 ',' 
  {33,   496,   2,  11,   8,    3,  -10 },   // 0x43 '!' 
  {58,   499,   2,   6,   8,    3,   -5 },   // 0x44 ':' 
  {45,   501,   6,   1,   8,    1,   -5 },   // 0x45 '-' 
  {91,   502,   4,  15,   8,    3,  -12 },   // 0x46 '[' 
  {93,   510,   4,  15,   8,    1,  -12 },   // 0x47 ']' 
  {40,   518,   3,  15,   8,    3,  -12 },   // 0x48 '(' 
  {41,   524,   3,  15,   8,    2,  -12 }   // 0x49 ')' 
};

const gfxfont_t HotStuff7 PROGMEM = 
{
  (uint8_t  *)HotStuff7Bitmaps, //< Glyph bitmaps, concatenated 
  (gfxglyph_t *)HotStuff7Glyphs, //< Glyph array
  74,// total glyphs in the string
  15,  // newline distance (y axis)
     0,  // minimum X - left most
    -3,  // minimum Y - bottom most (descenders can drive this negative)
     8,  // maximum X - right most
    13}; // maximum Y - top most
// Approx. 1062 bytes -  but your mileage may vary.

#endif