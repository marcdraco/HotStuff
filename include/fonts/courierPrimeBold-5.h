
#ifndef __FIXEDFONTCOURIERPRIMEBOLDTTF5
#define __FIXEDFONTCOURIERPRIMEBOLDTTF5
const uint8_t HotStuff5Bitmaps[] PROGMEM = {
  0x00, 0xFC, 0xF0, 0xFF, 0x90, 0x29, 0xF3, 0x14, 0xF9, 0x40, 0x4F, 0xFF,
  0xDF, 0x40, 0xC2, 0xBD, 0x0B, 0x56, 0x30, 0x79, 0x8F, 0xAF, 0xF8, 0x0F,
  0x49, 0x22, 0x60, 0x19, 0x92, 0x4A, 0xC0, 0x6D, 0x6F, 0x21, 0x3E, 0x40,
  0xE8, 0xF0, 0xF0, 0x13, 0x22, 0x44, 0xC8, 0x6F, 0xFF, 0xF6, 0x66, 0x22,
  0x2F, 0xE9, 0x12, 0xDF, 0xFB, 0xE3, 0x3E, 0x26, 0xAF, 0x27, 0xF8, 0xE3,
  0x3E, 0x3A, 0x3D, 0xAD, 0x30, 0xF9, 0x32, 0x64, 0xF9, 0x6F, 0xF6, 0x32,
  0xD6, 0xF1, 0x70, 0xF3, 0xC0, 0xF3, 0xA0, 0x3E, 0xC3, 0x10, 0xF0, 0x0F,
  0xC7, 0x3C, 0x80, 0xF9, 0x60, 0x06, 0x39, 0xDB, 0x6F, 0x81, 0xC0, 0x70,
  0xC7, 0x9E, 0x4B, 0xF0, 0xF1, 0x24, 0x9E, 0x4F, 0xF0, 0x7D, 0xCC, 0xC7,
  0xF9, 0x34, 0xD3, 0x4F, 0xE0, 0xFA, 0x50, 0xE4, 0xFC, 0xFA, 0x50, 0xE4,
  0x70, 0x7B, 0x2C, 0x37, 0xC9, 0xE0, 0xFD, 0x24, 0x9E, 0x4B, 0xF0, 0x71,
  0x08, 0x42, 0x7C, 0xF2, 0x2A, 0xAE, 0xFD, 0x67, 0x1E, 0x4B, 0xB0, 0xE2,
  0x10, 0x94, 0xFC, 0xCD, 0xE7, 0x9E, 0x4B, 0xF0, 0xDD, 0xA6, 0x96, 0x5B,
  0xA0, 0x7B, 0x3C, 0xF3, 0xCD, 0xE0, 0xF9, 0x14, 0x5E, 0x43, 0x80, 0x76,
  0xF7, 0xBD, 0xBB, 0xE0, 0xF1, 0x24, 0x9C, 0x5B, 0xB0, 0xFD, 0xE7, 0xBF,
  0xFD, 0xD4, 0x4E, 0xFD, 0x24, 0x92, 0x48, 0xC0, 0xFD, 0x24, 0x8C, 0x30,
  0xC0, 0xED, 0x27, 0x9E, 0x79, 0x20, 0xED, 0x23, 0x0C, 0x4B, 0x70, 0xED,
  0x27, 0x08, 0x21, 0xC0, 0xFB, 0x24, 0xDF, 0xF2, 0x49, 0x27, 0x8C, 0x44,
  0x22, 0x31, 0xE4, 0x92, 0x4F, 0x66, 0xF9, 0xFC, 0x8C, 0xF0, 0xBD, 0x2F,
  0x80, 0xC1, 0xE4, 0xD3, 0x4F, 0xE0, 0x7D, 0xCC, 0x70, 0x18, 0x27, 0xB2,
  0xC9, 0xF0, 0xE9, 0xF8, 0xF0, 0x74, 0xF4, 0x4F, 0x7F, 0x2C, 0xB2, 0x78,
  0x27, 0x00, 0xC1, 0xE4, 0x92, 0x4B, 0xF0, 0x20, 0x18, 0x42, 0x13, 0xE0,
  0x10, 0x71, 0x11, 0x11, 0x70, 0xC1, 0x75, 0x9C, 0x5B, 0xB0, 0x61, 0x08,
  0x42, 0x7C, 0xFD, 0x55, 0x55, 0x54, 0xF9, 0x24, 0x92, 0xFC, 0x6F, 0xFF,
  0x60, 0xF9, 0x34, 0xD3, 0x79, 0x0F, 0x00, 0x7F, 0x2C, 0xB2, 0x78, 0x21,
  0xC0, 0xDB, 0x10, 0x8F, 0x00, 0xF9, 0xF9, 0xF0, 0x44, 0xF4, 0x47, 0xD9,
  0x24, 0x92, 0x7C, 0xED, 0x27, 0x8C, 0x30, 0xCD, 0xE7, 0x9E, 0x48, 0xF6,
  0x46, 0xF0, 0xED, 0x27, 0x8C, 0x30, 0x8C, 0x00, 0xFB, 0x6D, 0xF0, 0x69,
  0x44, 0x93, 0xFF, 0xC9, 0x14, 0x94, 0xF0 };

// Glyph, Offset to bitmap, Width, Height, xAdvance, xOffset, yOffset

const gfxglyph_t HotStuff5Glyphs[] PROGMEM = {
  {32,     0,   1,   1,   6,    0,    0 },   // 0x00 ' ' 
  {33,     1,   2,   6,   6,    2,   -5 },   // 0x01 '!' 
  {34,     3,   4,   3,   6,    1,   -5 },   // 0x02 '"' 
  {35,     5,   6,   6,   6,    0,   -5 },   // 0x03 '#' 
  {36,    10,   4,   7,   6,    1,   -5 },   // 0x04 '$' 
  {37,    14,   6,   6,   6,    0,   -5 },   // 0x05 '%' 
  {38,    19,   4,   6,   6,    1,   -5 },   // 0x06 '&' 
  {39,    22,   2,   3,   6,    2,   -5 },   // 0x07 ''' 
  {40,    23,   3,   9,   6,    1,   -6 },   // 0x08 '(' 
  {41,    27,   3,   9,   6,    2,   -6 },   // 0x09 ')' 
  {42,    31,   4,   4,   6,    1,   -5 },   // 0x0A '*' 
  {43,    33,   5,   4,   6,    0,   -4 },   // 0x0B '+' 
  {44,    36,   2,   3,   6,    2,   -1 },   // 0x0C ',' 
  {45,    37,   4,   1,   6,    1,   -2 },   // 0x0D '-' 
  {46,    38,   2,   2,   6,    2,   -1 },   // 0x0E '.' 
  {47,    39,   4,   8,   6,    1,   -6 },   // 0x0F '/' 
  {48,    43,   4,   6,   6,    1,   -5 },   // 0x10 '0' 
  {49,    46,   4,   6,   6,    1,   -5 },   // 0x11 '1' 
  {50,    49,   4,   6,   6,    1,   -5 },   // 0x12 '2' 
  {51,    52,   4,   6,   6,    1,   -5 },   // 0x13 '3' 
  {52,    55,   4,   6,   6,    1,   -5 },   // 0x14 '4' 
  {53,    58,   4,   6,   6,    1,   -5 },   // 0x15 '5' 
  {54,    61,   5,   6,   6,    1,   -5 },   // 0x16 '6' 
  {55,    65,   4,   6,   6,    1,   -5 },   // 0x17 '7' 
  {56,    68,   4,   6,   6,    1,   -5 },   // 0x18 '8' 
  {57,    71,   5,   6,   6,    0,   -5 },   // 0x19 '9' 
  {58,    75,   2,   5,   6,    2,   -4 },   // 0x1A ':' 
  {59,    77,   2,   6,   6,    2,   -4 },   // 0x1B ';' 
  {60,    79,   4,   5,   6,    1,   -4 },   // 0x1C '<' 
  {61,    82,   4,   4,   6,    1,   -4 },   // 0x1D '=' 
  {62,    84,   4,   5,   6,    1,   -4 },   // 0x1E '>' 
  {63,    87,   4,   6,   6,    1,   -5 },   // 0x1F '?' 
  {64,    90,   6,   6,   6,    0,   -4 },   // 0x20 '@' 
  {65,    95,   6,   6,   6,    0,   -5 },   // 0x21 'A' 
  {66,   100,   6,   6,   6,    0,   -5 },   // 0x22 'B' 
  {67,   105,   4,   6,   6,    1,   -5 },   // 0x23 'C' 
  {68,   108,   6,   6,   6,    0,   -5 },   // 0x24 'D' 
  {69,   113,   5,   6,   6,    0,   -5 },   // 0x25 'E' 
  {70,   117,   5,   6,   6,    0,   -5 },   // 0x26 'F' 
  {71,   121,   6,   6,   6,    0,   -5 },   // 0x27 'G' 
  {72,   126,   6,   6,   6,    0,   -5 },   // 0x28 'H' 
  {73,   131,   5,   6,   6,    0,   -5 },   // 0x29 'I' 
  {74,   135,   4,   6,   6,    1,   -5 },   // 0x2A 'J' 
  {75,   138,   6,   6,   6,    0,   -5 },   // 0x2B 'K' 
  {76,   143,   5,   6,   6,    0,   -5 },   // 0x2C 'L' 
  {77,   147,   6,   6,   6,    0,   -5 },   // 0x2D 'M' 
  {78,   152,   6,   6,   6,    0,   -5 },   // 0x2E 'N' 
  {79,   157,   6,   6,   6,    0,   -5 },   // 0x2F 'O' 
  {80,   162,   6,   6,   6,    0,   -5 },   // 0x30 'P' 
  {81,   167,   5,   7,   6,    0,   -5 },   // 0x31 'Q' 
  {82,   172,   6,   6,   6,    0,   -5 },   // 0x32 'R' 
  {83,   177,   4,   6,   6,    1,   -5 },   // 0x33 'S' 
  {84,   180,   4,   6,   6,    1,   -5 },   // 0x34 'T' 
  {85,   183,   6,   6,   6,    0,   -5 },   // 0x35 'U' 
  {86,   188,   6,   6,   6,    0,   -5 },   // 0x36 'V' 
  {87,   193,   6,   6,   6,    0,   -5 },   // 0x37 'W' 
  {88,   198,   6,   6,   6,    0,   -5 },   // 0x38 'X' 
  {89,   203,   6,   6,   6,    0,   -5 },   // 0x39 'Y' 
  {90,   208,   4,   6,   6,    1,   -5 },   // 0x3A 'Z' 
  {91,   211,   3,   8,   6,    2,   -5 },   // 0x3B '[' 
  {92,   214,   4,   8,   6,    1,   -6 },   // 0x3C '\' 
  {93,   218,   3,   8,   6,    1,   -5 },   // 0x3D ']' 
  {94,   221,   4,   4,   6,    1,   -5 },   // 0x3E '^' 
  {95,   223,   6,   1,   6,    0,    2 },   // 0x3F '_' 
  {96,   224,   3,   2,   6,    1,   -6 },   // 0x40 '`' 
  {97,   225,   5,   5,   6,    1,   -4 },   // 0x41 'a' 
  {98,   229,   6,   6,   6,    0,   -5 },   // 0x42 'b' 
  {99,   234,   4,   5,   6,    1,   -4 },   // 0x43 'c' 
  {100,   237,   6,   6,   6,    0,   -5 },   // 0x44 'd' 
  {101,   242,   4,   5,   6,    1,   -4 },   // 0x45 'e' 
  {102,   245,   4,   6,   6,    1,   -5 },   // 0x46 'f' 
  {103,   248,   6,   7,   6,    0,   -4 },   // 0x47 'g' 
  {104,   254,   6,   6,   6,    0,   -5 },   // 0x48 'h' 
  {105,   259,   5,   7,   6,    0,   -6 },   // 0x49 'i' 
  {106,   264,   4,   9,   6,    0,   -6 },   // 0x4A 'j' 
  {107,   269,   6,   6,   6,    0,   -5 },   // 0x4B 'k' 
  {108,   274,   5,   6,   6,    0,   -5 },   // 0x4C 'l' 
  {109,   278,   6,   5,   6,    0,   -4 },   // 0x4D 'm' 
  {110,   282,   6,   5,   6,    0,   -4 },   // 0x4E 'n' 
  {111,   286,   4,   5,   6,    1,   -4 },   // 0x4F 'o' 
  {112,   289,   6,   7,   6,    0,   -4 },   // 0x50 'p' 
  {113,   295,   6,   7,   6,    0,   -4 },   // 0x51 'q' 
  {114,   301,   5,   5,   6,    1,   -4 },   // 0x52 'r' 
  {115,   305,   4,   5,   6,    1,   -4 },   // 0x53 's' 
  {116,   308,   4,   6,   6,    1,   -5 },   // 0x54 't' 
  {117,   311,   6,   5,   6,    0,   -4 },   // 0x55 'u' 
  {118,   315,   6,   5,   6,    0,   -4 },   // 0x56 'v' 
  {119,   319,   6,   5,   6,    0,   -4 },   // 0x57 'w' 
  {120,   323,   4,   5,   6,    1,   -4 },   // 0x58 'x' 
  {121,   326,   6,   7,   6,    0,   -4 },   // 0x59 'y' 
  {122,   332,   4,   5,   6,    1,   -4 },   // 0x5A 'z' 
  {123,   335,   3,   8,   6,    1,   -5 },   // 0x5B '{' 
  {124,   338,   1,   8,   6,    2,   -5 },   // 0x5C '|' 
  {125,   339,   3,   8,   6,    2,   -5 },   // 0x5D '}' 
  {126,   342,   4,   1,   6,    1,   -2 }   // 0x5E '~' 
};

const gfxfont_t HotStuff5 PROGMEM = 
{
  (uint8_t  *)HotStuff5Bitmaps, //< Glyph bitmaps, concatenated 
  (gfxglyph_t *)HotStuff5Glyphs, //< Glyph array
  95,// total glyphs in the string
   1,  // newline distance (y axis)
     0,  // minimum X - left most
    -2,  // minimum Y - bottom most (descenders can drive this negative)
     6,  // maximum X - right most
     7}; // maximum Y - top most
// Approx. 1022 bytes -  but your mileage may vary.

#endif