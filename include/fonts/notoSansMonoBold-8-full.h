
#ifndef __FIXEDFONTNOTOSANSMONOBOLDTTF8
#define __FIXEDFONTNOTOSANSMONOBOLDTTF8
const uint8_t HotStuff8Bitmaps[] PROGMEM = {
  0x00, 0x1C, 0x0F, 0x07, 0x86, 0xC3, 0x61, 0xB8, 0xCC, 0xFE, 0x7F, 0x31,
  0xD8, 0x78, 0x30, 0xFC, 0xFE, 0xC7, 0xC7, 0xC6, 0xFE, 0xFE, 0xC7, 0xC7,
  0xC7, 0xFE, 0xFC, 0x1F, 0x7E, 0x61, 0xE0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0,
  0xE1, 0x7E, 0x3E, 0xF8, 0xFE, 0xC6, 0xC7, 0xC3, 0xC3, 0xC3, 0xC3, 0xC7,
  0xC6, 0xFE, 0xF8, 0xFF, 0xFF, 0x06, 0x0C, 0x1F, 0xFF, 0xE0, 0xC1, 0x83,
  0xFF, 0xF0, 0xFF, 0xFF, 0x06, 0x0C, 0x1F, 0xFF, 0xE0, 0xC1, 0x83, 0x06,
  0x00, 0x1F, 0x9F, 0x9C, 0x0C, 0x06, 0x07, 0x3F, 0x9E, 0xC3, 0x61, 0xB8,
  0xCF, 0xE3, 0xE0, 0xC7, 0xC7, 0xC7, 0xC7, 0xC7, 0xFF, 0xFF, 0xC7, 0xC7,
  0xC7, 0xC7, 0xC7, 0xFF, 0xFC, 0x60, 0xC1, 0x83, 0x06, 0x0C, 0x18, 0x33,
  0xFF, 0xF0, 0x0E, 0x1C, 0x38, 0x70, 0xE1, 0xC3, 0x87, 0x0E, 0x1B, 0xF7,
  0xC0, 0xC7, 0xCE, 0xCC, 0xDC, 0xD8, 0xF0, 0xF8, 0xF8, 0xCC, 0xCC, 0xC6,
  0xC7, 0xE1, 0xC3, 0x87, 0x0E, 0x1C, 0x38, 0x70, 0xE1, 0xC3, 0xFF, 0xF0,
  0xE7, 0xE7, 0xEF, 0xAF, 0xAF, 0xEB, 0xFB, 0xFB, 0xDB, 0xC3, 0xC3, 0xC3,
  0xE3, 0xE3, 0xF3, 0xF3, 0xF3, 0xD3, 0xDB, 0xDB, 0xCB, 0xCF, 0xCF, 0xCF,
  0x1E, 0x1F, 0x98, 0xCC, 0x76, 0x1F, 0x0F, 0x86, 0xC3, 0x63, 0xB1, 0x8F,
  0xC3, 0xC0, 0xFC, 0xFE, 0xC7, 0xC7, 0xC7, 0xC7, 0xFE, 0xFC, 0xC0, 0xC0,
  0xC0, 0xC0, 0x1E, 0x1F, 0x98, 0xCC, 0x76, 0x1F, 0x0F, 0x86, 0xC3, 0x63,
  0xB1, 0x8F, 0xC3, 0xC0, 0x60, 0x1C, 0xFC, 0xFE, 0xE6, 0xE6, 0xE6, 0xE6,
  0xFC, 0xF8, 0xEC, 0xEE, 0xE6, 0xE7, 0x3E, 0x7E, 0xE2, 0xE0, 0x70, 0x78,
  0x1E, 0x0E, 0x07, 0x86, 0xFE, 0xFC, 0xFF, 0xFF, 0xC3, 0x01, 0x80, 0xC0,
  0x60, 0x30, 0x18, 0x0C, 0x06, 0x03, 0x01, 0x80, 0xC7, 0xC7, 0xC7, 0xC7,
  0xC7, 0xC7, 0xC7, 0xC7, 0xC7, 0xC6, 0xFE, 0x7C, 0xE1, 0xB0, 0xD8, 0xEC,
  0x66, 0x31, 0x98, 0xD8, 0x6C, 0x36, 0x0F, 0x07, 0x03, 0x80, 0xC1, 0xE0,
  0xF0, 0x79, 0xBD, 0xDB, 0xED, 0xF6, 0xEB, 0x77, 0xBB, 0xDD, 0xEE, 0x70,
  0x63, 0xB9, 0x8D, 0xC7, 0xC1, 0xC0, 0xE0, 0x70, 0x3C, 0x36, 0x1B, 0x98,
  0xDC, 0x70, 0xE1, 0xB1, 0x9C, 0xC6, 0xE3, 0x60, 0xF0, 0x70, 0x18, 0x0C,
  0x06, 0x03, 0x01, 0x80, 0x7E, 0xFC, 0x38, 0x61, 0xC3, 0x0E, 0x18, 0x70,
  0xC3, 0xFF, 0xF0, 0xFC, 0xFC, 0x1B, 0xFF, 0xF8, 0xF1, 0xFF, 0x72, 0xC0,
  0xC0, 0xC0, 0xDC, 0xFE, 0xE7, 0xC7, 0xC7, 0xC7, 0xE7, 0xFE, 0xDC, 0x3E,
  0xFF, 0x87, 0x0C, 0x18, 0x38, 0xBF, 0x3E, 0x07, 0x07, 0x07, 0x7F, 0xFF,
  0xC7, 0xC7, 0xC7, 0xC7, 0xC7, 0xFF, 0x7B, 0x3C, 0x7E, 0xC6, 0xFF, 0xFF,
  0xC0, 0xE1, 0x7E, 0x3E, 0x1F, 0x1F, 0x38, 0xFE, 0xFE, 0x38, 0x38, 0x38,
  0x38, 0x38, 0x38, 0x38, 0x7B, 0xFF, 0xC7, 0xC7, 0xC7, 0xC7, 0xC7, 0xFF,
  0x7F, 0x07, 0x86, 0xFE, 0xFC, 0xC0, 0xC0, 0xC0, 0xDC, 0xFE, 0xE7, 0xC7,
  0xC7, 0xC7, 0xC7, 0xC7, 0xC7, 0x18, 0x18, 0x18, 0xF8, 0xF8, 0x18, 0x18,
  0x18, 0x18, 0x18, 0xFE, 0xFF, 0x1C, 0x71, 0x9F, 0x7C, 0x71, 0xC7, 0x1C,
  0x71, 0xC7, 0x1C, 0x7F, 0xBC, 0xC0, 0xC0, 0xC0, 0xC7, 0xCE, 0xDC, 0xD8,
  0xF8, 0xEC, 0xCE, 0xC6, 0xC7, 0xF8, 0xF8, 0x18, 0x18, 0x18, 0x18, 0x18,
  0x18, 0x18, 0x18, 0x7E, 0xFF, 0xDB, 0x7F, 0xF3, 0x79, 0xBC, 0xDE, 0x6F,
  0x37, 0x9B, 0xCD, 0x80, 0xDC, 0xFE, 0xE7, 0xC7, 0xC7, 0xC7, 0xC7, 0xC7,
  0xC7, 0x3C, 0xFE, 0xC6, 0xC7, 0xC7, 0xC7, 0xC6, 0xFE, 0x3C, 0xDC, 0xFE,
  0xE7, 0xC7, 0xC7, 0xC7, 0xE7, 0xFE, 0xDC, 0xC0, 0xC0, 0xC0, 0xC0, 0x7B,
  0xFF, 0xC7, 0xC7, 0xC7, 0xC7, 0xC7, 0xFF, 0x7F, 0x07, 0x07, 0x07, 0x07,
  0xF7, 0xFF, 0x38, 0x30, 0x30, 0x30, 0x30, 0xFC, 0xFC, 0x7E, 0xFF, 0x87,
  0x87, 0xC1, 0xE1, 0xFF, 0xFC, 0x30, 0x63, 0xFF, 0xF3, 0x06, 0x0C, 0x18,
  0x30, 0x7C, 0x78, 0xC7, 0xC7, 0xC7, 0xC7, 0xC7, 0xC7, 0xC7, 0xFF, 0x7B,
  0xE1, 0xB1, 0xDC, 0xC6, 0x63, 0x61, 0xB0, 0x78, 0x38, 0x1C, 0x00, 0xC1,
  0xE6, 0xF7, 0x6B, 0xB5, 0xDB, 0xAD, 0xDE, 0xEE, 0x77, 0x00, 0xE3, 0xB9,
  0x8F, 0x83, 0xC1, 0xC0, 0xF0, 0xD8, 0xE6, 0xE3, 0x80, 0xE1, 0xB1, 0xDC,
  0xC6, 0x63, 0x71, 0xF0, 0x78, 0x38, 0x0C, 0x06, 0x06, 0x0F, 0x07, 0x00,
  0xFF, 0xFC, 0x38, 0xE3, 0x86, 0x18, 0x7F, 0xFE, 0x3C, 0x7E, 0xE6, 0xCE,
  0xCF, 0xDF, 0xF7, 0xF7, 0xE6, 0xE6, 0x7E, 0x3C, 0x18, 0xF3, 0xE2, 0xC1,
  0x83, 0x06, 0x0C, 0x18, 0x31, 0xFB, 0xF0, 0x7C, 0xFE, 0x46, 0x06, 0x06,
  0x0E, 0x1C, 0x18, 0x30, 0x60, 0xFF, 0xFF, 0x7D, 0xFD, 0x18, 0x30, 0xE7,
  0x8F, 0x83, 0x07, 0x0F, 0xFF, 0xE0, 0x0C, 0x1C, 0x1C, 0x3C, 0x3C, 0x6C,
  0x6C, 0xCC, 0xFF, 0xFF, 0x0C, 0x0C, 0x7E, 0xFD, 0x83, 0x0F, 0x9F, 0x93,
  0x83, 0x07, 0x1F, 0xF7, 0xC0, 0x1E, 0x7E, 0x60, 0xE0, 0xDC, 0xFE, 0xE6,
  0xC7, 0xC7, 0xE6, 0x7E, 0x3C, 0xFF, 0xFF, 0x06, 0x0E, 0x0C, 0x0C, 0x1C,
  0x18, 0x38, 0x30, 0x30, 0x70, 0x3C, 0xFF, 0x9F, 0x37, 0xE7, 0x9F, 0x73,
  0xC7, 0x8F, 0xFB, 0xE0, 0x38, 0x7E, 0xC6, 0xC6, 0xC7, 0xE7, 0xFF, 0x76,
  0x06, 0x0E, 0x7C, 0x78, 0xFF, 0xC0, 0x73, 0x79, 0xB5, 0x9A, 0xCF, 0xC3,
  0xE0, 0x2C, 0x3F, 0x16, 0x9A, 0x49, 0xAC, 0x70, 0x7D, 0x80, 0x6D, 0xEC,
  0xFF, 0xB6, 0xDB, 0x0F, 0xB0, 0x7D, 0x80, 0x1F, 0x60, 0xFF, 0xC0, 0xFF,
  0x6D, 0xB6, 0xDB, 0x6D, 0xF8, 0xFD, 0xB6, 0xDB, 0x6D, 0xB7, 0xF8, 0x36,
  0x6C, 0xCC, 0xCC, 0xCC, 0xC6, 0x63, 0xC6, 0x63, 0x33, 0x33, 0x33, 0x36,
  0x6C };

// Glyph, Offset to bitmap, Width, Height, xAdvance, xOffset, yOffset

const gfxglyph_t HotStuff8Glyphs[] PROGMEM = {
  {32,     0,   1,   1,   9,    0,    0 },   // 0x00 ' ' 
  {65,     1,   9,  12,   9,    0,  -11 },   // 0x01 'A' 
  {66,    15,   8,  12,   9,    1,  -11 },   // 0x02 'B' 
  {67,    27,   8,  12,   9,    1,  -11 },   // 0x03 'C' 
  {68,    39,   8,  12,   9,    1,  -11 },   // 0x04 'D' 
  {69,    51,   7,  12,   9,    1,  -11 },   // 0x05 'E' 
  {70,    62,   7,  12,   9,    1,  -11 },   // 0x06 'F' 
  {71,    73,   9,  12,   9,    0,  -11 },   // 0x07 'G' 
  {72,    87,   8,  12,   9,    1,  -11 },   // 0x08 'H' 
  {73,    99,   7,  12,   9,    1,  -11 },   // 0x09 'I' 
  {74,   110,   7,  12,   9,    1,  -11 },   // 0x0A 'J' 
  {75,   121,   8,  12,   9,    1,  -11 },   // 0x0B 'K' 
  {76,   133,   7,  12,   9,    1,  -11 },   // 0x0C 'L' 
  {77,   144,   8,  12,   9,    1,  -11 },   // 0x0D 'M' 
  {78,   156,   8,  12,   9,    1,  -11 },   // 0x0E 'N' 
  {79,   168,   9,  12,   9,    0,  -11 },   // 0x0F 'O' 
  {80,   182,   8,  12,   9,    1,  -11 },   // 0x10 'P' 
  {81,   194,   9,  14,   9,    0,  -11 },   // 0x11 'Q' 
  {82,   210,   8,  12,   9,    1,  -11 },   // 0x12 'R' 
  {83,   222,   8,  12,   9,    1,  -11 },   // 0x13 'S' 
  {84,   234,   9,  12,   9,    0,  -11 },   // 0x14 'T' 
  {85,   248,   8,  12,   9,    1,  -11 },   // 0x15 'U' 
  {86,   260,   9,  12,   9,    0,  -11 },   // 0x16 'V' 
  {87,   274,   9,  12,   9,    0,  -11 },   // 0x17 'W' 
  {88,   288,   9,  12,   9,    0,  -11 },   // 0x18 'X' 
  {89,   302,   9,  12,   9,    0,  -11 },   // 0x19 'Y' 
  {90,   316,   7,  12,   9,    1,  -11 },   // 0x1A 'Z' 
  {97,   327,   7,   9,   9,    1,   -8 },   // 0x1B 'a' 
  {98,   335,   8,  12,   9,    1,  -11 },   // 0x1C 'b' 
  {99,   347,   7,   9,   9,    1,   -8 },   // 0x1D 'c' 
  {100,   355,   8,  12,   9,    1,  -11 },   // 0x1E 'd' 
  {101,   367,   8,   9,   9,    1,   -8 },   // 0x1F 'e' 
  {102,   376,   8,  12,   9,    1,  -11 },   // 0x20 'f' 
  {103,   388,   8,  13,   9,    1,   -8 },   // 0x21 'g' 
  {104,   401,   8,  12,   9,    1,  -11 },   // 0x22 'h' 
  {105,   413,   8,  12,   9,    1,  -11 },   // 0x23 'i' 
  {106,   425,   6,  16,   9,    1,  -11 },   // 0x24 'j' 
  {107,   437,   8,  12,   9,    1,  -11 },   // 0x25 'k' 
  {108,   449,   8,  12,   9,    1,  -11 },   // 0x26 'l' 
  {109,   461,   9,   9,   9,    0,   -8 },   // 0x27 'm' 
  {110,   472,   8,   9,   9,    1,   -8 },   // 0x28 'n' 
  {111,   481,   8,   9,   9,    1,   -8 },   // 0x29 'o' 
  {112,   490,   8,  13,   9,    1,   -8 },   // 0x2A 'p' 
  {113,   503,   8,  13,   9,    1,   -8 },   // 0x2B 'q' 
  {114,   516,   8,   9,   9,    1,   -8 },   // 0x2C 'r' 
  {115,   525,   7,   9,   9,    1,   -8 },   // 0x2D 's' 
  {116,   533,   7,  11,   9,    1,  -10 },   // 0x2E 't' 
  {117,   543,   8,   9,   9,    1,   -8 },   // 0x2F 'u' 
  {118,   552,   9,   9,   9,    0,   -8 },   // 0x30 'v' 
  {119,   563,   9,   9,   9,    0,   -8 },   // 0x31 'w' 
  {120,   574,   9,   9,   9,    0,   -8 },   // 0x32 'x' 
  {121,   585,   9,  13,   9,    0,   -8 },   // 0x33 'y' 
  {122,   600,   7,   9,   9,    1,   -8 },   // 0x34 'z' 
  {48,   608,   8,  12,   9,    1,  -11 },   // 0x35 '0' 
  {49,   620,   7,  12,   9,    1,  -11 },   // 0x36 '1' 
  {50,   631,   8,  12,   9,    1,  -11 },   // 0x37 '2' 
  {51,   643,   7,  12,   9,    1,  -11 },   // 0x38 '3' 
  {52,   654,   8,  12,   9,    1,  -11 },   // 0x39 '4' 
  {53,   666,   7,  12,   9,    1,  -11 },   // 0x3A '5' 
  {54,   677,   8,  12,   9,    1,  -11 },   // 0x3B '6' 
  {55,   689,   8,  12,   9,    1,  -11 },   // 0x3C '7' 
  {56,   701,   7,  12,   9,    1,  -11 },   // 0x3D '8' 
  {57,   712,   8,  12,   9,    1,  -11 },   // 0x3E '9' 
  {45,   724,   5,   2,   9,    2,   -4 },   // 0x3F '-' 
  {37,   726,   9,  12,   9,    0,  -11 },   // 0x40 '%' 
  {46,   740,   3,   3,   9,    3,   -2 },   // 0x41 '.' 
  {44,   742,   3,   5,   9,    3,   -2 },   // 0x42 ',' 
  {33,   744,   3,  12,   9,    3,  -11 },   // 0x43 '!' 
  {58,   749,   3,   9,   9,    3,   -8 },   // 0x44 ':' 
  {45,   753,   5,   2,   9,    2,   -4 },   // 0x45 '-' 
  {91,   755,   3,  15,   9,    4,  -11 },   // 0x46 '[' 
  {93,   761,   3,  15,   9,    2,  -11 },   // 0x47 ']' 
  {40,   767,   4,  14,   9,    3,  -11 },   // 0x48 '(' 
  {41,   774,   4,  14,   9,    2,  -10 }   // 0x49 ')' 
};

const gfxfont_t HotStuff8 PROGMEM = 
{
  (uint8_t  *)HotStuff8Bitmaps, //< Glyph bitmaps, concatenated 
  (gfxglyph_t *)HotStuff8Glyphs, //< Glyph array
  74,// total glyphs in the string
  16,  // newline distance (y axis)
     0,  // minimum X - left most
    -4,  // minimum Y - bottom most (descenders can drive this negative)
     9,  // maximum X - right most
    12}; // maximum Y - top most
// Approx. 1313 bytes -  but your mileage may vary.

#endif