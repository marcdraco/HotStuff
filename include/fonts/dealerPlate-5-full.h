
#ifndef __FIXEDFONTDEALERPLATECALIFORNIATTF5
#define __FIXEDFONTDEALERPLATECALIFORNIATTF5
const uint8_t HotStuff5Bitmaps[] PROGMEM = {
  0x00, 0x46, 0x66, 0x66, 0x99, 0xE9, 0x96, 0x99, 0x9E, 0x76, 0x49, 0x2B,
  0xE9, 0x99, 0x99, 0x9E, 0xF2, 0x79, 0x27, 0xF2, 0x4F, 0x24, 0x76, 0x4B,
  0x6B, 0xB6, 0xFB, 0x6D, 0xE9, 0x24, 0x97, 0x24, 0x92, 0x6B, 0xB7, 0x6D,
  0x6D, 0x92, 0x49, 0x27, 0xB7, 0xFF, 0x6D, 0xBF, 0xFB, 0x6D, 0x76, 0xDB,
  0x6B, 0xF6, 0xF9, 0x24, 0x76, 0xDB, 0x59, 0xF6, 0xFB, 0x6D, 0x6D, 0x12,
  0x6B, 0xE9, 0x24, 0x92, 0xB6, 0xDB, 0x6B, 0x9A, 0xA6, 0x66, 0x64, 0x99,
  0x9D, 0xDE, 0xEA, 0x96, 0x66, 0x66, 0x69, 0xAD, 0xA4, 0x92, 0xE4, 0x94,
  0x97, 0x46, 0x66, 0x66, 0x99, 0xE9, 0x96, 0x99, 0x9E, 0x76, 0x49, 0x2B,
  0xE9, 0x99, 0x99, 0x9E, 0xF2, 0x79, 0x27, 0xF2, 0x4F, 0x24, 0x76, 0x4B,
  0x6B, 0xB6, 0xFB, 0x6D, 0xE9, 0x24, 0x97, 0x24, 0x92, 0x6B, 0xB7, 0x6D,
  0x6D, 0x92, 0x49, 0x27, 0xB7, 0xFF, 0x6D, 0xBF, 0xFB, 0x6D, 0x76, 0xDB,
  0x6B, 0xF6, 0xF9, 0x24, 0x76, 0xDB, 0x59, 0xF6, 0xFB, 0x6D, 0x6D, 0x12,
  0x6B, 0xE9, 0x24, 0x92, 0xB6, 0xDB, 0x6B, 0x9A, 0xA6, 0x66, 0x64, 0x99,
  0x9D, 0xDE, 0xEA, 0x96, 0x66, 0x66, 0x69, 0xAD, 0xA4, 0x92, 0xE4, 0x94,
  0x97, 0x76, 0xDB, 0x6B, 0x49, 0x24, 0x97, 0x64, 0x94, 0xA7, 0xD5, 0x57,
  0x49, 0x27, 0x79, 0xF2, 0x72, 0x4B, 0x29, 0x2F, 0x6B, 0xE4, 0x94, 0x92,
  0x76, 0xBB, 0x6B, 0x76, 0xB2, 0x52, 0xC0, 0xDE, 0xEC, 0x47, 0xBB, 0x80,
  0xC0, 0xFD, 0x90, 0xEA, 0xAA, 0xAC, 0xD5, 0x55, 0x5C, 0x6A, 0xAA, 0x90,
  0x95, 0x55, 0x60, 0x55, 0xAA, 0x80 };

// Glyph, Offset to bitmap, Width, Height, xAdvance, xOffset, yOffset

const gfxglyph_t HotStuff5Glyphs[] PROGMEM = {
  {32,     0,   1,   1,   2,    0,    0 },   // 0x00 ' ' 
  {65,     1,   4,   8,   4,    0,   -7 },   // 0x01 'A' 
  {66,     5,   4,   8,   4,    0,   -7 },   // 0x02 'B' 
  {67,     9,   3,   8,   4,    0,   -7 },   // 0x03 'C' 
  {68,    12,   4,   8,   4,    0,   -7 },   // 0x04 'D' 
  {69,    16,   3,   8,   4,    0,   -7 },   // 0x05 'E' 
  {70,    19,   3,   8,   4,    0,   -7 },   // 0x06 'F' 
  {71,    22,   3,   8,   4,    0,   -7 },   // 0x07 'G' 
  {72,    25,   3,   8,   4,    0,   -7 },   // 0x08 'H' 
  {73,    28,   3,   8,   4,    0,   -7 },   // 0x09 'I' 
  {74,    31,   3,   8,   4,    0,   -7 },   // 0x0A 'J' 
  {75,    34,   3,   8,   4,    0,   -7 },   // 0x0B 'K' 
  {76,    37,   3,   8,   4,    0,   -7 },   // 0x0C 'L' 
  {77,    40,   3,   8,   4,    0,   -7 },   // 0x0D 'M' 
  {78,    43,   3,   8,   4,    0,   -7 },   // 0x0E 'N' 
  {79,    46,   3,   8,   4,    0,   -7 },   // 0x0F 'O' 
  {80,    49,   3,   8,   4,    0,   -7 },   // 0x10 'P' 
  {81,    52,   3,   8,   4,    0,   -7 },   // 0x11 'Q' 
  {82,    55,   3,   8,   4,    0,   -7 },   // 0x12 'R' 
  {83,    58,   3,   8,   4,    0,   -7 },   // 0x13 'S' 
  {84,    61,   3,   8,   4,    0,   -7 },   // 0x14 'T' 
  {85,    64,   3,   8,   4,    0,   -7 },   // 0x15 'U' 
  {86,    67,   4,   8,   4,    0,   -7 },   // 0x16 'V' 
  {87,    71,   4,   8,   4,    0,   -7 },   // 0x17 'W' 
  {88,    75,   4,   8,   4,    0,   -7 },   // 0x18 'X' 
  {89,    79,   3,   8,   4,    0,   -7 },   // 0x19 'Y' 
  {90,    82,   3,   8,   4,    0,   -7 },   // 0x1A 'Z' 
  {97,    85,   4,   8,   4,    0,   -7 },   // 0x1B 'a' 
  {98,    89,   4,   8,   4,    0,   -7 },   // 0x1C 'b' 
  {99,    93,   3,   8,   4,    0,   -7 },   // 0x1D 'c' 
  {100,    96,   4,   8,   4,    0,   -7 },   // 0x1E 'd' 
  {101,   100,   3,   8,   4,    0,   -7 },   // 0x1F 'e' 
  {102,   103,   3,   8,   4,    0,   -7 },   // 0x20 'f' 
  {103,   106,   3,   8,   4,    0,   -7 },   // 0x21 'g' 
  {104,   109,   3,   8,   4,    0,   -7 },   // 0x22 'h' 
  {105,   112,   3,   8,   4,    0,   -7 },   // 0x23 'i' 
  {106,   115,   3,   8,   4,    0,   -7 },   // 0x24 'j' 
  {107,   118,   3,   8,   4,    0,   -7 },   // 0x25 'k' 
  {108,   121,   3,   8,   4,    0,   -7 },   // 0x26 'l' 
  {109,   124,   3,   8,   4,    0,   -7 },   // 0x27 'm' 
  {110,   127,   3,   8,   4,    0,   -7 },   // 0x28 'n' 
  {111,   130,   3,   8,   4,    0,   -7 },   // 0x29 'o' 
  {112,   133,   3,   8,   4,    0,   -7 },   // 0x2A 'p' 
  {113,   136,   3,   8,   4,    0,   -7 },   // 0x2B 'q' 
  {114,   139,   3,   8,   4,    0,   -7 },   // 0x2C 'r' 
  {115,   142,   3,   8,   4,    0,   -7 },   // 0x2D 's' 
  {116,   145,   3,   8,   4,    0,   -7 },   // 0x2E 't' 
  {117,   148,   3,   8,   4,    0,   -7 },   // 0x2F 'u' 
  {118,   151,   4,   8,   4,    0,   -7 },   // 0x30 'v' 
  {119,   155,   4,   8,   4,    0,   -7 },   // 0x31 'w' 
  {120,   159,   4,   8,   4,    0,   -7 },   // 0x32 'x' 
  {121,   163,   3,   8,   4,    0,   -7 },   // 0x33 'y' 
  {122,   166,   3,   8,   4,    0,   -7 },   // 0x34 'z' 
  {48,   169,   3,   8,   4,    0,   -7 },   // 0x35 '0' 
  {49,   172,   3,   8,   4,    0,   -7 },   // 0x36 '1' 
  {50,   175,   3,   8,   4,    0,   -7 },   // 0x37 '2' 
  {51,   178,   2,   8,   4,    1,   -7 },   // 0x38 '3' 
  {52,   180,   3,   8,   4,    0,   -7 },   // 0x39 '4' 
  {53,   183,   3,   8,   4,    0,   -7 },   // 0x3A '5' 
  {54,   186,   3,   8,   4,    0,   -7 },   // 0x3B '6' 
  {55,   189,   3,   8,   4,    0,   -7 },   // 0x3C '7' 
  {56,   192,   3,   8,   4,    0,   -7 },   // 0x3D '8' 
  {57,   195,   3,   8,   4,    0,   -7 },   // 0x3E '9' 
  {45,   198,   2,   1,   2,    0,   -3 },   // 0x3F '-' 
  {37,   199,   4,   8,   4,    0,   -7 },   // 0x40 '%' 
  {46,   203,   1,   1,   2,    0,    0 },   // 0x41 '.' 
  {44,   204,   1,   2,   2,    0,    0 },   // 0x42 ',' 
  {33,   205,   1,   8,   2,    0,   -7 },   // 0x43 '!' 
  {58,   206,   1,   4,   2,    0,   -5 },   // 0x44 ':' 
  {91,   207,   2,  11,   2,    0,   -9 },   // 0x45 '[' 
  {93,   210,   2,  11,   2,    0,   -9 },   // 0x46 ']' 
  {40,   213,   2,  10,   2,    0,   -8 },   // 0x47 '(' 
  {41,   216,   2,  10,   2,    0,   -8 },   // 0x48 ')' 
  {47,   219,   2,   9,   2,    0,   -8 }   // 0x49 '/' 
};

const gfxfont_t HotStuff5 PROGMEM = 
{
  (uint8_t  *)HotStuff5Bitmaps, //< Glyph bitmaps, concatenated 
  (gfxglyph_t *)HotStuff5Glyphs, //< Glyph array
  74,// total glyphs in the string
  11,  // newline distance (y axis)
     0,  // minimum X - left most
    -1,  // minimum Y - bottom most (descenders can drive this negative)
     4,  // maximum X - right most
    10}; // maximum Y - top most
// Approx. 754 bytes -  but your mileage may vary.

#endif