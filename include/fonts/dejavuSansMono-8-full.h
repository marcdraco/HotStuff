
#ifndef __FIXEDFONTDEJAVUSANSMONOTTF8
#define __FIXEDFONTDEJAVUSANSMONOTTF8
const uint8_t HotStuff8Bitmaps[] PROGMEM = {
  0x00, 0x18, 0x18, 0x3C, 0x24, 0x24, 0x24, 0x42, 0x42, 0x7E, 0x42, 0x81,
  0x81, 0xFC, 0x83, 0x81, 0x81, 0x83, 0xFC, 0x83, 0x81, 0x81, 0x81, 0x83,
  0xFC, 0x1E, 0x63, 0x40, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x40, 0x63,
  0x1E, 0xF8, 0x86, 0x82, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x82, 0x86,
  0xF8, 0xFF, 0x80, 0x80, 0x80, 0x80, 0xFF, 0x80, 0x80, 0x80, 0x80, 0x80,
  0xFF, 0xFF, 0x80, 0x80, 0x80, 0x80, 0xFE, 0x80, 0x80, 0x80, 0x80, 0x80,
  0x80, 0x1E, 0x63, 0x40, 0x80, 0x80, 0x80, 0x87, 0x81, 0x81, 0x41, 0x61,
  0x1E, 0x81, 0x81, 0x81, 0x81, 0x81, 0xFF, 0x81, 0x81, 0x81, 0x81, 0x81,
  0x81, 0xF9, 0x08, 0x42, 0x10, 0x84, 0x21, 0x09, 0xF0, 0x1E, 0x04, 0x08,
  0x10, 0x20, 0x40, 0x81, 0x02, 0x07, 0x13, 0xC0, 0x82, 0x84, 0x88, 0x90,
  0xA0, 0xD0, 0x90, 0x88, 0x84, 0x84, 0x82, 0x81, 0x80, 0x80, 0x80, 0x80,
  0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0xFF, 0xC3, 0xC3, 0xE7, 0xA5,
  0xA5, 0x99, 0x99, 0x99, 0x81, 0x81, 0x81, 0x81, 0xC1, 0xC1, 0xA1, 0xA1,
  0x91, 0x91, 0x89, 0x89, 0x85, 0x85, 0x83, 0x83, 0x3C, 0x42, 0xC3, 0x81,
  0x81, 0x81, 0x81, 0x81, 0x81, 0xC3, 0x42, 0x3C, 0xFC, 0x82, 0x81, 0x81,
  0x81, 0x82, 0xFC, 0x80, 0x80, 0x80, 0x80, 0x80, 0x3C, 0x42, 0xC2, 0x81,
  0x81, 0x81, 0x81, 0x81, 0x81, 0xC3, 0x42, 0x3E, 0x06, 0x02, 0xFC, 0x41,
  0x20, 0x50, 0x28, 0x14, 0x1B, 0xF1, 0x04, 0x81, 0x40, 0xA0, 0x50, 0x10,
  0x3C, 0x46, 0x80, 0x80, 0x80, 0x70, 0x1E, 0x01, 0x01, 0x81, 0xC3, 0x7C,
  0xFF, 0x84, 0x02, 0x01, 0x00, 0x80, 0x40, 0x20, 0x10, 0x08, 0x04, 0x02,
  0x01, 0x00, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81,
  0x42, 0x3C, 0x81, 0x81, 0x42, 0x42, 0x42, 0x42, 0x24, 0x24, 0x24, 0x3C,
  0x18, 0x18, 0x80, 0x60, 0x18, 0x05, 0x32, 0x4C, 0x93, 0x24, 0xC9, 0x4A,
  0x52, 0x94, 0xA2, 0x10, 0x84, 0x81, 0x42, 0x42, 0x24, 0x24, 0x18, 0x18,
  0x24, 0x24, 0x42, 0x42, 0x81, 0x80, 0xA0, 0x88, 0x84, 0x41, 0x40, 0xA0,
  0x20, 0x10, 0x08, 0x04, 0x02, 0x01, 0x00, 0xFF, 0x01, 0x02, 0x04, 0x0C,
  0x08, 0x10, 0x30, 0x20, 0x40, 0x80, 0xFF, 0x3E, 0x43, 0x01, 0x3F, 0xC1,
  0x81, 0x83, 0xC7, 0x7D, 0x80, 0x80, 0x80, 0xBC, 0xC2, 0x81, 0x81, 0x81,
  0x81, 0x81, 0xC2, 0xBC, 0x3C, 0x86, 0x04, 0x08, 0x10, 0x20, 0x21, 0x3C,
  0x01, 0x01, 0x01, 0x3D, 0x43, 0x81, 0x81, 0x81, 0x81, 0x81, 0x43, 0x3D,
  0x3C, 0x42, 0x81, 0x81, 0xFF, 0x80, 0x80, 0x41, 0x3E, 0x1C, 0x82, 0x3F,
  0x20, 0x82, 0x08, 0x20, 0x82, 0x08, 0x3D, 0x43, 0x81, 0x81, 0x81, 0x81,
  0x81, 0x43, 0x3D, 0x01, 0x42, 0x3C, 0x80, 0x80, 0x80, 0xBE, 0xC3, 0x81,
  0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x10, 0x20, 0x03, 0x81, 0x02, 0x04,
  0x08, 0x10, 0x20, 0x47, 0xF0, 0x11, 0x07, 0x11, 0x11, 0x11, 0x11, 0x11,
  0xE0, 0x80, 0x80, 0x80, 0x84, 0x88, 0x90, 0xA0, 0xD0, 0x88, 0x84, 0x82,
  0x81, 0xF0, 0x20, 0x40, 0x81, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x70,
  0xFD, 0x26, 0x4C, 0x99, 0x32, 0x64, 0xC9, 0x92, 0xBE, 0xC3, 0x81, 0x81,
  0x81, 0x81, 0x81, 0x81, 0x81, 0x3C, 0x42, 0x81, 0x81, 0x81, 0x81, 0x81,
  0x42, 0x3C, 0xBC, 0xC2, 0x81, 0x81, 0x81, 0x81, 0x81, 0xC2, 0xBC, 0x80,
  0x80, 0x80, 0x3D, 0x43, 0x81, 0x81, 0x81, 0x81, 0x81, 0x43, 0x3D, 0x01,
  0x01, 0x01, 0xBB, 0x18, 0x20, 0x82, 0x08, 0x20, 0x80, 0x3E, 0xC1, 0x80,
  0xC0, 0x7E, 0x03, 0x01, 0x83, 0x7C, 0x20, 0x8F, 0xC8, 0x20, 0x82, 0x08,
  0x20, 0x81, 0xC0, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0xC3, 0x7D,
  0x81, 0x42, 0x42, 0x42, 0x24, 0x24, 0x24, 0x18, 0x18, 0x80, 0x60, 0x14,
  0xC9, 0x32, 0x54, 0x94, 0xA5, 0x28, 0x84, 0x21, 0x00, 0xC3, 0x42, 0x24,
  0x18, 0x18, 0x18, 0x24, 0x42, 0xC3, 0x81, 0x42, 0x42, 0x42, 0x24, 0x24,
  0x14, 0x18, 0x18, 0x08, 0x10, 0x70, 0xFF, 0x01, 0x02, 0x04, 0x18, 0x20,
  0x40, 0x80, 0xFF, 0x3C, 0x42, 0x42, 0x81, 0x81, 0x99, 0x99, 0x81, 0x81,
  0x42, 0x42, 0x3C, 0x73, 0x41, 0x04, 0x10, 0x41, 0x04, 0x10, 0x41, 0x1F,
  0x7C, 0xC2, 0x81, 0x01, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x60, 0xFF,
  0x7C, 0x82, 0x01, 0x01, 0x03, 0x3C, 0x02, 0x01, 0x01, 0x01, 0x82, 0x7C,
  0x0C, 0x1C, 0x14, 0x34, 0x24, 0x44, 0x44, 0x84, 0xFF, 0x04, 0x04, 0x04,
  0x7E, 0x40, 0x40, 0x40, 0x7C, 0x42, 0x01, 0x01, 0x01, 0x01, 0x82, 0x7C,
  0x3C, 0x62, 0x40, 0x80, 0xBC, 0xC2, 0x81, 0x81, 0x81, 0x81, 0x42, 0x3C,
  0xFF, 0x01, 0x02, 0x02, 0x04, 0x04, 0x08, 0x08, 0x08, 0x10, 0x10, 0x20,
  0x3C, 0xC3, 0x81, 0x81, 0xC3, 0x3C, 0x43, 0x81, 0x81, 0x81, 0x42, 0x3C,
  0x3C, 0x42, 0x81, 0x81, 0x81, 0x81, 0x43, 0x3D, 0x01, 0x02, 0x46, 0x3C,
  0xF0, 0x70, 0x44, 0x22, 0x11, 0x07, 0x10, 0x30, 0x60, 0xCE, 0x08, 0x84,
  0x42, 0x20, 0xE0, 0xF0, 0x6D, 0xE8, 0xFF, 0x30, 0xF0, 0x0F, 0xF2, 0x49,
  0x24, 0x92, 0x49, 0xC0, 0xE4, 0x92, 0x49, 0x24, 0x93, 0xC0, 0x36, 0x44,
  0x88, 0x88, 0x88, 0x44, 0x63, 0xC6, 0x22, 0x11, 0x11, 0x11, 0x22, 0x6C };

// Glyph, Offset to bitmap, Width, Height, xAdvance, xOffset, yOffset

const gfxglyph_t HotStuff8Glyphs[] PROGMEM = {
  {32,     0,   1,   1,  10,    0,    0 },   // 0x00 ' ' 
  {65,     1,   8,  12,  10,    1,  -11 },   // 0x01 'A' 
  {66,    13,   8,  12,  10,    1,  -11 },   // 0x02 'B' 
  {67,    25,   8,  12,  10,    1,  -11 },   // 0x03 'C' 
  {68,    37,   8,  12,  10,    1,  -11 },   // 0x04 'D' 
  {69,    49,   8,  12,  10,    1,  -11 },   // 0x05 'E' 
  {70,    61,   8,  12,  10,    1,  -11 },   // 0x06 'F' 
  {71,    73,   8,  12,  10,    1,  -11 },   // 0x07 'G' 
  {72,    85,   8,  12,  10,    1,  -11 },   // 0x08 'H' 
  {73,    97,   5,  12,  10,    2,  -11 },   // 0x09 'I' 
  {74,   105,   7,  12,  10,    1,  -11 },   // 0x0A 'J' 
  {75,   116,   8,  12,  10,    1,  -11 },   // 0x0B 'K' 
  {76,   128,   8,  12,  10,    1,  -11 },   // 0x0C 'L' 
  {77,   140,   8,  12,  10,    1,  -11 },   // 0x0D 'M' 
  {78,   152,   8,  12,  10,    1,  -11 },   // 0x0E 'N' 
  {79,   164,   8,  12,  10,    1,  -11 },   // 0x0F 'O' 
  {80,   176,   8,  12,  10,    1,  -11 },   // 0x10 'P' 
  {81,   188,   8,  14,  10,    1,  -11 },   // 0x11 'Q' 
  {82,   202,   9,  12,  10,    1,  -11 },   // 0x12 'R' 
  {83,   216,   8,  12,  10,    1,  -11 },   // 0x13 'S' 
  {84,   228,   9,  12,  10,    0,  -11 },   // 0x14 'T' 
  {85,   242,   8,  12,  10,    1,  -11 },   // 0x15 'U' 
  {86,   254,   8,  12,  10,    1,  -11 },   // 0x16 'V' 
  {87,   266,  10,  12,  10,    0,  -11 },   // 0x17 'W' 
  {88,   281,   8,  12,  10,    1,  -11 },   // 0x18 'X' 
  {89,   293,   9,  12,  10,    0,  -11 },   // 0x19 'Y' 
  {90,   307,   8,  12,  10,    1,  -11 },   // 0x1A 'Z' 
  {97,   319,   8,   9,  10,    1,   -8 },   // 0x1B 'a' 
  {98,   328,   8,  12,  10,    1,  -11 },   // 0x1C 'b' 
  {99,   340,   7,   9,  10,    1,   -8 },   // 0x1D 'c' 
  {100,   348,   8,  12,  10,    1,  -11 },   // 0x1E 'd' 
  {101,   360,   8,   9,  10,    1,   -8 },   // 0x1F 'e' 
  {102,   369,   6,  12,  10,    2,  -11 },   // 0x20 'f' 
  {103,   378,   8,  12,  10,    1,   -8 },   // 0x21 'g' 
  {104,   390,   8,  12,  10,    1,  -11 },   // 0x22 'h' 
  {105,   402,   7,  12,  10,    1,  -11 },   // 0x23 'i' 
  {106,   413,   4,  15,  10,    2,  -11 },   // 0x24 'j' 
  {107,   421,   8,  12,  10,    1,  -11 },   // 0x25 'k' 
  {108,   433,   7,  12,  10,    1,  -11 },   // 0x26 'l' 
  {109,   444,   7,   9,  10,    1,   -8 },   // 0x27 'm' 
  {110,   452,   8,   9,  10,    1,   -8 },   // 0x28 'n' 
  {111,   461,   8,   9,  10,    1,   -8 },   // 0x29 'o' 
  {112,   470,   8,  12,  10,    1,   -8 },   // 0x2A 'p' 
  {113,   482,   8,  12,  10,    1,   -8 },   // 0x2B 'q' 
  {114,   494,   6,   9,  10,    3,   -8 },   // 0x2C 'r' 
  {115,   501,   8,   9,  10,    1,   -8 },   // 0x2D 's' 
  {116,   510,   6,  11,  10,    1,  -10 },   // 0x2E 't' 
  {117,   519,   8,   9,  10,    1,   -8 },   // 0x2F 'u' 
  {118,   528,   8,   9,  10,    1,   -8 },   // 0x30 'v' 
  {119,   537,  10,   9,  10,    0,   -8 },   // 0x31 'w' 
  {120,   549,   8,   9,  10,    1,   -8 },   // 0x32 'x' 
  {121,   558,   8,  12,  10,    1,   -8 },   // 0x33 'y' 
  {122,   570,   8,   9,  10,    1,   -8 },   // 0x34 'z' 
  {48,   579,   8,  12,  10,    1,  -11 },   // 0x35 '0' 
  {49,   591,   6,  12,  10,    2,  -11 },   // 0x36 '1' 
  {50,   600,   8,  12,  10,    1,  -11 },   // 0x37 '2' 
  {51,   612,   8,  12,  10,    1,  -11 },   // 0x38 '3' 
  {52,   624,   8,  12,  10,    1,  -11 },   // 0x39 '4' 
  {53,   636,   8,  12,  10,    1,  -11 },   // 0x3A '5' 
  {54,   648,   8,  12,  10,    1,  -11 },   // 0x3B '6' 
  {55,   660,   8,  12,  10,    1,  -11 },   // 0x3C '7' 
  {56,   672,   8,  12,  10,    1,  -11 },   // 0x3D '8' 
  {57,   684,   8,  12,  10,    1,  -11 },   // 0x3E '9' 
  {45,   696,   4,   1,  10,    3,   -4 },   // 0x3F '-' 
  {37,   697,   9,  12,  10,    0,  -11 },   // 0x40 '%' 
  {46,   711,   2,   2,  10,    4,   -1 },   // 0x41 '.' 
  {44,   712,   3,   5,  10,    3,   -1 },   // 0x42 ',' 
  {33,   714,   1,  12,  10,    4,  -11 },   // 0x43 '!' 
  {58,   716,   2,   8,  10,    4,   -7 },   // 0x44 ':' 
  {91,   718,   3,  14,  10,    4,  -11 },   // 0x45 '[' 
  {93,   724,   3,  14,  10,    3,  -11 },   // 0x46 ']' 
  {40,   730,   4,  14,  10,    3,  -11 },   // 0x47 '(' 
  {41,   737,   4,  14,  10,    2,  -11 }   // 0x48 ')' 
};

const gfxfont_t HotStuff8 PROGMEM = 
{
  (uint8_t  *)HotStuff8Bitmaps, //< Glyph bitmaps, concatenated 
  (gfxglyph_t *)HotStuff8Glyphs, //< Glyph array
  73,// total glyphs in the string
  15,  // newline distance (y axis)
     0,  // minimum X - left most
    -3,  // minimum Y - bottom most (descenders can drive this negative)
    10,  // maximum X - right most
    12}; // maximum Y - top most
// Approx. 1269 bytes -  but your mileage may vary.

#endif