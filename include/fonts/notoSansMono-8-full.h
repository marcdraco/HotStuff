
#ifndef __FIXEDFONTNOTOSANSMONOREGULARTTF8
#define __FIXEDFONTNOTOSANSMONOREGULARTTF8
const uint8_t HotStuff8Bitmaps[] PROGMEM = {
  0x00, 0x0C, 0x0E, 0x05, 0x02, 0xC1, 0x61, 0x90, 0x88, 0x7E, 0x61, 0x20,
  0x90, 0x78, 0x30, 0xFC, 0xC6, 0xC2, 0xC2, 0xC6, 0xF8, 0xC6, 0xC2, 0xC3,
  0xC2, 0xC6, 0xFC, 0x1F, 0x62, 0x40, 0xC0, 0xC0, 0x80, 0x80, 0xC0, 0xC0,
  0x40, 0x62, 0x3E, 0xF8, 0xCC, 0xC6, 0xC2, 0xC3, 0xC3, 0xC3, 0xC3, 0xC2,
  0xC6, 0xCC, 0xF8, 0xFF, 0x83, 0x06, 0x0C, 0x1F, 0xF0, 0x60, 0xC1, 0x83,
  0x07, 0xF0, 0xFF, 0x83, 0x06, 0x0C, 0x18, 0x3F, 0xE0, 0xC1, 0x83, 0x06,
  0x00, 0x3E, 0xC7, 0x04, 0x08, 0x10, 0x23, 0xC1, 0x83, 0x85, 0x89, 0xF0,
  0xC3, 0x87, 0x0E, 0x1C, 0x3F, 0xF0, 0xE1, 0xC3, 0x87, 0x0E, 0x10, 0xFC,
  0x82, 0x08, 0x20, 0x82, 0x08, 0x20, 0x82, 0x3F, 0x08, 0x42, 0x10, 0x84,
  0x21, 0x08, 0x67, 0xE0, 0xC2, 0xC4, 0xCC, 0xD8, 0xD0, 0xF0, 0xF0, 0xD8,
  0xCC, 0xC4, 0xC6, 0xC3, 0x82, 0x08, 0x20, 0x82, 0x08, 0x20, 0x82, 0x08,
  0x3F, 0xC7, 0xC7, 0xC7, 0xA7, 0xAF, 0xAB, 0xBB, 0x9B, 0x93, 0x83, 0x83,
  0x83, 0xC3, 0xC6, 0x8D, 0x19, 0x32, 0x66, 0xC5, 0x8B, 0x0E, 0x1C, 0x30,
  0x3C, 0x66, 0xC2, 0x82, 0x83, 0x83, 0x83, 0x83, 0x82, 0xC2, 0x66, 0x3C,
  0xFC, 0xC6, 0xC2, 0xC3, 0xC2, 0xC6, 0xFC, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0,
  0x3C, 0x66, 0xC2, 0x82, 0x83, 0x83, 0x83, 0x83, 0x82, 0xC2, 0x66, 0x3C,
  0x04, 0x06, 0x02, 0xFC, 0xC6, 0xC6, 0xC2, 0xC6, 0xC6, 0xF8, 0xC8, 0xCC,
  0xC4, 0xC2, 0xC3, 0x3E, 0xC5, 0x02, 0x06, 0x07, 0x07, 0x03, 0x02, 0x06,
  0x1F, 0xE0, 0xFF, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10,
  0x10, 0x10, 0xC3, 0x87, 0x0E, 0x1C, 0x38, 0x70, 0xE1, 0xC3, 0x85, 0x19,
  0xE0, 0xC1, 0xA0, 0xD8, 0x4C, 0x22, 0x31, 0x10, 0xC8, 0x2C, 0x16, 0x0A,
  0x03, 0x01, 0x80, 0xC0, 0xA0, 0x50, 0x29, 0xB4, 0xDA, 0x6D, 0x54, 0xAA,
  0x53, 0x29, 0x98, 0xC4, 0x60, 0xC3, 0x46, 0x64, 0x2C, 0x38, 0x18, 0x18,
  0x28, 0x24, 0x44, 0xC2, 0x83, 0x83, 0xC2, 0x46, 0x64, 0x2C, 0x28, 0x18,
  0x10, 0x10, 0x10, 0x10, 0x10, 0x7E, 0x0C, 0x10, 0x60, 0x83, 0x04, 0x18,
  0x20, 0xC1, 0x07, 0xF0, 0x7C, 0x8C, 0x09, 0xFC, 0x38, 0x61, 0xE7, 0x7A,
  0xC0, 0xC0, 0xC0, 0xC0, 0xFC, 0xE6, 0xC2, 0xC2, 0xC3, 0xC2, 0xC2, 0xE6,
  0xBC, 0x3E, 0xC5, 0x06, 0x0C, 0x18, 0x10, 0x31, 0x3E, 0x02, 0x04, 0x08,
  0x17, 0xA8, 0xF1, 0xC1, 0x83, 0x07, 0x1A, 0x33, 0xA0, 0x3C, 0xCF, 0x0C,
  0x1F, 0xF0, 0x30, 0x31, 0x3E, 0x0F, 0x18, 0x10, 0x10, 0xFE, 0x10, 0x10,
  0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x3A, 0x8F, 0x0C, 0x18, 0x30, 0x70,
  0xA3, 0x3A, 0x04, 0x0C, 0x37, 0xC0, 0xC1, 0x83, 0x06, 0x0D, 0xDC, 0xF0,
  0xE1, 0xC3, 0x87, 0x0E, 0x1C, 0x20, 0x18, 0x30, 0x00, 0x0F, 0x83, 0x06,
  0x0C, 0x18, 0x30, 0x60, 0xCF, 0xE0, 0x18, 0xC0, 0x07, 0x84, 0x21, 0x08,
  0x42, 0x10, 0x84, 0x33, 0xF0, 0x81, 0x02, 0x04, 0x08, 0x71, 0x26, 0x58,
  0xF1, 0xA2, 0x24, 0x68, 0x60, 0xF8, 0x30, 0x60, 0xC1, 0x83, 0x06, 0x0C,
  0x18, 0x30, 0x60, 0xCF, 0xE0, 0xF6, 0xDA, 0x9B, 0x93, 0x93, 0x93, 0x93,
  0x93, 0x93, 0x9D, 0xCF, 0x0E, 0x1C, 0x38, 0x70, 0xE1, 0xC2, 0x3C, 0x46,
  0xC2, 0x82, 0x83, 0x82, 0xC2, 0x46, 0x3C, 0xBC, 0xE6, 0xC2, 0xC2, 0xC3,
  0xC2, 0xC2, 0xE6, 0xFC, 0xC0, 0xC0, 0xC0, 0xC0, 0x3A, 0x8F, 0x1C, 0x18,
  0x30, 0x70, 0xA3, 0x3A, 0x04, 0x08, 0x10, 0x20, 0xF7, 0x19, 0x10, 0x10,
  0x10, 0x10, 0x10, 0x10, 0xFC, 0x7F, 0x18, 0x30, 0x30, 0x30, 0xE3, 0xF8,
  0x30, 0x60, 0xC7, 0xF3, 0x06, 0x0C, 0x18, 0x30, 0x60, 0xC0, 0xF0, 0xC3,
  0x87, 0x0E, 0x1C, 0x38, 0x71, 0xE3, 0x7A, 0x83, 0xC2, 0x46, 0x44, 0x64,
  0x2C, 0x28, 0x38, 0x18, 0xC0, 0xE0, 0x53, 0x2B, 0xB5, 0x52, 0xA9, 0x5C,
  0xA6, 0x23, 0x00, 0xC3, 0x46, 0x2C, 0x38, 0x18, 0x38, 0x6C, 0x46, 0xC3,
  0x83, 0xC2, 0x46, 0x44, 0x64, 0x24, 0x38, 0x18, 0x18, 0x10, 0x10, 0x30,
  0xE0, 0x7E, 0x0C, 0x30, 0x41, 0x86, 0x08, 0x20, 0xFE, 0x3C, 0xCF, 0x1C,
  0x78, 0xB3, 0x64, 0xD1, 0xE3, 0x85, 0x99, 0xE0, 0x33, 0xCB, 0x0C, 0x30,
  0xC3, 0x0C, 0x30, 0xC3, 0x3F, 0x7C, 0xC6, 0x06, 0x02, 0x06, 0x04, 0x0C,
  0x18, 0x30, 0x60, 0xC0, 0xFF, 0x7D, 0x8C, 0x18, 0x30, 0x47, 0x01, 0x81,
  0x02, 0x06, 0x1F, 0xE0, 0x0C, 0x0C, 0x14, 0x34, 0x24, 0x64, 0x44, 0x84,
  0xFF, 0x04, 0x04, 0x04, 0x7C, 0x81, 0x02, 0x04, 0x1F, 0x81, 0x83, 0x02,
  0x06, 0x1F, 0xC0, 0x1E, 0xC1, 0x06, 0x0B, 0xDC, 0xF0, 0xC1, 0x83, 0x85,
  0x99, 0xE0, 0xFE, 0x04, 0x08, 0x30, 0x41, 0x82, 0x04, 0x18, 0x20, 0xC1,
  0x00, 0x3C, 0x8F, 0x0E, 0x36, 0xC7, 0x1B, 0x63, 0x83, 0x87, 0x1B, 0xE0,
  0x3C, 0x8E, 0x0C, 0x18, 0x38, 0xDE, 0x81, 0x02, 0x0C, 0x33, 0xC0, 0xF8,
  0x71, 0x69, 0x24, 0x92, 0x89, 0x43, 0xE0, 0x2E, 0x39, 0x14, 0x9A, 0x49,
  0x2C, 0x70, 0xF0, 0x6D, 0x60, 0xFA, 0xAA, 0x0F, 0xF0, 0x03, 0xC0, 0xF8,
  0xF2, 0x49, 0x24, 0x92, 0x49, 0xC0, 0xE4, 0x92, 0x49, 0x24, 0x93, 0xC0,
  0x36, 0x44, 0xCC, 0xCC, 0xCC, 0x44, 0x63, 0xC6, 0x22, 0x33, 0x33, 0x33,
  0x22, 0x6C };

// Glyph, Offset to bitmap, Width, Height, xAdvance, xOffset, yOffset

const gfxglyph_t HotStuff8Glyphs[] PROGMEM = {
  {32,     0,   1,   1,   9,    0,    0 },   // 0x00 ' ' 
  {65,     1,   9,  12,   9,    0,  -11 },   // 0x01 'A' 
  {66,    15,   8,  12,   9,    1,  -11 },   // 0x02 'B' 
  {67,    27,   8,  12,   9,    1,  -11 },   // 0x03 'C' 
  {68,    39,   8,  12,   9,    1,  -11 },   // 0x04 'D' 
  {69,    51,   7,  12,   9,    1,  -11 },   // 0x05 'E' 
  {70,    62,   7,  12,   9,    1,  -11 },   // 0x06 'F' 
  {71,    73,   7,  12,   9,    1,  -11 },   // 0x07 'G' 
  {72,    84,   7,  12,   9,    1,  -11 },   // 0x08 'H' 
  {73,    95,   6,  12,   9,    2,  -11 },   // 0x09 'I' 
  {74,   104,   5,  12,   9,    2,  -11 },   // 0x0A 'J' 
  {75,   112,   8,  12,   9,    1,  -11 },   // 0x0B 'K' 
  {76,   124,   6,  12,   9,    2,  -11 },   // 0x0C 'L' 
  {77,   133,   8,  12,   9,    1,  -11 },   // 0x0D 'M' 
  {78,   145,   7,  12,   9,    1,  -11 },   // 0x0E 'N' 
  {79,   156,   8,  12,   9,    1,  -11 },   // 0x0F 'O' 
  {80,   168,   8,  12,   9,    1,  -11 },   // 0x10 'P' 
  {81,   180,   8,  15,   9,    1,  -11 },   // 0x11 'Q' 
  {82,   195,   8,  12,   9,    1,  -11 },   // 0x12 'R' 
  {83,   207,   7,  12,   9,    1,  -11 },   // 0x13 'S' 
  {84,   218,   8,  12,   9,    1,  -11 },   // 0x14 'T' 
  {85,   230,   7,  12,   9,    1,  -11 },   // 0x15 'U' 
  {86,   241,   9,  12,   9,    0,  -11 },   // 0x16 'V' 
  {87,   255,   9,  12,   9,    0,  -11 },   // 0x17 'W' 
  {88,   269,   8,  12,   9,    1,  -11 },   // 0x18 'X' 
  {89,   281,   8,  12,   9,    1,  -11 },   // 0x19 'Y' 
  {90,   293,   7,  12,   9,    1,  -11 },   // 0x1A 'Z' 
  {97,   304,   7,   9,   9,    1,   -8 },   // 0x1B 'a' 
  {98,   312,   8,  13,   9,    1,  -12 },   // 0x1C 'b' 
  {99,   325,   7,   9,   9,    1,   -8 },   // 0x1D 'c' 
  {100,   333,   7,  13,   9,    1,  -12 },   // 0x1E 'd' 
  {101,   345,   7,   9,   9,    1,   -8 },   // 0x1F 'e' 
  {102,   353,   8,  13,   9,    1,  -12 },   // 0x20 'f' 
  {103,   366,   7,  13,   9,    1,   -8 },   // 0x21 'g' 
  {104,   378,   7,  13,   9,    1,  -12 },   // 0x22 'h' 
  {105,   390,   7,  13,   9,    1,  -12 },   // 0x23 'i' 
  {106,   402,   5,  17,   9,    1,  -12 },   // 0x24 'j' 
  {107,   413,   7,  13,   9,    2,  -12 },   // 0x25 'k' 
  {108,   425,   7,  13,   9,    1,  -12 },   // 0x26 'l' 
  {109,   437,   8,   9,   9,    1,   -8 },   // 0x27 'm' 
  {110,   446,   7,   9,   9,    1,   -8 },   // 0x28 'n' 
  {111,   454,   8,   9,   9,    1,   -8 },   // 0x29 'o' 
  {112,   463,   8,  13,   9,    1,   -8 },   // 0x2A 'p' 
  {113,   476,   7,  13,   9,    1,   -8 },   // 0x2B 'q' 
  {114,   488,   8,   9,   9,    1,   -8 },   // 0x2C 'r' 
  {115,   497,   6,   9,   9,    2,   -8 },   // 0x2D 's' 
  {116,   504,   7,  12,   9,    1,  -11 },   // 0x2E 't' 
  {117,   515,   7,   9,   9,    1,   -8 },   // 0x2F 'u' 
  {118,   523,   8,   9,   9,    1,   -8 },   // 0x30 'v' 
  {119,   532,   9,   9,   9,    0,   -8 },   // 0x31 'w' 
  {120,   543,   8,   9,   9,    1,   -8 },   // 0x32 'x' 
  {121,   552,   8,  13,   9,    1,   -8 },   // 0x33 'y' 
  {122,   565,   7,   9,   9,    1,   -8 },   // 0x34 'z' 
  {48,   573,   7,  12,   9,    1,  -11 },   // 0x35 '0' 
  {49,   584,   6,  12,   9,    2,  -11 },   // 0x36 '1' 
  {50,   593,   8,  12,   9,    1,  -11 },   // 0x37 '2' 
  {51,   605,   7,  12,   9,    1,  -11 },   // 0x38 '3' 
  {52,   616,   8,  12,   9,    1,  -11 },   // 0x39 '4' 
  {53,   628,   7,  12,   9,    1,  -11 },   // 0x3A '5' 
  {54,   639,   7,  12,   9,    1,  -11 },   // 0x3B '6' 
  {55,   650,   7,  12,   9,    1,  -11 },   // 0x3C '7' 
  {56,   661,   7,  12,   9,    1,  -11 },   // 0x3D '8' 
  {57,   672,   7,  12,   9,    1,  -11 },   // 0x3E '9' 
  {45,   683,   5,   1,   9,    2,   -4 },   // 0x3F '-' 
  {37,   684,   9,  12,   9,    0,  -11 },   // 0x40 '%' 
  {46,   698,   2,   2,   9,    4,   -1 },   // 0x41 '.' 
  {44,   699,   3,   4,   9,    3,   -1 },   // 0x42 ',' 
  {33,   701,   2,  12,   9,    4,  -11 },   // 0x43 '!' 
  {58,   704,   2,   9,   9,    4,   -8 },   // 0x44 ':' 
  {45,   707,   5,   1,   9,    2,   -4 },   // 0x45 '-' 
  {91,   708,   3,  14,   9,    4,  -11 },   // 0x46 '[' 
  {93,   714,   3,  14,   9,    2,  -10 },   // 0x47 ']' 
  {40,   720,   4,  14,   9,    3,  -11 },   // 0x48 '(' 
  {41,   727,   4,  14,   9,    2,  -10 }   // 0x49 ')' 
};

const gfxfont_t HotStuff8 PROGMEM = 
{
  (uint8_t  *)HotStuff8Bitmaps, //< Glyph bitmaps, concatenated 
  (gfxglyph_t *)HotStuff8Glyphs, //< Glyph array
  74,// total glyphs in the string
  17,  // newline distance (y axis)
     0,  // minimum X - left most
    -4,  // minimum Y - bottom most (descenders can drive this negative)
     9,  // maximum X - right most
    13}; // maximum Y - top most
// Approx. 1266 bytes -  but your mileage may vary.

#endif