
#ifndef __FIXEDFONTREPETTTF9
#define __FIXEDFONTREPETTTF9
const uint8_t HotStuff9Bitmaps[] PROGMEM = {
  0x00, 0x7E, 0x00, 0x81, 0x81, 0x81, 0xFF, 0xFF, 0x81, 0x00, 0x81, 0x00,
  0x81, 0xFE, 0x00, 0x81, 0x81, 0x81, 0xFE, 0xFE, 0x81, 0x00, 0x81, 0x00,
  0xFE, 0x7E, 0x00, 0x81, 0x80, 0x80, 0x80, 0x80, 0x80, 0x00, 0x81, 0x00,
  0x7E, 0xFE, 0x00, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x00, 0x81, 0x00,
  0xFE, 0xFF, 0x00, 0x80, 0x80, 0x80, 0xFF, 0xFF, 0x80, 0x00, 0x80, 0x00,
  0xFF, 0xFF, 0x00, 0x80, 0x80, 0x80, 0xFF, 0xFF, 0x80, 0x00, 0x80, 0x00,
  0x80, 0x7F, 0x00, 0x80, 0x80, 0x80, 0x87, 0x87, 0x81, 0x00, 0x81, 0x00,
  0x7F, 0x81, 0x00, 0x81, 0x81, 0x81, 0xFF, 0xFF, 0x81, 0x00, 0x81, 0x00,
  0x81, 0xFC, 0x03, 0x0C, 0x30, 0xC3, 0x0C, 0x00, 0xC0, 0x3F, 0x01, 0x00,
  0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x00, 0x81, 0x00, 0x7E, 0x81, 0x00,
  0x86, 0x98, 0x98, 0xE0, 0xE0, 0x98, 0x00, 0x86, 0x00, 0x81, 0x80, 0x00,
  0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x00, 0x80, 0x00, 0xFF, 0x81, 0x00,
  0xE7, 0x99, 0x99, 0x99, 0x99, 0x81, 0x00, 0x81, 0x00, 0x81, 0x81, 0x00,
  0xE1, 0x99, 0x99, 0x87, 0x87, 0x81, 0x00, 0x81, 0x00, 0x81, 0x7E, 0x00,
  0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x00, 0x81, 0x00, 0x7E, 0xFE, 0x00,
  0x81, 0x81, 0x81, 0xFE, 0xFE, 0x80, 0x00, 0x80, 0x00, 0x80, 0x7E, 0x00,
  0x81, 0x81, 0x81, 0x81, 0x81, 0x99, 0x00, 0x86, 0x00, 0x79, 0xFE, 0x00,
  0x81, 0x81, 0x81, 0xFE, 0xFE, 0x81, 0x00, 0x81, 0x00, 0x81, 0x7E, 0x00,
  0x81, 0x80, 0x80, 0x7E, 0x7E, 0x01, 0x00, 0x81, 0x00, 0x7E, 0xFF, 0x00,
  0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x00, 0x18, 0x00, 0x18, 0x81, 0x00,
  0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x00, 0x81, 0x00, 0x7E, 0x81, 0x00,
  0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x00, 0x66, 0x00, 0x18, 0x81, 0x00,
  0x81, 0x81, 0x81, 0x99, 0x99, 0x99, 0x00, 0xE7, 0x00, 0x81, 0x81, 0x00,
  0x81, 0x66, 0x66, 0x18, 0x18, 0x66, 0x00, 0x81, 0x00, 0x81, 0x81, 0x00,
  0x81, 0x81, 0x81, 0x66, 0x66, 0x18, 0x00, 0x18, 0x00, 0x18, 0xFF, 0x00,
  0x01, 0x06, 0x06, 0x18, 0x18, 0x60, 0x00, 0x80, 0x00, 0xFF, 0x7E, 0x7E,
  0x01, 0x01, 0x7F, 0x00, 0x81, 0x00, 0x7F, 0x80, 0x00, 0x80, 0xFE, 0xFE,
  0x81, 0x81, 0x81, 0x00, 0x81, 0x00, 0xFE, 0x7E, 0x7E, 0x81, 0x81, 0x80,
  0x00, 0x81, 0x00, 0x7E, 0x01, 0x00, 0x01, 0x7F, 0x7F, 0x81, 0x81, 0x81,
  0x00, 0x81, 0x00, 0x7F, 0x7E, 0x7E, 0x81, 0x81, 0xFF, 0x00, 0x80, 0x00,
  0x7E, 0x1E, 0x00, 0x61, 0x60, 0x60, 0xFE, 0xFE, 0x60, 0x00, 0x60, 0x00,
  0x60, 0x7E, 0x7E, 0x81, 0x81, 0x7F, 0x00, 0x01, 0x00, 0xFE, 0x80, 0x00,
  0x80, 0xFE, 0xFE, 0x81, 0x81, 0x81, 0x00, 0x81, 0x00, 0x81, 0x93, 0x50,
  0x02, 0x00, 0x00, 0x10, 0x00, 0x00, 0x81, 0x01, 0x04, 0x01, 0x40, 0x80,
  0x02, 0x04, 0x38, 0x73, 0x26, 0x70, 0x01, 0x30, 0x04, 0x30, 0xB3, 0x50,
  0xFE, 0xFE, 0x99, 0x99, 0x99, 0x00, 0x99, 0x00, 0x99, 0xFE, 0xFE, 0x81,
  0x81, 0x81, 0x00, 0x81, 0x00, 0x81, 0x7E, 0x7E, 0x81, 0x81, 0x81, 0x00,
  0x81, 0x00, 0x7E, 0xFE, 0xFE, 0x81, 0x81, 0xFE, 0x00, 0x80, 0x00, 0x80,
  0x7F, 0x7F, 0x81, 0x81, 0x7F, 0x00, 0x01, 0x00, 0x01, 0xFE, 0xFE, 0x81,
  0x81, 0x80, 0x00, 0x80, 0x00, 0x80, 0x7F, 0x7F, 0x80, 0x80, 0x7E, 0x00,
  0x01, 0x00, 0xFE, 0x60, 0xFE, 0xFE, 0x60, 0x60, 0x60, 0x00, 0x61, 0x00,
  0x1E, 0x81, 0x81, 0x81, 0x81, 0x81, 0x00, 0x81, 0x00, 0x7F, 0x81, 0x81,
  0x81, 0x81, 0x81, 0x00, 0x66, 0x00, 0x18, 0x99, 0x99, 0x99, 0x99, 0x99,
  0x00, 0x99, 0x00, 0xFE, 0x81, 0x81, 0x66, 0x66, 0x18, 0x00, 0x66, 0x00,
  0x81, 0x81, 0x81, 0x81, 0x81, 0x7F, 0x00, 0x01, 0x00, 0xFE, 0xFF, 0xFF,
  0x06, 0x06, 0x18, 0x00, 0x60, 0x00, 0xFF, 0x7E, 0x00, 0x81, 0x81, 0x81,
  0x81, 0x81, 0x81, 0x00, 0x81, 0x00, 0x7E, 0x30, 0x0F, 0x0C, 0x30, 0xC3,
  0x0C, 0x00, 0xC0, 0x3F, 0x7E, 0x00, 0x81, 0x01, 0x01, 0x06, 0x06, 0x18,
  0x00, 0x60, 0x00, 0xFF, 0x7E, 0x00, 0x81, 0x01, 0x01, 0x7E, 0x7E, 0x01,
  0x00, 0x81, 0x00, 0x7E, 0x06, 0x00, 0x1E, 0x66, 0x66, 0x86, 0x86, 0xFF,
  0x00, 0x06, 0x00, 0x06, 0xFF, 0x00, 0x80, 0xFE, 0xFE, 0x01, 0x01, 0x01,
  0x00, 0x81, 0x00, 0x7E, 0x1E, 0x00, 0x60, 0x80, 0x80, 0xFE, 0xFE, 0x81,
  0x00, 0x81, 0x00, 0x7E, 0xFF, 0x00, 0x01, 0x06, 0x06, 0x18, 0x18, 0x60,
  0x00, 0x80, 0x00, 0x80, 0x7E, 0x00, 0x81, 0x81, 0x81, 0x7E, 0x7E, 0x81,
  0x00, 0x81, 0x00, 0x7E, 0x7E, 0x00, 0x81, 0x81, 0x81, 0x7F, 0x7F, 0x01,
  0x00, 0x06, 0x00, 0x78, 0xA8, 0xE1, 0x00, 0xE1, 0x07, 0x07, 0x18, 0x18,
  0x60, 0x00, 0x87, 0x00, 0x87, 0xA2, 0x80, 0x20, 0x88, 0xB3, 0x10, 0xA2,
  0x80, 0x28, 0xA0, 0xFC, 0x0C, 0x30, 0xC3, 0x0C, 0x30, 0x03, 0x00, 0x3F,
  0xFC, 0x00, 0xC3, 0x0C, 0x30, 0xC3, 0x00, 0x30, 0x3F, 0x08, 0x09, 0x00,
  0x02, 0x10, 0x01, 0x00, 0x10, 0x80, 0x08, 0x10, 0x00, 0x21, 0x01, 0x01,
  0x00 };

// Glyph, Offset to bitmap, Width, Height, xAdvance, xOffset, yOffset

const gfxglyph_t HotStuff9Glyphs[] PROGMEM = {
  {32,     0,   1,   1,  10,    0,    0 },   // 0x00 ' ' 
  {65,     1,   8,  12,  10,    1,  -11 },   // 0x01 'A' 
  {66,    13,   8,  12,  10,    1,  -11 },   // 0x02 'B' 
  {67,    25,   8,  12,  10,    1,  -11 },   // 0x03 'C' 
  {68,    37,   8,  12,  10,    1,  -11 },   // 0x04 'D' 
  {69,    49,   8,  12,  10,    1,  -11 },   // 0x05 'E' 
  {70,    61,   8,  12,  10,    1,  -11 },   // 0x06 'F' 
  {71,    73,   8,  12,  10,    1,  -11 },   // 0x07 'G' 
  {72,    85,   8,  12,  10,    1,  -11 },   // 0x08 'H' 
  {73,    97,   6,  12,  10,    2,  -11 },   // 0x09 'I' 
  {74,   106,   8,  12,  10,    1,  -11 },   // 0x0A 'J' 
  {75,   118,   8,  12,  10,    1,  -11 },   // 0x0B 'K' 
  {76,   130,   8,  12,  10,    1,  -11 },   // 0x0C 'L' 
  {77,   142,   8,  12,  10,    1,  -11 },   // 0x0D 'M' 
  {78,   154,   8,  12,  10,    1,  -11 },   // 0x0E 'N' 
  {79,   166,   8,  12,  10,    1,  -11 },   // 0x0F 'O' 
  {80,   178,   8,  12,  10,    1,  -11 },   // 0x10 'P' 
  {81,   190,   8,  12,  10,    1,  -11 },   // 0x11 'Q' 
  {82,   202,   8,  12,  10,    1,  -11 },   // 0x12 'R' 
  {83,   214,   8,  12,  10,    1,  -11 },   // 0x13 'S' 
  {84,   226,   8,  12,  10,    1,  -11 },   // 0x14 'T' 
  {85,   238,   8,  12,  10,    1,  -11 },   // 0x15 'U' 
  {86,   250,   8,  12,  10,    1,  -11 },   // 0x16 'V' 
  {87,   262,   8,  12,  10,    1,  -11 },   // 0x17 'W' 
  {88,   274,   8,  12,  10,    1,  -11 },   // 0x18 'X' 
  {89,   286,   8,  12,  10,    1,  -11 },   // 0x19 'Y' 
  {90,   298,   8,  12,  10,    1,  -11 },   // 0x1A 'Z' 
  {97,   310,   8,   9,  10,    1,   -8 },   // 0x1B 'a' 
  {98,   319,   8,  12,  10,    1,  -11 },   // 0x1C 'b' 
  {99,   331,   8,   9,  10,    1,   -8 },   // 0x1D 'c' 
  {100,   340,   8,  12,  10,    1,  -11 },   // 0x1E 'd' 
  {101,   352,   8,   9,  10,    1,   -8 },   // 0x1F 'e' 
  {102,   361,   8,  12,  10,    1,  -11 },   // 0x20 'f' 
  {103,   373,   8,   9,  10,    1,   -8 },   // 0x21 'g' 
  {104,   382,   8,  12,  10,    1,  -11 },   // 0x22 'h' 
  {105,   394,   1,  12,  10,    4,  -11 },   // 0x23 'i' 
  {106,   396,   7,  12,  10,    1,  -11 },   // 0x24 'j' 
  {107,   407,   7,  12,  10,    1,  -11 },   // 0x25 'k' 
  {108,   418,   1,  12,  10,    4,  -11 },   // 0x26 'l' 
  {109,   420,   8,   9,  10,    1,   -8 },   // 0x27 'm' 
  {110,   429,   8,   9,  10,    1,   -8 },   // 0x28 'n' 
  {111,   438,   8,   9,  10,    1,   -8 },   // 0x29 'o' 
  {112,   447,   8,   9,  10,    1,   -8 },   // 0x2A 'p' 
  {113,   456,   8,   9,  10,    1,   -8 },   // 0x2B 'q' 
  {114,   465,   8,   9,  10,    1,   -8 },   // 0x2C 'r' 
  {115,   474,   8,   9,  10,    1,   -8 },   // 0x2D 's' 
  {116,   483,   8,  10,  10,    1,   -9 },   // 0x2E 't' 
  {117,   493,   8,   9,  10,    1,   -8 },   // 0x2F 'u' 
  {118,   502,   8,   9,  10,    1,   -8 },   // 0x30 'v' 
  {119,   511,   8,   9,  10,    1,   -8 },   // 0x31 'w' 
  {120,   520,   8,   9,  10,    1,   -8 },   // 0x32 'x' 
  {121,   529,   8,   9,  10,    1,   -8 },   // 0x33 'y' 
  {122,   538,   8,   9,  10,    1,   -8 },   // 0x34 'z' 
  {48,   547,   8,  12,  10,    1,  -11 },   // 0x35 '0' 
  {49,   559,   6,  12,  10,    2,  -11 },   // 0x36 '1' 
  {50,   568,   8,  12,  10,    1,  -11 },   // 0x37 '2' 
  {51,   580,   8,  12,  10,    1,  -11 },   // 0x38 '3' 
  {52,   592,   8,  12,  10,    1,  -11 },   // 0x39 '4' 
  {53,   604,   8,  12,  10,    1,  -11 },   // 0x3A '5' 
  {54,   616,   8,  12,  10,    1,  -11 },   // 0x3B '6' 
  {55,   628,   8,  12,  10,    1,  -11 },   // 0x3C '7' 
  {56,   640,   8,  12,  10,    1,  -11 },   // 0x3D '8' 
  {57,   652,   8,  12,  10,    1,  -11 },   // 0x3E '9' 
  {45,   664,   5,   1,  10,    2,   -4 },   // 0x3F '-' 
  {37,   665,   8,  12,  10,    1,  -11 },   // 0x40 '%' 
  {46,   677,   3,   3,  10,    3,   -2 },   // 0x41 '.' 
  {44,   679,   3,   5,  10,    3,   -4 },   // 0x42 ',' 
  {33,   681,   1,  12,  10,    4,  -11 },   // 0x43 '!' 
  {58,   683,   3,   9,  10,    3,   -8 },   // 0x44 ':' 
  {91,   687,   6,  12,  10,    2,  -11 },   // 0x45 '[' 
  {93,   696,   6,  12,  10,    2,  -11 },   // 0x46 ']' 
  {40,   705,   5,  12,  10,    2,  -11 },   // 0x47 '(' 
  {41,   713,   5,  12,  10,    2,  -11 }   // 0x48 ')' 
};

const gfxfont_t HotStuff9 PROGMEM = 
{
  (uint8_t  *)HotStuff9Bitmaps, //< Glyph bitmaps, concatenated 
  (gfxglyph_t *)HotStuff9Glyphs, //< Glyph array
  73,// total glyphs in the string
  12,  // newline distance (y axis)
     0,  // minimum X - left most
     0,  // minimum Y - bottom most (descenders can drive this negative)
     9,  // maximum X - right most
    12}; // maximum Y - top most
// Approx. 1246 bytes -  but your mileage may vary.

#endif