
#ifndef __FIXEDFONTERIKAORMIGTTF9
#define __FIXEDFONTERIKAORMIGTTF9
const uint8_t HotStuff9Bitmaps[] PROGMEM = {
  0x00, 0x0C, 0x0E, 0x07, 0x03, 0x81, 0xE0, 0xB0, 0xD8, 0x7C, 0x32, 0x39,
  0xFD, 0xE0, 0x2C, 0x7F, 0x88, 0xC4, 0x22, 0x31, 0xF8, 0x84, 0x43, 0x23,
  0xBF, 0xBF, 0x80, 0x1A, 0x7F, 0x6F, 0xE7, 0xC7, 0xC0, 0xC0, 0xC3, 0xEF,
  0x7E, 0x3C, 0xFC, 0x3F, 0x88, 0x44, 0x32, 0x19, 0x0C, 0x86, 0x42, 0x27,
  0x1F, 0xBF, 0x80, 0x7F, 0x3F, 0xC8, 0x64, 0x93, 0xC1, 0xE0, 0xB2, 0x4B,
  0x21, 0xFF, 0xFF, 0xE0, 0xFF, 0x98, 0xCD, 0xE6, 0xF3, 0xE9, 0xF0, 0xD8,
  0x6C, 0x30, 0x7E, 0x3F, 0x00, 0x3E, 0x7E, 0xC6, 0x86, 0x86, 0x80, 0x8F,
  0x86, 0xC6, 0x7E, 0x3F, 0x70, 0x7F, 0xC8, 0x44, 0x22, 0x11, 0xF8, 0xC4,
  0x62, 0x31, 0x18, 0x9F, 0xE0, 0xFF, 0x3F, 0x46, 0x03, 0x01, 0x80, 0xC0,
  0x60, 0x30, 0x18, 0x7F, 0xBF, 0xE0, 0x1F, 0x8F, 0xC1, 0x80, 0xC0, 0x60,
  0x31, 0x99, 0xCC, 0xC6, 0x3E, 0x0E, 0x00, 0xFF, 0xFF, 0x99, 0x0D, 0x87,
  0x83, 0xE1, 0xB0, 0xCC, 0x67, 0x7B, 0xFF, 0xE0, 0xFC, 0x18, 0x0C, 0x06,
  0x03, 0x01, 0x80, 0xC6, 0x63, 0x31, 0xFF, 0xFF, 0x80, 0x21, 0x3E, 0xF3,
  0xB8, 0xEE, 0x3B, 0x8E, 0xE3, 0xF8, 0xFA, 0x3F, 0x9F, 0xFF, 0xFC, 0x10,
  0x7B, 0xCC, 0x45, 0x22, 0x91, 0x68, 0x94, 0x4E, 0x27, 0x19, 0xBE, 0x40,
  0x1C, 0x3F, 0x98, 0xC8, 0x2C, 0x16, 0x1F, 0x04, 0xC2, 0x63, 0x1F, 0x07,
  0x00, 0xE7, 0x1F, 0x8D, 0xE6, 0x13, 0x11, 0xF8, 0xF8, 0x60, 0x30, 0x7C,
  0x3F, 0x80, 0x3E, 0x3E, 0x67, 0x41, 0xC1, 0xC1, 0xC1, 0x49, 0x7E, 0x7E,
  0x3D, 0x07, 0x07, 0x7E, 0x1F, 0xC2, 0x38, 0x86, 0x23, 0x0F, 0xC2, 0x70,
  0x9C, 0x23, 0x1D, 0xEF, 0xBC, 0x7E, 0x7F, 0xE7, 0xC2, 0x78, 0x1E, 0x87,
  0xC3, 0xC3, 0xFE, 0xFC, 0x63, 0x3F, 0xD2, 0x59, 0x2C, 0x9E, 0xC8, 0x20,
  0x10, 0x08, 0x3F, 0x1F, 0xC0, 0xF2, 0x7F, 0xDD, 0xCC, 0x66, 0x33, 0x19,
  0x8C, 0xC6, 0x63, 0x39, 0x8F, 0x00, 0x23, 0x7B, 0xD8, 0x84, 0x43, 0x61,
  0xB0, 0xD0, 0x38, 0x1C, 0x0E, 0x07, 0x00, 0xFF, 0xEC, 0xB6, 0x4B, 0xA7,
  0xE3, 0xF1, 0xD8, 0xCC, 0x66, 0x3B, 0x00, 0xFF, 0xFF, 0x8F, 0x87, 0x81,
  0xC0, 0xC0, 0x70, 0x7C, 0x36, 0x3F, 0xFF, 0xE0, 0xF7, 0xF9, 0x8F, 0x86,
  0xC1, 0xC0, 0xE0, 0x20, 0x10, 0x08, 0x3F, 0x9F, 0xC0, 0x36, 0x7F, 0x66,
  0x4C, 0x0C, 0x18, 0x11, 0x31, 0x61, 0x7F, 0xFF, 0x3C, 0x3F, 0x11, 0x8F,
  0xCF, 0xA6, 0x13, 0xFC, 0xFE, 0xE0, 0xE0, 0x60, 0x7C, 0x7E, 0x73, 0x63,
  0x63, 0x63, 0x7E, 0x7E, 0x3C, 0xFF, 0xBE, 0x0C, 0x18, 0xDF, 0x9E, 0x1C,
  0x0F, 0x01, 0x87, 0xC7, 0xE7, 0x33, 0x19, 0x84, 0xC6, 0x3F, 0x8E, 0xE0,
  0x38, 0xFB, 0xFE, 0x3F, 0xD8, 0x31, 0xFF, 0x38, 0x0F, 0x0F, 0xCC, 0xDF,
  0xCF, 0xC1, 0x80, 0xC0, 0x60, 0x10, 0x7F, 0x3F, 0x80, 0x3F, 0xBF, 0xD3,
  0x89, 0x86, 0xC3, 0xC1, 0xFD, 0x82, 0xC1, 0xFF, 0xCF, 0x80, 0xE0, 0x38,
  0x18, 0x0F, 0xC7, 0xB3, 0x19, 0x8C, 0xC6, 0x63, 0x7F, 0xFD, 0xE0, 0x18,
  0x3C, 0x10, 0xF8, 0xF8, 0x18, 0x18, 0x18, 0x18, 0xFF, 0xFF, 0x18, 0x71,
  0x9E, 0x7C, 0x30, 0xC3, 0x0C, 0x3E, 0xF3, 0xDD, 0xE0, 0xF0, 0x38, 0x0C,
  0x06, 0xF3, 0x61, 0x60, 0xF0, 0x6C, 0x22, 0x3B, 0xC0, 0xF8, 0x78, 0x18,
  0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0xFF, 0xFF, 0x7F, 0x9F, 0xF9, 0xDB,
  0x1B, 0x67, 0x6C, 0xED, 0x9F, 0xF7, 0xFF, 0x67, 0x0F, 0xE3, 0x98, 0xC6,
  0x31, 0x8C, 0x67, 0xBD, 0xFF, 0x3C, 0x6E, 0xC6, 0xC3, 0xC3, 0xE6, 0x7E,
  0x3C, 0x7E, 0x7E, 0x23, 0x21, 0x21, 0x23, 0x3E, 0x3E, 0x20, 0x70, 0x78,
  0x3F, 0xFF, 0x14, 0x28, 0x58, 0x9B, 0x1A, 0x04, 0x0C, 0x38, 0xFF, 0x7F,
  0xCE, 0xE6, 0x23, 0x01, 0x83, 0xF1, 0xFC, 0x7F, 0xFF, 0x1F, 0xCB, 0xF0,
  0xF9, 0xFE, 0x30, 0x60, 0xC7, 0xF7, 0xC6, 0x0C, 0x1B, 0x36, 0x7C, 0x70,
  0xEE, 0x73, 0x19, 0x8C, 0xC6, 0x63, 0x71, 0xFE, 0x66, 0xFF, 0xFB, 0xCD,
  0x86, 0xC3, 0xC0, 0xE0, 0x70, 0x10, 0xEF, 0xCD, 0xD9, 0xBA, 0x37, 0x43,
  0xF8, 0x66, 0x0C, 0xC1, 0x98, 0xFF, 0xFF, 0x8F, 0x83, 0x81, 0xC1, 0xF3,
  0xFF, 0xFF, 0x7F, 0xDD, 0xE3, 0x30, 0x78, 0x1E, 0x03, 0x80, 0xE1, 0xB0,
  0x7C, 0x3F, 0x07, 0x80, 0x7F, 0x3F, 0x73, 0x89, 0x81, 0xF1, 0x99, 0xFC,
  0xFC, 0x1C, 0x3F, 0x98, 0xC8, 0x2C, 0x16, 0x1F, 0x04, 0xC2, 0x63, 0x1F,
  0x07, 0x00, 0x19, 0xFE, 0x31, 0x8C, 0x63, 0x18, 0xC6, 0x3C, 0x66, 0xC3,
  0x03, 0x06, 0x1C, 0x38, 0x60, 0x40, 0xFF, 0x7E, 0x3C, 0xF9, 0x18, 0x30,
  0x43, 0x81, 0x81, 0x02, 0x0C, 0x37, 0xCE, 0x00, 0x08, 0x1C, 0x1C, 0x3C,
  0x2C, 0x6C, 0x4C, 0xCC, 0xFF, 0xFE, 0x0C, 0x0C, 0x0C, 0x01, 0xFA, 0x04,
  0x0F, 0x9F, 0xF3, 0x83, 0x06, 0x08, 0x33, 0xCE, 0x00, 0x0E, 0x71, 0x86,
  0x0C, 0x17, 0x3F, 0x63, 0x83, 0x05, 0x19, 0xE0, 0xFF, 0x7F, 0xF1, 0x80,
  0xC0, 0xC0, 0x60, 0x20, 0x30, 0x18, 0x0C, 0x06, 0x03, 0x00, 0x3E, 0xFF,
  0xC3, 0xC3, 0x7E, 0x7E, 0xC3, 0x81, 0x83, 0xFE, 0x7C, 0x79, 0xFF, 0xBE,
  0x38, 0x78, 0xDF, 0x83, 0x04, 0x18, 0x67, 0xC0, 0xFF, 0x3F, 0xC0, 0x01,
  0xC7, 0xE7, 0xD1, 0xA4, 0xCE, 0x37, 0x87, 0xD8, 0x2F, 0x1A, 0x45, 0x93,
  0x69, 0x8E, 0x40, 0x10, 0x00, 0x77, 0xF7, 0x67, 0xFE, 0xEF, 0x70, 0xFF,
  0xFD, 0xB6, 0x1F, 0x80, 0x6F, 0xE0, 0x0E, 0xFE, 0xFF, 0x3F, 0xC0, 0x1E,
  0x71, 0xC3, 0x06, 0x18, 0x30, 0x60, 0xC0, 0xC1, 0x83, 0x83, 0x83, 0x80,
  0xC7, 0x18, 0x63, 0x0C, 0x63, 0x19, 0x8C, 0xEE, 0x60, 0x1E, 0x71, 0xC3,
  0x06, 0x18, 0x30, 0x60, 0xC0, 0xC1, 0x83, 0x83, 0x83, 0x80, 0xC7, 0x18,
  0x63, 0x0C, 0x63, 0x19, 0x8C, 0xEE, 0x60 };

// Glyph, Offset to bitmap, Width, Height, xAdvance, xOffset, yOffset

const gfxglyph_t HotStuff9Glyphs[] PROGMEM = {
  {32,     0,   1,   1,  11,    0,    0 },   // 0x00 ' ' 
  {65,     1,   9,  11,  11,    1,  -10 },   // 0x01 'A' 
  {66,    14,   9,  11,  11,    1,  -10 },   // 0x02 'B' 
  {67,    27,   8,  11,  11,    2,  -10 },   // 0x03 'C' 
  {68,    38,   9,  11,  11,    1,  -10 },   // 0x04 'D' 
  {69,    51,   9,  11,  11,    1,  -10 },   // 0x05 'E' 
  {70,    64,   9,  11,  11,    1,  -10 },   // 0x06 'F' 
  {71,    77,   8,  11,  11,    2,  -10 },   // 0x07 'G' 
  {72,    88,   9,  11,  11,    1,  -10 },   // 0x08 'H' 
  {73,   101,   9,  11,  11,    1,  -10 },   // 0x09 'I' 
  {74,   114,   9,  11,  11,    1,  -10 },   // 0x0A 'J' 
  {75,   127,   9,  11,  11,    1,  -10 },   // 0x0B 'K' 
  {76,   140,   9,  11,  11,    1,  -10 },   // 0x0C 'L' 
  {77,   153,  10,  11,  11,    0,  -10 },   // 0x0D 'M' 
  {78,   167,   9,  11,  11,    1,  -10 },   // 0x0E 'N' 
  {79,   180,   9,  11,  11,    1,  -10 },   // 0x0F 'O' 
  {80,   193,   9,  11,  11,    1,  -10 },   // 0x10 'P' 
  {81,   206,   8,  13,  11,    1,  -10 },   // 0x11 'Q' 
  {82,   219,  10,  11,  11,    1,  -10 },   // 0x12 'R' 
  {83,   233,   8,  11,  12,    2,  -10 },   // 0x13 'S' 
  {84,   244,   9,  11,  11,    1,  -10 },   // 0x14 'T' 
  {85,   257,   9,  11,  11,    1,  -10 },   // 0x15 'U' 
  {86,   270,   9,  11,  11,    1,  -10 },   // 0x16 'V' 
  {87,   283,   9,  10,  11,    1,   -9 },   // 0x17 'W' 
  {88,   295,   9,  11,  11,    1,  -10 },   // 0x18 'X' 
  {89,   308,   9,  11,  11,    1,  -10 },   // 0x19 'Y' 
  {90,   321,   8,  11,  11,    1,  -10 },   // 0x1A 'Z' 
  {97,   332,   9,   8,  11,    1,   -7 },   // 0x1B 'a' 
  {98,   341,   8,  11,  11,    2,  -10 },   // 0x1C 'b' 
  {99,   352,   7,   8,  11,    2,   -7 },   // 0x1D 'c' 
  {100,   359,   9,  11,  11,    1,  -10 },   // 0x1E 'd' 
  {101,   372,   7,   9,  11,    2,   -8 },   // 0x1F 'e' 
  {102,   380,   9,  11,  11,    1,  -10 },   // 0x20 'f' 
  {103,   393,   9,  11,  11,    1,   -7 },   // 0x21 'g' 
  {104,   406,   9,  11,  11,    1,  -10 },   // 0x22 'h' 
  {105,   419,   8,  11,  11,    1,  -10 },   // 0x23 'i' 
  {106,   430,   6,  14,  10,    2,  -10 },   // 0x24 'j' 
  {107,   441,   9,  10,  11,    1,   -9 },   // 0x25 'k' 
  {108,   453,   8,  11,  11,    1,  -10 },   // 0x26 'l' 
  {109,   464,  11,   8,  11,    0,   -7 },   // 0x27 'm' 
  {110,   475,  10,   8,  11,    0,   -7 },   // 0x28 'n' 
  {111,   485,   8,   8,  11,    2,   -7 },   // 0x29 'o' 
  {112,   493,   8,  11,  11,    1,   -7 },   // 0x2A 'p' 
  {113,   504,   7,  11,  11,    2,   -7 },   // 0x2B 'q' 
  {114,   514,   9,   8,  11,    1,   -7 },   // 0x2C 'r' 
  {115,   523,   7,   8,  11,    2,   -7 },   // 0x2D 's' 
  {116,   530,   7,  11,  11,    2,  -10 },   // 0x2E 't' 
  {117,   540,   9,   8,  11,    1,   -7 },   // 0x2F 'u' 
  {118,   549,   9,   8,  11,    1,   -7 },   // 0x30 'v' 
  {119,   558,  11,   8,  11,    0,   -7 },   // 0x31 'w' 
  {120,   569,   9,   8,  11,    1,   -7 },   // 0x32 'x' 
  {121,   578,  10,  11,  11,    0,   -7 },   // 0x33 'y' 
  {122,   592,   9,   8,  11,    1,   -7 },   // 0x34 'z' 
  {48,   601,   9,  11,  11,    1,  -10 },   // 0x35 '0' 
  {49,   614,   5,  11,  11,    3,  -10 },   // 0x36 '1' 
  {50,   621,   8,  11,  11,    1,  -10 },   // 0x37 '2' 
  {51,   632,   7,  13,  11,    2,  -10 },   // 0x38 '3' 
  {52,   644,   8,  13,  11,    2,  -11 },   // 0x39 '4' 
  {53,   657,   7,  13,  11,    2,  -10 },   // 0x3A '5' 
  {54,   669,   7,  12,  11,    2,  -11 },   // 0x3B '6' 
  {55,   680,   9,  12,  11,    1,  -10 },   // 0x3C '7' 
  {56,   694,   8,  11,  10,    1,  -10 },   // 0x3D '8' 
  {57,   705,   7,  12,  11,    2,  -10 },   // 0x3E '9' 
  {45,   716,   9,   2,  11,    1,   -5 },   // 0x3F '-' 
  {37,   719,  10,  14,  11,    0,  -11 },   // 0x40 '%' 
  {46,   737,   4,   4,  11,    3,   -3 },   // 0x41 '.' 
  {44,   739,   5,   6,  11,    3,   -3 },   // 0x42 ',' 
  {33,   743,   3,  11,  11,    4,  -10 },   // 0x43 '!' 
  {58,   748,   4,   8,  11,    3,   -7 },   // 0x44 ':' 
  {45,   752,   9,   2,  11,    1,   -5 },   // 0x45 '-' 
  {91,   755,   7,  14,  11,    2,  -12 },   // 0x46 '[' 
  {93,   768,   5,  14,  11,    3,  -12 },   // 0x47 ']' 
  {40,   777,   7,  14,  11,    2,  -12 },   // 0x48 '(' 
  {41,   790,   5,  14,  11,    3,  -12 }   // 0x49 ')' 
};

const gfxfont_t HotStuff9 PROGMEM = 
{
  (uint8_t  *)HotStuff9Bitmaps, //< Glyph bitmaps, concatenated 
  (gfxglyph_t *)HotStuff9Glyphs, //< Glyph array
  74,// total glyphs in the string
  14,  // newline distance (y axis)
     0,  // minimum X - left most
    -3,  // minimum Y - bottom most (descenders can drive this negative)
    11,  // maximum X - right most
    13}; // maximum Y - top most
// Approx. 1331 bytes -  but your mileage may vary.

#endif