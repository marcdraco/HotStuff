
#ifndef __FIXEDFONTNOVAMONOTTF12
#define __FIXEDFONTNOVAMONOTTF12
const uint8_t HotStuff12Bitmaps[] PROGMEM = {
  0x00, 0x1F, 0x07, 0xF1, 0xC7, 0x70, 0x7C, 0x07, 0x80, 0xF0, 0x1E, 0x03,
  0xFF, 0xFF, 0xFF, 0x01, 0xE0, 0x3C, 0x07, 0x80, 0xF0, 0x1E, 0x03, 0xC0,
  0x70, 0x08, 0x7E, 0x1F, 0xF3, 0x06, 0x60, 0x6C, 0x0D, 0x81, 0xB0, 0x67,
  0xFC, 0xFF, 0x98, 0x3B, 0x03, 0xE0, 0x3C, 0x07, 0x80, 0xF0, 0x3E, 0x0E,
  0xFF, 0x9F, 0xE0, 0x1F, 0x07, 0xF1, 0xC7, 0x70, 0x7C, 0x07, 0x80, 0xF0,
  0x06, 0x00, 0xC0, 0x18, 0x03, 0x00, 0x60, 0x0C, 0x07, 0x80, 0xF8, 0x3B,
  0x8E, 0x3F, 0x83, 0xE0, 0x7F, 0x1F, 0xF3, 0x07, 0x60, 0x7C, 0x07, 0x80,
  0xF0, 0x1E, 0x03, 0xC0, 0x78, 0x0F, 0x01, 0xE0, 0x3C, 0x07, 0x80, 0xF0,
  0x3E, 0x0E, 0xFF, 0x9F, 0xE0, 0x7F, 0x3F, 0x8C, 0x03, 0x00, 0xC0, 0x30,
  0x0C, 0x03, 0x00, 0xFF, 0xBF, 0xCC, 0x03, 0x00, 0xC0, 0x30, 0x0C, 0x03,
  0x00, 0xFF, 0xFF, 0xF0, 0x7F, 0x7F, 0x30, 0x18, 0x0C, 0x06, 0x03, 0x01,
  0x80, 0xFF, 0xFF, 0xB0, 0x18, 0x0C, 0x06, 0x03, 0x01, 0x80, 0xC0, 0x40,
  0x00, 0x1F, 0x07, 0xF1, 0xC7, 0x70, 0x7C, 0x07, 0x80, 0xF0, 0x06, 0x00,
  0xC3, 0xF8, 0x7F, 0x01, 0xE0, 0x3C, 0x07, 0x80, 0xF8, 0x3B, 0x8E, 0x3F,
  0x83, 0xE0, 0x40, 0x38, 0x0F, 0x01, 0xE0, 0x3C, 0x07, 0x80, 0xF0, 0x1E,
  0x03, 0xFF, 0xFF, 0xFF, 0x01, 0xE0, 0x3C, 0x07, 0x80, 0xF0, 0x1E, 0x03,
  0xC0, 0x70, 0x08, 0xFF, 0xFF, 0xF0, 0xC0, 0x30, 0x0C, 0x03, 0x00, 0xC0,
  0x30, 0x0C, 0x03, 0x00, 0xC0, 0x30, 0x0C, 0x03, 0x00, 0xC0, 0x30, 0xFF,
  0xFF, 0xF0, 0x3F, 0xE7, 0xFC, 0x01, 0x80, 0x30, 0x06, 0x00, 0xC0, 0x18,
  0x03, 0x00, 0x60, 0x0C, 0x01, 0x80, 0x3C, 0x07, 0x80, 0xF8, 0x3B, 0x8E,
  0x3F, 0x83, 0xE0, 0x40, 0x58, 0x1F, 0x07, 0x60, 0xCC, 0x31, 0x8E, 0x31,
  0x86, 0x60, 0xDF, 0x1F, 0xF3, 0xC7, 0x70, 0x7C, 0x07, 0x80, 0xF0, 0x1E,
  0x03, 0xC0, 0x70, 0x08, 0x40, 0x30, 0x0C, 0x03, 0x00, 0xC0, 0x30, 0x0C,
  0x03, 0x00, 0xC0, 0x30, 0x0C, 0x03, 0x00, 0xC0, 0x30, 0x0C, 0x03, 0x00,
  0xFF, 0xFF, 0xF0, 0x39, 0xCF, 0xFF, 0x19, 0xE3, 0x3C, 0x67, 0x8C, 0xF1,
  0x9E, 0x33, 0xC6, 0x78, 0xCF, 0x19, 0xE3, 0x3C, 0x67, 0x8C, 0xF1, 0x9E,
  0x33, 0xC6, 0x70, 0x88, 0x1F, 0x07, 0xF1, 0xC7, 0x70, 0x7C, 0x07, 0x80,
  0xF0, 0x1E, 0x03, 0xC0, 0x78, 0x0F, 0x01, 0xE0, 0x3C, 0x07, 0x80, 0xF0,
  0x1E, 0x03, 0xC0, 0x70, 0x08, 0x1F, 0x07, 0xF1, 0xC7, 0x70, 0x7C, 0x07,
  0x80, 0xF0, 0x1E, 0x03, 0xC0, 0x78, 0x0F, 0x01, 0xE0, 0x3C, 0x07, 0x80,
  0xF8, 0x3B, 0x8E, 0x3F, 0x83, 0xE0, 0xFF, 0x1F, 0xF3, 0x07, 0x60, 0x7C,
  0x07, 0x80, 0xF0, 0x1E, 0x07, 0xC1, 0xDF, 0xF3, 0xFC, 0x60, 0x0C, 0x01,
  0x80, 0x30, 0x06, 0x00, 0xC0, 0x10, 0x00, 0x1F, 0x07, 0xF1, 0xC7, 0x70,
  0x7C, 0x07, 0x80, 0xF0, 0x1E, 0x03, 0xC0, 0x78, 0x0F, 0x01, 0xE0, 0x3C,
  0x07, 0x80, 0xF8, 0x9B, 0xBE, 0x3F, 0x83, 0xF8, 0x03, 0x00, 0x30, 0xFF,
  0x1F, 0xF3, 0x07, 0x60, 0x6C, 0x07, 0x80, 0xF0, 0x1E, 0x07, 0xC1, 0xDF,
  0xF3, 0xFC, 0x61, 0x8C, 0x19, 0x83, 0x30, 0x76, 0x06, 0xC0, 0xF0, 0x08,
  0x1F, 0x07, 0xF1, 0xC7, 0x30, 0x66, 0x0C, 0xC0, 0x1C, 0x01, 0xF0, 0x0F,
  0x80, 0x38, 0x03, 0x80, 0x3C, 0x07, 0x80, 0xF8, 0x3B, 0x8E, 0x3F, 0x83,
  0xE0, 0xFF, 0xFF, 0xFF, 0x06, 0x00, 0x60, 0x06, 0x00, 0x60, 0x06, 0x00,
  0x60, 0x06, 0x00, 0x60, 0x06, 0x00, 0x60, 0x06, 0x00, 0x60, 0x06, 0x00,
  0x60, 0x06, 0x00, 0x40, 0x40, 0x38, 0x0F, 0x01, 0xE0, 0x3C, 0x07, 0x80,
  0xF0, 0x1E, 0x03, 0xC0, 0x78, 0x0F, 0x01, 0xE0, 0x3C, 0x07, 0x80, 0xF8,
  0x3B, 0x8E, 0x3F, 0x83, 0xE0, 0x40, 0x2C, 0x03, 0x40, 0x26, 0x06, 0x60,
  0x66, 0x06, 0x30, 0xC3, 0x0C, 0x30, 0xC1, 0x98, 0x19, 0x81, 0x98, 0x0F,
  0x00, 0xF0, 0x0F, 0x00, 0x60, 0x06, 0x00, 0x40, 0x42, 0x38, 0xCF, 0x19,
  0xE3, 0x3C, 0x67, 0x8C, 0xF1, 0x9E, 0x33, 0xC6, 0x78, 0xCF, 0x19, 0xE3,
  0x3C, 0x67, 0x8C, 0xF1, 0x9E, 0x33, 0xFF, 0xEF, 0x38, 0x40, 0x58, 0x1D,
  0x83, 0x38, 0xE3, 0x18, 0x36, 0x06, 0xC0, 0x70, 0x0E, 0x01, 0xC0, 0x38,
  0x0D, 0x81, 0xB0, 0x63, 0x1C, 0x73, 0x06, 0xE0, 0xE8, 0x08, 0x40, 0x38,
  0x0F, 0x01, 0xE0, 0x3C, 0x07, 0x80, 0xF0, 0x1E, 0x03, 0xC0, 0x7C, 0x1D,
  0xC3, 0x1F, 0xE1, 0xF0, 0x0C, 0x01, 0x80, 0x30, 0x06, 0x00, 0x80, 0x7F,
  0xEF, 0xF8, 0x03, 0x00, 0xC0, 0x18, 0x06, 0x00, 0xC0, 0x30, 0x06, 0x01,
  0x80, 0x30, 0x0C, 0x01, 0x80, 0x60, 0x0C, 0x03, 0x80, 0x7F, 0xFF, 0xFC,
  0x1E, 0x3F, 0x98, 0xF8, 0x3C, 0x18, 0x7C, 0xFE, 0xE3, 0xC1, 0xE0, 0xF8,
  0x6F, 0xB3, 0xD0, 0x40, 0x60, 0x30, 0x18, 0x0C, 0x06, 0xF3, 0xFD, 0xC7,
  0xC1, 0xE0, 0xF0, 0x78, 0x3C, 0x1E, 0x0F, 0x07, 0xC7, 0x7F, 0x1F, 0x00,
  0x3E, 0x3F, 0xB8, 0xF8, 0x3C, 0x1E, 0x03, 0x01, 0x80, 0xC1, 0xE0, 0xF8,
  0xCF, 0xE3, 0xC0, 0x00, 0x80, 0xC0, 0x60, 0x30, 0x19, 0xED, 0xFF, 0xC7,
  0xC1, 0xE0, 0xF0, 0x78, 0x3C, 0x1E, 0x0F, 0x07, 0xC7, 0x7F, 0x1E, 0x00,
  0x3E, 0x3F, 0xB8, 0xF8, 0x3C, 0x3E, 0x7F, 0xF1, 0xE0, 0xC1, 0xE0, 0xF8,
  0xCF, 0xE3, 0xC0, 0x1F, 0x0F, 0xE7, 0x1D, 0x83, 0x60, 0xD8, 0x06, 0x01,
  0x80, 0xFF, 0x3F, 0xC6, 0x01, 0x80, 0x60, 0x18, 0x06, 0x01, 0x80, 0x60,
  0x10, 0x00, 0x3C, 0x3F, 0xB8, 0xF8, 0x3C, 0x1E, 0x0F, 0x07, 0x83, 0xC1,
  0xE0, 0xF8, 0xEF, 0xF3, 0xD8, 0x0D, 0x06, 0xC7, 0x7F, 0x0F, 0x00, 0x40,
  0x60, 0x30, 0x18, 0x0C, 0x06, 0xF3, 0xFD, 0xC7, 0xC1, 0xE0, 0xF0, 0x78,
  0x3C, 0x1E, 0x0F, 0x07, 0x83, 0xC1, 0xC0, 0x80, 0xC0, 0x70, 0x30, 0x00,
  0x00, 0x02, 0x03, 0x01, 0x80, 0xC0, 0x60, 0x30, 0x18, 0x0C, 0x06, 0x0F,
  0x07, 0xC7, 0x7F, 0x0F, 0x00, 0x01, 0x80, 0x70, 0x18, 0x00, 0x00, 0x00,
  0x20, 0x18, 0x06, 0x01, 0x80, 0x60, 0x18, 0x06, 0x01, 0xB0, 0x6C, 0x1B,
  0x06, 0xC1, 0xB0, 0x6C, 0x1B, 0x06, 0xE3, 0x9F, 0xC1, 0xE0, 0x40, 0x60,
  0x30, 0x18, 0x0C, 0x06, 0x0B, 0x0F, 0x8C, 0xCC, 0x6E, 0x3F, 0xDC, 0x7C,
  0x1E, 0x0F, 0x07, 0x83, 0xC1, 0xC0, 0x80, 0x40, 0x60, 0x30, 0x18, 0x0C,
  0x06, 0x03, 0x01, 0x80, 0xC0, 0x60, 0x30, 0x18, 0x0C, 0x06, 0x0F, 0x07,
  0xC7, 0x7F, 0x0F, 0x00, 0x39, 0xCF, 0xFF, 0x19, 0xE3, 0x3C, 0x67, 0x8C,
  0xF1, 0x9E, 0x33, 0xC6, 0x78, 0xCF, 0x19, 0xE3, 0x38, 0x44, 0x3E, 0x3F,
  0xB8, 0xF8, 0x3C, 0x1E, 0x0F, 0x07, 0x83, 0xC1, 0xE0, 0xF0, 0x78, 0x38,
  0x10, 0x3E, 0x3F, 0xB8, 0xF8, 0x3C, 0x1E, 0x0F, 0x07, 0x83, 0xC1, 0xE0,
  0xF8, 0xEF, 0xE3, 0xE0, 0x1E, 0x3F, 0xB8, 0xF8, 0x3C, 0x1E, 0x0F, 0x07,
  0x83, 0xC1, 0xE0, 0xF8, 0xFF, 0xED, 0xE6, 0x03, 0x01, 0x80, 0xC0, 0x40,
  0x00, 0x3E, 0x07, 0xF0, 0xE3, 0x8C, 0x18, 0xC1, 0x8C, 0x18, 0xC1, 0x8C,
  0x18, 0xC1, 0x8C, 0x18, 0xE3, 0x87, 0xF8, 0x3D, 0x80, 0x18, 0x01, 0xA0,
  0x1F, 0x01, 0xC0, 0x10, 0x3E, 0x3F, 0xB8, 0xF8, 0x3C, 0x1E, 0x03, 0x01,
  0x80, 0xC0, 0x60, 0x30, 0x18, 0x08, 0x00, 0x1C, 0x1F, 0x18, 0xCC, 0x47,
  0x01, 0xF0, 0x3C, 0x07, 0xC1, 0xE0, 0xD8, 0xEF, 0xE3, 0xE0, 0x20, 0x18,
  0x06, 0x01, 0x80, 0x60, 0x3F, 0xEF, 0xF1, 0x80, 0x60, 0x18, 0x06, 0x01,
  0x80, 0x60, 0x18, 0x36, 0x0D, 0xC7, 0x3F, 0x87, 0xC0, 0x40, 0xE0, 0xF0,
  0x78, 0x3C, 0x1E, 0x0F, 0x07, 0x83, 0xC1, 0xE0, 0xF8, 0xEF, 0xE3, 0xE0,
  0x40, 0x2C, 0x03, 0x60, 0x66, 0x06, 0x70, 0xE3, 0x0C, 0x30, 0xC1, 0x98,
  0x19, 0x81, 0xB0, 0x0F, 0x00, 0xF0, 0x06, 0x00, 0x42, 0x38, 0xCF, 0x19,
  0xE3, 0x3C, 0x67, 0x8C, 0xF1, 0x9E, 0x33, 0xC6, 0x78, 0xCF, 0x19, 0xFF,
  0xF7, 0x9C, 0x40, 0x5C, 0x1D, 0xC7, 0x18, 0xC1, 0xB0, 0x1C, 0x03, 0x80,
  0x70, 0x1B, 0x06, 0x31, 0xC7, 0x30, 0x74, 0x04, 0x40, 0xE0, 0xF0, 0x78,
  0x3C, 0x1E, 0x0F, 0x07, 0x83, 0xC1, 0xE0, 0xF8, 0xEF, 0xF3, 0xD8, 0x0D,
  0x06, 0xC7, 0x7F, 0x0F, 0x00, 0x7F, 0xBF, 0xE0, 0x30, 0x1C, 0x06, 0x03,
  0x00, 0xC0, 0x60, 0x38, 0x0C, 0x07, 0x01, 0xFE, 0xFF, 0x80, 0x1F, 0x07,
  0xF1, 0xC7, 0x70, 0xFC, 0x1F, 0x86, 0xF0, 0xDE, 0x33, 0xC6, 0x79, 0xCF,
  0x31, 0xEE, 0x3D, 0x87, 0xF0, 0xFC, 0x3B, 0x8E, 0x3F, 0x83, 0xE0, 0x04,
  0x73, 0xDF, 0xED, 0x30, 0xC3, 0x0C, 0x30, 0xC3, 0x0C, 0x30, 0xC3, 0x0C,
  0x20, 0x1F, 0x07, 0xF1, 0xC7, 0x70, 0x7C, 0x07, 0x80, 0xC0, 0x18, 0x07,
  0x01, 0xC0, 0x70, 0x38, 0x06, 0x01, 0x80, 0x60, 0x0C, 0x03, 0x00, 0x7F,
  0xFF, 0xFC, 0x7F, 0xCF, 0xF8, 0x06, 0x01, 0xC0, 0x30, 0x0E, 0x03, 0x80,
  0x70, 0x1F, 0x80, 0x38, 0x03, 0x80, 0x3C, 0x07, 0x80, 0xF8, 0x3B, 0x8E,
  0x3F, 0x83, 0xE0, 0x00, 0x40, 0x0C, 0x01, 0xC0, 0x3C, 0x03, 0xC0, 0x6C,
  0x0E, 0xC0, 0xCC, 0x18, 0xC1, 0x8C, 0x30, 0xC6, 0x0C, 0x7F, 0xFF, 0xFE,
  0x00, 0xC0, 0x0C, 0x00, 0xC0, 0x08, 0x1F, 0xC3, 0xF8, 0xC0, 0x18, 0x03,
  0x00, 0x60, 0x0C, 0x01, 0x78, 0x7F, 0x84, 0x38, 0x03, 0x80, 0x3C, 0x07,
  0x80, 0xF8, 0x3B, 0x8E, 0x3F, 0x83, 0xE0, 0x1F, 0x07, 0xF1, 0xC7, 0x70,
  0x7C, 0x07, 0x80, 0xB0, 0x06, 0xF8, 0xFF, 0x9E, 0x3B, 0x83, 0xE0, 0x3C,
  0x07, 0x80, 0xF8, 0x3B, 0x8E, 0x3F, 0x83, 0xE0, 0x7F, 0xFF, 0xFC, 0x03,
  0x00, 0xE0, 0x18, 0x07, 0x00, 0xC0, 0x38, 0x06, 0x00, 0xC0, 0x30, 0x06,
  0x01, 0x80, 0x30, 0x0C, 0x01, 0x80, 0x60, 0x08, 0x00, 0x1F, 0x07, 0xF1,
  0xC7, 0x30, 0x66, 0x0C, 0xC1, 0x9C, 0x61, 0xFC, 0x3F, 0x8E, 0x3B, 0x83,
  0x60, 0x3C, 0x07, 0x80, 0xF8, 0x3B, 0x8E, 0x3F, 0x83, 0xE0, 0x1F, 0x07,
  0xF1, 0xC7, 0x70, 0x7C, 0x07, 0x80, 0xF0, 0x1F, 0x07, 0x71, 0xE7, 0xFC,
  0x7D, 0x80, 0x34, 0x07, 0x80, 0xF8, 0x3B, 0x8E, 0x3F, 0x83, 0xE0, 0xFF,
  0xFF, 0xE0, 0x30, 0x07, 0x80, 0xCC, 0x0C, 0xC0, 0xCC, 0x27, 0x87, 0x70,
  0xE0, 0x38, 0x07, 0x00, 0xE0, 0x1C, 0x07, 0x00, 0xE1, 0xC4, 0x3E, 0x06,
  0x30, 0x63, 0x03, 0xE0, 0x1C, 0xFF, 0x80, 0xDF, 0xBD, 0x00, 0x5B, 0x6D,
  0xB6, 0xDB, 0x6D, 0x06, 0xF8, 0xFF, 0x80, 0x07, 0xFC, 0x7F, 0xEC, 0x30,
  0xC3, 0x0C, 0x30, 0xC3, 0x0C, 0x30, 0xC3, 0x0C, 0x30, 0xC3, 0x0C, 0x30,
  0xC3, 0x0C, 0x30, 0xFF, 0xF0, 0xFF, 0xF0, 0xC3, 0x0C, 0x30, 0xC3, 0x0C,
  0x30, 0xC3, 0x0C, 0x30, 0xC3, 0x0C, 0x30, 0xC3, 0x0C, 0x30, 0xC3, 0x7F,
  0xE0, 0x08, 0x63, 0x8C, 0x71, 0x86, 0x38, 0xC3, 0x0C, 0x30, 0xC3, 0x0C,
  0x30, 0xC3, 0x0E, 0x18, 0x61, 0x83, 0x0E, 0x18, 0x20, 0x41, 0x87, 0x0C,
  0x38, 0x61, 0x86, 0x0C, 0x30, 0xC3, 0x0C, 0x30, 0xC3, 0x0C, 0x31, 0xC6,
  0x18, 0x63, 0x1C, 0x61, 0x00 };

// Glyph, Offset to bitmap, Width, Height, xAdvance, xOffset, yOffset

const gfxglyph_t HotStuff12Glyphs[] PROGMEM = {
  {32,     0,   1,   1,  13,    0,    0 },   // 0x00 ' ' 
  {65,     1,  11,  18,  13,    1,  -17 },   // 0x01 'A' 
  {66,    26,  11,  18,  13,    1,  -17 },   // 0x02 'B' 
  {67,    51,  11,  18,  13,    1,  -17 },   // 0x03 'C' 
  {68,    76,  11,  18,  13,    1,  -17 },   // 0x04 'D' 
  {69,   101,  10,  18,  13,    2,  -17 },   // 0x05 'E' 
  {70,   124,   9,  18,  13,    2,  -17 },   // 0x06 'F' 
  {71,   145,  11,  18,  13,    1,  -17 },   // 0x07 'G' 
  {72,   170,  11,  18,  13,    1,  -17 },   // 0x08 'H' 
  {73,   195,  10,  18,  13,    2,  -17 },   // 0x09 'I' 
  {74,   218,  11,  18,  13,    1,  -17 },   // 0x0A 'J' 
  {75,   243,  11,  18,  13,    1,  -17 },   // 0x0B 'K' 
  {76,   268,  10,  18,  13,    2,  -17 },   // 0x0C 'L' 
  {77,   291,  11,  18,  13,    1,  -17 },   // 0x0D 'M' 
  {78,   316,  11,  18,  13,    1,  -17 },   // 0x0E 'N' 
  {79,   341,  11,  18,  13,    1,  -17 },   // 0x0F 'O' 
  {80,   366,  11,  18,  13,    1,  -17 },   // 0x10 'P' 
  {81,   391,  11,  20,  13,    1,  -17 },   // 0x11 'Q' 
  {82,   419,  11,  18,  13,    1,  -17 },   // 0x12 'R' 
  {83,   444,  11,  18,  13,    1,  -17 },   // 0x13 'S' 
  {84,   469,  12,  18,  13,    1,  -17 },   // 0x14 'T' 
  {85,   496,  11,  18,  13,    1,  -17 },   // 0x15 'U' 
  {86,   521,  12,  18,  13,    1,  -17 },   // 0x16 'V' 
  {87,   548,  11,  18,  13,    1,  -17 },   // 0x17 'W' 
  {88,   573,  11,  18,  13,    1,  -17 },   // 0x18 'X' 
  {89,   598,  11,  18,  13,    1,  -17 },   // 0x19 'Y' 
  {90,   623,  11,  18,  13,    1,  -17 },   // 0x1A 'Z' 
  {97,   648,   9,  13,  13,    2,  -12 },   // 0x1B 'a' 
  {98,   663,   9,  18,  13,    2,  -17 },   // 0x1C 'b' 
  {99,   684,   9,  13,  13,    2,  -12 },   // 0x1D 'c' 
  {100,   699,   9,  18,  13,    2,  -17 },   // 0x1E 'd' 
  {101,   720,   9,  13,  13,    2,  -12 },   // 0x1F 'e' 
  {102,   735,  10,  18,  13,    1,  -17 },   // 0x20 'f' 
  {103,   758,   9,  18,  13,    2,  -12 },   // 0x21 'g' 
  {104,   779,   9,  18,  13,    2,  -17 },   // 0x22 'h' 
  {105,   800,   9,  18,  13,    2,  -17 },   // 0x23 'i' 
  {106,   821,  10,  23,  13,    2,  -17 },   // 0x24 'j' 
  {107,   850,   9,  18,  13,    2,  -17 },   // 0x25 'k' 
  {108,   871,   9,  18,  13,    2,  -17 },   // 0x26 'l' 
  {109,   892,  11,  13,  13,    1,  -12 },   // 0x27 'm' 
  {110,   910,   9,  13,  13,    2,  -12 },   // 0x28 'n' 
  {111,   925,   9,  13,  13,    2,  -12 },   // 0x29 'o' 
  {112,   940,   9,  18,  13,    2,  -12 },   // 0x2A 'p' 
  {113,   961,  12,  18,  13,    2,  -12 },   // 0x2B 'q' 
  {114,   988,   9,  13,  13,    2,  -12 },   // 0x2C 'r' 
  {115,  1003,   9,  13,  13,    2,  -12 },   // 0x2D 's' 
  {116,  1018,  10,  18,  13,    1,  -17 },   // 0x2E 't' 
  {117,  1041,   9,  13,  13,    2,  -12 },   // 0x2F 'u' 
  {118,  1056,  12,  13,  13,    1,  -12 },   // 0x30 'v' 
  {119,  1076,  11,  13,  13,    1,  -12 },   // 0x31 'w' 
  {120,  1094,  11,  13,  13,    1,  -12 },   // 0x32 'x' 
  {121,  1112,   9,  18,  13,    2,  -12 },   // 0x33 'y' 
  {122,  1133,  10,  13,  13,    2,  -12 },   // 0x34 'z' 
  {48,  1150,  11,  18,  13,    1,  -17 },   // 0x35 '0' 
  {49,  1175,   6,  18,  13,    2,  -17 },   // 0x36 '1' 
  {50,  1189,  11,  18,  13,    1,  -17 },   // 0x37 '2' 
  {51,  1214,  11,  18,  13,    1,  -17 },   // 0x38 '3' 
  {52,  1239,  12,  18,  13,    1,  -17 },   // 0x39 '4' 
  {53,  1266,  11,  18,  13,    1,  -17 },   // 0x3A '5' 
  {54,  1291,  11,  18,  13,    1,  -17 },   // 0x3B '6' 
  {55,  1316,  11,  18,  13,    1,  -17 },   // 0x3C '7' 
  {56,  1341,  11,  18,  13,    1,  -17 },   // 0x3D '8' 
  {57,  1366,  11,  18,  13,    1,  -17 },   // 0x3E '9' 
  {45,  1391,  10,   2,  13,    2,   -9 },   // 0x3F '-' 
  {37,  1394,  12,  18,  13,    1,  -17 },   // 0x40 '%' 
  {46,  1421,   3,   3,  13,    5,   -2 },   // 0x41 '.' 
  {44,  1423,   3,   6,  13,    5,   -2 },   // 0x42 ',' 
  {33,  1426,   3,  18,  13,    5,  -17 },   // 0x43 '!' 
  {58,  1433,   3,  10,  13,    5,   -9 },   // 0x44 ':' 
  {91,  1437,   6,  26,  13,    5,  -21 },   // 0x45 '[' 
  {93,  1457,   6,  26,  13,    2,  -21 },   // 0x46 ']' 
  {40,  1477,   6,  26,  13,    5,  -21 },   // 0x47 '(' 
  {41,  1497,   6,  26,  13,    2,  -21 }   // 0x48 ')' 
};

const gfxfont_t HotStuff12 PROGMEM = 
{
  (uint8_t  *)HotStuff12Bitmaps, //< Glyph bitmaps, concatenated 
  (gfxglyph_t *)HotStuff12Glyphs, //< Glyph array
  73,// total glyphs in the string
  26,  // newline distance (y axis)
     0,  // minimum X - left most
    -5,  // minimum Y - bottom most (descenders can drive this negative)
    14,  // maximum X - right most
    22}; // maximum Y - top most
// Approx. 2042 bytes -  but your mileage may vary.

#endif