
#ifndef __FIXEDFONTGOMMOGRATTF6
#define __FIXEDFONTGOMMOGRATTF6
const uint8_t HotStuff6Bitmaps[] PROGMEM = {
  0x00, 0x07, 0x9C, 0x67, 0x31, 0xCC, 0x03, 0x0A, 0x00, 0xE9, 0xDF, 0xA4,
  0x00, 0x95, 0x26, 0x44, 0x91, 0x1A, 0x04, 0x90, 0x08, 0x21, 0x00, 0x00,
  0x40, 0x02, 0x04, 0x00, 0xC0, 0x94, 0xFE, 0xFE, 0x63, 0x7A, 0x7E, 0x66,
  0x7E, 0x7F, 0x79, 0xE2, 0x08, 0x21, 0x00, 0x00, 0x40, 0x02, 0x04, 0x00,
  0x04, 0x9E, 0xBF, 0xE7, 0xBE, 0xBC, 0xF9, 0xEF, 0xFE, 0xFE, 0xFB, 0x63,
  0x37, 0x28, 0x02, 0x33, 0x48, 0x41, 0x04, 0x00, 0x05, 0x9C, 0xC6, 0x21,
  0x08, 0x63, 0x9C, 0xA0, 0x07, 0xD8, 0xE3, 0x18, 0xD6, 0x35, 0x9C, 0xA0,
  0x08, 0x21, 0x00, 0x00, 0x40, 0x02, 0x04, 0x00, 0x00, 0x20, 0x10, 0x18,
  0x18, 0xFF, 0x7E, 0x7A, 0x18, 0x38, 0x00, 0x02, 0x14, 0x44, 0xCE, 0x0E,
  0xE2, 0x09, 0x04, 0x80, 0x7F, 0xC8, 0x4D, 0x48, 0x00, 0x00, 0x21, 0x04,
  0x31, 0x40, 0x03, 0x19, 0x40, 0x0C, 0x68, 0x30, 0xE3, 0xEB, 0x6C, 0x19,
  0x70, 0xC3, 0x04, 0x00, 0xA8, 0xBF, 0xFE, 0xEE, 0xE7, 0x67, 0x77, 0x7F,
  0x77, 0x7F, 0x3D, 0x2D, 0x40, 0xBA, 0x3D, 0xFD, 0x1D, 0x5E, 0x5E, 0x1D,
  0x5A, 0x7E, 0x7E, 0x29, 0x82, 0xFF, 0x7F, 0x26, 0x06, 0x8E, 0xBE, 0xB0,
  0xE2, 0x7F, 0x7E, 0x03, 0x25, 0xFF, 0x7E, 0x44, 0x1C, 0x1D, 0x1E, 0x07,
  0x6B, 0x7F, 0x7F, 0x42, 0x00, 0xCF, 0xFE, 0x5C, 0x7D, 0x6D, 0x6D, 0xFF,
  0x0F, 0x2C, 0x7E, 0x3C, 0x03, 0x3E, 0x3E, 0x6A, 0xE4, 0x7E, 0x3E, 0x07,
  0xCB, 0xF7, 0x7F, 0x02, 0x85, 0xBF, 0x7E, 0x76, 0x60, 0x68, 0x7E, 0x6E,
  0xE6, 0xFE, 0xBD, 0xD6, 0x04, 0xFF, 0x7F, 0x56, 0x0D, 0x2D, 0x2E, 0xD8,
  0x90, 0xB7, 0x74, 0x1E, 0x10, 0x3D, 0xFE, 0x6F, 0xE7, 0xFE, 0x7E, 0x67,
  0x67, 0x7E, 0xBC, 0x9F, 0x11, 0x7F, 0x7F, 0x67, 0xE6, 0x7E, 0x3F, 0x47,
  0xB7, 0x7E, 0x7F, 0x09, 0x00, 0x00, 0xEB, 0x42, 0x00, 0x63, 0x08, 0x00,
  0x01, 0x4E, 0x50, 0x14, 0x43, 0x2C, 0x40, 0x08, 0x21, 0x00, 0x00, 0x40,
  0x02, 0x04, 0x00, 0x06, 0x08, 0x07, 0xBE, 0x5F, 0x78, 0x30, 0x00, 0x08,
  0x21, 0x00, 0x00, 0x40, 0x02, 0x04, 0x00, 0x82, 0xFF, 0x7F, 0x26, 0x06,
  0x8E, 0xBA, 0xB0, 0x80, 0x31, 0x33, 0x78, 0xF9, 0x99, 0x99, 0x99, 0x99,
  0x9F, 0x83, 0x9D, 0x9C, 0xDE, 0xFD, 0x3F, 0x76, 0x7E, 0xBF, 0x76, 0xFF,
  0x3D, 0x00, 0x5C, 0x7E, 0x6F, 0xE7, 0x7E, 0x7E, 0xE7, 0x77, 0x7F, 0x7C,
  0xCF, 0x84, 0xBF, 0x7E, 0x77, 0x70, 0x61, 0x65, 0x6B, 0x72, 0x7E, 0x3E,
  0x44, 0x2E, 0x59, 0x7C, 0x66, 0xE6, 0x77, 0xE7, 0x67, 0x7E, 0x7F, 0xFE,
  0x08, 0x22, 0xFA, 0x7E, 0x72, 0xE0, 0x7A, 0x7A, 0xE6, 0xE2, 0x7F, 0x7E,
  0x02, 0x23, 0x5F, 0x7E, 0xEB, 0xE5, 0x7E, 0x7E, 0x62, 0x65, 0x73, 0xF3,
  0x81, 0x84, 0xBF, 0x7E, 0x76, 0x70, 0x60, 0x67, 0x67, 0x76, 0x7E, 0x3E,
  0x02, 0x00, 0xF4, 0x77, 0x6E, 0xE7, 0x7F, 0xFF, 0xE7, 0x77, 0x6E, 0xFF,
  0x00, 0x90, 0xFF, 0x7E, 0x98, 0xD8, 0xDA, 0xDA, 0xDE, 0xFA, 0x7F, 0x7E,
  0x17, 0x00, 0x44, 0xA7, 0x17, 0x97, 0x37, 0xF7, 0xF7, 0x67, 0xFF, 0x3F,
  0x62, 0xB8, 0x76, 0x77, 0x6E, 0xAF, 0x78, 0x7E, 0x6C, 0xEC, 0x67, 0x77,
  0x30, 0xA3, 0xD8, 0x76, 0x68, 0x68, 0x60, 0x66, 0xF4, 0xFB, 0x7F, 0xFE,
  0x03, 0x80, 0x73, 0xBD, 0xDC, 0xEF, 0xF7, 0xFB, 0xFC, 0xFE, 0x63, 0x31,
  0xB9, 0xC0, 0x60, 0x20, 0xE7, 0xF6, 0x7F, 0x7F, 0x7B, 0x6B, 0x6F, 0x6E,
  0x66, 0x77, 0x00, 0x10, 0x5F, 0x3F, 0xCD, 0xEE, 0x77, 0x1B, 0x9D, 0xCE,
  0xE7, 0x7F, 0x9F, 0xCD, 0x40, 0x00, 0xFF, 0x7E, 0x67, 0xE7, 0xFE, 0x7C,
  0x60, 0x7D, 0xEC, 0xF0, 0x40, 0x22, 0x7F, 0x4F, 0xCE, 0xE7, 0xBF, 0x1B,
  0x8D, 0xC6, 0x6F, 0x3F, 0x3F, 0xC2, 0x20, 0x88, 0x7F, 0x7E, 0x7F, 0xE7,
  0xFE, 0x7E, 0x6E, 0x6F, 0xEF, 0xF7, 0x77, 0xC2, 0xDF, 0xBF, 0xDC, 0x67,
  0x13, 0xE1, 0x78, 0x6E, 0x7B, 0x3F, 0xDF, 0xA8, 0x60, 0x40, 0xFF, 0xFE,
  0x5B, 0xFD, 0x5E, 0x9D, 0x7D, 0x79, 0x3A, 0xBD, 0xF3, 0x04, 0x15, 0x77,
  0x77, 0x77, 0x77, 0xF7, 0x67, 0x67, 0xFF, 0xBF, 0xFE, 0x80, 0xE7, 0x67,
  0x7E, 0x76, 0xBE, 0xBE, 0xBE, 0xDE, 0xDE, 0x9D, 0xC0, 0x03, 0x7B, 0x98,
  0xCC, 0x6E, 0xB7, 0x59, 0xFD, 0xFE, 0xF7, 0x73, 0x99, 0xE9, 0xA0, 0x80,
  0x79, 0xDD, 0xD6, 0xC3, 0xE8, 0xF1, 0x79, 0xFA, 0xB7, 0x5B, 0xBF, 0xC1,
  0x00, 0x04, 0x7F, 0x9D, 0xD6, 0xCB, 0xD6, 0xFA, 0x6C, 0xB6, 0x5B, 0x3F,
  0x9F, 0x57, 0x20, 0x04, 0xFF, 0x7E, 0x46, 0x0D, 0x1A, 0xDA, 0xF6, 0xE2,
  0x7F, 0x7E, 0x07, 0x05, 0x9C, 0xC6, 0x21, 0x08, 0x63, 0x9C, 0xA0, 0xE0,
  0x89, 0xE7, 0x0B, 0x96, 0x87, 0x2C, 0x1C, 0x1C, 0x18, 0x10, 0x07, 0xD8,
  0xE3, 0x18, 0xD6, 0x35, 0x9C, 0xA0, 0xF9, 0x99, 0x99, 0x99, 0x99, 0x9F,
  0xF9, 0x99, 0x99, 0x99, 0x99, 0x9F, 0x4F, 0x83, 0x9D, 0x9C, 0xDE, 0xFD,
  0x3F, 0x76, 0x7E, 0xBF, 0x76, 0xFF, 0x3D, 0x00, 0x5C, 0x7E, 0x6F, 0xE7,
  0x7E, 0x7E, 0xE7, 0x77, 0x7F, 0x7C, 0xCF, 0x84, 0xBF, 0x7E, 0x77, 0x70,
  0x61, 0x65, 0x6B, 0x72, 0x7E, 0x3E, 0x44, 0x2E, 0x59, 0x7C, 0x66, 0xE6,
  0x77, 0xE7, 0x67, 0x7E, 0x7F, 0xFE, 0x08, 0x22, 0xFA, 0x7E, 0x72, 0xE0,
  0x7A, 0x7A, 0xE6, 0xE2, 0x7F, 0x7E, 0x02, 0x23, 0x5F, 0x7E, 0xEB, 0xE5,
  0x7E, 0x7E, 0x62, 0x65, 0x73, 0xF3, 0x81, 0x84, 0xBF, 0x7E, 0x76, 0x70,
  0x60, 0x67, 0x67, 0x76, 0x7E, 0x3E, 0x02, 0x00, 0xF4, 0x77, 0x6E, 0xE7,
  0x7F, 0xFF, 0xE7, 0x77, 0x6E, 0xFF, 0x00, 0x90, 0xFF, 0x7E, 0x98, 0xD8,
  0xDA, 0xDA, 0xDE, 0xFA, 0x7F, 0x7E, 0x17, 0x00, 0x44, 0xA7, 0x17, 0x97,
  0x37, 0xF7, 0xF7, 0x67, 0xFF, 0x3F, 0x62, 0xB8, 0x76, 0x77, 0x6E, 0xAF,
  0x78, 0x7E, 0x6C, 0xEC, 0x67, 0x77, 0x30, 0xA3, 0xD8, 0x76, 0x68, 0x68,
  0x60, 0x66, 0xF4, 0xFB, 0x7F, 0xFE, 0x03, 0x80, 0x73, 0xBD, 0xDC, 0xEF,
  0xF7, 0xFB, 0xFC, 0xFE, 0x63, 0x31, 0xB9, 0xC0, 0x60, 0x20, 0xE7, 0xF6,
  0x7F, 0x7F, 0x7B, 0x6B, 0x6F, 0x6E, 0x66, 0x77, 0x00, 0x10, 0x5F, 0x3F,
  0xCD, 0xEE, 0x77, 0x1B, 0x9D, 0xCE, 0xE7, 0x7F, 0x9F, 0xCD, 0x40, 0x00,
  0xFF, 0x7E, 0x67, 0xE7, 0xFE, 0x7C, 0x60, 0x7D, 0xEC, 0xF0, 0x40, 0x22,
  0x7F, 0x4F, 0xCE, 0xE7, 0xBF, 0x1B, 0x8D, 0xC6, 0x6F, 0x3F, 0x3F, 0xC2,
  0x20, 0x88, 0x7F, 0x7E, 0x7F, 0xE7, 0xFE, 0x7E, 0x6E, 0x6F, 0xEF, 0xF7,
  0x77, 0xC2, 0xDF, 0xBF, 0xDC, 0x67, 0x13, 0xE1, 0x78, 0x6E, 0x7B, 0x3F,
  0xDF, 0xA8, 0x60, 0x40, 0xFF, 0xFE, 0x5B, 0xFD, 0x5E, 0x9D, 0x7D, 0x79,
  0x3A, 0xBD, 0xF3, 0x04, 0x15, 0x77, 0x77, 0x77, 0x77, 0xF7, 0x67, 0x67,
  0xFF, 0xBF, 0xFE, 0x80, 0xE7, 0x67, 0x7E, 0x76, 0xBE, 0xBE, 0xBE, 0xDE,
  0xDE, 0x9D, 0xC0, 0x03, 0x7B, 0x98, 0xCC, 0x6E, 0xB7, 0x59, 0xFD, 0xFE,
  0xF7, 0x73, 0x99, 0xE9, 0xA0, 0x80, 0x79, 0xDD, 0xD6, 0xC3, 0xE8, 0xF1,
  0x79, 0xFA, 0xB7, 0x5B, 0xBF, 0xC1, 0x00, 0x04, 0x7F, 0x9D, 0xD6, 0xCB,
  0xD6, 0xFA, 0x6C, 0xB6, 0x5B, 0x3F, 0x9F, 0x57, 0x20, 0x04, 0xFF, 0x7E,
  0x46, 0x0D, 0x1A, 0xDA, 0xF6, 0xE2, 0x7F, 0x7E, 0x07, 0x05, 0x9C, 0xC6,
  0x21, 0x08, 0x63, 0x9C, 0xA0, 0xF9, 0x99, 0x99, 0x99, 0x99, 0x9F, 0x07,
  0xD8, 0xE3, 0x18, 0xD6, 0x35, 0x9C, 0xA0, 0xF9, 0x99, 0x99, 0x99, 0x99,
  0x9F };

// Glyph, Offset to bitmap, Width, Height, xAdvance, xOffset, yOffset

const gfxglyph_t HotStuff6Glyphs[] PROGMEM = {
  {32,     0,   1,   1,   5,    0,    0 },   // 0x00 ' ' 
  {33,     1,   5,  12,   5,    0,  -11 },   // 0x01 '!' 
  {34,     9,   7,  12,   7,    0,  -11 },   // 0x02 '"' 
  {35,    20,   5,  12,   5,    0,  -11 },   // 0x03 '#' 
  {36,    28,   8,  12,   8,    0,  -11 },   // 0x04 '$' 
  {37,    40,   5,  12,   5,    0,  -11 },   // 0x05 '%' 
  {38,    48,   8,  12,   8,    0,  -11 },   // 0x06 '&' 
  {39,    60,   5,  12,   5,    0,  -11 },   // 0x07 ''' 
  {40,    68,   5,  12,   5,    0,  -11 },   // 0x08 '(' 
  {41,    76,   5,  12,   5,    0,  -11 },   // 0x09 ')' 
  {42,    84,   5,  12,   5,    0,  -11 },   // 0x0A '*' 
  {43,    92,   8,  11,   8,    0,  -11 },   // 0x0B '+' 
  {44,   103,   4,  12,   5,    0,  -11 },   // 0x0C ',' 
  {45,   109,   5,  12,   5,    0,  -11 },   // 0x0D '-' 
  {46,   117,   5,  12,   5,    0,  -11 },   // 0x0E '.' 
  {47,   125,   7,  12,   7,    0,  -11 },   // 0x0F '/' 
  {48,   136,   8,  12,   9,    0,  -11 },   // 0x10 '0' 
  {49,   148,   8,  12,   8,    0,  -11 },   // 0x11 '1' 
  {50,   160,   8,  12,   8,    0,  -11 },   // 0x12 '2' 
  {51,   172,   8,  12,   9,    0,  -11 },   // 0x13 '3' 
  {52,   184,   8,  12,   8,    0,  -11 },   // 0x14 '4' 
  {53,   196,   8,  12,   8,    0,  -11 },   // 0x15 '5' 
  {54,   208,   8,  12,   8,    0,  -11 },   // 0x16 '6' 
  {55,   220,   8,  12,   8,    0,  -11 },   // 0x17 '7' 
  {56,   232,   8,  12,   8,    0,  -11 },   // 0x18 '8' 
  {57,   244,   8,  12,   8,    0,  -11 },   // 0x19 '9' 
  {58,   256,   5,  11,   5,    0,  -10 },   // 0x1A ':' 
  {59,   263,   5,  12,   5,    0,  -11 },   // 0x1B ';' 
  {60,   271,   5,  12,   5,    0,  -11 },   // 0x1C '<' 
  {61,   279,   5,  12,   6,    0,  -11 },   // 0x1D '=' 
  {62,   287,   5,  12,   5,    0,  -11 },   // 0x1E '>' 
  {63,   295,   8,  12,   8,    0,  -11 },   // 0x1F '?' 
  {64,   307,   4,  12,   6,    1,  -11 },   // 0x20 '@' 
  {65,   313,   8,  12,   9,    0,  -11 },   // 0x21 'A' 
  {66,   325,   8,  12,   8,    0,  -11 },   // 0x22 'B' 
  {67,   337,   8,  12,   9,    0,  -11 },   // 0x23 'C' 
  {68,   349,   8,  12,   8,    0,  -11 },   // 0x24 'D' 
  {69,   361,   8,  12,   8,    0,  -11 },   // 0x25 'E' 
  {70,   373,   8,  12,   8,    0,  -11 },   // 0x26 'F' 
  {71,   385,   8,  12,   8,    0,  -11 },   // 0x27 'G' 
  {72,   397,   8,  12,   8,    0,  -11 },   // 0x28 'H' 
  {73,   409,   8,  12,   8,    0,  -11 },   // 0x29 'I' 
  {74,   421,   8,  12,   8,    0,  -11 },   // 0x2A 'J' 
  {75,   433,   8,  12,   9,    0,  -11 },   // 0x2B 'K' 
  {76,   445,   8,  12,   8,    0,  -11 },   // 0x2C 'L' 
  {77,   457,   9,  12,   9,    0,  -11 },   // 0x2D 'M' 
  {78,   471,   8,  12,   8,    0,  -11 },   // 0x2E 'N' 
  {79,   483,   9,  12,   9,    0,  -11 },   // 0x2F 'O' 
  {80,   497,   8,  12,   8,    0,  -11 },   // 0x30 'P' 
  {81,   509,   9,  12,   9,    0,  -11 },   // 0x31 'Q' 
  {82,   523,   8,  12,   8,    0,  -11 },   // 0x32 'R' 
  {83,   535,   9,  12,   9,    0,  -11 },   // 0x33 'S' 
  {84,   549,   8,  12,   8,    0,  -11 },   // 0x34 'T' 
  {85,   561,   8,  12,   8,    0,  -11 },   // 0x35 'U' 
  {86,   573,   8,  12,   9,    0,  -11 },   // 0x36 'V' 
  {87,   585,   9,  12,   9,    0,  -11 },   // 0x37 'W' 
  {88,   599,   9,  12,   9,    0,  -11 },   // 0x38 'X' 
  {89,   613,   9,  12,   9,    0,  -11 },   // 0x39 'Y' 
  {90,   627,   8,  12,   8,    0,  -11 },   // 0x3A 'Z' 
  {91,   639,   5,  12,   5,    0,  -11 },   // 0x3B '[' 
  {92,   647,   7,  12,   7,    0,  -11 },   // 0x3C '\' 
  {93,   658,   5,  12,   5,    0,  -11 },   // 0x3D ']' 
  {94,   666,   4,  12,   6,    1,  -11 },   // 0x3E '^' 
  {95,   672,   4,  12,   6,    1,  -11 },   // 0x3F '_' 
  {96,   678,   4,   2,   5,    0,  -13 },   // 0x40 '`' 
  {97,   679,   8,  12,   9,    0,  -11 },   // 0x41 'a' 
  {98,   691,   8,  12,   8,    0,  -11 },   // 0x42 'b' 
  {99,   703,   8,  12,   9,    0,  -11 },   // 0x43 'c' 
  {100,   715,   8,  12,   8,    0,  -11 },   // 0x44 'd' 
  {101,   727,   8,  12,   8,    0,  -11 },   // 0x45 'e' 
  {102,   739,   8,  12,   8,    0,  -11 },   // 0x46 'f' 
  {103,   751,   8,  12,   8,    0,  -11 },   // 0x47 'g' 
  {104,   763,   8,  12,   8,    0,  -11 },   // 0x48 'h' 
  {105,   775,   8,  12,   8,    0,  -11 },   // 0x49 'i' 
  {106,   787,   8,  12,   8,    0,  -11 },   // 0x4A 'j' 
  {107,   799,   8,  12,   9,    0,  -11 },   // 0x4B 'k' 
  {108,   811,   8,  12,   8,    0,  -11 },   // 0x4C 'l' 
  {109,   823,   9,  12,   9,    0,  -11 },   // 0x4D 'm' 
  {110,   837,   8,  12,   8,    0,  -11 },   // 0x4E 'n' 
  {111,   849,   9,  12,   9,    0,  -11 },   // 0x4F 'o' 
  {112,   863,   8,  12,   8,    0,  -11 },   // 0x50 'p' 
  {113,   875,   9,  12,   9,    0,  -11 },   // 0x51 'q' 
  {114,   889,   8,  12,   8,    0,  -11 },   // 0x52 'r' 
  {115,   901,   9,  12,   9,    0,  -11 },   // 0x53 's' 
  {116,   915,   8,  12,   8,    0,  -11 },   // 0x54 't' 
  {117,   927,   8,  12,   8,    0,  -11 },   // 0x55 'u' 
  {118,   939,   8,  12,   9,    0,  -11 },   // 0x56 'v' 
  {119,   951,   9,  12,   9,    0,  -11 },   // 0x57 'w' 
  {120,   965,   9,  12,   9,    0,  -11 },   // 0x58 'x' 
  {121,   979,   9,  12,   9,    0,  -11 },   // 0x59 'y' 
  {122,   993,   8,  12,   8,    0,  -11 },   // 0x5A 'z' 
  {123,  1005,   5,  12,   5,    0,  -11 },   // 0x5B '{' 
  {124,  1013,   4,  12,   6,    1,  -11 },   // 0x5C '|' 
  {125,  1019,   5,  12,   5,    0,  -11 },   // 0x5D '}' 
  {126,  1027,   4,  12,   6,    1,  -11 }   // 0x5E '~' 
};

const gfxfont_t HotStuff6 PROGMEM = 
{
  (uint8_t  *)HotStuff6Bitmaps, //< Glyph bitmaps, concatenated 
  (gfxglyph_t *)HotStuff6Glyphs, //< Glyph array
  95,// total glyphs in the string
   1,  // newline distance (y axis)
     0,  // minimum X - left most
     0,  // minimum Y - bottom most (descenders can drive this negative)
     9,  // maximum X - right most
    14}; // maximum Y - top most
// Approx. 1712 bytes -  but your mileage may vary.

#endif