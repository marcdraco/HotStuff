
#ifndef __FIXEDFONTCOURIERPRIMEREGULARTTF24
#define __FIXEDFONTCOURIERPRIMEREGULARTTF24
const uint8_t HotStuff24Bitmaps[] PROGMEM = {
  0x01, 0xF8, 0x00, 0x7F, 0xE0, 0x0F, 0xFF, 0x01, 0xF0, 0xF8, 0x3C, 0x03,
  0xC3, 0x80, 0x1C, 0x78, 0x01, 0xE7, 0x00, 0x0E, 0x70, 0x00, 0xEE, 0x00,
  0x07, 0xE0, 0x00, 0x7E, 0x00, 0x07, 0xE0, 0x00, 0x7E, 0x00, 0x07, 0xE0,
  0x00, 0x7E, 0x00, 0x07, 0xE0, 0x00, 0x7E, 0x00, 0x07, 0x70, 0x00, 0xE7,
  0x00, 0x0E, 0x70, 0x01, 0xE3, 0x80, 0x1C, 0x3C, 0x03, 0xC1, 0xF0, 0xF8,
  0x0F, 0xFF, 0x00, 0x7F, 0xE0, 0x01, 0xF8, 0x00, 0x00, 0xE0, 0x03, 0xF8,
  0x07, 0xFE, 0x03, 0xFB, 0x80, 0x70, 0xE0, 0x00, 0x38, 0x00, 0x0E, 0x00,
  0x03, 0x80, 0x00, 0xE0, 0x00, 0x38, 0x00, 0x0E, 0x00, 0x03, 0x80, 0x00,
  0xE0, 0x00, 0x38, 0x00, 0x0E, 0x00, 0x03, 0x80, 0x00, 0xE0, 0x00, 0x38,
  0x00, 0x0E, 0x00, 0x03, 0x80, 0x00, 0xE0, 0x00, 0x38, 0x00, 0x0E, 0x00,
  0x03, 0x80, 0x7F, 0xFF, 0xFF, 0xFF, 0xF7, 0xFF, 0xFC, 0x07, 0xF0, 0x0F,
  0xFF, 0x0F, 0xFF, 0xE3, 0xE0, 0x7C, 0xE0, 0x07, 0x38, 0x00, 0xEE, 0x00,
  0x3B, 0x80, 0x0E, 0x00, 0x03, 0x80, 0x00, 0xE0, 0x00, 0x78, 0x00, 0x1C,
  0x00, 0x0F, 0x00, 0x07, 0x80, 0x03, 0xC0, 0x01, 0xF0, 0x00, 0xF8, 0x00,
  0x7C, 0x00, 0x3E, 0x00, 0x1F, 0x07, 0x0F, 0x81, 0xC7, 0xC0, 0x73, 0xE0,
  0x1D, 0xF0, 0x07, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFC, 0x07, 0xF0,
  0x07, 0xFF, 0x07, 0xFF, 0xE1, 0xE0, 0x3C, 0x70, 0x07, 0x9C, 0x00, 0xE7,
  0x00, 0x39, 0xC0, 0x0E, 0x00, 0x03, 0x80, 0x01, 0xC0, 0x00, 0xF0, 0x0F,
  0xF8, 0x03, 0xFC, 0x00, 0xFF, 0xC0, 0x00, 0xF8, 0x00, 0x0E, 0x00, 0x03,
  0xC0, 0x00, 0x70, 0x00, 0x1C, 0x00, 0x07, 0x00, 0x01, 0xD0, 0x00, 0xFF,
  0x00, 0x3B, 0xF0, 0x3E, 0x7F, 0xFF, 0x0F, 0xFF, 0x80, 0x7F, 0x80, 0x00,
  0x0E, 0x00, 0x01, 0xE0, 0x00, 0x3E, 0x00, 0x07, 0xE0, 0x00, 0x7E, 0x00,
  0x0F, 0xE0, 0x01, 0xEE, 0x00, 0x3C, 0xE0, 0x03, 0x8E, 0x00, 0x78, 0xE0,
  0x0F, 0x0E, 0x01, 0xE0, 0xE0, 0x1E, 0x0E, 0x03, 0xC0, 0xE0, 0x78, 0x0E,
  0x0F, 0x80, 0xE0, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF0, 0x00,
  0xE0, 0x00, 0x0E, 0x00, 0x00, 0xE0, 0x00, 0x0E, 0x00, 0x00, 0xE0, 0x01,
  0xFF, 0xE0, 0x1F, 0xFE, 0x01, 0xFF, 0xE0, 0x3F, 0xFF, 0x1F, 0xFF, 0xC7,
  0xFF, 0xF1, 0xC0, 0x00, 0x70, 0x00, 0x1C, 0x00, 0x07, 0x00, 0x01, 0xC0,
  0x00, 0x70, 0x00, 0x1D, 0xFC, 0x07, 0xFF, 0xC1, 0xFF, 0xFC, 0x7C, 0x0F,
  0x1C, 0x01, 0xE0, 0x00, 0x38, 0x00, 0x07, 0x00, 0x01, 0xC0, 0x00, 0x70,
  0x00, 0x1C, 0x00, 0x07, 0x00, 0x01, 0xD0, 0x00, 0xEF, 0x00, 0x7B, 0xF0,
  0x3C, 0xFF, 0xFF, 0x0F, 0xFF, 0x80, 0x7F, 0x00, 0x00, 0x0F, 0x80, 0x1F,
  0xF0, 0x0F, 0xFE, 0x03, 0xF8, 0x00, 0xF8, 0x00, 0x3C, 0x00, 0x0F, 0x00,
  0x01, 0xC0, 0x00, 0x78, 0x00, 0x0E, 0x00, 0x01, 0xC7, 0xE0, 0x73, 0xFF,
  0x0F, 0xFF, 0xF9, 0xFC, 0x1F, 0x3E, 0x00, 0xF7, 0x80, 0x0E, 0xE0, 0x00,
  0xFC, 0x00, 0x1F, 0x80, 0x03, 0xF0, 0x00, 0x76, 0x00, 0x0E, 0xE0, 0x03,
  0x8E, 0x00, 0xF1, 0xF0, 0x7C, 0x1F, 0xFF, 0x81, 0xFF, 0xC0, 0x07, 0xE0,
  0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x80, 0x0E, 0xE0, 0x07,
  0xB8, 0x01, 0xEE, 0x00, 0xF3, 0x80, 0x3C, 0x00, 0x0E, 0x00, 0x07, 0x80,
  0x01, 0xC0, 0x00, 0xF0, 0x00, 0x3C, 0x00, 0x1E, 0x00, 0x07, 0x80, 0x01,
  0xC0, 0x00, 0xF0, 0x00, 0x3C, 0x00, 0x1E, 0x00, 0x07, 0x80, 0x01, 0xC0,
  0x00, 0xF0, 0x00, 0x38, 0x00, 0x1E, 0x00, 0x07, 0x80, 0x03, 0xC0, 0x00,
  0x70, 0x00, 0x03, 0xF8, 0x03, 0xFF, 0x81, 0xFF, 0xF0, 0xF8, 0x3E, 0x38,
  0x03, 0x9C, 0x00, 0x77, 0x00, 0x1D, 0xC0, 0x07, 0x70, 0x01, 0xCE, 0x00,
  0xE3, 0xE0, 0xF0, 0x7F, 0xF8, 0x0F, 0xFC, 0x07, 0xFF, 0x83, 0xC0, 0xF1,
  0xE0, 0x1E, 0xF0, 0x03, 0xF8, 0x00, 0x7E, 0x00, 0x1F, 0x80, 0x07, 0xE0,
  0x01, 0xFC, 0x00, 0xF7, 0x80, 0x79, 0xF0, 0x3C, 0x3F, 0xFF, 0x03, 0xFF,
  0x00, 0x3F, 0x00, 0x03, 0xF0, 0x01, 0xFF, 0xC0, 0xFF, 0xFC, 0x3E, 0x07,
  0xC7, 0x80, 0x39, 0xE0, 0x03, 0xB8, 0x00, 0x37, 0x00, 0x07, 0xE0, 0x00,
  0xFC, 0x00, 0x1F, 0xC0, 0x07, 0xBC, 0x01, 0xF7, 0xC0, 0x7E, 0x7F, 0xFF,
  0xC3, 0xFF, 0x38, 0x1F, 0x8F, 0x00, 0x01, 0xC0, 0x00, 0x38, 0x00, 0x0F,
  0x00, 0x03, 0xC0, 0x00, 0xF8, 0x00, 0x3E, 0x00, 0x1F, 0x80, 0x1F, 0xE0,
  0x3F, 0xF8, 0x07, 0xF8, 0x00, 0xF8, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF,
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF8, 0x70, 0x00, 0x70, 0xE0, 0x00, 0xE1,
  0xC0, 0x01, 0xC3, 0x80, 0x03, 0x87, 0x00, 0x07, 0x0E, 0x00, 0x0E, 0x1C,
  0x07, 0x00, 0x38, 0x0E, 0x00, 0x70, 0x1C, 0x00, 0xFF, 0xF8, 0x01, 0xFF,
  0xF0, 0x03, 0xFF, 0xE0, 0x07, 0x01, 0xC0, 0x0E, 0x03, 0x80, 0x1C, 0x07,
  0x00, 0x38, 0x00, 0x00, 0x70, 0x00, 0x00, 0xE0, 0x00, 0x01, 0xC0, 0x00,
  0x03, 0x80, 0x00, 0x07, 0x00, 0x00, 0xFF, 0xFC, 0x01, 0xFF, 0xF8, 0x03,
  0xFF, 0xF0, 0x00, 0x00, 0xFE, 0x38, 0x1F, 0xFD, 0xC3, 0xFF, 0xFE, 0x3F,
  0x03, 0xF1, 0xE0, 0x0F, 0x9E, 0x00, 0x3D, 0xE0, 0x00, 0xEE, 0x00, 0x07,
  0x70, 0x00, 0x3F, 0x80, 0x01, 0xF8, 0x00, 0x01, 0xC0, 0x00, 0x0E, 0x00,
  0x00, 0x70, 0x00, 0x03, 0x80, 0x00, 0x1C, 0x00, 0x00, 0xE0, 0x00, 0x07,
  0x00, 0x00, 0x1C, 0x00, 0x00, 0xE0, 0x00, 0x07, 0x80, 0x00, 0x1C, 0x00,
  0x0C, 0xF8, 0x01, 0xE3, 0xE0, 0x3F, 0x0F, 0xFF, 0xF0, 0x1F, 0xFF, 0x00,
  0x3F, 0x80, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF0, 0x00, 0x00,
  0xE0, 0x00, 0x0F, 0x00, 0x01, 0xE0, 0x00, 0x1E, 0x00, 0x01, 0xC0, 0x00,
  0x3C, 0x00, 0x03, 0x80, 0x00, 0x78, 0x00, 0x07, 0x00, 0x00, 0xF0, 0x00,
  0x0F, 0x00, 0x01, 0xE0, 0x00, 0x1E, 0x00, 0x03, 0xC0, 0x00, 0x3C, 0x00,
  0x03, 0x80, 0x00, 0x78, 0x00, 0x07, 0x00, 0x00, 0xF0, 0x00, 0x0E, 0x00,
  0x01, 0xE0, 0x00, 0x1E, 0x00, 0x03, 0xC0, 0x00, 0x3C, 0x00, 0x03, 0x80,
  0x00, 0x78, 0x00, 0x07, 0x00, 0x00, 0xF0, 0x00, 0x0E, 0x00, 0x01, 0xE0,
  0x00, 0x1E, 0x00, 0x03, 0xC0, 0x00, 0x3C, 0x00, 0x03, 0x80, 0x00, 0x78,
  0x00, 0x07, 0x00, 0x00, 0x70, 0x00, 0x00, 0x0F, 0x80, 0x00, 0x0F, 0xF8,
  0x00, 0x07, 0xFF, 0x00, 0x31, 0xE3, 0xC0, 0x1E, 0xE0, 0x78, 0x0F, 0xB8,
  0x0E, 0x07, 0xCE, 0x03, 0x83, 0xE3, 0x80, 0xE1, 0xF0, 0x78, 0xF0, 0xF8,
  0x1F, 0xFC, 0x78, 0x03, 0xFE, 0x3C, 0x00, 0x3E, 0x1E, 0x00, 0x00, 0x0F,
  0x00, 0x00, 0x07, 0x80, 0x00, 0x03, 0xC0, 0x00, 0x01, 0xE1, 0xF0, 0x01,
  0xF1, 0xFF, 0x00, 0xF8, 0xFF, 0xE0, 0x7C, 0x3C, 0x78, 0x3E, 0x1C, 0x0F,
  0x1F, 0x07, 0x01, 0xCF, 0x81, 0xC0, 0x77, 0xC0, 0x70, 0x1C, 0xE0, 0x0F,
  0x1E, 0x20, 0x03, 0xFF, 0x80, 0x00, 0x7F, 0xC0, 0x00, 0x07, 0xC0, 0x3C,
  0x7E, 0xFF, 0xFF, 0xFF, 0xFF, 0x7E, 0x3C };

// Glyph, Offset to bitmap, Width, Height, xAdvance, xOffset, yOffset

const gfxglyph_t HotStuff24Glyphs[] PROGMEM = {
  {48,     0,  20,  27,  28,    4,  -26 },   // 0x00 '0' 
  {49,    68,  18,  27,  28,    5,  -26 },   // 0x01 '1' 
  {50,   129,  18,  27,  28,    5,  -26 },   // 0x02 '2' 
  {51,   190,  18,  27,  28,    5,  -26 },   // 0x03 '3' 
  {52,   251,  20,  27,  28,    4,  -26 },   // 0x04 '4' 
  {53,   319,  18,  27,  28,    5,  -26 },   // 0x05 '5' 
  {54,   380,  19,  27,  28,    5,  -26 },   // 0x06 '6' 
  {55,   445,  18,  27,  28,    5,  -26 },   // 0x07 '7' 
  {56,   506,  18,  27,  28,    5,  -26 },   // 0x08 '8' 
  {57,   567,  19,  27,  28,    4,  -26 },   // 0x09 '9' 
  {32,   632,   1,   1,  28,    0,    0 },   // 0x0A ' ' 
  {70,   633,  23,  27,  28,    2,  -26 },   // 0x0B 'F' 
  {67,   711,  21,  27,  28,    3,  -26 },   // 0x0C 'C' 
  {45,   782,  20,   3,  28,    4,  -14 },   // 0x0D '-' 
  {47,   790,  20,  37,  28,    4,  -29 },   // 0x0E '/' 
  {37,   883,  26,  27,  28,    1,  -26 },   // 0x0F '%' 
  {46,   971,   8,   8,  28,   10,   -7 }   // 0x10 '.' 
};

const gfxfont_t HotStuff24 PROGMEM = 
{
  (uint8_t  *)HotStuff24Bitmaps, //< Glyph bitmaps, concatenated 
  (gfxglyph_t *)HotStuff24Glyphs, //< Glyph array
  17,// total glyphs in the string
  27,  // newline distance (y axis)
     0,  // minimum X - left most
    -7,  // minimum Y - bottom most (descenders can drive this negative)
    27,  // maximum X - right most
    30}; // maximum Y - top most
// Approx. 1112 bytes -  but your mileage may vary.

#endif