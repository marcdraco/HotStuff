
#ifndef __FIXEDFONTGOMMOGRATTF6
#define __FIXEDFONTGOMMOGRATTF6
const uint8_t HotStuff6Bitmaps[] PROGMEM = {
  0x00, 0x83, 0x9D, 0x9C, 0xDE, 0xFD, 0x3F, 0x76, 0x7E, 0xBF, 0x76, 0xFF,
  0x3D, 0x00, 0x5C, 0x7E, 0x6F, 0xE7, 0x7E, 0x7E, 0xE7, 0x77, 0x7F, 0x7C,
  0xCF, 0x84, 0xBF, 0x7E, 0x77, 0x70, 0x61, 0x65, 0x6B, 0x72, 0x7E, 0x3E,
  0x44, 0x2E, 0x59, 0x7C, 0x66, 0xE6, 0x77, 0xE7, 0x67, 0x7E, 0x7F, 0xFE,
  0x08, 0x22, 0xFA, 0x7E, 0x72, 0xE0, 0x7A, 0x7A, 0xE6, 0xE2, 0x7F, 0x7E,
  0x02, 0x23, 0x5F, 0x7E, 0xEB, 0xE5, 0x7E, 0x7E, 0x62, 0x65, 0x73, 0xF3,
  0x81, 0x84, 0xBF, 0x7E, 0x76, 0x70, 0x60, 0x67, 0x67, 0x76, 0x7E, 0x3E,
  0x02, 0x00, 0xF4, 0x77, 0x6E, 0xE7, 0x7F, 0xFF, 0xE7, 0x77, 0x6E, 0xFF,
  0x00, 0x90, 0xFF, 0x7E, 0x98, 0xD8, 0xDA, 0xDA, 0xDE, 0xFA, 0x7F, 0x7E,
  0x17, 0x00, 0x44, 0xA7, 0x17, 0x97, 0x37, 0xF7, 0xF7, 0x67, 0xFF, 0x3F,
  0x62, 0xB8, 0x76, 0x77, 0x6E, 0xAF, 0x78, 0x7E, 0x6C, 0xEC, 0x67, 0x77,
  0x30, 0xA3, 0xD8, 0x76, 0x68, 0x68, 0x60, 0x66, 0xF4, 0xFB, 0x7F, 0xFE,
  0x03, 0x80, 0x73, 0xBD, 0xDC, 0xEF, 0xF7, 0xFB, 0xFC, 0xFE, 0x63, 0x31,
  0xB9, 0xC0, 0x60, 0x20, 0xE7, 0xF6, 0x7F, 0x7F, 0x7B, 0x6B, 0x6F, 0x6E,
  0x66, 0x77, 0x00, 0x10, 0x5F, 0x3F, 0xCD, 0xEE, 0x77, 0x1B, 0x9D, 0xCE,
  0xE7, 0x7F, 0x9F, 0xCD, 0x40, 0x00, 0xFF, 0x7E, 0x67, 0xE7, 0xFE, 0x7C,
  0x60, 0x7D, 0xEC, 0xF0, 0x40, 0x22, 0x7F, 0x4F, 0xCE, 0xE7, 0xBF, 0x1B,
  0x8D, 0xC6, 0x6F, 0x3F, 0x3F, 0xC2, 0x20, 0x88, 0x7F, 0x7E, 0x7F, 0xE7,
  0xFE, 0x7E, 0x6E, 0x6F, 0xEF, 0xF7, 0x77, 0xC2, 0xDF, 0xBF, 0xDC, 0x67,
  0x13, 0xE1, 0x78, 0x6E, 0x7B, 0x3F, 0xDF, 0xA8, 0x60, 0x40, 0xFF, 0xFE,
  0x5B, 0xFD, 0x5E, 0x9D, 0x7D, 0x79, 0x3A, 0xBD, 0xF3, 0x04, 0x15, 0x77,
  0x77, 0x77, 0x77, 0xF7, 0x67, 0x67, 0xFF, 0xBF, 0xFE, 0x80, 0xE7, 0x67,
  0x7E, 0x76, 0xBE, 0xBE, 0xBE, 0xDE, 0xDE, 0x9D, 0xC0, 0x03, 0x7B, 0x98,
  0xCC, 0x6E, 0xB7, 0x59, 0xFD, 0xFE, 0xF7, 0x73, 0x99, 0xE9, 0xA0, 0x80,
  0x79, 0xDD, 0xD6, 0xC3, 0xE8, 0xF1, 0x79, 0xFA, 0xB7, 0x5B, 0xBF, 0xC1,
  0x00, 0x04, 0x7F, 0x9D, 0xD6, 0xCB, 0xD6, 0xFA, 0x6C, 0xB6, 0x5B, 0x3F,
  0x9F, 0x57, 0x20, 0x04, 0xFF, 0x7E, 0x46, 0x0D, 0x1A, 0xDA, 0xF6, 0xE2,
  0x7F, 0x7E, 0x07, 0x83, 0x9D, 0x9C, 0xDE, 0xFD, 0x3F, 0x76, 0x7E, 0xBF,
  0x76, 0xFF, 0x3D, 0x00, 0x5C, 0x7E, 0x6F, 0xE7, 0x7E, 0x7E, 0xE7, 0x77,
  0x7F, 0x7C, 0xCF, 0x84, 0xBF, 0x7E, 0x77, 0x70, 0x61, 0x65, 0x6B, 0x72,
  0x7E, 0x3E, 0x44, 0x2E, 0x59, 0x7C, 0x66, 0xE6, 0x77, 0xE7, 0x67, 0x7E,
  0x7F, 0xFE, 0x08, 0x22, 0xFA, 0x7E, 0x72, 0xE0, 0x7A, 0x7A, 0xE6, 0xE2,
  0x7F, 0x7E, 0x02, 0x23, 0x5F, 0x7E, 0xEB, 0xE5, 0x7E, 0x7E, 0x62, 0x65,
  0x73, 0xF3, 0x81, 0x84, 0xBF, 0x7E, 0x76, 0x70, 0x60, 0x67, 0x67, 0x76,
  0x7E, 0x3E, 0x02, 0x00, 0xF4, 0x77, 0x6E, 0xE7, 0x7F, 0xFF, 0xE7, 0x77,
  0x6E, 0xFF, 0x00, 0x90, 0xFF, 0x7E, 0x98, 0xD8, 0xDA, 0xDA, 0xDE, 0xFA,
  0x7F, 0x7E, 0x17, 0x00, 0x44, 0xA7, 0x17, 0x97, 0x37, 0xF7, 0xF7, 0x67,
  0xFF, 0x3F, 0x62, 0xB8, 0x76, 0x77, 0x6E, 0xAF, 0x78, 0x7E, 0x6C, 0xEC,
  0x67, 0x77, 0x30, 0xA3, 0xD8, 0x76, 0x68, 0x68, 0x60, 0x66, 0xF4, 0xFB,
  0x7F, 0xFE, 0x03, 0x80, 0x73, 0xBD, 0xDC, 0xEF, 0xF7, 0xFB, 0xFC, 0xFE,
  0x63, 0x31, 0xB9, 0xC0, 0x60, 0x20, 0xE7, 0xF6, 0x7F, 0x7F, 0x7B, 0x6B,
  0x6F, 0x6E, 0x66, 0x77, 0x00, 0x10, 0x5F, 0x3F, 0xCD, 0xEE, 0x77, 0x1B,
  0x9D, 0xCE, 0xE7, 0x7F, 0x9F, 0xCD, 0x40, 0x00, 0xFF, 0x7E, 0x67, 0xE7,
  0xFE, 0x7C, 0x60, 0x7D, 0xEC, 0xF0, 0x40, 0x22, 0x7F, 0x4F, 0xCE, 0xE7,
  0xBF, 0x1B, 0x8D, 0xC6, 0x6F, 0x3F, 0x3F, 0xC2, 0x20, 0x88, 0x7F, 0x7E,
  0x7F, 0xE7, 0xFE, 0x7E, 0x6E, 0x6F, 0xEF, 0xF7, 0x77, 0xC2, 0xDF, 0xBF,
  0xDC, 0x67, 0x13, 0xE1, 0x78, 0x6E, 0x7B, 0x3F, 0xDF, 0xA8, 0x60, 0x40,
  0xFF, 0xFE, 0x5B, 0xFD, 0x5E, 0x9D, 0x7D, 0x79, 0x3A, 0xBD, 0xF3, 0x04,
  0x15, 0x77, 0x77, 0x77, 0x77, 0xF7, 0x67, 0x67, 0xFF, 0xBF, 0xFE, 0x80,
  0xE7, 0x67, 0x7E, 0x76, 0xBE, 0xBE, 0xBE, 0xDE, 0xDE, 0x9D, 0xC0, 0x03,
  0x7B, 0x98, 0xCC, 0x6E, 0xB7, 0x59, 0xFD, 0xFE, 0xF7, 0x73, 0x99, 0xE9,
  0xA0, 0x80, 0x79, 0xDD, 0xD6, 0xC3, 0xE8, 0xF1, 0x79, 0xFA, 0xB7, 0x5B,
  0xBF, 0xC1, 0x00, 0x04, 0x7F, 0x9D, 0xD6, 0xCB, 0xD6, 0xFA, 0x6C, 0xB6,
  0x5B, 0x3F, 0x9F, 0x57, 0x20, 0x04, 0xFF, 0x7E, 0x46, 0x0D, 0x1A, 0xDA,
  0xF6, 0xE2, 0x7F, 0x7E, 0x07, 0xA8, 0xBF, 0xFE, 0xEE, 0xE7, 0x67, 0x77,
  0x7F, 0x77, 0x7F, 0x3D, 0x2D, 0x40, 0xBA, 0x3D, 0xFD, 0x1D, 0x5E, 0x5E,
  0x1D, 0x5A, 0x7E, 0x7E, 0x29, 0x82, 0xFF, 0x7F, 0x26, 0x06, 0x8E, 0xBE,
  0xB0, 0xE2, 0x7F, 0x7E, 0x03, 0x25, 0xFF, 0x7E, 0x44, 0x1C, 0x1D, 0x1E,
  0x07, 0x6B, 0x7F, 0x7F, 0x42, 0x00, 0xCF, 0xFE, 0x5C, 0x7D, 0x6D, 0x6D,
  0xFF, 0x0F, 0x2C, 0x7E, 0x3C, 0x03, 0x3E, 0x3E, 0x6A, 0xE4, 0x7E, 0x3E,
  0x07, 0xCB, 0xF7, 0x7F, 0x02, 0x85, 0xBF, 0x7E, 0x76, 0x60, 0x68, 0x7E,
  0x6E, 0xE6, 0xFE, 0xBD, 0xD6, 0x04, 0xFF, 0x7F, 0x56, 0x0D, 0x2D, 0x2E,
  0xD8, 0x90, 0xB7, 0x74, 0x1E, 0x10, 0x3D, 0xFE, 0x6F, 0xE7, 0xFE, 0x7E,
  0x67, 0x67, 0x7E, 0xBC, 0x9F, 0x11, 0x7F, 0x7F, 0x67, 0xE6, 0x7E, 0x3F,
  0x47, 0xB7, 0x7E, 0x7F, 0x09, 0x09, 0x04, 0x80, 0x7F, 0xC8, 0x4D, 0x48,
  0x00, 0x08, 0x21, 0x00, 0x00, 0x40, 0x02, 0x04, 0x00, 0x00, 0x21, 0x04,
  0x31, 0x40, 0x03, 0x19, 0x40, 0x02, 0x14, 0x44, 0xCE, 0x0E, 0xE2, 0x07,
  0x9C, 0x67, 0x31, 0xCC, 0x03, 0x0A, 0x00, 0x00, 0x00, 0xEB, 0x42, 0x00,
  0x63, 0x08, 0x09, 0x04, 0x80, 0x7F, 0xC8, 0x4D, 0x48, 0x00, 0x05, 0x9C,
  0xC6, 0x21, 0x08, 0x63, 0x9C, 0xA0, 0x07, 0xD8, 0xE3, 0x18, 0xD6, 0x35,
  0x9C, 0xA0, 0x05, 0x9C, 0xC6, 0x21, 0x08, 0x63, 0x9C, 0xA0, 0x07, 0xD8,
  0xE3, 0x18, 0xD6, 0x35, 0x9C, 0xA0 };

// Glyph, Offset to bitmap, Width, Height, xAdvance, xOffset, yOffset

const gfxglyph_t HotStuff6Glyphs[] PROGMEM = {
  {32,     0,   1,   1,   5,    0,    0 },   // 0x00 ' ' 
  {65,     1,   8,  12,   9,    0,  -11 },   // 0x01 'A' 
  {66,    13,   8,  12,   8,    0,  -11 },   // 0x02 'B' 
  {67,    25,   8,  12,   9,    0,  -11 },   // 0x03 'C' 
  {68,    37,   8,  12,   8,    0,  -11 },   // 0x04 'D' 
  {69,    49,   8,  12,   8,    0,  -11 },   // 0x05 'E' 
  {70,    61,   8,  12,   8,    0,  -11 },   // 0x06 'F' 
  {71,    73,   8,  12,   8,    0,  -11 },   // 0x07 'G' 
  {72,    85,   8,  12,   8,    0,  -11 },   // 0x08 'H' 
  {73,    97,   8,  12,   8,    0,  -11 },   // 0x09 'I' 
  {74,   109,   8,  12,   8,    0,  -11 },   // 0x0A 'J' 
  {75,   121,   8,  12,   9,    0,  -11 },   // 0x0B 'K' 
  {76,   133,   8,  12,   8,    0,  -11 },   // 0x0C 'L' 
  {77,   145,   9,  12,   9,    0,  -11 },   // 0x0D 'M' 
  {78,   159,   8,  12,   8,    0,  -11 },   // 0x0E 'N' 
  {79,   171,   9,  12,   9,    0,  -11 },   // 0x0F 'O' 
  {80,   185,   8,  12,   8,    0,  -11 },   // 0x10 'P' 
  {81,   197,   9,  12,   9,    0,  -11 },   // 0x11 'Q' 
  {82,   211,   8,  12,   8,    0,  -11 },   // 0x12 'R' 
  {83,   223,   9,  12,   9,    0,  -11 },   // 0x13 'S' 
  {84,   237,   8,  12,   8,    0,  -11 },   // 0x14 'T' 
  {85,   249,   8,  12,   8,    0,  -11 },   // 0x15 'U' 
  {86,   261,   8,  12,   9,    0,  -11 },   // 0x16 'V' 
  {87,   273,   9,  12,   9,    0,  -11 },   // 0x17 'W' 
  {88,   287,   9,  12,   9,    0,  -11 },   // 0x18 'X' 
  {89,   301,   9,  12,   9,    0,  -11 },   // 0x19 'Y' 
  {90,   315,   8,  12,   8,    0,  -11 },   // 0x1A 'Z' 
  {97,   327,   8,  12,   9,    0,  -11 },   // 0x1B 'a' 
  {98,   339,   8,  12,   8,    0,  -11 },   // 0x1C 'b' 
  {99,   351,   8,  12,   9,    0,  -11 },   // 0x1D 'c' 
  {100,   363,   8,  12,   8,    0,  -11 },   // 0x1E 'd' 
  {101,   375,   8,  12,   8,    0,  -11 },   // 0x1F 'e' 
  {102,   387,   8,  12,   8,    0,  -11 },   // 0x20 'f' 
  {103,   399,   8,  12,   8,    0,  -11 },   // 0x21 'g' 
  {104,   411,   8,  12,   8,    0,  -11 },   // 0x22 'h' 
  {105,   423,   8,  12,   8,    0,  -11 },   // 0x23 'i' 
  {106,   435,   8,  12,   8,    0,  -11 },   // 0x24 'j' 
  {107,   447,   8,  12,   9,    0,  -11 },   // 0x25 'k' 
  {108,   459,   8,  12,   8,    0,  -11 },   // 0x26 'l' 
  {109,   471,   9,  12,   9,    0,  -11 },   // 0x27 'm' 
  {110,   485,   8,  12,   8,    0,  -11 },   // 0x28 'n' 
  {111,   497,   9,  12,   9,    0,  -11 },   // 0x29 'o' 
  {112,   511,   8,  12,   8,    0,  -11 },   // 0x2A 'p' 
  {113,   523,   9,  12,   9,    0,  -11 },   // 0x2B 'q' 
  {114,   537,   8,  12,   8,    0,  -11 },   // 0x2C 'r' 
  {115,   549,   9,  12,   9,    0,  -11 },   // 0x2D 's' 
  {116,   563,   8,  12,   8,    0,  -11 },   // 0x2E 't' 
  {117,   575,   8,  12,   8,    0,  -11 },   // 0x2F 'u' 
  {118,   587,   8,  12,   9,    0,  -11 },   // 0x30 'v' 
  {119,   599,   9,  12,   9,    0,  -11 },   // 0x31 'w' 
  {120,   613,   9,  12,   9,    0,  -11 },   // 0x32 'x' 
  {121,   627,   9,  12,   9,    0,  -11 },   // 0x33 'y' 
  {122,   641,   8,  12,   8,    0,  -11 },   // 0x34 'z' 
  {48,   653,   8,  12,   9,    0,  -11 },   // 0x35 '0' 
  {49,   665,   8,  12,   8,    0,  -11 },   // 0x36 '1' 
  {50,   677,   8,  12,   8,    0,  -11 },   // 0x37 '2' 
  {51,   689,   8,  12,   9,    0,  -11 },   // 0x38 '3' 
  {52,   701,   8,  12,   8,    0,  -11 },   // 0x39 '4' 
  {53,   713,   8,  12,   8,    0,  -11 },   // 0x3A '5' 
  {54,   725,   8,  12,   8,    0,  -11 },   // 0x3B '6' 
  {55,   737,   8,  12,   8,    0,  -11 },   // 0x3C '7' 
  {56,   749,   8,  12,   8,    0,  -11 },   // 0x3D '8' 
  {57,   761,   8,  12,   8,    0,  -11 },   // 0x3E '9' 
  {45,   773,   5,  12,   5,    0,  -11 },   // 0x3F '-' 
  {37,   781,   5,  12,   5,    0,  -11 },   // 0x40 '%' 
  {46,   789,   5,  12,   5,    0,  -11 },   // 0x41 '.' 
  {44,   797,   4,  12,   5,    0,  -11 },   // 0x42 ',' 
  {33,   803,   5,  12,   5,    0,  -11 },   // 0x43 '!' 
  {58,   811,   5,  11,   5,    0,  -10 },   // 0x44 ':' 
  {45,   818,   5,  12,   5,    0,  -11 },   // 0x45 '-' 
  {91,   826,   5,  12,   5,    0,  -11 },   // 0x46 '[' 
  {93,   834,   5,  12,   5,    0,  -11 },   // 0x47 ']' 
  {40,   842,   5,  12,   5,    0,  -11 },   // 0x48 '(' 
  {41,   850,   5,  12,   5,    0,  -11 }   // 0x49 ')' 
};

const gfxfont_t HotStuff6 PROGMEM = 
{
  (uint8_t  *)HotStuff6Bitmaps, //< Glyph bitmaps, concatenated 
  (gfxglyph_t *)HotStuff6Glyphs, //< Glyph array
  74,// total glyphs in the string
  12,  // newline distance (y axis)
     0,  // minimum X - left most
     0,  // minimum Y - bottom most (descenders can drive this negative)
     9,  // maximum X - right most
    12}; // maximum Y - top most
// Approx. 1390 bytes -  but your mileage may vary.

#endif