
#ifndef __FIXEDFONTIBMPLEXMONOMEDIUMTTF24
#define __FIXEDFONTIBMPLEXMONOMEDIUMTTF24
const uint8_t HotStuff24Bitmaps[] PROGMEM = {
  0x00, 0x00, 0xFF, 0x00, 0x03, 0xFF, 0xC0, 0x07, 0xFF, 0xE0, 0x0F, 0xFF,
  0xF0, 0x1F, 0x81, 0xF8, 0x3F, 0x00, 0xFC, 0x3E, 0x00, 0x7C, 0x7C, 0x00,
  0x7E, 0x7C, 0x00, 0x3E, 0x7C, 0x00, 0x3E, 0x7C, 0x00, 0x3E, 0xF8, 0x00,
  0x3F, 0xF8, 0x00, 0x1F, 0xF8, 0x00, 0x1F, 0xF8, 0x3C, 0x1F, 0xF8, 0x7E,
  0x1F, 0xF8, 0x7E, 0x1F, 0xF8, 0x7E, 0x1F, 0xF8, 0x7E, 0x1F, 0xF8, 0x3C,
  0x1F, 0xF8, 0x00, 0x1F, 0xF8, 0x00, 0x1F, 0xF8, 0x00, 0x3F, 0x7C, 0x00,
  0x3E, 0x7C, 0x00, 0x3E, 0x7C, 0x00, 0x3E, 0x7C, 0x00, 0x7E, 0x3E, 0x00,
  0x7C, 0x3F, 0x00, 0xFC, 0x1F, 0x81, 0xF8, 0x0F, 0xFF, 0xF0, 0x07, 0xFF,
  0xE0, 0x03, 0xFF, 0xC0, 0x00, 0xFF, 0x00, 0x00, 0xFF, 0x80, 0x01, 0xFF,
  0x80, 0x03, 0xFF, 0x80, 0x07, 0xFF, 0x80, 0x0F, 0xDF, 0x80, 0x1F, 0x9F,
  0x80, 0x3F, 0x9F, 0x80, 0x7F, 0x1F, 0x80, 0x7E, 0x1F, 0x80, 0xFC, 0x1F,
  0x80, 0x38, 0x1F, 0x80, 0x10, 0x1F, 0x80, 0x00, 0x1F, 0x80, 0x00, 0x1F,
  0x80, 0x00, 0x1F, 0x80, 0x00, 0x1F, 0x80, 0x00, 0x1F, 0x80, 0x00, 0x1F,
  0x80, 0x00, 0x1F, 0x80, 0x00, 0x1F, 0x80, 0x00, 0x1F, 0x80, 0x00, 0x1F,
  0x80, 0x00, 0x1F, 0x80, 0x00, 0x1F, 0x80, 0x00, 0x1F, 0x80, 0x00, 0x1F,
  0x80, 0x00, 0x1F, 0x80, 0x00, 0x1F, 0x80, 0x00, 0x1F, 0x80, 0x3F, 0xFF,
  0xFF, 0x3F, 0xFF, 0xFF, 0x3F, 0xFF, 0xFF, 0x3F, 0xFF, 0xFF, 0x00, 0xFF,
  0x00, 0x07, 0xFF, 0xC0, 0x0F, 0xFF, 0xE0, 0x1F, 0xFF, 0xF0, 0x3F, 0x83,
  0xF8, 0x7E, 0x00, 0xFC, 0x7C, 0x00, 0xFC, 0xFC, 0x00, 0x7C, 0x18, 0x00,
  0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x7C, 0x00, 0x00,
  0xFC, 0x00, 0x00, 0xFC, 0x00, 0x00, 0xF8, 0x00, 0x01, 0xF8, 0x00, 0x03,
  0xF0, 0x00, 0x07, 0xE0, 0x00, 0x0F, 0xC0, 0x00, 0x1F, 0x80, 0x00, 0x3F,
  0x00, 0x00, 0x7E, 0x00, 0x01, 0xFC, 0x00, 0x03, 0xF8, 0x00, 0x07, 0xF0,
  0x00, 0x0F, 0xC0, 0x00, 0x1F, 0x80, 0x00, 0x3F, 0x00, 0x00, 0x7E, 0x00,
  0x00, 0x7F, 0xFF, 0xFF, 0x7F, 0xFF, 0xFF, 0x7F, 0xFF, 0xFF, 0x7F, 0xFF,
  0xFF, 0x00, 0xFE, 0x00, 0x0F, 0xFF, 0x80, 0x7F, 0xFF, 0x81, 0xFF, 0xFF,
  0x87, 0xF0, 0x3F, 0x87, 0xC0, 0x3F, 0x87, 0x00, 0x3F, 0x04, 0x00, 0x3E,
  0x00, 0x00, 0x7C, 0x00, 0x00, 0xF8, 0x00, 0x01, 0xF0, 0x00, 0x03, 0xE0,
  0x00, 0x0F, 0xC0, 0x00, 0x3F, 0x00, 0x00, 0xFC, 0x00, 0xFF, 0xF0, 0x01,
  0xFF, 0x80, 0x03, 0xFF, 0x80, 0x07, 0xFF, 0xC0, 0x00, 0x1F, 0xC0, 0x00,
  0x0F, 0xC0, 0x00, 0x0F, 0x80, 0x00, 0x1F, 0x80, 0x00, 0x3F, 0x00, 0x00,
  0x7E, 0x00, 0x00, 0xFC, 0xC0, 0x01, 0xFB, 0xC0, 0x03, 0xFF, 0xC0, 0x0F,
  0xDF, 0xE0, 0x7F, 0x9F, 0xFF, 0xFE, 0x1F, 0xFF, 0xF8, 0x0F, 0xFF, 0xC0,
  0x03, 0xFC, 0x00, 0x00, 0x03, 0xF8, 0x00, 0x01, 0xFE, 0x00, 0x00, 0xFF,
  0x80, 0x00, 0x3F, 0xE0, 0x00, 0x1F, 0xF8, 0x00, 0x07, 0xBE, 0x00, 0x03,
  0xEF, 0x80, 0x01, 0xF3, 0xE0, 0x00, 0x78, 0xF8, 0x00, 0x3E, 0x3E, 0x00,
  0x0F, 0x0F, 0x80, 0x07, 0xC3, 0xE0, 0x03, 0xE0, 0xF8, 0x00, 0xF0, 0x3E,
  0x00, 0x7C, 0x0F, 0x80, 0x1E, 0x03, 0xE0, 0x0F, 0x80, 0xF8, 0x07, 0xC0,
  0x3E, 0x01, 0xE0, 0x0F, 0x80, 0xF8, 0x03, 0xE0, 0x7C, 0x00, 0xF8, 0x1F,
  0x00, 0x3E, 0x0F, 0x80, 0x0F, 0x83, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFC, 0x00, 0x03, 0xE0, 0x00, 0x00,
  0xF8, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x0F, 0x80, 0x00, 0x03, 0xE0, 0x00,
  0x00, 0xF8, 0x00, 0x3F, 0xFF, 0xF8, 0x7F, 0xFF, 0xF0, 0xFF, 0xFF, 0xE1,
  0xFF, 0xFF, 0xC3, 0xC0, 0x00, 0x07, 0x80, 0x00, 0x0F, 0x00, 0x00, 0x1E,
  0x00, 0x00, 0x7C, 0x00, 0x00, 0xF8, 0x00, 0x01, 0xF0, 0x00, 0x03, 0xE0,
  0x00, 0x07, 0x80, 0x00, 0x0F, 0x07, 0xE0, 0x1E, 0x3F, 0xF0, 0x3C, 0xFF,
  0xF8, 0x7B, 0xFF, 0xF0, 0xFE, 0x07, 0xF1, 0xF0, 0x07, 0xF0, 0x40, 0x07,
  0xE0, 0x00, 0x07, 0xC0, 0x00, 0x0F, 0xC0, 0x00, 0x1F, 0x80, 0x00, 0x3F,
  0x00, 0x00, 0x7E, 0x00, 0x00, 0xF8, 0xC0, 0x01, 0xF3, 0xC0, 0x07, 0xEF,
  0xC0, 0x1F, 0x9F, 0xE0, 0x7F, 0x1F, 0xFF, 0xFC, 0x1F, 0xFF, 0xF0, 0x0F,
  0xFF, 0x80, 0x03, 0xFC, 0x00, 0x00, 0x0F, 0xE0, 0x00, 0x3F, 0x80, 0x00,
  0x7F, 0x00, 0x00, 0xFE, 0x00, 0x01, 0xFC, 0x00, 0x03, 0xF8, 0x00, 0x07,
  0xF0, 0x00, 0x07, 0xE0, 0x00, 0x0F, 0xC0, 0x00, 0x0F, 0x80, 0x00, 0x1F,
  0x80, 0x00, 0x3F, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x3E, 0x1F, 0x80, 0x7E,
  0x7F, 0xE0, 0x7C, 0xFF, 0xF8, 0x7D, 0xFF, 0xFC, 0x7F, 0x81, 0xFC, 0xFF,
  0x00, 0x7E, 0xFE, 0x00, 0x7E, 0xFC, 0x00, 0x3E, 0xFC, 0x00, 0x3F, 0xFC,
  0x00, 0x3F, 0x7C, 0x00, 0x3F, 0x7C, 0x00, 0x3F, 0x7C, 0x00, 0x3F, 0x7C,
  0x00, 0x3E, 0x3E, 0x00, 0x7E, 0x3F, 0x00, 0x7C, 0x1F, 0x81, 0xFC, 0x0F,
  0xFF, 0xF8, 0x07, 0xFF, 0xF0, 0x03, 0xFF, 0xC0, 0x00, 0xFF, 0x00, 0xFF,
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF0, 0x00,
  0x7F, 0xC0, 0x03, 0xFF, 0x00, 0x0F, 0xFC, 0x00, 0x3E, 0xF0, 0x01, 0xFB,
  0xC0, 0x07, 0xC0, 0x00, 0x3F, 0x00, 0x00, 0xF8, 0x00, 0x07, 0xE0, 0x00,
  0x1F, 0x80, 0x00, 0x7C, 0x00, 0x03, 0xF0, 0x00, 0x0F, 0x80, 0x00, 0x7E,
  0x00, 0x01, 0xF8, 0x00, 0x0F, 0xC0, 0x00, 0x3F, 0x00, 0x00, 0xF8, 0x00,
  0x07, 0xE0, 0x00, 0x1F, 0x00, 0x00, 0xFC, 0x00, 0x03, 0xF0, 0x00, 0x0F,
  0x80, 0x00, 0x7E, 0x00, 0x01, 0xF0, 0x00, 0x0F, 0xC0, 0x00, 0x3E, 0x00,
  0x01, 0xF8, 0x00, 0x07, 0xE0, 0x00, 0x00, 0xFF, 0x00, 0x07, 0xFF, 0xE0,
  0x0F, 0xFF, 0xF0, 0x1F, 0xFF, 0xF8, 0x3F, 0x81, 0xFC, 0x3E, 0x00, 0x7C,
  0x7E, 0x00, 0x7E, 0x7C, 0x00, 0x3E, 0x7C, 0x00, 0x3E, 0x7C, 0x00, 0x3E,
  0x7C, 0x00, 0x3E, 0x3E, 0x00, 0x7C, 0x3E, 0x00, 0x7C, 0x1F, 0x81, 0xF8,
  0x0F, 0xFF, 0xF0, 0x03, 0xFF, 0xC0, 0x07, 0xFF, 0xE0, 0x0F, 0xFF, 0xF0,
  0x3F, 0x81, 0xFC, 0x7E, 0x00, 0x7E, 0x7C, 0x00, 0x3E, 0xFC, 0x00, 0x3F,
  0xFC, 0x00, 0x3F, 0xFC, 0x00, 0x3F, 0xFC, 0x00, 0x3F, 0xFC, 0x00, 0x3F,
  0xFC, 0x00, 0x3F, 0x7C, 0x00, 0x3E, 0x7E, 0x00, 0x7E, 0x3F, 0x81, 0xFC,
  0x3F, 0xFF, 0xFC, 0x1F, 0xFF, 0xF0, 0x07, 0xFF, 0xE0, 0x00, 0xFF, 0x00,
  0x00, 0xFF, 0x00, 0x03, 0xFF, 0xC0, 0x0F, 0xFF, 0xF0, 0x1F, 0xFF, 0xF8,
  0x3F, 0x81, 0xF8, 0x3E, 0x00, 0xFC, 0x7E, 0x00, 0x7C, 0x7C, 0x00, 0x3E,
  0xFC, 0x00, 0x3E, 0xFC, 0x00, 0x3E, 0xFC, 0x00, 0x3E, 0xFC, 0x00, 0x3F,
  0xFC, 0x00, 0x3F, 0xFC, 0x00, 0x3F, 0x7E, 0x00, 0x7F, 0x7E, 0x00, 0xFE,
  0x3F, 0x81, 0xFE, 0x3F, 0xFF, 0xBE, 0x1F, 0xFF, 0x7E, 0x07, 0xFE, 0x7C,
  0x01, 0xF8, 0x7C, 0x00, 0x00, 0xFC, 0x00, 0x00, 0xF8, 0x00, 0x01, 0xF8,
  0x00, 0x03, 0xF0, 0x00, 0x07, 0xE0, 0x00, 0x0F, 0xE0, 0x00, 0x1F, 0xC0,
  0x00, 0x3F, 0x80, 0x00, 0x7F, 0x00, 0x00, 0xFE, 0x00, 0x01, 0xFC, 0x00,
  0x07, 0xF0, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFC,
  0x07, 0xE0, 0x01, 0xF1, 0xFF, 0x00, 0x1E, 0x3F, 0xF8, 0x03, 0xC3, 0xFF,
  0xC0, 0x3C, 0x7C, 0x3C, 0x07, 0x87, 0x81, 0xE0, 0x78, 0x78, 0x1E, 0x0F,
  0x07, 0x81, 0xE0, 0xF0, 0x78, 0x1E, 0x1E, 0x07, 0x81, 0xE1, 0xE0, 0x78,
  0x1E, 0x3C, 0x07, 0x81, 0xE3, 0xC0, 0x7C, 0x3C, 0x78, 0x03, 0xFF, 0xC7,
  0x80, 0x3F, 0xF8, 0xF0, 0x01, 0xFF, 0x00, 0x00, 0x07, 0xE0, 0x00, 0x00,
  0x00, 0x07, 0xE0, 0x00, 0x00, 0xFF, 0x80, 0x0F, 0x1F, 0xFC, 0x01, 0xE3,
  0xFF, 0xC0, 0x3E, 0x3C, 0x3E, 0x03, 0xC7, 0x81, 0xE0, 0x7C, 0x78, 0x1E,
  0x07, 0x87, 0x81, 0xE0, 0xF8, 0x78, 0x1E, 0x0F, 0x07, 0x81, 0xE1, 0xF0,
  0x78, 0x1E, 0x1E, 0x07, 0x81, 0xE3, 0xC0, 0x3C, 0x3E, 0x3C, 0x03, 0xFF,
  0xC7, 0x80, 0x1F, 0xFC, 0x78, 0x00, 0xFF, 0x88, 0x00, 0x07, 0xE0, 0x7E,
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7E };

// Glyph, Offset to bitmap, Width, Height, xAdvance, xOffset, yOffset

const gfxglyph_t HotStuff24Glyphs[] PROGMEM = {
  {32,     0,   1,   1,  28,    0,    0 },   // 0x00 ' ' 
  {48,     1,  24,  34,  28,    2,  -32 },   // 0x01 '0' 
  {49,   103,  24,  33,  28,    2,  -32 },   // 0x02 '1' 
  {50,   202,  24,  33,  28,    2,  -32 },   // 0x03 '2' 
  {51,   301,  23,  34,  28,    2,  -32 },   // 0x04 '3' 
  {52,   399,  26,  33,  28,    1,  -32 },   // 0x05 '4' 
  {53,   507,  23,  34,  28,    3,  -32 },   // 0x06 '5' 
  {54,   605,  24,  34,  28,    2,  -32 },   // 0x07 '6' 
  {55,   707,  22,  33,  28,    3,  -32 },   // 0x08 '7' 
  {56,   798,  24,  34,  28,    2,  -32 },   // 0x09 '8' 
  {57,   900,  24,  33,  28,    2,  -32 },   // 0x0A '9' 
  {45,   999,  14,   5,  28,    7,  -16 },   // 0x0B '-' 
  {37,  1008,  28,  34,  28,    0,  -32 },   // 0x0C '%' 
  {46,  1127,   8,   8,  28,   10,   -6 }   // 0x0D '.' 
};

const gfxfont_t HotStuff24 PROGMEM = 
{
  (uint8_t  *)HotStuff24Bitmaps, //< Glyph bitmaps, concatenated 
  (gfxglyph_t *)HotStuff24Glyphs, //< Glyph array
  14,// total glyphs in the string
  34,  // newline distance (y axis)
     0,  // minimum X - left most
    -1,  // minimum Y - bottom most (descenders can drive this negative)
    28,  // maximum X - right most
    33}; // maximum Y - top most
// Approx. 1247 bytes -  but your mileage may vary.

#endif