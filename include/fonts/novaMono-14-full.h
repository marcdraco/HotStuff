
#ifndef __FIXEDFONTNOVAMONOTTF14
#define __FIXEDFONTNOVAMONOTTF14
const uint8_t HotStuff14Bitmaps[] PROGMEM = {
  0x00, 0x1F, 0x07, 0xF1, 0xC7, 0x70, 0x7C, 0x07, 0x80, 0xF0, 0x1E, 0x03,
  0xC0, 0x7F, 0xFF, 0xFF, 0xE0, 0x3C, 0x07, 0x80, 0xF0, 0x1E, 0x03, 0xC0,
  0x78, 0x0F, 0x01, 0xC0, 0x20, 0x7E, 0x1F, 0xF3, 0x06, 0x60, 0x6C, 0x0D,
  0x81, 0xB0, 0x36, 0x0C, 0xFF, 0x9F, 0xF3, 0x07, 0x60, 0x7C, 0x07, 0x80,
  0xF0, 0x1E, 0x03, 0xC0, 0xF8, 0x3B, 0xFE, 0x7F, 0x80, 0x1F, 0x07, 0xF1,
  0xC7, 0x70, 0x7C, 0x07, 0x80, 0xF0, 0x16, 0x00, 0xC0, 0x18, 0x03, 0x00,
  0x60, 0x0C, 0x01, 0x80, 0x70, 0x1E, 0x03, 0xE0, 0xEE, 0x38, 0xFE, 0x0F,
  0x80, 0x7F, 0x1F, 0xF3, 0x07, 0x60, 0x6C, 0x07, 0x80, 0xF0, 0x1E, 0x03,
  0xC0, 0x78, 0x0F, 0x01, 0xE0, 0x3C, 0x07, 0x80, 0xF0, 0x1E, 0x03, 0xC0,
  0xD8, 0x3B, 0xFE, 0x7F, 0x80, 0x7F, 0x9F, 0xE3, 0x00, 0x60, 0x0C, 0x01,
  0x80, 0x30, 0x06, 0x00, 0xC0, 0x1F, 0xF3, 0xFE, 0x60, 0x0C, 0x01, 0x80,
  0x30, 0x06, 0x00, 0xC0, 0x18, 0x03, 0xFF, 0xFF, 0xF0, 0x7F, 0xBF, 0xCC,
  0x03, 0x00, 0xC0, 0x30, 0x0C, 0x03, 0x00, 0xC0, 0x3F, 0xEF, 0xFB, 0x00,
  0xC0, 0x30, 0x0C, 0x03, 0x00, 0xC0, 0x30, 0x0C, 0x02, 0x00, 0x1F, 0x07,
  0xF1, 0xC7, 0x70, 0x7C, 0x07, 0x80, 0xF0, 0x16, 0x00, 0xC0, 0x18, 0x7F,
  0x0F, 0xE0, 0x3C, 0x07, 0x80, 0xF0, 0x1E, 0x03, 0xE0, 0xEE, 0x38, 0xFE,
  0x0F, 0x80, 0x40, 0x38, 0x0F, 0x01, 0xE0, 0x3C, 0x07, 0x80, 0xF0, 0x1E,
  0x03, 0xC0, 0x7F, 0xFF, 0xFF, 0xE0, 0x3C, 0x07, 0x80, 0xF0, 0x1E, 0x03,
  0xC0, 0x78, 0x0F, 0x01, 0xC0, 0x20, 0x7F, 0xE7, 0xFE, 0x06, 0x00, 0x60,
  0x06, 0x00, 0x60, 0x06, 0x00, 0x60, 0x06, 0x00, 0x60, 0x06, 0x00, 0x60,
  0x06, 0x00, 0x60, 0x06, 0x00, 0x60, 0x06, 0x00, 0x60, 0x7F, 0xE7, 0xFE,
  0x3F, 0xE7, 0xFC, 0x01, 0x80, 0x30, 0x06, 0x00, 0xC0, 0x18, 0x03, 0x00,
  0x60, 0x0C, 0x01, 0x80, 0x30, 0x06, 0x80, 0xF0, 0x1E, 0x03, 0xE0, 0xEE,
  0x38, 0xFE, 0x0F, 0x80, 0x40, 0x4C, 0x0E, 0xC1, 0xCC, 0x38, 0xC3, 0x0C,
  0x70, 0xCE, 0x0C, 0xC0, 0xDC, 0x0F, 0xF0, 0xFF, 0xCF, 0x0E, 0xE0, 0x6C,
  0x03, 0xC0, 0x3C, 0x03, 0xC0, 0x3C, 0x03, 0xC0, 0x38, 0x02, 0x40, 0x18,
  0x03, 0x00, 0x60, 0x0C, 0x01, 0x80, 0x30, 0x06, 0x00, 0xC0, 0x18, 0x03,
  0x00, 0x60, 0x0C, 0x01, 0x80, 0x30, 0x06, 0x00, 0xC0, 0x18, 0x03, 0xFF,
  0xFF, 0xF0, 0x3C, 0xE3, 0xFF, 0xB9, 0xC7, 0x86, 0x3C, 0x31, 0xE1, 0x8F,
  0x0C, 0x78, 0x63, 0xC3, 0x1E, 0x18, 0xF0, 0xC7, 0x86, 0x3C, 0x31, 0xE1,
  0x8F, 0x0C, 0x78, 0x63, 0xC3, 0x1E, 0x18, 0xF0, 0xC7, 0x04, 0x20, 0x1F,
  0x07, 0xF1, 0xC7, 0x70, 0x7C, 0x07, 0x80, 0xF0, 0x1E, 0x03, 0xC0, 0x78,
  0x0F, 0x01, 0xE0, 0x3C, 0x07, 0x80, 0xF0, 0x1E, 0x03, 0xC0, 0x78, 0x0F,
  0x01, 0xC0, 0x20, 0x1F, 0x07, 0xF1, 0xC7, 0x70, 0x7C, 0x07, 0x80, 0xF0,
  0x1E, 0x03, 0xC0, 0x78, 0x0F, 0x01, 0xE0, 0x3C, 0x07, 0x80, 0xF0, 0x1E,
  0x03, 0xE0, 0xEE, 0x38, 0xFE, 0x0F, 0x80, 0xFF, 0x1F, 0xF3, 0x07, 0x60,
  0x6C, 0x07, 0x80, 0xF0, 0x1E, 0x03, 0xC0, 0xF8, 0x3B, 0xFE, 0x7F, 0x8C,
  0x01, 0x80, 0x30, 0x06, 0x00, 0xC0, 0x18, 0x03, 0x00, 0x40, 0x00, 0x1F,
  0x81, 0xFE, 0x1C, 0x39, 0xC0, 0xEC, 0x03, 0x60, 0x1B, 0x00, 0xD8, 0x06,
  0xC0, 0x36, 0x01, 0xB0, 0x0D, 0x80, 0x6C, 0x03, 0x60, 0x1B, 0x00, 0xD8,
  0x66, 0xE7, 0xE3, 0x8F, 0x0F, 0xF0, 0x1F, 0xC0, 0x07, 0x00, 0x1C, 0xFF,
  0x0F, 0xFC, 0xC0, 0xEC, 0x06, 0xC0, 0x3C, 0x03, 0xC0, 0x3C, 0x03, 0xC0,
  0x6C, 0x0E, 0xFF, 0xCF, 0xF0, 0xC3, 0x8C, 0x18, 0xC1, 0xCC, 0x0C, 0xC0,
  0xEC, 0x06, 0xC0, 0x78, 0x02, 0x0F, 0x03, 0xFC, 0x30, 0xC6, 0x06, 0x60,
  0x66, 0x04, 0x70, 0x03, 0x80, 0x3F, 0x80, 0xFC, 0x00, 0xE0, 0x07, 0x00,
  0x34, 0x03, 0xC0, 0x3C, 0x03, 0x60, 0x77, 0x0E, 0x3F, 0xC0, 0xF8, 0x7F,
  0xFF, 0xFF, 0xE0, 0x30, 0x00, 0xC0, 0x03, 0x00, 0x0C, 0x00, 0x30, 0x00,
  0xC0, 0x03, 0x00, 0x0C, 0x00, 0x30, 0x00, 0xC0, 0x03, 0x00, 0x0C, 0x00,
  0x30, 0x00, 0xC0, 0x03, 0x00, 0x0C, 0x00, 0x30, 0x00, 0x80, 0x40, 0x38,
  0x0F, 0x01, 0xE0, 0x3C, 0x07, 0x80, 0xF0, 0x1E, 0x03, 0xC0, 0x78, 0x0F,
  0x01, 0xE0, 0x3C, 0x07, 0x80, 0xF0, 0x1E, 0x03, 0xE0, 0xEE, 0x38, 0xFE,
  0x0F, 0x80, 0x40, 0x0B, 0x00, 0x3E, 0x01, 0xD8, 0x06, 0x60, 0x19, 0xC0,
  0xE3, 0x03, 0x0C, 0x0C, 0x38, 0x70, 0x61, 0x81, 0x86, 0x06, 0x18, 0x0C,
  0xC0, 0x33, 0x00, 0xCC, 0x03, 0xE0, 0x07, 0x80, 0x1E, 0x00, 0x70, 0x00,
  0x80, 0x41, 0x0E, 0x18, 0xF0, 0xC7, 0x86, 0x3C, 0x31, 0xE1, 0x8F, 0x0C,
  0x78, 0x63, 0xC3, 0x1E, 0x18, 0xF0, 0xC7, 0x86, 0x3C, 0x31, 0xE1, 0x8F,
  0x0C, 0x78, 0x63, 0xC3, 0x1F, 0x38, 0xDF, 0xFC, 0x79, 0xC0, 0x40, 0x17,
  0x01, 0xD8, 0x0C, 0xE0, 0xE3, 0x8E, 0x0C, 0x60, 0x77, 0x01, 0xB0, 0x0F,
  0x80, 0x38, 0x01, 0xC0, 0x1F, 0x00, 0xD8, 0x0E, 0xE0, 0x63, 0x07, 0x1C,
  0x70, 0x63, 0x01, 0xB8, 0x0E, 0x80, 0x20, 0x40, 0x38, 0x0F, 0x01, 0xE0,
  0x3C, 0x07, 0x80, 0xF0, 0x1E, 0x03, 0xC0, 0x78, 0x0F, 0x83, 0xB8, 0xE3,
  0xF8, 0x3E, 0x01, 0x80, 0x30, 0x06, 0x00, 0xC0, 0x18, 0x02, 0x00, 0x3F,
  0xF3, 0xFF, 0x80, 0x18, 0x01, 0xC0, 0x0C, 0x00, 0xE0, 0x06, 0x00, 0x70,
  0x03, 0x00, 0x38, 0x01, 0x80, 0x0C, 0x00, 0xC0, 0x06, 0x00, 0x60, 0x03,
  0x00, 0x30, 0x01, 0x80, 0x1F, 0xFE, 0xFF, 0xE0, 0x1C, 0x3F, 0x98, 0xD8,
  0x3C, 0x1C, 0x0C, 0x3E, 0x7F, 0x79, 0xF0, 0xF0, 0x78, 0x3E, 0x1B, 0xEC,
  0xF4, 0x40, 0x60, 0x30, 0x18, 0x0C, 0x06, 0xE3, 0xFD, 0xC6, 0xC1, 0xE0,
  0xF0, 0x78, 0x3C, 0x1E, 0x0F, 0x07, 0x83, 0xC1, 0xB1, 0x9F, 0xC3, 0x80,
  0x1C, 0x3F, 0x98, 0xD8, 0x3C, 0x1E, 0x0B, 0x01, 0x80, 0xC0, 0x60, 0x70,
  0x78, 0x36, 0x33, 0xF8, 0x70, 0x00, 0x80, 0xC0, 0x60, 0x30, 0x18, 0xED,
  0xFE, 0xC7, 0xC1, 0xE0, 0xF0, 0x78, 0x3C, 0x1E, 0x0F, 0x07, 0x83, 0xC1,
  0xB1, 0x9F, 0xC3, 0x80, 0x1C, 0x3F, 0x98, 0xD8, 0x3C, 0x1E, 0x1F, 0x3F,
  0xFC, 0xF8, 0x70, 0x70, 0x78, 0x36, 0x33, 0xF8, 0x70, 0x07, 0x03, 0xF8,
  0x63, 0x18, 0x33, 0x06, 0x60, 0x8C, 0x01, 0x80, 0x30, 0x0F, 0xF1, 0xFE,
  0x18, 0x03, 0x00, 0x60, 0x0C, 0x01, 0x80, 0x30, 0x06, 0x00, 0xC0, 0x10,
  0x00, 0x1C, 0x3F, 0x98, 0xD8, 0x3C, 0x1E, 0x0F, 0x07, 0x83, 0xC1, 0xE0,
  0xF0, 0x78, 0x36, 0x3B, 0xFC, 0x76, 0x03, 0x41, 0xB1, 0x9F, 0xC3, 0x80,
  0x40, 0x60, 0x30, 0x18, 0x0C, 0x06, 0xE3, 0xFD, 0xC6, 0xC1, 0xE0, 0xF0,
  0x78, 0x3C, 0x1E, 0x0F, 0x07, 0x83, 0xC1, 0xE0, 0xF0, 0x70, 0x20, 0xC0,
  0x70, 0x30, 0x00, 0x00, 0x02, 0x03, 0x01, 0x80, 0xC0, 0x60, 0x30, 0x18,
  0x0C, 0x06, 0x03, 0x03, 0x83, 0xC1, 0xB1, 0x8F, 0xC3, 0xC0, 0x01, 0x80,
  0x70, 0x18, 0x00, 0x00, 0x00, 0x20, 0x18, 0x06, 0x01, 0x80, 0x60, 0x18,
  0x06, 0x01, 0x80, 0x6C, 0x1B, 0x06, 0xC1, 0xB0, 0x6C, 0x1B, 0x06, 0xC1,
  0xB0, 0x66, 0x31, 0xFC, 0x1E, 0x00, 0x40, 0x60, 0x30, 0x18, 0x0C, 0x06,
  0x1B, 0x1F, 0x9C, 0xDC, 0x7C, 0x3F, 0x9F, 0xEE, 0x3E, 0x0F, 0x07, 0x83,
  0xC1, 0xE0, 0xF0, 0x70, 0x20, 0x40, 0x60, 0x30, 0x18, 0x0C, 0x06, 0x03,
  0x01, 0x80, 0xC0, 0x60, 0x30, 0x18, 0x0C, 0x06, 0x03, 0x03, 0x83, 0xC1,
  0xB1, 0x9F, 0xC3, 0x80, 0x3C, 0xE3, 0xFF, 0xB9, 0xC7, 0x86, 0x3C, 0x31,
  0xE1, 0x8F, 0x0C, 0x78, 0x63, 0xC3, 0x1E, 0x18, 0xF0, 0xC7, 0x86, 0x3C,
  0x31, 0xE1, 0x8E, 0x08, 0x40, 0x1C, 0x3F, 0x98, 0xD8, 0x3C, 0x1E, 0x0F,
  0x07, 0x83, 0xC1, 0xE0, 0xF0, 0x78, 0x3C, 0x1E, 0x0E, 0x04, 0x1C, 0x3F,
  0x98, 0xD8, 0x3C, 0x1E, 0x0F, 0x07, 0x83, 0xC1, 0xE0, 0xF0, 0x78, 0x36,
  0x33, 0xF8, 0x70, 0x1C, 0x3F, 0x98, 0xD8, 0x3C, 0x1E, 0x0F, 0x07, 0x83,
  0xC1, 0xE0, 0xF0, 0x78, 0x3E, 0x37, 0xFB, 0x71, 0x80, 0xC0, 0x60, 0x30,
  0x10, 0x00, 0x1C, 0x07, 0xF0, 0x63, 0x0C, 0x18, 0xC1, 0x8C, 0x18, 0xC1,
  0x8C, 0x18, 0xC1, 0x8C, 0x18, 0xC1, 0x8C, 0x18, 0x63, 0x87, 0xF8, 0x1D,
  0x80, 0x18, 0x01, 0xA0, 0x1F, 0x01, 0xC0, 0x10, 0x1C, 0x3F, 0x98, 0xD8,
  0x3C, 0x1E, 0x0B, 0x01, 0x80, 0xC0, 0x60, 0x30, 0x18, 0x0C, 0x06, 0x02,
  0x00, 0x1C, 0x1F, 0x1C, 0xCC, 0x46, 0x03, 0x80, 0xF8, 0x1E, 0x03, 0xA0,
  0xF0, 0x78, 0x36, 0x33, 0xF8, 0x78, 0x10, 0x06, 0x00, 0xC0, 0x18, 0x03,
  0x00, 0x60, 0x1F, 0xF3, 0xFC, 0x30, 0x06, 0x00, 0xC0, 0x18, 0x03, 0x00,
  0x60, 0x0C, 0x09, 0x83, 0x30, 0x63, 0x18, 0x7F, 0x03, 0x80, 0x40, 0xE0,
  0xF0, 0x78, 0x3C, 0x1E, 0x0F, 0x07, 0x83, 0xC1, 0xE0, 0xF0, 0x78, 0x36,
  0x33, 0xF8, 0x70, 0x40, 0x17, 0x01, 0xD8, 0x0C, 0xC0, 0x67, 0x07, 0x18,
  0x30, 0xE3, 0x83, 0x18, 0x18, 0xC0, 0xEC, 0x03, 0x60, 0x1F, 0x00, 0x70,
  0x03, 0x80, 0x18, 0x00, 0x41, 0x0E, 0x18, 0xF0, 0xC7, 0x86, 0x3C, 0x31,
  0xE1, 0x8F, 0x0C, 0x78, 0x63, 0xC3, 0x1E, 0x18, 0xF0, 0xC7, 0x86, 0x3E,
  0x71, 0xBF, 0xF8, 0xF3, 0x80, 0x40, 0x2E, 0x07, 0x70, 0xE3, 0x0C, 0x19,
  0x81, 0xF8, 0x0F, 0x00, 0x60, 0x0F, 0x01, 0xF8, 0x19, 0x83, 0x0C, 0x70,
  0xEE, 0x07, 0x40, 0x20, 0x40, 0xE0, 0xF0, 0x78, 0x3C, 0x1E, 0x0F, 0x07,
  0x83, 0xC1, 0xE0, 0xF0, 0x78, 0x36, 0x3B, 0xFC, 0x76, 0x03, 0x41, 0xB1,
  0x9F, 0xC3, 0x80, 0x7F, 0xEF, 0xF8, 0x06, 0x01, 0xC0, 0x30, 0x0E, 0x01,
  0x80, 0x70, 0x1C, 0x03, 0x00, 0xE0, 0x18, 0x07, 0xFF, 0xFF, 0x80, 0x1F,
  0x07, 0xF1, 0xC7, 0x70, 0xFC, 0x1F, 0x83, 0xF0, 0xDE, 0x1B, 0xC6, 0x78,
  0xCF, 0x31, 0xE6, 0x3D, 0x87, 0xB0, 0xFC, 0x1F, 0x83, 0xE0, 0xEE, 0x38,
  0xFE, 0x0F, 0x80, 0x02, 0x1C, 0x79, 0xF7, 0x7C, 0xD1, 0x83, 0x06, 0x0C,
  0x18, 0x30, 0x60, 0xC1, 0x83, 0x06, 0x0C, 0x18, 0x20, 0x0F, 0x81, 0xFC,
  0x38, 0xE7, 0x06, 0x60, 0x36, 0x03, 0x40, 0x30, 0x03, 0x00, 0x70, 0x0E,
  0x01, 0xC0, 0x38, 0x07, 0x00, 0xE0, 0x1C, 0x03, 0x80, 0x38, 0x07, 0x00,
  0x7F, 0xF7, 0xFF, 0x7F, 0xEF, 0xF8, 0x07, 0x01, 0xC0, 0x30, 0x0E, 0x03,
  0x80, 0x70, 0x1F, 0x03, 0xF0, 0x07, 0x00, 0x60, 0x06, 0x80, 0xF0, 0x1E,
  0x03, 0xE0, 0xEE, 0x38, 0xFE, 0x0F, 0x80, 0x00, 0x20, 0x03, 0x00, 0x38,
  0x03, 0xC0, 0x1E, 0x01, 0xB0, 0x1D, 0x80, 0xCC, 0x0C, 0x60, 0xE3, 0x06,
  0x18, 0x60, 0xC7, 0x06, 0x3F, 0xFF, 0xFF, 0xC0, 0x0C, 0x00, 0x60, 0x03,
  0x00, 0x18, 0x00, 0x80, 0x3F, 0xC7, 0xF8, 0xC0, 0x18, 0x03, 0x00, 0xE0,
  0x18, 0x03, 0x00, 0x7F, 0x0F, 0xF0, 0x87, 0x00, 0x70, 0x06, 0x80, 0xF0,
  0x1E, 0x03, 0xE0, 0xEE, 0x38, 0xFE, 0x0F, 0x80, 0x1F, 0x07, 0xF1, 0xC7,
  0x70, 0x7C, 0x07, 0x80, 0xF0, 0x16, 0x00, 0xDF, 0x1F, 0xF3, 0xC7, 0x70,
  0x7C, 0x07, 0x80, 0xF0, 0x1E, 0x03, 0xE0, 0xCE, 0x38, 0xFE, 0x0F, 0x80,
  0x7F, 0xFB, 0xFF, 0x80, 0x1C, 0x00, 0xC0, 0x0E, 0x00, 0x60, 0x07, 0x00,
  0x30, 0x03, 0x80, 0x18, 0x01, 0xC0, 0x0C, 0x00, 0xE0, 0x06, 0x00, 0x70,
  0x03, 0x00, 0x38, 0x01, 0x80, 0x1C, 0x00, 0x80, 0x00, 0x1F, 0x07, 0xF0,
  0xC6, 0x30, 0x66, 0x0C, 0xC1, 0x98, 0x31, 0x8C, 0x3F, 0x87, 0xF1, 0xC7,
  0x30, 0x6C, 0x07, 0x80, 0xF0, 0x1E, 0x03, 0x60, 0xEE, 0x38, 0xFE, 0x0F,
  0x80, 0x1F, 0x07, 0xF1, 0xC7, 0x70, 0x7C, 0x07, 0x80, 0xF0, 0x1E, 0x03,
  0xE0, 0xEE, 0x3C, 0xFF, 0x8F, 0xB0, 0x06, 0x80, 0xF0, 0x1E, 0x03, 0xE0,
  0xEE, 0x38, 0xFE, 0x0F, 0x80, 0x7F, 0xFF, 0xFC, 0x38, 0x01, 0xF0, 0x0C,
  0x60, 0x31, 0x80, 0xC6, 0x09, 0xF0, 0x73, 0x87, 0x80, 0x3C, 0x01, 0xC0,
  0x1E, 0x00, 0xE0, 0x0F, 0x00, 0x78, 0x03, 0x83, 0xC4, 0x1F, 0x80, 0xC3,
  0x03, 0x0C, 0x0E, 0x70, 0x1F, 0x80, 0x3C, 0xFF, 0x80, 0x6F, 0xF3, 0x3E,
  0xC0, 0x5B, 0x6D, 0xB6, 0xDB, 0x6D, 0xB4, 0x1B, 0xE0, 0xFF, 0x80, 0x00,
  0xFF, 0x80, 0x7F, 0xFF, 0xFC, 0x7F, 0xFB, 0x06, 0x0C, 0x18, 0x30, 0x60,
  0xC1, 0x83, 0x06, 0x0C, 0x18, 0x30, 0x60, 0xC1, 0x83, 0x06, 0x0C, 0x18,
  0x30, 0x60, 0xC1, 0x83, 0x07, 0xFF, 0xC0, 0x7F, 0xFC, 0x18, 0x30, 0x60,
  0xC1, 0x83, 0x06, 0x0C, 0x18, 0x30, 0x60, 0xC1, 0x83, 0x06, 0x0C, 0x18,
  0x30, 0x60, 0xC1, 0x83, 0x06, 0x0C, 0x1B, 0xFF, 0xC0, 0x00, 0x61, 0xCE,
  0x31, 0xC6, 0x18, 0x63, 0x0C, 0x30, 0xC3, 0x0C, 0x30, 0xC3, 0x0C, 0x30,
  0xC1, 0x86, 0x18, 0x70, 0xC3, 0x87, 0x18, 0x00, 0x01, 0x0E, 0x1C, 0x30,
  0xE1, 0x86, 0x18, 0x30, 0xC3, 0x0C, 0x30, 0xC3, 0x0C, 0x30, 0xC3, 0x0C,
  0x61, 0x86, 0x38, 0xC7, 0x38, 0x60, 0x00 };

// Glyph, Offset to bitmap, Width, Height, xAdvance, xOffset, yOffset

const gfxglyph_t HotStuff14Glyphs[] PROGMEM = {
  {32,     0,   1,   1,  15,    0,    0 },   // 0x00 ' ' 
  {65,     1,  11,  20,  15,    2,  -19 },   // 0x01 'A' 
  {66,    29,  11,  20,  15,    2,  -19 },   // 0x02 'B' 
  {67,    57,  11,  20,  15,    2,  -19 },   // 0x03 'C' 
  {68,    85,  11,  20,  15,    2,  -19 },   // 0x04 'D' 
  {69,   113,  11,  20,  15,    3,  -19 },   // 0x05 'E' 
  {70,   141,  10,  20,  15,    3,  -19 },   // 0x06 'F' 
  {71,   166,  11,  20,  15,    2,  -19 },   // 0x07 'G' 
  {72,   194,  11,  20,  15,    2,  -19 },   // 0x08 'H' 
  {73,   222,  12,  20,  15,    2,  -19 },   // 0x09 'I' 
  {74,   252,  11,  20,  15,    2,  -19 },   // 0x0A 'J' 
  {75,   280,  12,  20,  15,    2,  -19 },   // 0x0B 'K' 
  {76,   310,  11,  20,  15,    2,  -19 },   // 0x0C 'L' 
  {77,   338,  13,  20,  15,    1,  -19 },   // 0x0D 'M' 
  {78,   371,  11,  20,  15,    2,  -19 },   // 0x0E 'N' 
  {79,   399,  11,  20,  15,    2,  -19 },   // 0x0F 'O' 
  {80,   427,  11,  20,  15,    2,  -19 },   // 0x10 'P' 
  {81,   455,  13,  22,  15,    1,  -19 },   // 0x11 'Q' 
  {82,   491,  12,  20,  15,    2,  -19 },   // 0x12 'R' 
  {83,   521,  12,  20,  15,    1,  -19 },   // 0x13 'S' 
  {84,   551,  14,  20,  15,    1,  -19 },   // 0x14 'T' 
  {85,   586,  11,  20,  15,    2,  -19 },   // 0x15 'U' 
  {86,   614,  14,  20,  15,    1,  -19 },   // 0x16 'V' 
  {87,   649,  13,  20,  15,    1,  -19 },   // 0x17 'W' 
  {88,   682,  13,  20,  15,    1,  -19 },   // 0x18 'X' 
  {89,   715,  11,  20,  15,    2,  -19 },   // 0x19 'Y' 
  {90,   743,  13,  20,  15,    1,  -19 },   // 0x1A 'Z' 
  {97,   776,   9,  15,  15,    3,  -14 },   // 0x1B 'a' 
  {98,   793,   9,  20,  15,    3,  -19 },   // 0x1C 'b' 
  {99,   816,   9,  15,  15,    3,  -14 },   // 0x1D 'c' 
  {100,   833,   9,  20,  15,    3,  -19 },   // 0x1E 'd' 
  {101,   856,   9,  15,  15,    3,  -14 },   // 0x1F 'e' 
  {102,   873,  11,  20,  15,    1,  -19 },   // 0x20 'f' 
  {103,   901,   9,  20,  15,    3,  -14 },   // 0x21 'g' 
  {104,   924,   9,  20,  15,    3,  -19 },   // 0x22 'h' 
  {105,   947,   9,  20,  15,    3,  -19 },   // 0x23 'i' 
  {106,   970,  10,  25,  15,    3,  -19 },   // 0x24 'j' 
  {107,  1002,   9,  20,  15,    3,  -19 },   // 0x25 'k' 
  {108,  1025,   9,  20,  15,    3,  -19 },   // 0x26 'l' 
  {109,  1048,  13,  15,  15,    1,  -14 },   // 0x27 'm' 
  {110,  1073,   9,  15,  15,    3,  -14 },   // 0x28 'n' 
  {111,  1090,   9,  15,  15,    3,  -14 },   // 0x29 'o' 
  {112,  1107,   9,  20,  15,    3,  -14 },   // 0x2A 'p' 
  {113,  1130,  12,  20,  15,    3,  -14 },   // 0x2B 'q' 
  {114,  1160,   9,  15,  15,    3,  -14 },   // 0x2C 'r' 
  {115,  1177,   9,  15,  15,    3,  -14 },   // 0x2D 's' 
  {116,  1194,  11,  20,  15,    1,  -19 },   // 0x2E 't' 
  {117,  1222,   9,  15,  15,    3,  -14 },   // 0x2F 'u' 
  {118,  1239,  13,  15,  15,    1,  -14 },   // 0x30 'v' 
  {119,  1264,  13,  15,  15,    1,  -14 },   // 0x31 'w' 
  {120,  1289,  12,  15,  15,    2,  -14 },   // 0x32 'x' 
  {121,  1312,   9,  20,  15,    3,  -14 },   // 0x33 'y' 
  {122,  1335,  11,  14,  15,    2,  -13 },   // 0x34 'z' 
  {48,  1355,  11,  20,  15,    2,  -19 },   // 0x35 '0' 
  {49,  1383,   7,  20,  15,    2,  -19 },   // 0x36 '1' 
  {50,  1401,  12,  20,  15,    1,  -19 },   // 0x37 '2' 
  {51,  1431,  11,  20,  15,    2,  -19 },   // 0x38 '3' 
  {52,  1459,  13,  20,  15,    1,  -19 },   // 0x39 '4' 
  {53,  1492,  11,  20,  15,    2,  -19 },   // 0x3A '5' 
  {54,  1520,  11,  20,  15,    2,  -19 },   // 0x3B '6' 
  {55,  1548,  13,  20,  15,    1,  -19 },   // 0x3C '7' 
  {56,  1581,  11,  20,  15,    2,  -19 },   // 0x3D '8' 
  {57,  1609,  11,  20,  15,    2,  -19 },   // 0x3E '9' 
  {45,  1637,  11,   2,  15,    2,  -10 },   // 0x3F '-' 
  {37,  1640,  14,  20,  15,    1,  -19 },   // 0x40 '%' 
  {46,  1675,   3,   3,  15,    6,   -2 },   // 0x41 '.' 
  {44,  1677,   4,   7,  15,    6,   -3 },   // 0x42 ',' 
  {33,  1681,   3,  20,  15,    6,  -19 },   // 0x43 '!' 
  {58,  1689,   3,  11,  15,    6,  -10 },   // 0x44 ':' 
  {45,  1694,  11,   2,  15,    2,  -10 },   // 0x45 '-' 
  {91,  1697,   7,  29,  15,    6,  -23 },   // 0x46 '[' 
  {93,  1723,   7,  29,  15,    2,  -23 },   // 0x47 ']' 
  {40,  1749,   6,  30,  15,    6,  -24 },   // 0x48 '(' 
  {41,  1772,   6,  30,  15,    3,  -24 }   // 0x49 ')' 
};

const gfxfont_t HotStuff14 PROGMEM = 
{
  (uint8_t  *)HotStuff14Bitmaps, //< Glyph bitmaps, concatenated 
  (gfxglyph_t *)HotStuff14Glyphs, //< Glyph array
  74,// total glyphs in the string
  30,  // newline distance (y axis)
     0,  // minimum X - left most
    -5,  // minimum Y - bottom most (descenders can drive this negative)
    15,  // maximum X - right most
    25}; // maximum Y - top most
// Approx. 2327 bytes -  but your mileage may vary.

#endif