
#ifndef __FIXEDFONTCOURIERPRIMEBOLDTTF12
#define __FIXEDFONTCOURIERPRIMEBOLDTTF12
const uint8_t HotStuff12Bitmaps[] PROGMEM = {
  0x00, 0x3F, 0x80, 0x7F, 0x80, 0xFF, 0x00, 0x7E, 0x00, 0xEE, 0x01, 0x9C,
  0x07, 0x38, 0x0F, 0xF8, 0x1F, 0xF0, 0x7F, 0xE0, 0xE0, 0xE7, 0xE7, 0xEF,
  0xCF, 0xFF, 0x9F, 0x80, 0xFF, 0x8F, 0xFC, 0xFF, 0xE3, 0x8E, 0x38, 0xE3,
  0xFC, 0x3F, 0xC3, 0xFE, 0x38, 0x73, 0x87, 0x38, 0x7F, 0xFF, 0xFF, 0xEF,
  0xFC, 0x0F, 0x73, 0xFF, 0x7F, 0xF7, 0x8F, 0xF0, 0x7E, 0x07, 0xE0, 0x0E,
  0x00, 0xE0, 0x0F, 0x00, 0x78, 0x77, 0xFF, 0x3F, 0xF0, 0xFC, 0xFF, 0x87,
  0xFF, 0x3F, 0xFC, 0x71, 0xE3, 0x87, 0x9C, 0x1C, 0xE0, 0xE7, 0x07, 0x38,
  0x39, 0xC3, 0xCE, 0x3D, 0xFF, 0xEF, 0xFE, 0x7F, 0xC0, 0xFF, 0xFF, 0xFF,
  0xFF, 0xF3, 0x87, 0x38, 0x03, 0xF0, 0x3F, 0x83, 0xF0, 0x38, 0x73, 0x87,
  0x38, 0x7F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF3, 0x87,
  0x38, 0x03, 0x80, 0x3F, 0x83, 0xF8, 0x3F, 0x83, 0x80, 0x38, 0x0F, 0xF0,
  0xFF, 0x0F, 0xF0, 0x0F, 0x71, 0xFF, 0x9F, 0xFC, 0xF1, 0xEF, 0x07, 0x70,
  0x3B, 0x80, 0x1C, 0x7F, 0xE3, 0xFF, 0x9F, 0xDE, 0x1C, 0xFF, 0xE3, 0xFF,
  0x07, 0xE0, 0xF9, 0xFF, 0x9F, 0xF9, 0xF7, 0x0E, 0x70, 0xE7, 0xFE, 0x7F,
  0xE7, 0xFE, 0x70, 0xE7, 0x0E, 0x70, 0xEF, 0x9F, 0xF9, 0xFF, 0x9F, 0x7F,
  0xDF, 0xFD, 0xFF, 0x07, 0x00, 0xE0, 0x1C, 0x03, 0x80, 0x70, 0x0E, 0x01,
  0xC0, 0x38, 0x7F, 0xFF, 0xFF, 0xFF, 0xC0, 0x1F, 0xF8, 0xFF, 0xC7, 0xFE,
  0x03, 0x80, 0x1C, 0x00, 0xE0, 0x07, 0x1C, 0x38, 0xE1, 0xC7, 0x0E, 0x38,
  0x71, 0xFF, 0x87, 0xF8, 0x1F, 0x80, 0xFD, 0xF7, 0xEF, 0xFF, 0x7E, 0x71,
  0xC3, 0x9C, 0x1D, 0xC0, 0xFC, 0x07, 0xF8, 0x3F, 0xC1, 0xC7, 0x0E, 0x39,
  0xFC, 0xFF, 0xE7, 0xFF, 0x1C, 0xFF, 0x0F, 0xF0, 0xFF, 0x03, 0x80, 0x38,
  0x03, 0x80, 0x38, 0x23, 0x87, 0x38, 0x73, 0x87, 0x38, 0x7F, 0xFF, 0xFF,
  0xFF, 0xFF, 0xF0, 0x7F, 0xC7, 0xFE, 0x3E, 0xFB, 0xE7, 0xDF, 0x3E, 0xF9,
  0xDD, 0xCE, 0xEE, 0x77, 0x73, 0x93, 0x9C, 0x1D, 0xFB, 0xFF, 0xDF, 0xFE,
  0xFC, 0xF1, 0xFF, 0x1F, 0xF9, 0xF7, 0xCE, 0x7C, 0xE7, 0x6E, 0x76, 0xE7,
  0x3E, 0x73, 0xE7, 0x1E, 0x71, 0xEF, 0x8E, 0xF8, 0xEF, 0x86, 0x0F, 0x81,
  0xFF, 0x1F, 0xFC, 0xF1, 0xEF, 0x07, 0xF0, 0x1F, 0x80, 0xFC, 0x07, 0xE0,
  0x3F, 0x83, 0xDE, 0x3C, 0xFF, 0xE3, 0xFE, 0x07, 0xC0, 0xFF, 0x8F, 0xFE,
  0xFF, 0xE3, 0x8F, 0x38, 0x73, 0x87, 0x38, 0xF3, 0xFE, 0x3F, 0xE3, 0xF8,
  0x38, 0x0F, 0xF0, 0xFF, 0x0F, 0xF0, 0x1F, 0x83, 0xFC, 0x7F, 0xE7, 0x0E,
  0xE0, 0x7E, 0x07, 0xE0, 0x7E, 0x07, 0xE0, 0x77, 0x0E, 0x7F, 0xE3, 0xFC,
  0x0F, 0x81, 0x82, 0x3F, 0xF7, 0xFF, 0x7F, 0xE2, 0x00, 0xFF, 0xC7, 0xFF,
  0x3F, 0xFC, 0x71, 0xE3, 0x87, 0x1C, 0x38, 0xFF, 0x87, 0xF8, 0x3F, 0xC1,
  0xCF, 0x0E, 0x3D, 0xFD, 0xFF, 0xE7, 0xFF, 0x1C, 0x3D, 0x9F, 0xEF, 0xFB,
  0x86, 0xE0, 0x3C, 0x07, 0xF0, 0x7E, 0x03, 0xF0, 0x7E, 0x1F, 0xFF, 0xFF,
  0xBB, 0xC0, 0xFF, 0xFF, 0xFF, 0xFF, 0xFE, 0x77, 0xE7, 0x7E, 0x77, 0xE7,
  0x70, 0x70, 0x07, 0x00, 0x70, 0x07, 0x03, 0xFE, 0x3F, 0xE3, 0xFE, 0xF9,
  0xFF, 0x9F, 0xF9, 0xF7, 0x0E, 0x70, 0xE7, 0x0E, 0x70, 0xE7, 0x0E, 0x70,
  0xE7, 0x0E, 0x79, 0xE7, 0xFE, 0x3F, 0xC1, 0xF0, 0xFC, 0xFD, 0xF9, 0xFF,
  0xF3, 0xF1, 0xC1, 0xC3, 0x87, 0x03, 0x8E, 0x07, 0x3C, 0x0E, 0x70, 0x0E,
  0xE0, 0x1F, 0x80, 0x1F, 0x00, 0x3C, 0x00, 0x78, 0x00, 0x70, 0x00, 0xFC,
  0x7F, 0xF8, 0xFF, 0xF1, 0xFB, 0x80, 0xE3, 0x11, 0x86, 0x73, 0x0C, 0xE6,
  0x1B, 0xEC, 0x36, 0xD8, 0x7D, 0xF0, 0xF3, 0xE1, 0xE3, 0xC3, 0xC7, 0x03,
  0x0E, 0x00, 0x7E, 0xFD, 0xFB, 0xF7, 0xEF, 0xC7, 0x1C, 0x0E, 0xE0, 0x3F,
  0x00, 0x78, 0x01, 0xF0, 0x0F, 0xC0, 0x73, 0x83, 0x87, 0x3F, 0x3F, 0xFC,
  0xFF, 0xF3, 0xF0, 0xFC, 0xFF, 0xF3, 0xFF, 0xCF, 0xCE, 0x1C, 0x1C, 0xF0,
  0x3F, 0x80, 0xFC, 0x01, 0xF0, 0x03, 0x80, 0x0E, 0x00, 0x38, 0x07, 0xFC,
  0x1F, 0xF0, 0x7F, 0xC0, 0xFF, 0xFF, 0xFF, 0xFB, 0x8E, 0xE3, 0x39, 0x80,
  0xC0, 0x60, 0x19, 0xCC, 0x76, 0x1F, 0xFF, 0xFF, 0xFF, 0xF0, 0x1F, 0x87,
  0xFC, 0x7F, 0xE2, 0x0E, 0x3F, 0xE7, 0xFE, 0xFF, 0xEE, 0x0E, 0xFF, 0xE7,
  0xFF, 0x3E, 0x70, 0xF8, 0x07, 0xC0, 0x3E, 0x00, 0x70, 0x03, 0xBC, 0x1F,
  0xF8, 0xFF, 0xC7, 0x8F, 0x38, 0x39, 0xC1, 0xCE, 0x0E, 0x78, 0xF7, 0xFF,
  0x3F, 0xF9, 0xE7, 0x00, 0x1E, 0xE7, 0xFD, 0xFF, 0xF8, 0x7E, 0x0F, 0xC0,
  0x38, 0x07, 0x87, 0x7F, 0xE7, 0xFC, 0x7E, 0x00, 0x07, 0xE0, 0x3F, 0x01,
  0xF8, 0x01, 0xC1, 0xEE, 0x3F, 0xF1, 0xFF, 0x9E, 0x3C, 0xE0, 0xE7, 0x07,
  0x38, 0x39, 0xE3, 0xC7, 0xFF, 0xBF, 0xFC, 0x79, 0xE0, 0x0F, 0x83, 0xFC,
  0x7F, 0xE7, 0x0E, 0xFF, 0xFF, 0xFF, 0xFF, 0xF7, 0x02, 0x7F, 0xE3, 0xFE,
  0x1F, 0x80, 0x07, 0xC1, 0xFC, 0x7F, 0x8E, 0x11, 0xC1, 0xFF, 0xBF, 0xF7,
  0xFE, 0x1C, 0x03, 0x80, 0x70, 0x0E, 0x0F, 0xFD, 0xFF, 0xBF, 0xF0, 0x1E,
  0x7B, 0xFF, 0xDF, 0xFF, 0xE3, 0xCE, 0x0E, 0x70, 0x73, 0x83, 0x9E, 0x3C,
  0x7F, 0xE3, 0xFF, 0x07, 0xB8, 0x01, 0xC4, 0x1E, 0x3F, 0xF1, 0xFF, 0x07,
  0xE0, 0xF8, 0x03, 0xE0, 0x0F, 0x80, 0x0E, 0x00, 0x39, 0xC0, 0xEF, 0x83,
  0xFF, 0x0F, 0x1C, 0x38, 0x70, 0xE1, 0xC3, 0x87, 0x0E, 0x1C, 0xFC, 0xFF,
  0xF3, 0xFF, 0xCF, 0xC0, 0x0E, 0x01, 0xC0, 0x38, 0x00, 0x00, 0x00, 0xFC,
  0x1F, 0x83, 0xF0, 0x0E, 0x01, 0xC0, 0x38, 0x07, 0x00, 0xE1, 0xFF, 0xFF,
  0xFF, 0xFF, 0x03, 0x81, 0xC0, 0xE0, 0x00, 0x03, 0xFD, 0xFE, 0xFF, 0x03,
  0x81, 0xC0, 0xE0, 0x70, 0x38, 0x1C, 0x0E, 0x07, 0x03, 0xF1, 0xFF, 0xFF,
  0xE3, 0xE0, 0xF8, 0x0F, 0x80, 0xF8, 0x03, 0x80, 0x39, 0xF3, 0x9F, 0x39,
  0xC3, 0xB8, 0x3F, 0x83, 0xF8, 0x3D, 0xC3, 0x9E, 0xFE, 0xFF, 0xEF, 0xFE,
  0x70, 0x7E, 0x0F, 0xC1, 0xF8, 0x07, 0x00, 0xE0, 0x1C, 0x03, 0x80, 0x70,
  0x0E, 0x01, 0xC0, 0x38, 0x07, 0x0F, 0xFF, 0xFF, 0xFF, 0xF8, 0xE7, 0x3B,
  0xBD, 0xFF, 0xFF, 0xDE, 0xF7, 0x73, 0x9D, 0xCE, 0x77, 0x39, 0xDC, 0xE7,
  0x73, 0x9D, 0xCE, 0x77, 0x39, 0xC0, 0xF3, 0xCF, 0x7C, 0xFF, 0xE3, 0xCE,
  0x38, 0xE3, 0x8E, 0x38, 0xE3, 0x8E, 0xFD, 0xFF, 0xDF, 0xFD, 0xF0, 0x1F,
  0x83, 0xFC, 0x7F, 0xEF, 0x0F, 0xE0, 0x7E, 0x07, 0xE0, 0x7F, 0x0F, 0x7F,
  0xE3, 0xFC, 0x1F, 0x80, 0xF7, 0x8F, 0xFE, 0xFF, 0xE7, 0x8F, 0x70, 0x77,
  0x07, 0x70, 0x77, 0x8F, 0x7F, 0xE7, 0xFE, 0x77, 0x87, 0x00, 0x70, 0x0F,
  0xF0, 0xFF, 0x0F, 0xF0, 0x1E, 0x7B, 0xFF, 0xDF, 0xFF, 0xE3, 0xCE, 0x0E,
  0x70, 0x73, 0x83, 0x9E, 0x3C, 0x7F, 0xE3, 0xFF, 0x07, 0xB8, 0x01, 0xC0,
  0x0E, 0x03, 0xFC, 0x1F, 0xE0, 0xFF, 0xF1, 0xFE, 0x7F, 0xDF, 0xBF, 0x07,
  0xC0, 0x70, 0x0E, 0x01, 0xC0, 0xFF, 0x9F, 0xF3, 0xFE, 0x00, 0x7B, 0xFF,
  0xFF, 0xFC, 0x7F, 0x03, 0xF8, 0x1F, 0x87, 0xFF, 0xFF, 0xFB, 0xC0, 0x1C,
  0x03, 0x80, 0x70, 0x0E, 0x0F, 0xFF, 0xFF, 0xFF, 0xF8, 0xE0, 0x1C, 0x03,
  0x80, 0x70, 0x0E, 0x31, 0xFE, 0x1F, 0xC1, 0xE0, 0xF1, 0xE7, 0x8F, 0x3C,
  0x78, 0xE1, 0xC7, 0x0E, 0x38, 0x71, 0xC7, 0x8E, 0x3C, 0x7F, 0xF9, 0xFB,
  0xC7, 0x9E, 0xFC, 0xFF, 0xF3, 0xFF, 0xCF, 0xCE, 0x1C, 0x38, 0x70, 0x73,
  0x81, 0xCE, 0x03, 0xF0, 0x0F, 0xC0, 0x1E, 0x00, 0x78, 0x00, 0xF8, 0x3F,
  0xF8, 0x7F, 0xE0, 0xFB, 0x9C, 0xE7, 0x39, 0x86, 0xF3, 0x0D, 0xBE, 0x1F,
  0x7C, 0x3C, 0xF0, 0x38, 0xE0, 0x71, 0xC0, 0xFD, 0xFF, 0xEF, 0xFF, 0x7E,
  0x79, 0xC1, 0xFC, 0x07, 0xC0, 0x7F, 0x07, 0x3C, 0xFD, 0xFF, 0xEF, 0xFF,
  0x7E, 0xFC, 0xFF, 0xF3, 0xFF, 0xCF, 0xCE, 0x1C, 0x3C, 0x70, 0x73, 0x80,
  0xFE, 0x03, 0xF0, 0x07, 0xC0, 0x1E, 0x00, 0x78, 0x03, 0xC0, 0x1E, 0x01,
  0xF8, 0x07, 0xC0, 0x1E, 0x00, 0xFF, 0xFF, 0xFF, 0xFB, 0x8C, 0x06, 0x03,
  0x01, 0x80, 0xC7, 0xFF, 0xFF, 0xFF, 0xFC, 0x1E, 0x0F, 0xC7, 0xF9, 0xCE,
  0xE1, 0xF8, 0x7E, 0x1F, 0x87, 0xE1, 0xF8, 0x77, 0x39, 0xFE, 0x3F, 0x07,
  0x80, 0x0E, 0x0F, 0xC3, 0xF8, 0x37, 0x00, 0xE0, 0x1C, 0x03, 0x80, 0x70,
  0x0E, 0x01, 0xC0, 0x38, 0x7F, 0xEF, 0xFF, 0xFF, 0x80, 0x3E, 0x7F, 0xBF,
  0xFC, 0x7E, 0x38, 0x1C, 0x1C, 0x1E, 0x1E, 0x1E, 0x1E, 0xFF, 0xFF, 0xFF,
  0xFC, 0x3F, 0x3F, 0xEF, 0xFF, 0x87, 0xE1, 0xC0, 0x71, 0xF8, 0x7E, 0x1F,
  0xC0, 0x7C, 0x1F, 0xFF, 0xFF, 0x9F, 0xC0, 0x03, 0x80, 0x78, 0x0F, 0x80,
  0xF8, 0x1B, 0x83, 0xB8, 0x73, 0x8F, 0xFF, 0xFF, 0xFF, 0xFF, 0x03, 0x81,
  0xFE, 0x1F, 0xE1, 0xFE, 0x7F, 0xDF, 0xF7, 0xFD, 0xC0, 0x70, 0x1F, 0xC7,
  0xF9, 0xFF, 0x21, 0xC0, 0x7C, 0x3F, 0xFF, 0xFF, 0x8F, 0x80, 0x03, 0xC7,
  0xF3, 0xFD, 0xF0, 0x70, 0x3B, 0xCF, 0xFB, 0xFF, 0xF1, 0xF8, 0x7E, 0x1D,
  0xFF, 0x3F, 0x87, 0x80, 0xFF, 0xFF, 0xFF, 0xFF, 0x70, 0xEE, 0x1D, 0xC7,
  0x00, 0xE0, 0x38, 0x07, 0x01, 0xC0, 0x38, 0x0F, 0x01, 0xC0, 0x38, 0x00,
  0x3F, 0x1F, 0xEF, 0xFF, 0x87, 0xE1, 0xDF, 0xE3, 0xF3, 0xFF, 0xE1, 0xF8,
  0x7E, 0x1F, 0xFF, 0x7F, 0x8F, 0xC0, 0x1E, 0x1F, 0xCF, 0xFB, 0x8F, 0xE1,
  0xF8, 0xFF, 0xFD, 0xFF, 0x3D, 0xC0, 0xE0, 0xF9, 0xFC, 0x7E, 0x1E, 0x00,
  0xFF, 0xFF, 0xFF, 0xFC, 0x38, 0x03, 0xF8, 0x6E, 0xE3, 0xBB, 0x9E, 0xFE,
  0xF0, 0xE7, 0x00, 0x38, 0x01, 0xC0, 0x0E, 0x70, 0x77, 0xF3, 0x9D, 0xDC,
  0x77, 0x21, 0xFC, 0x01, 0xC0, 0x6F, 0xF6, 0x7B, 0xDC, 0xEE, 0x73, 0x00,
  0xFF, 0xF7, 0x77, 0x66, 0x00, 0x6F, 0xF6, 0x6F, 0xF6, 0x00, 0x06, 0xFF,
  0x60, 0xFE, 0xFF, 0xFE, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0,
  0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xFE, 0xFF, 0xFE, 0x7F, 0xFF, 0x7F,
  0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07,
  0x07, 0x07, 0x7F, 0xFF, 0x7F, 0x04, 0x07, 0x0F, 0x1E, 0x3C, 0x78, 0x70,
  0xF0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0x70, 0x78, 0x38, 0x3C, 0x1F,
  0x0F, 0x02, 0x40, 0xE0, 0xF0, 0x78, 0x3C, 0x1E, 0x0E, 0x0F, 0x07, 0x07,
  0x07, 0x07, 0x07, 0x07, 0x0E, 0x1E, 0x1C, 0x3C, 0xF8, 0xF0, 0x40 };

// Glyph, Offset to bitmap, Width, Height, xAdvance, xOffset, yOffset

const gfxglyph_t HotStuff12Glyphs[] PROGMEM = {
  {32,     0,   1,   1,  14,    0,    0 },   // 0x00 ' ' 
  {65,     1,  15,  14,  14,    0,  -13 },   // 0x01 'A' 
  {66,    28,  12,  14,  14,    1,  -13 },   // 0x02 'B' 
  {67,    49,  12,  14,  14,    1,  -13 },   // 0x03 'C' 
  {68,    70,  13,  14,  14,    1,  -13 },   // 0x04 'D' 
  {69,    93,  12,  14,  14,    1,  -13 },   // 0x05 'E' 
  {70,   114,  12,  14,  14,    1,  -13 },   // 0x06 'F' 
  {71,   135,  13,  14,  14,    1,  -13 },   // 0x07 'G' 
  {72,   158,  12,  14,  14,    1,  -13 },   // 0x08 'H' 
  {73,   179,  11,  14,  14,    2,  -13 },   // 0x09 'I' 
  {74,   199,  13,  14,  14,    1,  -13 },   // 0x0A 'J' 
  {75,   222,  13,  14,  14,    1,  -13 },   // 0x0B 'K' 
  {76,   245,  12,  14,  14,    1,  -13 },   // 0x0C 'L' 
  {77,   266,  13,  14,  14,    1,  -13 },   // 0x0D 'M' 
  {78,   289,  12,  14,  14,    1,  -13 },   // 0x0E 'N' 
  {79,   310,  13,  14,  14,    1,  -13 },   // 0x0F 'O' 
  {80,   333,  12,  14,  14,    1,  -13 },   // 0x10 'P' 
  {81,   354,  12,  18,  14,    1,  -13 },   // 0x11 'Q' 
  {82,   381,  13,  14,  14,    1,  -13 },   // 0x12 'R' 
  {83,   404,  10,  14,  14,    2,  -13 },   // 0x13 'S' 
  {84,   422,  12,  14,  14,    1,  -13 },   // 0x14 'T' 
  {85,   443,  12,  14,  14,    1,  -13 },   // 0x15 'U' 
  {86,   464,  15,  14,  14,    0,  -13 },   // 0x16 'V' 
  {87,   491,  15,  14,  14,    0,  -13 },   // 0x17 'W' 
  {88,   518,  14,  14,  14,    0,  -13 },   // 0x18 'X' 
  {89,   543,  14,  14,  14,    0,  -13 },   // 0x19 'Y' 
  {90,   568,  10,  14,  14,    2,  -13 },   // 0x1A 'Z' 
  {97,   586,  12,  11,  14,    1,  -10 },   // 0x1B 'a' 
  {98,   603,  13,  15,  14,    0,  -14 },   // 0x1C 'b' 
  {99,   628,  11,  11,  14,    1,  -10 },   // 0x1D 'c' 
  {100,   644,  13,  15,  14,    1,  -14 },   // 0x1E 'd' 
  {101,   669,  12,  11,  14,    1,  -10 },   // 0x1F 'e' 
  {102,   686,  11,  15,  14,    2,  -14 },   // 0x20 'f' 
  {103,   707,  13,  16,  14,    1,  -10 },   // 0x21 'g' 
  {104,   733,  14,  15,  14,    0,  -14 },   // 0x22 'h' 
  {105,   760,  11,  16,  14,    2,  -15 },   // 0x23 'i' 
  {106,   782,   9,  21,  14,    2,  -15 },   // 0x24 'j' 
  {107,   806,  12,  15,  14,    1,  -14 },   // 0x25 'k' 
  {108,   829,  11,  15,  14,    2,  -14 },   // 0x26 'l' 
  {109,   850,  14,  11,  14,    0,  -10 },   // 0x27 'm' 
  {110,   870,  12,  11,  14,    1,  -10 },   // 0x28 'n' 
  {111,   887,  12,  11,  14,    1,  -10 },   // 0x29 'o' 
  {112,   904,  12,  16,  14,    1,  -10 },   // 0x2A 'p' 
  {113,   928,  13,  16,  14,    1,  -10 },   // 0x2B 'q' 
  {114,   954,  11,  11,  14,    2,  -10 },   // 0x2C 'r' 
  {115,   970,   9,  11,  14,    3,  -10 },   // 0x2D 's' 
  {116,   983,  11,  15,  14,    1,  -14 },   // 0x2E 't' 
  {117,  1004,  13,  11,  14,    1,  -10 },   // 0x2F 'u' 
  {118,  1022,  14,  11,  14,    0,  -10 },   // 0x30 'v' 
  {119,  1042,  15,  11,  14,    0,  -10 },   // 0x31 'w' 
  {120,  1063,  13,  11,  14,    1,  -10 },   // 0x32 'x' 
  {121,  1081,  14,  16,  14,    0,  -10 },   // 0x33 'y' 
  {122,  1109,  10,  11,  14,    2,  -10 },   // 0x34 'z' 
  {48,  1123,  10,  14,  14,    2,  -13 },   // 0x35 '0' 
  {49,  1141,  11,  14,  14,    2,  -13 },   // 0x36 '1' 
  {50,  1161,   9,  14,  14,    2,  -13 },   // 0x37 '2' 
  {51,  1177,  10,  14,  14,    2,  -13 },   // 0x38 '3' 
  {52,  1195,  12,  14,  14,    1,  -13 },   // 0x39 '4' 
  {53,  1216,  10,  14,  14,    2,  -13 },   // 0x3A '5' 
  {54,  1234,  10,  14,  14,    2,  -13 },   // 0x3B '6' 
  {55,  1252,  11,  14,  14,    2,  -13 },   // 0x3C '7' 
  {56,  1272,  10,  14,  14,    2,  -13 },   // 0x3D '8' 
  {57,  1290,  10,  14,  14,    2,  -13 },   // 0x3E '9' 
  {45,  1308,  10,   3,  14,    2,   -7 },   // 0x3F '-' 
  {37,  1312,  14,  14,  14,    0,  -13 },   // 0x40 '%' 
  {46,  1337,   4,   4,  14,    5,   -3 },   // 0x41 '.' 
  {44,  1339,   5,   7,  14,    4,   -3 },   // 0x42 ',' 
  {33,  1344,   4,  14,  14,    5,  -13 },   // 0x43 '!' 
  {58,  1351,   4,  11,  14,    5,  -10 },   // 0x44 ':' 
  {91,  1357,   8,  20,  14,    3,  -14 },   // 0x45 '[' 
  {93,  1377,   8,  20,  14,    3,  -14 },   // 0x46 ']' 
  {40,  1397,   8,  21,  14,    3,  -15 },   // 0x47 '(' 
  {41,  1418,   8,  21,  14,    3,  -15 }   // 0x48 ')' 
};

const gfxfont_t HotStuff12 PROGMEM = 
{
  (uint8_t  *)HotStuff12Bitmaps, //< Glyph bitmaps, concatenated 
  (gfxglyph_t *)HotStuff12Glyphs, //< Glyph array
  73,// total glyphs in the string
  21,  // newline distance (y axis)
     0,  // minimum X - left most
    -5,  // minimum Y - bottom most (descenders can drive this negative)
    15,  // maximum X - right most
    16}; // maximum Y - top most
// Approx. 1964 bytes -  but your mileage may vary.

#endif