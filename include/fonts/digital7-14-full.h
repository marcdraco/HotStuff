
#ifndef __FIXEDFONTDIGITALMONOTTF14
#define __FIXEDFONTDIGITALMONOTTF14
const uint8_t HotStuff14Bitmaps[] PROGMEM = {
  0x00, 0xFF, 0x5F, 0xFC, 0x0F, 0x03, 0xC0, 0xF0, 0x3C, 0x0F, 0x03, 0xBF,
  0xFF, 0xFC, 0x0F, 0x03, 0xC0, 0xF0, 0x3C, 0x0F, 0x03, 0xC0, 0xE0, 0x10,
  0xFF, 0x1F, 0xCC, 0x0F, 0x03, 0xC0, 0xF0, 0x3C, 0x0F, 0x03, 0xBF, 0xFF,
  0xFC, 0x0F, 0x03, 0xC0, 0xF0, 0x3C, 0x0F, 0x03, 0x7F, 0xBF, 0xC0, 0xFF,
  0xBF, 0xF0, 0x18, 0x0C, 0x06, 0x03, 0x01, 0x80, 0x80, 0x40, 0x30, 0x18,
  0x0C, 0x06, 0x03, 0x01, 0x80, 0x7F, 0xFF, 0xC0, 0xFF, 0x1F, 0xCC, 0x0F,
  0x03, 0xC0, 0xF0, 0x3C, 0x0F, 0x03, 0x80, 0x60, 0x1C, 0x0F, 0x03, 0xC0,
  0xF0, 0x3C, 0x0F, 0x03, 0x7F, 0xBF, 0xC0, 0xFF, 0xBF, 0xF0, 0x18, 0x0C,
  0x06, 0x03, 0x01, 0x80, 0xFF, 0xFF, 0xF0, 0x18, 0x0C, 0x06, 0x03, 0x01,
  0x80, 0x7F, 0xFF, 0xC0, 0xFF, 0xBF, 0xF0, 0x18, 0x0C, 0x06, 0x03, 0x01,
  0x80, 0xBF, 0xFF, 0xF0, 0x18, 0x0C, 0x06, 0x03, 0x01, 0x80, 0xC0, 0x40,
  0x00, 0xFF, 0x9F, 0xCC, 0x03, 0x00, 0xC0, 0x30, 0x0C, 0x03, 0x00, 0x87,
  0xA1, 0xFC, 0x0F, 0x03, 0xC0, 0xF0, 0x3C, 0x0F, 0x03, 0x7F, 0xFF, 0xD0,
  0x00, 0x70, 0x3C, 0x0F, 0x03, 0xC0, 0xF0, 0x3C, 0x0F, 0x03, 0xBF, 0xFF,
  0xFC, 0x0F, 0x03, 0xC0, 0xF0, 0x3C, 0x0F, 0x03, 0xC0, 0xE0, 0x10, 0x7F,
  0xFF, 0x5F, 0xFF, 0xD0, 0x00, 0x40, 0x30, 0x0C, 0x03, 0x00, 0xC0, 0x30,
  0x0C, 0x03, 0x00, 0x60, 0x1C, 0x0F, 0x03, 0xC0, 0xF0, 0x3C, 0x0F, 0x03,
  0x7F, 0xFF, 0xD0, 0x81, 0xF0, 0xFC, 0x7B, 0x3C, 0xDE, 0x3F, 0x0F, 0x83,
  0x00, 0xBF, 0xBF, 0xFC, 0x0F, 0x03, 0xC0, 0xF0, 0x3C, 0x0F, 0x03, 0xC0,
  0xE0, 0x10, 0x80, 0x30, 0x0C, 0x03, 0x00, 0xC0, 0x30, 0x0C, 0x03, 0x00,
  0x80, 0x20, 0x0C, 0x03, 0x00, 0xC0, 0x30, 0x0C, 0x03, 0x00, 0xFF, 0xEF,
  0xF0, 0xFF, 0x5F, 0xFC, 0x0F, 0x33, 0xCC, 0xF3, 0x3C, 0xCF, 0x33, 0x8C,
  0x60, 0x1C, 0x0F, 0x03, 0xC0, 0xF0, 0x3C, 0x0F, 0x03, 0xC0, 0xE0, 0x10,
  0x80, 0x70, 0x3F, 0x0F, 0xE3, 0xDC, 0xF3, 0xBC, 0x7F, 0x0F, 0x80, 0x60,
  0x1C, 0x0F, 0x03, 0xC0, 0xF0, 0x3C, 0x0F, 0x03, 0xC0, 0xE0, 0x10, 0x3F,
  0x0F, 0xCC, 0x0F, 0x03, 0xC0, 0xF0, 0x3C, 0x0F, 0x03, 0x80, 0x60, 0x1C,
  0x0F, 0x03, 0xC0, 0xF0, 0x3C, 0x0F, 0x03, 0x7F, 0x8F, 0xC0, 0xFF, 0x1F,
  0xCC, 0x0F, 0x03, 0xC0, 0xF0, 0x3C, 0x0F, 0x03, 0xBF, 0xFF, 0xEC, 0x03,
  0x00, 0xC0, 0x30, 0x0C, 0x03, 0x00, 0xC0, 0x20, 0x00, 0xFF, 0x4F, 0xFB,
  0x03, 0x60, 0x6C, 0x0D, 0x81, 0xB0, 0x36, 0x06, 0x80, 0x50, 0x0B, 0x03,
  0x60, 0x6C, 0x0D, 0x87, 0xB0, 0xF6, 0x0E, 0x7C, 0xFF, 0xCC, 0xFF, 0x5F,
  0xFC, 0x0F, 0x03, 0xC0, 0xF0, 0x3C, 0x0F, 0x03, 0xBF, 0xFF, 0xEC, 0x03,
  0xE0, 0xFC, 0x37, 0x8C, 0xF3, 0x1E, 0xC3, 0xE0, 0x70, 0xFF, 0xDF, 0xEC,
  0x03, 0x00, 0xC0, 0x30, 0x0C, 0x03, 0x00, 0xBF, 0x9F, 0xF0, 0x0C, 0x03,
  0x00, 0xC0, 0x30, 0x0C, 0x03, 0x7F, 0xFF, 0xD0, 0xFF, 0xDF, 0xF0, 0x00,
  0x30, 0x0C, 0x03, 0x00, 0xC0, 0x30, 0x00, 0x00, 0x00, 0xC0, 0x30, 0x0C,
  0x03, 0x00, 0xC0, 0x30, 0x0C, 0x01, 0x00, 0x00, 0x70, 0x3C, 0x0F, 0x03,
  0xC0, 0xF0, 0x3C, 0x0F, 0x03, 0x80, 0x60, 0x1C, 0x0F, 0x03, 0xC0, 0xF0,
  0x3C, 0x0F, 0x03, 0x7F, 0xFF, 0xD0, 0x80, 0x70, 0x3C, 0x0F, 0x03, 0xC0,
  0xF0, 0x3C, 0x0F, 0x03, 0x80, 0x40, 0x08, 0x07, 0x03, 0x61, 0x9C, 0xE3,
  0x30, 0x78, 0x0C, 0x03, 0x00, 0x80, 0x70, 0x3C, 0x0F, 0x03, 0xC0, 0xF0,
  0x3C, 0x0F, 0x03, 0x80, 0x63, 0x1C, 0xCF, 0x33, 0xCC, 0xF3, 0x3C, 0xCF,
  0x33, 0x7F, 0xFF, 0xD0, 0xC0, 0x7C, 0x1D, 0x83, 0x38, 0xE3, 0x18, 0x77,
  0x06, 0xC0, 0xD8, 0x0A, 0x01, 0x40, 0x6C, 0x0D, 0x83, 0xB8, 0x63, 0x1C,
  0x73, 0x06, 0xE0, 0xF8, 0x0C, 0x00, 0x60, 0x3C, 0x0F, 0x03, 0xC0, 0xF0,
  0x3C, 0x0F, 0x03, 0xBF, 0xDF, 0xF0, 0x0C, 0x03, 0x00, 0xC0, 0x30, 0x0C,
  0x03, 0x7F, 0xFF, 0xD0, 0xFF, 0xDF, 0xB0, 0x1C, 0x06, 0x03, 0x80, 0xC0,
  0x30, 0x18, 0x06, 0x02, 0x01, 0x80, 0x60, 0x38, 0x0C, 0x07, 0x01, 0x80,
  0xFF, 0xB7, 0xE0, 0xFF, 0x5F, 0xFC, 0x0F, 0x03, 0xC0, 0xF0, 0x3C, 0x0F,
  0x03, 0xBF, 0xFF, 0xFC, 0x0F, 0x03, 0xC0, 0xF0, 0x3C, 0x0F, 0x03, 0xC0,
  0xE0, 0x10, 0xFF, 0x1F, 0xCC, 0x0F, 0x03, 0xC0, 0xF0, 0x3C, 0x0F, 0x03,
  0xBF, 0xFF, 0xFC, 0x0F, 0x03, 0xC0, 0xF0, 0x3C, 0x0F, 0x03, 0x7F, 0xBF,
  0xC0, 0xFF, 0xBF, 0xF0, 0x18, 0x0C, 0x06, 0x03, 0x01, 0x80, 0x80, 0x40,
  0x30, 0x18, 0x0C, 0x06, 0x03, 0x01, 0x80, 0x7F, 0xFF, 0xC0, 0xFF, 0x1F,
  0xCC, 0x0F, 0x03, 0xC0, 0xF0, 0x3C, 0x0F, 0x03, 0x80, 0x60, 0x1C, 0x0F,
  0x03, 0xC0, 0xF0, 0x3C, 0x0F, 0x03, 0x7F, 0xBF, 0xC0, 0xFF, 0xBF, 0xF0,
  0x18, 0x0C, 0x06, 0x03, 0x01, 0x80, 0xFF, 0xFF, 0xF0, 0x18, 0x0C, 0x06,
  0x03, 0x01, 0x80, 0x7F, 0xFF, 0xC0, 0xFF, 0xBF, 0xF0, 0x18, 0x0C, 0x06,
  0x03, 0x01, 0x80, 0xBF, 0xFF, 0xF0, 0x18, 0x0C, 0x06, 0x03, 0x01, 0x80,
  0xC0, 0x40, 0x00, 0xFF, 0x9F, 0xCC, 0x03, 0x00, 0xC0, 0x30, 0x0C, 0x03,
  0x00, 0x87, 0xA1, 0xFC, 0x0F, 0x03, 0xC0, 0xF0, 0x3C, 0x0F, 0x03, 0x7F,
  0xFF, 0xD0, 0x00, 0x70, 0x3C, 0x0F, 0x03, 0xC0, 0xF0, 0x3C, 0x0F, 0x03,
  0xBF, 0xFF, 0xFC, 0x0F, 0x03, 0xC0, 0xF0, 0x3C, 0x0F, 0x03, 0xC0, 0xE0,
  0x10, 0x7F, 0xFF, 0x5F, 0xFF, 0xD0, 0x00, 0x40, 0x30, 0x0C, 0x03, 0x00,
  0xC0, 0x30, 0x0C, 0x03, 0x00, 0x60, 0x1C, 0x0F, 0x03, 0xC0, 0xF0, 0x3C,
  0x0F, 0x03, 0x7F, 0xFF, 0xD0, 0x81, 0xF0, 0xFC, 0x7B, 0x3C, 0xDE, 0x3F,
  0x0F, 0x83, 0x00, 0xBF, 0xBF, 0xFC, 0x0F, 0x03, 0xC0, 0xF0, 0x3C, 0x0F,
  0x03, 0xC0, 0xE0, 0x10, 0x80, 0x30, 0x0C, 0x03, 0x00, 0xC0, 0x30, 0x0C,
  0x03, 0x00, 0x80, 0x20, 0x0C, 0x03, 0x00, 0xC0, 0x30, 0x0C, 0x03, 0x00,
  0xFF, 0xEF, 0xF0, 0xFF, 0x5F, 0xFC, 0x0F, 0x33, 0xCC, 0xF3, 0x3C, 0xCF,
  0x33, 0x8C, 0x60, 0x1C, 0x0F, 0x03, 0xC0, 0xF0, 0x3C, 0x0F, 0x03, 0xC0,
  0xE0, 0x10, 0x80, 0x70, 0x3F, 0x0F, 0xE3, 0xDC, 0xF3, 0xBC, 0x7F, 0x0F,
  0x80, 0x60, 0x1C, 0x0F, 0x03, 0xC0, 0xF0, 0x3C, 0x0F, 0x03, 0xC0, 0xE0,
  0x10, 0x3F, 0x0F, 0xCC, 0x0F, 0x03, 0xC0, 0xF0, 0x3C, 0x0F, 0x03, 0x80,
  0x60, 0x1C, 0x0F, 0x03, 0xC0, 0xF0, 0x3C, 0x0F, 0x03, 0x7F, 0x8F, 0xC0,
  0xFF, 0x1F, 0xCC, 0x0F, 0x03, 0xC0, 0xF0, 0x3C, 0x0F, 0x03, 0xBF, 0xFF,
  0xEC, 0x03, 0x00, 0xC0, 0x30, 0x0C, 0x03, 0x00, 0xC0, 0x20, 0x00, 0xFF,
  0x4F, 0xFB, 0x03, 0x60, 0x6C, 0x0D, 0x81, 0xB0, 0x36, 0x06, 0x80, 0x50,
  0x0B, 0x03, 0x60, 0x6C, 0x0D, 0x87, 0xB0, 0xF6, 0x0E, 0x7C, 0xFF, 0xCC,
  0xFF, 0x5F, 0xFC, 0x0F, 0x03, 0xC0, 0xF0, 0x3C, 0x0F, 0x03, 0xBF, 0xFF,
  0xEC, 0x03, 0xE0, 0xFC, 0x37, 0x8C, 0xF3, 0x1E, 0xC3, 0xE0, 0x70, 0xFF,
  0xDF, 0xEC, 0x03, 0x00, 0xC0, 0x30, 0x0C, 0x03, 0x00, 0xBF, 0x9F, 0xF0,
  0x0C, 0x03, 0x00, 0xC0, 0x30, 0x0C, 0x03, 0x7F, 0xFF, 0xD0, 0xFF, 0xDF,
  0xF0, 0x00, 0x30, 0x0C, 0x03, 0x00, 0xC0, 0x30, 0x00, 0x00, 0x00, 0xC0,
  0x30, 0x0C, 0x03, 0x00, 0xC0, 0x30, 0x0C, 0x01, 0x00, 0x00, 0x70, 0x3C,
  0x0F, 0x03, 0xC0, 0xF0, 0x3C, 0x0F, 0x03, 0x80, 0x60, 0x1C, 0x0F, 0x03,
  0xC0, 0xF0, 0x3C, 0x0F, 0x03, 0x7F, 0xFF, 0xD0, 0x80, 0x70, 0x3C, 0x0F,
  0x03, 0xC0, 0xF0, 0x3C, 0x0F, 0x03, 0x80, 0x40, 0x08, 0x07, 0x03, 0x61,
  0x9C, 0xE3, 0x30, 0x78, 0x0C, 0x03, 0x00, 0x80, 0x70, 0x3C, 0x0F, 0x03,
  0xC0, 0xF0, 0x3C, 0x0F, 0x03, 0x80, 0x63, 0x1C, 0xCF, 0x33, 0xCC, 0xF3,
  0x3C, 0xCF, 0x33, 0x7F, 0xFF, 0xD0, 0xC0, 0x7C, 0x1D, 0x83, 0x38, 0xE3,
  0x18, 0x77, 0x06, 0xC0, 0xD8, 0x0A, 0x01, 0x40, 0x6C, 0x0D, 0x83, 0xB8,
  0x63, 0x1C, 0x73, 0x06, 0xE0, 0xF8, 0x0C, 0x00, 0x60, 0x3C, 0x0F, 0x03,
  0xC0, 0xF0, 0x3C, 0x0F, 0x03, 0xBF, 0xDF, 0xF0, 0x0C, 0x03, 0x00, 0xC0,
  0x30, 0x0C, 0x03, 0x7F, 0xFF, 0xD0, 0xFF, 0xDF, 0xB0, 0x1C, 0x06, 0x03,
  0x80, 0xC0, 0x30, 0x18, 0x06, 0x02, 0x01, 0x80, 0x60, 0x38, 0x0C, 0x07,
  0x01, 0x80, 0xFF, 0xB7, 0xE0, 0xFF, 0x5F, 0xFC, 0x0F, 0x03, 0xC0, 0xF0,
  0x3C, 0x0F, 0x03, 0x80, 0x60, 0x1C, 0x0F, 0x03, 0xC0, 0xF0, 0x3C, 0x0F,
  0x03, 0x7F, 0xFF, 0xD0, 0x7F, 0xFF, 0x5F, 0xFF, 0xD0, 0xFF, 0x5F, 0xF0,
  0x0C, 0x03, 0x00, 0xC0, 0x30, 0x0C, 0x03, 0x3F, 0xFF, 0xEC, 0x03, 0x00,
  0xC0, 0x30, 0x0C, 0x03, 0x00, 0x7F, 0x3F, 0xE0, 0xFF, 0x7F, 0xF0, 0x0C,
  0x03, 0x00, 0xC0, 0x30, 0x0C, 0x03, 0x7F, 0xDF, 0xF0, 0x0C, 0x03, 0x00,
  0xC0, 0x30, 0x0C, 0x03, 0xFF, 0xFF, 0xD0, 0x00, 0x60, 0x3C, 0x0F, 0x03,
  0xC0, 0xF0, 0x3C, 0x0F, 0x03, 0xBF, 0xDF, 0xF0, 0x0C, 0x03, 0x00, 0xC0,
  0x30, 0x0C, 0x03, 0x00, 0xC0, 0x10, 0xFF, 0x9F, 0xCC, 0x03, 0x00, 0xC0,
  0x30, 0x0C, 0x03, 0x00, 0xBF, 0x9F, 0xF0, 0x0C, 0x03, 0x00, 0xC0, 0x30,
  0x0C, 0x03, 0x7F, 0xFF, 0xD0, 0xFF, 0x9F, 0xCC, 0x03, 0x00, 0xC0, 0x30,
  0x0C, 0x03, 0x00, 0xBF, 0xBF, 0xFC, 0x0F, 0x03, 0xC0, 0xF0, 0x3C, 0x0F,
  0x03, 0x7F, 0xFF, 0xD0, 0xFF, 0x5F, 0xFC, 0x0F, 0x03, 0xC0, 0xF0, 0x3C,
  0x0F, 0x03, 0x80, 0x40, 0x10, 0x0C, 0x03, 0x00, 0xC0, 0x30, 0x0C, 0x03,
  0x00, 0xC0, 0x10, 0xFF, 0x5F, 0xFC, 0x0F, 0x03, 0xC0, 0xF0, 0x3C, 0x0F,
  0x03, 0xBF, 0xFF, 0xFC, 0x0F, 0x03, 0xC0, 0xF0, 0x3C, 0x0F, 0x03, 0x7F,
  0xFF, 0xD0, 0xFF, 0x5F, 0xFC, 0x0F, 0x03, 0xC0, 0xF0, 0x3C, 0x0F, 0x03,
  0xBF, 0xDF, 0xF0, 0x0C, 0x03, 0x00, 0xC0, 0x30, 0x0C, 0x03, 0x7F, 0xFF,
  0xD0, 0xFF, 0xFF, 0xF4, 0x67, 0xCE, 0xCC, 0xCC, 0xDC, 0xF9, 0x8B, 0xF8,
  0x03, 0x00, 0x30, 0x02, 0x00, 0x40, 0x0C, 0x00, 0xC0, 0x1F, 0xD1, 0x9F,
  0x3B, 0x33, 0x33, 0x73, 0xE6, 0x2F, 0xF0, 0xFF, 0xC0, 0x7F, 0xFF, 0x5F,
  0xF0, 0xF0, 0xF0, 0x00, 0xF0, 0xFB, 0xB1, 0x8C, 0x63, 0x18, 0x84, 0x31,
  0x8C, 0x63, 0x18, 0x77, 0xC0, 0xEB, 0xC6, 0x31, 0x8C, 0x63, 0x08, 0x46,
  0x31, 0x8C, 0x63, 0x7F, 0x40, 0x3C, 0xFC, 0x30, 0xC3, 0x0C, 0x30, 0x82,
  0x0C, 0x30, 0xC3, 0x0C, 0x30, 0x7C, 0xF0, 0xF3, 0xC0, 0xC3, 0x0C, 0x30,
  0xC3, 0x04, 0x10, 0xC3, 0x0C, 0x30, 0xC3, 0xFB, 0xC0, 0x00, 0xC0, 0x30,
  0x1C, 0x06, 0x03, 0x80, 0xC0, 0x70, 0x18, 0x06, 0x02, 0x01, 0x80, 0x60,
  0x38, 0x0C, 0x07, 0x01, 0x80, 0xE0, 0x30, 0x00 };

// Glyph, Offset to bitmap, Width, Height, xAdvance, xOffset, yOffset

const gfxglyph_t HotStuff14Glyphs[] PROGMEM = {
  {32,     0,   1,   1,  12,    0,    0 },   // 0x00 ' ' 
  {65,     1,  10,  18,  12,    1,  -17 },   // 0x01 'A' 
  {66,    24,  10,  18,  12,    1,  -17 },   // 0x02 'B' 
  {67,    47,   9,  18,  12,    1,  -17 },   // 0x03 'C' 
  {68,    68,  10,  18,  12,    1,  -17 },   // 0x04 'D' 
  {69,    91,   9,  18,  12,    1,  -17 },   // 0x05 'E' 
  {70,   112,   9,  18,  12,    1,  -17 },   // 0x06 'F' 
  {71,   133,  10,  18,  12,    1,  -17 },   // 0x07 'G' 
  {72,   156,  10,  18,  12,    1,  -17 },   // 0x08 'H' 
  {73,   179,   2,  18,  12,    5,  -17 },   // 0x09 'I' 
  {74,   184,  10,  18,  12,    1,  -17 },   // 0x0A 'J' 
  {75,   207,  10,  18,  12,    1,  -17 },   // 0x0B 'K' 
  {76,   230,  10,  18,  12,    1,  -17 },   // 0x0C 'L' 
  {77,   253,  10,  18,  12,    1,  -17 },   // 0x0D 'M' 
  {78,   276,  10,  18,  12,    1,  -17 },   // 0x0E 'N' 
  {79,   299,  10,  18,  12,    1,  -17 },   // 0x0F 'O' 
  {80,   322,  10,  18,  12,    1,  -17 },   // 0x10 'P' 
  {81,   345,  11,  18,  12,    1,  -17 },   // 0x11 'Q' 
  {82,   370,  10,  18,  12,    1,  -17 },   // 0x12 'R' 
  {83,   393,  10,  18,  12,    1,  -17 },   // 0x13 'S' 
  {84,   416,  10,  18,  12,    1,  -17 },   // 0x14 'T' 
  {85,   439,  10,  18,  12,    1,  -17 },   // 0x15 'U' 
  {86,   462,  10,  18,  12,    1,  -17 },   // 0x16 'V' 
  {87,   485,  10,  18,  12,    1,  -17 },   // 0x17 'W' 
  {88,   508,  11,  18,  12,    1,  -17 },   // 0x18 'X' 
  {89,   533,  10,  18,  12,    1,  -17 },   // 0x19 'Y' 
  {90,   556,  10,  18,  12,    1,  -17 },   // 0x1A 'Z' 
  {97,   579,  10,  18,  12,    1,  -17 },   // 0x1B 'a' 
  {98,   602,  10,  18,  12,    1,  -17 },   // 0x1C 'b' 
  {99,   625,   9,  18,  12,    1,  -17 },   // 0x1D 'c' 
  {100,   646,  10,  18,  12,    1,  -17 },   // 0x1E 'd' 
  {101,   669,   9,  18,  12,    1,  -17 },   // 0x1F 'e' 
  {102,   690,   9,  18,  12,    1,  -17 },   // 0x20 'f' 
  {103,   711,  10,  18,  12,    1,  -17 },   // 0x21 'g' 
  {104,   734,  10,  18,  12,    1,  -17 },   // 0x22 'h' 
  {105,   757,   2,  18,  12,    5,  -17 },   // 0x23 'i' 
  {106,   762,  10,  18,  12,    1,  -17 },   // 0x24 'j' 
  {107,   785,  10,  18,  12,    1,  -17 },   // 0x25 'k' 
  {108,   808,  10,  18,  12,    1,  -17 },   // 0x26 'l' 
  {109,   831,  10,  18,  12,    1,  -17 },   // 0x27 'm' 
  {110,   854,  10,  18,  12,    1,  -17 },   // 0x28 'n' 
  {111,   877,  10,  18,  12,    1,  -17 },   // 0x29 'o' 
  {112,   900,  10,  18,  12,    1,  -17 },   // 0x2A 'p' 
  {113,   923,  11,  18,  12,    1,  -17 },   // 0x2B 'q' 
  {114,   948,  10,  18,  12,    1,  -17 },   // 0x2C 'r' 
  {115,   971,  10,  18,  12,    1,  -17 },   // 0x2D 's' 
  {116,   994,  10,  18,  12,    1,  -17 },   // 0x2E 't' 
  {117,  1017,  10,  18,  12,    1,  -17 },   // 0x2F 'u' 
  {118,  1040,  10,  18,  12,    1,  -17 },   // 0x30 'v' 
  {119,  1063,  10,  18,  12,    1,  -17 },   // 0x31 'w' 
  {120,  1086,  11,  18,  12,    1,  -17 },   // 0x32 'x' 
  {121,  1111,  10,  18,  12,    1,  -17 },   // 0x33 'y' 
  {122,  1134,  10,  18,  12,    1,  -17 },   // 0x34 'z' 
  {48,  1157,  10,  18,  12,    1,  -17 },   // 0x35 '0' 
  {49,  1180,   2,  18,  12,    9,  -17 },   // 0x36 '1' 
  {50,  1185,  10,  18,  12,    1,  -17 },   // 0x37 '2' 
  {51,  1208,  10,  18,  12,    1,  -17 },   // 0x38 '3' 
  {52,  1231,  10,  18,  12,    1,  -17 },   // 0x39 '4' 
  {53,  1254,  10,  18,  12,    1,  -17 },   // 0x3A '5' 
  {54,  1277,  10,  18,  12,    1,  -17 },   // 0x3B '6' 
  {55,  1300,  10,  18,  12,    1,  -17 },   // 0x3C '7' 
  {56,  1323,  10,  18,  12,    1,  -17 },   // 0x3D '8' 
  {57,  1346,  10,  18,  12,    1,  -17 },   // 0x3E '9' 
  {45,  1369,   8,   2,  12,    2,   -9 },   // 0x3F '-' 
  {37,  1371,  12,  18,  12,    0,  -17 },   // 0x40 '%' 
  {46,  1398,   2,   2,  12,    5,   -1 },   // 0x41 '.' 
  {44,  1399,   2,   5,  12,    5,   -1 },   // 0x42 ',' 
  {33,  1401,   2,  18,  12,    5,  -17 },   // 0x43 '!' 
  {58,  1406,   2,  10,  12,    5,  -13 },   // 0x44 ':' 
  {91,  1409,   5,  18,  12,    1,  -17 },   // 0x45 '[' 
  {93,  1421,   5,  18,  12,    6,  -17 },   // 0x46 ']' 
  {40,  1433,   6,  18,  12,    1,  -17 },   // 0x47 '(' 
  {41,  1447,   6,  18,  12,    5,  -17 },   // 0x48 ')' 
  {47,  1461,  10,  18,  12,    1,  -17 }   // 0x49 '/' 
};

const gfxfont_t HotStuff14 PROGMEM = 
{
  (uint8_t  *)HotStuff14Bitmaps, //< Glyph bitmaps, concatenated 
  (gfxglyph_t *)HotStuff14Glyphs, //< Glyph array
  74,// total glyphs in the string
  18,  // newline distance (y axis)
     0,  // minimum X - left most
    -3,  // minimum Y - bottom most (descenders can drive this negative)
    12,  // maximum X - right most
    18}; // maximum Y - top most
// Approx. 2016 bytes -  but your mileage may vary.

#endif