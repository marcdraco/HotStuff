
#ifndef __FIXEDFONTSOURCECODEPROBOLDTTF12
#define __FIXEDFONTSOURCECODEPROBOLDTTF12
const uint8_t HotStuff12Bitmaps[] PROGMEM = {
  0x00, 0x07, 0x80, 0x1F, 0x00, 0xFC, 0x03, 0xF0, 0x0E, 0xE0, 0x73, 0x81,
  0xCE, 0x07, 0x3C, 0x3C, 0x70, 0xFF, 0xC3, 0xFF, 0x8F, 0xFE, 0x78, 0x39,
  0xC0, 0xE7, 0x03, 0xFC, 0x0F, 0xFF, 0x1F, 0xFB, 0xFF, 0x78, 0xFF, 0x1F,
  0xE3, 0xBF, 0xE7, 0xFC, 0xFF, 0xDE, 0x3F, 0xC3, 0xF8, 0x7F, 0x1F, 0xFF,
  0xFF, 0xF7, 0xF8, 0x07, 0xC0, 0xFF, 0x8F, 0xFC, 0xF8, 0x47, 0x80, 0x38,
  0x03, 0xC0, 0x1E, 0x00, 0xF0, 0x07, 0x80, 0x1C, 0x00, 0xF0, 0x07, 0xC3,
  0x1F, 0xF8, 0x7F, 0xE0, 0xF8, 0xFE, 0x1F, 0xF3, 0xFF, 0x71, 0xEE, 0x1F,
  0xC3, 0xF8, 0x3F, 0x07, 0xE0, 0xFC, 0x1F, 0x87, 0xF0, 0xFE, 0x3D, 0xFF,
  0xBF, 0xE7, 0xF0, 0xFF, 0xFF, 0xFF, 0xFF, 0xF8, 0x0F, 0x01, 0xE0, 0x3F,
  0xF7, 0xFE, 0xFF, 0xDE, 0x03, 0xC0, 0x78, 0x0F, 0x01, 0xFF, 0xFF, 0xFF,
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x80, 0xE0, 0x38, 0x0E, 0x03, 0xFE, 0xFF,
  0xBF, 0xEE, 0x03, 0x80, 0xE0, 0x38, 0x0E, 0x03, 0x80, 0x07, 0xC1, 0xFE,
  0x3F, 0xF7, 0xC4, 0x78, 0x0F, 0x00, 0xF0, 0x0F, 0x1F, 0xF1, 0xFF, 0x1F,
  0xF0, 0x77, 0x87, 0x7C, 0x73, 0xFF, 0x1F, 0xF0, 0xFC, 0xE1, 0xFC, 0x3F,
  0x87, 0xF0, 0xFE, 0x1F, 0xC3, 0xFF, 0xFF, 0xFF, 0xFF, 0xFC, 0x3F, 0x87,
  0xF0, 0xFE, 0x1F, 0xC3, 0xF8, 0x7F, 0x0F, 0xFF, 0xFF, 0xFF, 0xFF, 0x8F,
  0x01, 0xE0, 0x3C, 0x07, 0x80, 0xF0, 0x1E, 0x03, 0xC0, 0x78, 0x0F, 0x01,
  0xE1, 0xFF, 0xFF, 0xFF, 0xFF, 0x3F, 0xE7, 0xFC, 0xFF, 0x80, 0x70, 0x0E,
  0x01, 0xC0, 0x38, 0x07, 0x00, 0xE0, 0x1C, 0x03, 0x90, 0x77, 0x1F, 0xFF,
  0xDF, 0xF0, 0xF8, 0xE0, 0xFE, 0x1E, 0xE3, 0xCE, 0x78, 0xE7, 0x8E, 0xF0,
  0xFE, 0x0F, 0xF0, 0xFF, 0x0F, 0xF8, 0xF3, 0x8E, 0x3C, 0xE1, 0xCE, 0x1E,
  0xE0, 0xEE, 0x0F, 0xE0, 0x38, 0x0E, 0x03, 0x80, 0xE0, 0x38, 0x0E, 0x03,
  0x80, 0xE0, 0x38, 0x0E, 0x03, 0x80, 0xE0, 0x3F, 0xFF, 0xFF, 0xFF, 0xE1,
  0xFE, 0x3F, 0xC7, 0xF9, 0xFF, 0x3F, 0xB7, 0xF6, 0xBE, 0xF7, 0xCE, 0xF9,
  0x9F, 0x33, 0xE0, 0x7C, 0x0F, 0x81, 0xF0, 0x3E, 0x07, 0xE1, 0xFE, 0x3F,
  0xC7, 0xFC, 0xFD, 0x9F, 0xF3, 0xFF, 0x7F, 0x6F, 0xEE, 0xFC, 0xDF, 0x9B,
  0xF3, 0xFE, 0x3F, 0xC7, 0xF8, 0x7F, 0x0F, 0x0F, 0x83, 0xFC, 0x7F, 0xE7,
  0x9F, 0xF0, 0xFF, 0x07, 0xF0, 0x7F, 0x07, 0xF0, 0x7F, 0x07, 0xF0, 0x7F,
  0x0F, 0x79, 0xF7, 0xFE, 0x3F, 0xC0, 0xF8, 0xFF, 0x8F, 0xFC, 0xFF, 0xEE,
  0x1E, 0xE0, 0xFE, 0x0F, 0xE0, 0xFE, 0x1E, 0xFF, 0xEF, 0xFC, 0xFF, 0x0E,
  0x00, 0xE0, 0x0E, 0x00, 0xE0, 0x0E, 0x00, 0x0F, 0x81, 0xFE, 0x1F, 0xF8,
  0xF3, 0xCF, 0x0F, 0x78, 0x7B, 0xC1, 0xDC, 0x0E, 0xE0, 0x77, 0x83, 0xBC,
  0x3D, 0xE1, 0xE7, 0x9F, 0x3F, 0xF0, 0xFF, 0x03, 0xF0, 0x07, 0x80, 0x3F,
  0x80, 0xFE, 0x01, 0xF0, 0xFF, 0x0F, 0xFC, 0xFF, 0xEE, 0x1E, 0xE0, 0xEE,
  0x0E, 0xE1, 0xEF, 0xFE, 0xFF, 0xCF, 0xF8, 0xE7, 0x8E, 0x3C, 0xE3, 0xCE,
  0x1E, 0xE1, 0xEE, 0x0F, 0x0F, 0x83, 0xFE, 0x7F, 0xF7, 0x86, 0x70, 0x07,
  0x80, 0x7F, 0x03, 0xFC, 0x1F, 0xE0, 0x3F, 0x00, 0xF4, 0x07, 0x70, 0xFF,
  0xFF, 0x7F, 0xE1, 0xF8, 0xFF, 0xFF, 0xFF, 0xFF, 0xFE, 0x1E, 0x00, 0xF0,
  0x07, 0x80, 0x3C, 0x01, 0xE0, 0x0F, 0x00, 0x78, 0x03, 0xC0, 0x1E, 0x00,
  0xF0, 0x07, 0x80, 0x3C, 0x01, 0xE0, 0xE1, 0xFC, 0x3F, 0x87, 0xF0, 0xFE,
  0x1F, 0xC3, 0xF8, 0x7F, 0x0F, 0xE1, 0xFC, 0x3F, 0x87, 0xF0, 0xFF, 0x1D,
  0xFF, 0x9F, 0xE0, 0xF8, 0xF0, 0x3D, 0xC0, 0xF7, 0x83, 0x9E, 0x0E, 0x38,
  0x78, 0xE1, 0xC3, 0xC7, 0x07, 0x1C, 0x1C, 0xF0, 0x73, 0x81, 0xEE, 0x03,
  0xB8, 0x0F, 0xC0, 0x3F, 0x00, 0x7C, 0x01, 0xF0, 0xF0, 0x1F, 0xC0, 0x7F,
  0x01, 0xDC, 0x07, 0x70, 0x1D, 0xCE, 0x77, 0x39, 0xDC, 0xE6, 0x77, 0xB9,
  0xDF, 0xE7, 0x6F, 0x8D, 0xBE, 0x3C, 0xF8, 0xF3, 0xE3, 0xCF, 0x8F, 0x1C,
  0x78, 0x3C, 0xE1, 0xE3, 0xC7, 0x07, 0x3C, 0x1E, 0xE0, 0x3F, 0x80, 0xFC,
  0x01, 0xF0, 0x07, 0xC0, 0x3F, 0x01, 0xFE, 0x07, 0x38, 0x3C, 0xF0, 0xE1,
  0xE7, 0x87, 0xBC, 0x0F, 0xF0, 0x3D, 0xE0, 0xE3, 0x87, 0x8F, 0x1C, 0x1C,
  0xF0, 0x73, 0x81, 0xEE, 0x03, 0xF0, 0x0F, 0xC0, 0x1F, 0x00, 0x78, 0x01,
  0xE0, 0x07, 0x80, 0x1E, 0x00, 0x78, 0x01, 0xE0, 0x7F, 0xF7, 0xFF, 0x7F,
  0xF0, 0x1E, 0x01, 0xC0, 0x3C, 0x07, 0x80, 0x70, 0x0F, 0x01, 0xE0, 0x1C,
  0x03, 0xC0, 0x78, 0x07, 0xFF, 0xFF, 0xFF, 0xFF, 0x1F, 0x87, 0xFE, 0x7F,
  0xE2, 0x0F, 0x07, 0xF3, 0xFF, 0x7F, 0xF7, 0x8F, 0xF1, 0xF7, 0xFF, 0x7F,
  0xF3, 0xE7, 0xE0, 0x1C, 0x03, 0x80, 0x70, 0x0E, 0x01, 0xDF, 0x3F, 0xF7,
  0xFF, 0xF1, 0xFC, 0x3F, 0x83, 0xF0, 0x7E, 0x1F, 0xE3, 0xFF, 0xF7, 0xFE,
  0xEF, 0x00, 0x0F, 0x87, 0xFD, 0xFF, 0x7C, 0x2F, 0x01, 0xC0, 0x38, 0x07,
  0x80, 0xF8, 0x4F, 0xFC, 0xFF, 0x8F, 0xC0, 0x00, 0xF0, 0x0F, 0x00, 0xF0,
  0x0F, 0x00, 0xF1, 0xEF, 0x3F, 0xF7, 0xFF, 0x79, 0xFF, 0x0F, 0xF0, 0xFF,
  0x0F, 0xF0, 0xFF, 0x9F, 0x7F, 0xF3, 0xFF, 0x1E, 0x70, 0x0F, 0x83, 0xFE,
  0x7F, 0xE7, 0x07, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x78, 0x27, 0xFE,
  0x3F, 0xF0, 0xFC, 0x03, 0xE0, 0xFF, 0x0F, 0xF1, 0xE0, 0x1E, 0x0F, 0xFE,
  0xFF, 0xEF, 0xFE, 0x1E, 0x01, 0xE0, 0x1E, 0x01, 0xE0, 0x1E, 0x01, 0xE0,
  0x1E, 0x01, 0xE0, 0x1E, 0x00, 0x1F, 0xF9, 0xFF, 0xDF, 0xFE, 0xE1, 0xC7,
  0xFE, 0x1F, 0xE0, 0xFE, 0x0E, 0x00, 0x70, 0x03, 0xFF, 0x0F, 0xFC, 0xFF,
  0xFE, 0x07, 0xFF, 0xF9, 0xFF, 0x87, 0xF0, 0xE0, 0x1C, 0x03, 0x80, 0x70,
  0x0E, 0x01, 0xCF, 0x3F, 0xF7, 0xFF, 0xF1, 0xFC, 0x3F, 0x87, 0xF0, 0xFE,
  0x1F, 0xC3, 0xF8, 0x7F, 0x0F, 0xE1, 0xE0, 0x07, 0x07, 0xC3, 0xE0, 0xE0,
  0x00, 0x03, 0xFD, 0xFE, 0xFF, 0x03, 0x81, 0xC0, 0xE0, 0x70, 0x38, 0x1C,
  0x0E, 0x07, 0x03, 0x80, 0x03, 0x81, 0xF0, 0x7C, 0x0E, 0x00, 0x00, 0x07,
  0xF9, 0xFE, 0x7F, 0x80, 0xE0, 0x38, 0x0E, 0x03, 0x80, 0xE0, 0x38, 0x0E,
  0x03, 0x80, 0xE8, 0x79, 0xFE, 0xFF, 0x1F, 0x00, 0xE0, 0x0E, 0x00, 0xE0,
  0x0E, 0x00, 0xE0, 0x0E, 0x1F, 0xE3, 0xCE, 0x78, 0xE7, 0x8E, 0xF0, 0xFF,
  0x0F, 0xF0, 0xFF, 0x8F, 0x3C, 0xE1, 0xCE, 0x1E, 0xE0, 0xF0, 0xFE, 0x0F,
  0xE0, 0xFE, 0x00, 0xE0, 0x0E, 0x00, 0xE0, 0x0E, 0x00, 0xE0, 0x0E, 0x00,
  0xE0, 0x0E, 0x00, 0xE0, 0x0E, 0x00, 0xF0, 0x0F, 0xF0, 0x7F, 0x03, 0xE0,
  0xEE, 0xF7, 0xF7, 0xBF, 0xFF, 0xEE, 0xFE, 0x77, 0xF3, 0xBF, 0x9D, 0xFC,
  0xEF, 0xE7, 0x7F, 0x3B, 0xF9, 0xDF, 0xCE, 0xF0, 0xE7, 0x9F, 0xFB, 0xFF,
  0xF8, 0xFE, 0x1F, 0xC3, 0xF8, 0x7F, 0x0F, 0xE1, 0xFC, 0x3F, 0x87, 0xF0,
  0xF0, 0x0F, 0x83, 0xFC, 0x7F, 0xE7, 0x8F, 0xF0, 0xFF, 0x07, 0xF0, 0x7F,
  0x0F, 0x78, 0xF7, 0xFE, 0x3F, 0xC0, 0xF8, 0xEF, 0x9F, 0xFB, 0xFF, 0xF8,
  0xFE, 0x1F, 0xC1, 0xF8, 0x3F, 0x0F, 0xF1, 0xFF, 0xFB, 0xFF, 0x77, 0x8E,
  0x01, 0xC0, 0x38, 0x07, 0x00, 0x1E, 0x73, 0xFF, 0x7F, 0xF7, 0x9F, 0xF0,
  0xFF, 0x0F, 0xF0, 0xFF, 0x0F, 0xF9, 0xF7, 0xFF, 0x3F, 0xF1, 0xEF, 0x00,
  0xF0, 0x0F, 0x00, 0xF0, 0x0F, 0xE3, 0xFB, 0xFF, 0xFF, 0xE0, 0xF0, 0x38,
  0x0E, 0x03, 0x80, 0xE0, 0x38, 0x0E, 0x03, 0x80, 0x0F, 0x83, 0xFE, 0x7F,
  0xF7, 0x86, 0x7C, 0x03, 0xF8, 0x0F, 0xE0, 0x1F, 0x70, 0xF7, 0xFF, 0xFF,
  0xE1, 0xF8, 0x0E, 0x00, 0xE0, 0x1E, 0x0F, 0xFF, 0xFF, 0xFF, 0xFF, 0x1E,
  0x01, 0xE0, 0x1E, 0x01, 0xE0, 0x1E, 0x01, 0xE0, 0x0F, 0xF0, 0xFF, 0x03,
  0xE0, 0xF0, 0xFF, 0x0F, 0xF0, 0xFF, 0x0F, 0xF0, 0xFF, 0x0F, 0xF0, 0xFF,
  0x0F, 0x71, 0xF7, 0xFF, 0x7F, 0x73, 0xE7, 0xE0, 0x7F, 0x83, 0x9C, 0x3C,
  0xF1, 0xC7, 0x8E, 0x1C, 0xF0, 0xE7, 0x03, 0xB8, 0x1F, 0xC0, 0xFC, 0x03,
  0xE0, 0x1E, 0x00, 0xF3, 0x9F, 0xCE, 0x7F, 0x39, 0xDD, 0xE7, 0x77, 0x9D,
  0xDE, 0xE7, 0x7F, 0x9D, 0xBE, 0x7E, 0xF8, 0xF3, 0xE3, 0xCF, 0x8F, 0x3E,
  0xF0, 0xF7, 0x8E, 0x39, 0xE3, 0xDC, 0x1F, 0x80, 0xF8, 0x0F, 0x81, 0xF8,
  0x3F, 0xC3, 0x9E, 0x70, 0xEF, 0x0F, 0xE0, 0x7F, 0x83, 0x9C, 0x1C, 0xF1,
  0xC3, 0x8E, 0x1C, 0x60, 0x77, 0x03, 0xB8, 0x1D, 0x80, 0x7C, 0x03, 0xC0,
  0x0E, 0x00, 0xF0, 0x3F, 0x01, 0xF0, 0x0F, 0x00, 0xFF, 0xFF, 0xFF, 0xFF,
  0x03, 0xE0, 0x78, 0x1E, 0x07, 0x81, 0xE0, 0x78, 0x1F, 0xFF, 0xFF, 0xFF,
  0xF0, 0x0F, 0x83, 0xFC, 0x7F, 0xE7, 0x8E, 0x70, 0xFF, 0x67, 0xFF, 0x7E,
  0xF7, 0xF6, 0x7F, 0x07, 0x70, 0xF7, 0x8E, 0x3F, 0xE3, 0xFC, 0x0F, 0x80,
  0x3E, 0x0F, 0xC1, 0xF8, 0x3F, 0x00, 0xE0, 0x1C, 0x03, 0x80, 0x70, 0x0E,
  0x01, 0xC0, 0x38, 0x07, 0x0F, 0xFF, 0xFF, 0xFF, 0xF8, 0x1F, 0x07, 0xFC,
  0xFF, 0xE6, 0x1E, 0x40, 0xE0, 0x0E, 0x01, 0xE0, 0x3C, 0x03, 0x80, 0x70,
  0x1E, 0x03, 0xC0, 0x7F, 0xFF, 0xFF, 0xFF, 0xF0, 0x1F, 0x87, 0xFC, 0xFF,
  0xE3, 0x1E, 0x00, 0xE0, 0x1E, 0x0F, 0xC0, 0xF8, 0x0F, 0xE0, 0x1E, 0x40,
  0xF6, 0x0F, 0xFF, 0xE7, 0xFC, 0x1F, 0x80, 0x03, 0xC0, 0x7C, 0x0F, 0xC0,
  0xFC, 0x1D, 0xC3, 0xDC, 0x39, 0xC7, 0x1C, 0xF1, 0xCF, 0xFF, 0xFF, 0xFF,
  0xFF, 0x01, 0xC0, 0x1C, 0x01, 0xC0, 0x3F, 0xE3, 0xFE, 0x3F, 0xE3, 0x80,
  0x78, 0x07, 0xF8, 0x7F, 0xE7, 0xFE, 0x21, 0xF0, 0x0F, 0x40, 0xF6, 0x1E,
  0xFF, 0xE7, 0xFC, 0x1F, 0x00, 0x0F, 0xC1, 0xFE, 0x3F, 0xF7, 0x86, 0x70,
  0x07, 0x3C, 0xFF, 0xEF, 0xFF, 0xF8, 0xF7, 0x07, 0x70, 0x77, 0x8F, 0x3F,
  0xE1, 0xFE, 0x0F, 0x80, 0xFF, 0xFF, 0xFF, 0xFF, 0xF0, 0x0E, 0x01, 0xC0,
  0x38, 0x03, 0x80, 0x70, 0x07, 0x00, 0xF0, 0x0F, 0x00, 0xE0, 0x0E, 0x00,
  0xE0, 0x0E, 0x00, 0x0F, 0x83, 0xFC, 0x7F, 0xE7, 0x8E, 0x70, 0xE3, 0xCE,
  0x1F, 0xC3, 0xFC, 0x73, 0xE7, 0x0F, 0xF0, 0x77, 0x0F, 0x7F, 0xF3, 0xFE,
  0x1F, 0x80, 0x1F, 0x03, 0xFC, 0x7F, 0xE7, 0x0E, 0xF0, 0xFF, 0x0F, 0xF1,
  0xF7, 0xFF, 0x7F, 0x71, 0xEF, 0x00, 0xE2, 0x1E, 0x7F, 0xCF, 0xF8, 0x1F,
  0x00, 0xFF, 0xFF, 0xFF, 0x3C, 0x01, 0xF8, 0x26, 0x71, 0xD9, 0xCE, 0x67,
  0x71, 0x9D, 0x87, 0xEC, 0x0F, 0x00, 0x00, 0xF0, 0x27, 0xE1, 0xD9, 0xCE,
  0x67, 0x71, 0x9F, 0x86, 0x72, 0x1F, 0x80, 0x3C, 0x39, 0xFF, 0xFF, 0x7C,
  0xE0, 0x39, 0xF7, 0xDF, 0x3C, 0x71, 0xCE, 0xF9, 0x80, 0xF3, 0x9C, 0xE7,
  0x39, 0xCC, 0x60, 0x00, 0xEF, 0x7F, 0xCE, 0x39, 0xFF, 0xFF, 0x7C, 0xE0,
  0x00, 0x39, 0xFF, 0xFF, 0x7C, 0xE0, 0xFF, 0xFF, 0x87, 0x0E, 0x1C, 0x38,
  0x70, 0xE1, 0xC3, 0x87, 0x0E, 0x1C, 0x38, 0x70, 0xE1, 0xC3, 0x87, 0xFF,
  0xE0, 0xFF, 0xFC, 0x38, 0x70, 0xE1, 0xC3, 0x87, 0x0E, 0x1C, 0x38, 0x70,
  0xE1, 0xC3, 0x87, 0x0E, 0x1C, 0x3F, 0xFF, 0xE0, 0x04, 0x1C, 0x71, 0xE3,
  0x8E, 0x1C, 0x38, 0x71, 0xC3, 0x87, 0x0E, 0x0C, 0x1C, 0x38, 0x70, 0x70,
  0xF0, 0xE0, 0xE0, 0x80, 0x61, 0xC1, 0xC1, 0xC3, 0xC3, 0x87, 0x07, 0x0E,
  0x1C, 0x38, 0x70, 0xE1, 0xC3, 0x8E, 0x1C, 0x78, 0xE3, 0x8E, 0x0C, 0x00,
  0x01, 0xE0, 0x38, 0x07, 0x01, 0xC0, 0x38, 0x07, 0x01, 0xC0, 0x38, 0x0E,
  0x01, 0xC0, 0x38, 0x0E, 0x01, 0xC0, 0x38, 0x0E, 0x01, 0xC0, 0x70, 0x0E,
  0x01, 0xC0, 0x70, 0x0E, 0x00 };

// Glyph, Offset to bitmap, Width, Height, xAdvance, xOffset, yOffset

const gfxglyph_t HotStuff12Glyphs[] PROGMEM = {
  {32,     0,   1,   1,  14,    0,    0 },   // 0x00 ' ' 
  {65,     1,  14,  16,  14,    0,  -15 },   // 0x01 'A' 
  {66,    29,  11,  16,  14,    2,  -15 },   // 0x02 'B' 
  {67,    51,  13,  16,  14,    1,  -15 },   // 0x03 'C' 
  {68,    77,  11,  16,  14,    2,  -15 },   // 0x04 'D' 
  {69,    99,  11,  16,  14,    2,  -15 },   // 0x05 'E' 
  {70,   121,  10,  16,  14,    3,  -15 },   // 0x06 'F' 
  {71,   141,  12,  16,  14,    1,  -15 },   // 0x07 'G' 
  {72,   165,  11,  16,  14,    2,  -15 },   // 0x08 'H' 
  {73,   187,  11,  16,  14,    2,  -15 },   // 0x09 'I' 
  {74,   209,  11,  16,  14,    1,  -15 },   // 0x0A 'J' 
  {75,   231,  12,  16,  14,    2,  -15 },   // 0x0B 'K' 
  {76,   255,  10,  16,  14,    3,  -15 },   // 0x0C 'L' 
  {77,   275,  11,  16,  14,    2,  -15 },   // 0x0D 'M' 
  {78,   297,  11,  16,  14,    2,  -15 },   // 0x0E 'N' 
  {79,   319,  12,  16,  14,    1,  -15 },   // 0x0F 'O' 
  {80,   343,  12,  16,  14,    2,  -15 },   // 0x10 'P' 
  {81,   367,  13,  20,  14,    1,  -15 },   // 0x11 'Q' 
  {82,   400,  12,  16,  14,    2,  -15 },   // 0x12 'R' 
  {83,   424,  12,  16,  14,    1,  -15 },   // 0x13 'S' 
  {84,   448,  13,  16,  14,    1,  -15 },   // 0x14 'T' 
  {85,   474,  11,  16,  14,    2,  -15 },   // 0x15 'U' 
  {86,   496,  14,  16,  14,    0,  -15 },   // 0x16 'V' 
  {87,   524,  14,  16,  14,    0,  -15 },   // 0x17 'W' 
  {88,   552,  14,  16,  14,    0,  -15 },   // 0x18 'X' 
  {89,   580,  14,  16,  14,    0,  -15 },   // 0x19 'Y' 
  {90,   608,  12,  16,  14,    1,  -15 },   // 0x1A 'Z' 
  {97,   632,  12,  12,  14,    1,  -11 },   // 0x1B 'a' 
  {98,   650,  11,  17,  14,    2,  -16 },   // 0x1C 'b' 
  {99,   674,  11,  12,  14,    2,  -11 },   // 0x1D 'c' 
  {100,   691,  12,  17,  14,    1,  -16 },   // 0x1E 'd' 
  {101,   717,  12,  12,  14,    1,  -11 },   // 0x1F 'e' 
  {102,   735,  12,  17,  14,    2,  -16 },   // 0x20 'f' 
  {103,   761,  13,  16,  14,    1,  -11 },   // 0x21 'g' 
  {104,   787,  11,  17,  14,    2,  -16 },   // 0x22 'h' 
  {105,   811,   9,  18,  14,    2,  -17 },   // 0x23 'i' 
  {106,   832,  10,  22,  14,    1,  -17 },   // 0x24 'j' 
  {107,   860,  12,  17,  14,    2,  -16 },   // 0x25 'k' 
  {108,   886,  12,  17,  14,    1,  -16 },   // 0x26 'l' 
  {109,   912,  13,  12,  14,    1,  -11 },   // 0x27 'm' 
  {110,   932,  11,  12,  14,    2,  -11 },   // 0x28 'n' 
  {111,   949,  12,  12,  14,    1,  -11 },   // 0x29 'o' 
  {112,   967,  11,  16,  14,    2,  -11 },   // 0x2A 'p' 
  {113,   989,  12,  16,  14,    1,  -11 },   // 0x2B 'q' 
  {114,  1013,  10,  12,  14,    3,  -11 },   // 0x2C 'r' 
  {115,  1028,  12,  12,  14,    1,  -11 },   // 0x2D 's' 
  {116,  1046,  12,  15,  14,    1,  -14 },   // 0x2E 't' 
  {117,  1069,  12,  12,  14,    1,  -11 },   // 0x2F 'u' 
  {118,  1087,  13,  12,  14,    1,  -11 },   // 0x30 'v' 
  {119,  1107,  14,  12,  14,    0,  -11 },   // 0x31 'w' 
  {120,  1128,  12,  12,  14,    1,  -11 },   // 0x32 'x' 
  {121,  1146,  13,  16,  14,    1,  -11 },   // 0x33 'y' 
  {122,  1172,  11,  12,  14,    2,  -11 },   // 0x34 'z' 
  {48,  1189,  12,  15,  14,    1,  -14 },   // 0x35 '0' 
  {49,  1212,  11,  15,  14,    2,  -14 },   // 0x36 '1' 
  {50,  1233,  12,  15,  14,    1,  -14 },   // 0x37 '2' 
  {51,  1256,  12,  15,  14,    1,  -14 },   // 0x38 '3' 
  {52,  1279,  12,  15,  14,    1,  -14 },   // 0x39 '4' 
  {53,  1302,  12,  15,  14,    1,  -14 },   // 0x3A '5' 
  {54,  1325,  12,  15,  14,    1,  -14 },   // 0x3B '6' 
  {55,  1348,  12,  15,  14,    1,  -14 },   // 0x3C '7' 
  {56,  1371,  12,  15,  14,    1,  -14 },   // 0x3D '8' 
  {57,  1394,  12,  15,  14,    1,  -14 },   // 0x3E '9' 
  {45,  1417,   8,   3,  14,    3,   -8 },   // 0x3F '-' 
  {37,  1420,  14,  16,  14,    0,  -15 },   // 0x40 '%' 
  {46,  1448,   6,   6,  14,    4,   -5 },   // 0x41 '.' 
  {44,  1453,   6,  10,  14,    4,   -4 },   // 0x42 ',' 
  {33,  1461,   5,  16,  14,    5,  -15 },   // 0x43 '!' 
  {58,  1471,   6,  14,  14,    4,  -13 },   // 0x44 ':' 
  {91,  1482,   7,  21,  14,    5,  -16 },   // 0x45 '[' 
  {93,  1501,   7,  21,  14,    3,  -16 },   // 0x46 ']' 
  {40,  1520,   7,  22,  14,    4,  -17 },   // 0x47 '(' 
  {41,  1540,   7,  22,  14,    3,  -17 },   // 0x48 ')' 
  {47,  1560,  11,  21,  14,    2,  -16 }   // 0x49 '/' 
};

const gfxfont_t HotStuff12 PROGMEM = 
{
  (uint8_t  *)HotStuff12Bitmaps, //< Glyph bitmaps, concatenated 
  (gfxglyph_t *)HotStuff12Glyphs, //< Glyph array
  74,// total glyphs in the string
  22,  // newline distance (y axis)
     0,  // minimum X - left most
    -5,  // minimum Y - bottom most (descenders can drive this negative)
    14,  // maximum X - right most
    18}; // maximum Y - top most
// Approx. 2121 bytes -  but your mileage may vary.

#endif