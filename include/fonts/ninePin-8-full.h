
#ifndef __FIXEDFONTNINEPINTTF8
#define __FIXEDFONTNINEPINTTF8
const uint8_t HotStuff8Bitmaps[] PROGMEM = {
  0x00, 0x0C, 0x03, 0x03, 0xF0, 0xFC, 0xC0, 0xF0, 0x3F, 0xFF, 0xFF, 0xC0,
  0xF0, 0x3C, 0x0F, 0x03, 0xC0, 0xF0, 0x30, 0xFF, 0x3F, 0xCC, 0x0F, 0x03,
  0xC0, 0xF0, 0x3F, 0xF3, 0xFC, 0xC0, 0xF0, 0x3C, 0x0F, 0x03, 0xFF, 0x3F,
  0xC0, 0x3F, 0x0F, 0xCC, 0x0F, 0x03, 0xC0, 0x30, 0x0C, 0x03, 0x00, 0xC0,
  0x30, 0x0C, 0x0F, 0x03, 0x3F, 0x0F, 0xC0, 0xFF, 0x3F, 0xCC, 0x0F, 0x03,
  0xC0, 0xF0, 0x3C, 0x0F, 0x03, 0xC0, 0xF0, 0x3C, 0x0F, 0x03, 0xFF, 0x3F,
  0xC0, 0xFF, 0xFF, 0xFC, 0x03, 0x00, 0xC0, 0x30, 0x0F, 0xF3, 0xFC, 0xC0,
  0x30, 0x0C, 0x03, 0x00, 0xFF, 0xFF, 0xF0, 0xFF, 0xFF, 0xFC, 0x03, 0x00,
  0xC0, 0x30, 0x0F, 0xF3, 0xFC, 0xC0, 0x30, 0x0C, 0x03, 0x00, 0xC0, 0x30,
  0x00, 0x3F, 0x0F, 0xCC, 0x0F, 0x03, 0xC0, 0x30, 0x0C, 0xFF, 0x3F, 0xC0,
  0xF0, 0x3C, 0x0F, 0x03, 0x3F, 0x0F, 0xC0, 0xC0, 0xF0, 0x3C, 0x0F, 0x03,
  0xC0, 0xF0, 0x3F, 0xFF, 0xFF, 0xC0, 0xF0, 0x3C, 0x0F, 0x03, 0xC0, 0xF0,
  0x30, 0xFF, 0xF3, 0x0C, 0x30, 0xC3, 0x0C, 0x30, 0xC3, 0x0C, 0xFF, 0xF0,
  0x0F, 0xC3, 0xF0, 0x30, 0x0C, 0x03, 0x00, 0xC0, 0x30, 0x0C, 0xC3, 0x30,
  0xCC, 0x33, 0x0C, 0x3C, 0x0F, 0x00, 0xC0, 0xF0, 0x3C, 0x33, 0x0C, 0xCC,
  0x33, 0x0F, 0x03, 0xC0, 0xCC, 0x33, 0x0C, 0x33, 0x0C, 0xC0, 0xF0, 0x30,
  0xC0, 0x30, 0x0C, 0x03, 0x00, 0xC0, 0x30, 0x0C, 0x03, 0x00, 0xC0, 0x30,
  0x0C, 0x03, 0x00, 0xFF, 0xFF, 0xF0, 0xC0, 0xF0, 0x3F, 0x3F, 0xCF, 0xCC,
  0xF3, 0x3C, 0x0F, 0x03, 0xC0, 0xF0, 0x3C, 0x0F, 0x03, 0xC0, 0xF0, 0x30,
  0xC0, 0xF0, 0x3F, 0x0F, 0xC3, 0xF0, 0xFC, 0x3C, 0xCF, 0x33, 0xC3, 0xF0,
  0xFC, 0x3F, 0x0F, 0xC0, 0xF0, 0x30, 0x3F, 0x0F, 0xCC, 0x0F, 0x03, 0xC0,
  0xF0, 0x3C, 0x0F, 0x03, 0xC0, 0xF0, 0x3C, 0x0F, 0x03, 0x3F, 0x0F, 0xC0,
  0xFF, 0x3F, 0xCC, 0x0F, 0x03, 0xC0, 0xF0, 0x3F, 0xF3, 0xFC, 0xC0, 0x30,
  0x0C, 0x03, 0x00, 0xC0, 0x30, 0x00, 0x3F, 0x0F, 0xCC, 0x0F, 0x03, 0xC0,
  0xF0, 0x3C, 0x0F, 0x03, 0xC0, 0xF0, 0x3C, 0x33, 0x0C, 0x3C, 0xCF, 0x30,
  0xFF, 0x3F, 0xCC, 0x0F, 0x03, 0xC0, 0xF0, 0x3F, 0xF3, 0xFC, 0xC0, 0xF0,
  0x3C, 0x0F, 0x03, 0xC0, 0xF0, 0x30, 0x3F, 0x0F, 0xCC, 0x0F, 0x03, 0xC0,
  0x30, 0x03, 0xF0, 0xFC, 0x00, 0xC0, 0x3C, 0x0F, 0x03, 0x3F, 0x0F, 0xC0,
  0xFF, 0xFF, 0xF0, 0xC0, 0x30, 0x0C, 0x03, 0x00, 0xC0, 0x30, 0x0C, 0x03,
  0x00, 0xC0, 0x30, 0x0C, 0x03, 0x00, 0xC0, 0xF0, 0x3C, 0x0F, 0x03, 0xC0,
  0xF0, 0x3C, 0x0F, 0x03, 0xC0, 0xF0, 0x3C, 0x0F, 0x03, 0x3F, 0x0F, 0xC0,
  0xC0, 0xF0, 0x3C, 0x0F, 0x03, 0xC0, 0xF0, 0x3C, 0x0F, 0x03, 0xC0, 0xF0,
  0x33, 0x30, 0xCC, 0x0C, 0x03, 0x00, 0xC0, 0xF0, 0x3C, 0x0F, 0x03, 0xC0,
  0xF0, 0x3C, 0xCF, 0x33, 0xF3, 0xFC, 0xFC, 0x0F, 0x03, 0xC0, 0xF0, 0x30,
  0xC0, 0xF0, 0x3C, 0x0F, 0x03, 0x33, 0x0C, 0xC0, 0xC0, 0x30, 0x33, 0x0C,
  0xCC, 0x0F, 0x03, 0xC0, 0xF0, 0x30, 0xC0, 0xF0, 0x3C, 0x0F, 0x03, 0x33,
  0x0C, 0xC0, 0xC0, 0x30, 0x0C, 0x03, 0x00, 0xC0, 0x30, 0x0C, 0x03, 0x00,
  0xFF, 0xFF, 0xF0, 0x0C, 0x03, 0x03, 0x00, 0xC0, 0xC0, 0x30, 0x30, 0x0C,
  0x0C, 0x03, 0x00, 0xFF, 0xFF, 0xF0, 0x3F, 0x0F, 0xCC, 0x0F, 0x03, 0xC0,
  0xF0, 0x3C, 0x3F, 0x0F, 0x3C, 0xCF, 0x30, 0xC0, 0x30, 0x0C, 0x03, 0x00,
  0xCF, 0x33, 0xCF, 0x0F, 0xC3, 0xC0, 0xF0, 0x3C, 0x0F, 0x03, 0x3F, 0x0F,
  0xC0, 0x3F, 0x0F, 0xCC, 0x0F, 0x03, 0xC0, 0x30, 0x0C, 0x0F, 0x03, 0x3F,
  0x0F, 0xC0, 0x00, 0xC0, 0x30, 0x0C, 0x03, 0x3C, 0xCF, 0x3C, 0x3F, 0x0F,
  0xC0, 0xF0, 0x3C, 0x0F, 0x03, 0x3F, 0x0F, 0xC0, 0x3F, 0x0F, 0xCC, 0x0F,
  0x03, 0xFF, 0xFF, 0xFC, 0x03, 0x00, 0x3F, 0x0F, 0xC0, 0x0F, 0x03, 0xC3,
  0x0C, 0xC3, 0x30, 0x0C, 0x0F, 0xC3, 0xF0, 0x30, 0x0C, 0x03, 0x00, 0xC0,
  0x30, 0x0C, 0x00, 0x3F, 0x0F, 0xCC, 0x0F, 0x03, 0xC0, 0xF0, 0x33, 0xFC,
  0xFF, 0x00, 0xC0, 0x33, 0xF0, 0xFC, 0xC0, 0x30, 0x0C, 0x03, 0x00, 0xCF,
  0x33, 0xCF, 0x0F, 0xC3, 0xC0, 0xF0, 0x3C, 0x0F, 0x03, 0xC0, 0xF0, 0x30,
  0xF0, 0xFF, 0xFF, 0xF0, 0x03, 0x03, 0x00, 0x00, 0x03, 0x03, 0x03, 0x03,
  0x03, 0x03, 0x03, 0x03, 0xC3, 0xC3, 0x3C, 0x3C, 0xC0, 0x30, 0x0C, 0x0F,
  0x03, 0xC3, 0x30, 0xCC, 0xC3, 0x30, 0xFC, 0x3F, 0x0C, 0x33, 0x0C, 0xC0,
  0xF0, 0x30, 0xF3, 0xC3, 0x0C, 0x30, 0xC3, 0x0C, 0x30, 0xC3, 0x0C, 0xFF,
  0xF0, 0xF3, 0x3C, 0xCC, 0xCF, 0x33, 0xC0, 0xF0, 0x3C, 0x0F, 0x03, 0xC0,
  0xF0, 0x30, 0xFF, 0x3F, 0xCC, 0x0F, 0x03, 0xC0, 0xF0, 0x3C, 0x0F, 0x03,
  0xC0, 0xF0, 0x30, 0x3F, 0x0F, 0xCC, 0x0F, 0x03, 0xC0, 0xF0, 0x3C, 0x0F,
  0x03, 0x3F, 0x0F, 0xC0, 0xFF, 0x3F, 0xCC, 0x0F, 0x03, 0xC0, 0xF0, 0x3F,
  0xF3, 0xFC, 0xC0, 0x30, 0x0C, 0x03, 0x00, 0x3F, 0xCF, 0xFC, 0x0F, 0x03,
  0xC0, 0xF0, 0x33, 0xFC, 0xFF, 0x00, 0xC0, 0x30, 0x0C, 0x03, 0xCF, 0x33,
  0xCF, 0x0F, 0xC3, 0xC0, 0x30, 0x0C, 0x03, 0x00, 0xC0, 0x30, 0x00, 0x3F,
  0x0F, 0xCC, 0x03, 0x00, 0x3F, 0x0F, 0xC0, 0x0C, 0x03, 0xFF, 0x3F, 0xC0,
  0x30, 0xC3, 0x0C, 0xFF, 0xF3, 0x0C, 0x30, 0xC3, 0x0C, 0x0C, 0x30, 0xC0,
  0xF0, 0x3C, 0x0F, 0x03, 0xC0, 0xF0, 0x3C, 0x3F, 0x0F, 0x3C, 0xCF, 0x30,
  0xC0, 0xF0, 0x3C, 0x0F, 0x03, 0xC0, 0xF0, 0x33, 0x30, 0xCC, 0x0C, 0x03,
  0x00, 0xC0, 0xF0, 0x3C, 0x0F, 0x03, 0xC0, 0xF0, 0x3C, 0xCF, 0x33, 0x33,
  0x0C, 0xC0, 0xC0, 0xF0, 0x3C, 0x0F, 0x03, 0x3F, 0x0F, 0xCC, 0x0F, 0x03,
  0xC0, 0xF0, 0x30, 0xC0, 0xF0, 0x3C, 0x0F, 0x03, 0x3F, 0x0F, 0xC0, 0x30,
  0x0C, 0x03, 0x00, 0xC0, 0xC0, 0x30, 0xFF, 0xFF, 0xF0, 0x0C, 0x03, 0x3F,
  0x0F, 0xCC, 0x03, 0x00, 0xFF, 0xFF, 0xF0, 0x3F, 0x0F, 0xCC, 0x0F, 0x03,
  0xC3, 0xF0, 0xFC, 0xCF, 0x33, 0xF0, 0xFC, 0x3C, 0x0F, 0x03, 0x3F, 0x0F,
  0xC0, 0x30, 0xCF, 0x3C, 0x30, 0xC3, 0x0C, 0x30, 0xC3, 0x0C, 0xFF, 0xF0,
  0x3F, 0x0F, 0xCC, 0x0F, 0x03, 0xC0, 0xF0, 0x30, 0x30, 0x0C, 0x0C, 0x03,
  0x03, 0x00, 0xC0, 0xFF, 0xFF, 0xF0, 0x3F, 0x0F, 0xCC, 0x0F, 0x03, 0x00,
  0xC0, 0x33, 0xF0, 0xFC, 0x00, 0xC0, 0x3C, 0x0F, 0x03, 0x3F, 0x0F, 0xC0,
  0xC0, 0xF0, 0x3C, 0x0F, 0x03, 0xC0, 0xF0, 0x3F, 0xFF, 0xFF, 0x00, 0xC0,
  0x30, 0x0C, 0x03, 0x00, 0xC0, 0x30, 0xFF, 0xFF, 0xFC, 0x03, 0x00, 0xC0,
  0x30, 0x0F, 0xF3, 0xFC, 0x00, 0xC0, 0x30, 0x0C, 0x03, 0xFF, 0x3F, 0xC0,
  0x3F, 0x0F, 0xCC, 0x0F, 0x03, 0xC0, 0x30, 0x0F, 0xF3, 0xFC, 0xC0, 0xF0,
  0x3C, 0x0F, 0x03, 0x3F, 0x0F, 0xC0, 0xFF, 0xFF, 0xF0, 0x0C, 0x03, 0x00,
  0xC0, 0x30, 0x30, 0x0C, 0x03, 0x00, 0xC0, 0xC0, 0x30, 0x0C, 0x03, 0x00,
  0x3F, 0x0F, 0xCC, 0x0F, 0x03, 0xC0, 0xF0, 0x33, 0xF0, 0xFC, 0xC0, 0xF0,
  0x3C, 0x0F, 0x03, 0x3F, 0x0F, 0xC0, 0x3F, 0x0F, 0xCC, 0x0F, 0x03, 0xC0,
  0xF0, 0x33, 0xFC, 0xFF, 0x00, 0xC0, 0x3C, 0x0F, 0x03, 0x3F, 0x0F, 0xC0,
  0xFF, 0xFF, 0x00, 0xC0, 0x3F, 0x0F, 0xC3, 0xF3, 0x3C, 0xC0, 0xC0, 0x30,
  0x33, 0xCC, 0xFC, 0x3F, 0x0F, 0xC0, 0x30, 0x00, 0xF0, 0xFF, 0x33, 0xCC,
  0xFF, 0xFF, 0xF0, 0xF0, 0xF0, 0x0F, 0xFF, 0xFC, 0x30, 0xC3, 0x0C, 0x30,
  0xC3, 0x0C, 0x30, 0xFF, 0xF0, 0xFF, 0xF0, 0xC3, 0x0C, 0x30, 0xC3, 0x0C,
  0x30, 0xC3, 0xFF, 0xF0, 0x0F, 0x0F, 0x30, 0x30, 0xC0, 0xC0, 0xC0, 0xC0,
  0xC0, 0xC0, 0x30, 0x30, 0x0F, 0x0F, 0xF0, 0xF0, 0x0C, 0x0C, 0x03, 0x03,
  0x03, 0x03, 0x03, 0x03, 0x0C, 0x0C, 0xF0, 0xF0 };

// Glyph, Offset to bitmap, Width, Height, xAdvance, xOffset, yOffset

const gfxglyph_t HotStuff8Glyphs[] PROGMEM = {
  {32,     0,   1,   1,  10,    0,    0 },   // 0x00 ' ' 
  {65,     1,  10,  14,  11,    0,  -13 },   // 0x01 'A' 
  {66,    19,  10,  14,  11,    0,  -13 },   // 0x02 'B' 
  {67,    37,  10,  14,  11,    0,  -13 },   // 0x03 'C' 
  {68,    55,  10,  14,  11,    0,  -13 },   // 0x04 'D' 
  {69,    73,  10,  14,  11,    0,  -13 },   // 0x05 'E' 
  {70,    91,  10,  14,  11,    0,  -13 },   // 0x06 'F' 
  {71,   109,  10,  14,  11,    0,  -13 },   // 0x07 'G' 
  {72,   127,  10,  14,  11,    0,  -13 },   // 0x08 'H' 
  {73,   145,   6,  14,  10,    2,  -13 },   // 0x09 'I' 
  {74,   156,  10,  14,  11,    0,  -13 },   // 0x0A 'J' 
  {75,   174,  10,  14,  11,    0,  -13 },   // 0x0B 'K' 
  {76,   192,  10,  14,  11,    0,  -13 },   // 0x0C 'L' 
  {77,   210,  10,  14,  11,    0,  -13 },   // 0x0D 'M' 
  {78,   228,  10,  14,  11,    0,  -13 },   // 0x0E 'N' 
  {79,   246,  10,  14,  11,    0,  -13 },   // 0x0F 'O' 
  {80,   264,  10,  14,  11,    0,  -13 },   // 0x10 'P' 
  {81,   282,  10,  14,  11,    0,  -13 },   // 0x11 'Q' 
  {82,   300,  10,  14,  11,    0,  -13 },   // 0x12 'R' 
  {83,   318,  10,  14,  11,    0,  -13 },   // 0x13 'S' 
  {84,   336,  10,  14,  11,    0,  -13 },   // 0x14 'T' 
  {85,   354,  10,  14,  11,    0,  -13 },   // 0x15 'U' 
  {86,   372,  10,  14,  11,    0,  -13 },   // 0x16 'V' 
  {87,   390,  10,  14,  11,    0,  -13 },   // 0x17 'W' 
  {88,   408,  10,  14,  11,    0,  -13 },   // 0x18 'X' 
  {89,   426,  10,  14,  11,    0,  -13 },   // 0x19 'Y' 
  {90,   444,  10,  14,  11,    0,  -13 },   // 0x1A 'Z' 
  {97,   462,  10,  10,  11,    0,   -9 },   // 0x1B 'a' 
  {98,   475,  10,  14,  11,    0,  -13 },   // 0x1C 'b' 
  {99,   493,  10,  10,  11,    0,   -9 },   // 0x1D 'c' 
  {100,   506,  10,  14,  11,    0,  -13 },   // 0x1E 'd' 
  {101,   524,  10,  10,  11,    0,   -9 },   // 0x1F 'e' 
  {102,   537,  10,  14,  11,    0,  -13 },   // 0x20 'f' 
  {103,   555,  10,  12,  11,    0,   -9 },   // 0x21 'g' 
  {104,   570,  10,  14,  11,    0,  -13 },   // 0x22 'h' 
  {105,   588,   2,  14,  10,    4,  -13 },   // 0x23 'i' 
  {106,   592,   8,  16,  10,    0,  -13 },   // 0x24 'j' 
  {107,   608,  10,  14,  11,    0,  -13 },   // 0x25 'k' 
  {108,   626,   6,  14,  10,    2,  -13 },   // 0x26 'l' 
  {109,   637,  10,  10,  11,    0,   -9 },   // 0x27 'm' 
  {110,   650,  10,  10,  11,    0,   -9 },   // 0x28 'n' 
  {111,   663,  10,  10,  11,    0,   -9 },   // 0x29 'o' 
  {112,   676,  10,  12,  11,    0,   -9 },   // 0x2A 'p' 
  {113,   691,  10,  12,  11,    0,   -9 },   // 0x2B 'q' 
  {114,   706,  10,  10,  11,    0,   -9 },   // 0x2C 'r' 
  {115,   719,  10,  10,  11,    0,   -9 },   // 0x2D 's' 
  {116,   732,   6,  14,  10,    2,  -13 },   // 0x2E 't' 
  {117,   743,  10,  10,  11,    0,   -9 },   // 0x2F 'u' 
  {118,   756,  10,  10,  11,    0,   -9 },   // 0x30 'v' 
  {119,   769,  10,  10,  11,    0,   -9 },   // 0x31 'w' 
  {120,   782,  10,  10,  11,    0,   -9 },   // 0x32 'x' 
  {121,   795,  10,  12,  11,    0,   -9 },   // 0x33 'y' 
  {122,   810,  10,  10,  11,    0,   -9 },   // 0x34 'z' 
  {48,   823,  10,  14,  10,    0,  -13 },   // 0x35 '0' 
  {49,   841,   6,  14,  10,    2,  -13 },   // 0x36 '1' 
  {50,   852,  10,  14,  10,    0,  -13 },   // 0x37 '2' 
  {51,   870,  10,  14,  10,    0,  -13 },   // 0x38 '3' 
  {52,   888,  10,  14,  10,    0,  -13 },   // 0x39 '4' 
  {53,   906,  10,  14,  10,    0,  -13 },   // 0x3A '5' 
  {54,   924,  10,  14,  10,    0,  -13 },   // 0x3B '6' 
  {55,   942,  10,  14,  10,    0,  -13 },   // 0x3C '7' 
  {56,   960,  10,  14,  10,    0,  -13 },   // 0x3D '8' 
  {57,   978,  10,  14,  10,    0,  -13 },   // 0x3E '9' 
  {45,   996,   8,   2,  10,    0,   -7 },   // 0x3F '-' 
  {37,   998,  10,  14,  11,    0,  -13 },   // 0x40 '%' 
  {46,  1016,   2,   2,  10,    4,   -1 },   // 0x41 '.' 
  {44,  1017,   4,   6,  10,    2,   -3 },   // 0x42 ',' 
  {33,  1020,   2,  14,  10,    4,  -13 },   // 0x43 '!' 
  {58,  1024,   2,   8,  10,    2,   -9 },   // 0x44 ':' 
  {91,  1026,   6,  14,  10,    2,  -13 },   // 0x45 '[' 
  {93,  1037,   6,  14,  10,    2,  -13 },   // 0x46 ']' 
  {40,  1048,   8,  14,  10,    0,  -13 },   // 0x47 '(' 
  {41,  1062,   8,  14,  11,    2,  -13 }   // 0x48 ')' 
};

const gfxfont_t HotStuff8 PROGMEM = 
{
  (uint8_t  *)HotStuff8Bitmaps, //< Glyph bitmaps, concatenated 
  (gfxglyph_t *)HotStuff8Glyphs, //< Glyph array
  73,// total glyphs in the string
  16,  // newline distance (y axis)
     0,  // minimum X - left most
    -2,  // minimum Y - bottom most (descenders can drive this negative)
    10,  // maximum X - right most
    14}; // maximum Y - top most
// Approx. 1601 bytes -  but your mileage may vary.

#endif