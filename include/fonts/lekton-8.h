
#ifndef __FIXEDFONTLEKTONBOLDTTF8
#define __FIXEDFONTLEKTONBOLDTTF8
const uint8_t HotStuff8Bitmaps[] PROGMEM = {
  0x00, 0x7B, 0x3C, 0xE1, 0x86, 0x18, 0x73, 0xCD, 0xE0, 0x71, 0xE2, 0x40,
  0x81, 0x02, 0x04, 0x08, 0x11, 0xFC, 0x7B, 0x30, 0xC3, 0x0C, 0xE7, 0x30,
  0xFF, 0xF0, 0xFA, 0x30, 0xC3, 0x79, 0xF0, 0x41, 0xCF, 0xE0, 0x30, 0xC1,
  0x82, 0x0C, 0x99, 0x22, 0x7F, 0x08, 0x10, 0xFF, 0x0C, 0x3E, 0xFC, 0x30,
  0x41, 0xCF, 0xE0, 0x18, 0x71, 0x86, 0x8F, 0xD8, 0xA1, 0xC3, 0xCC, 0xF0,
  0x7E, 0x8E, 0x18, 0x60, 0xC3, 0x06, 0x08, 0x30, 0x60, 0x7B, 0x38, 0x73,
  0x7B, 0xF8, 0x61, 0xCD, 0xE0, 0x7D, 0x9A, 0x1C, 0x3C, 0xEF, 0x83, 0x0C,
  0x18, 0xE0, 0xFF, 0x06, 0xF4, 0x94, 0xFC, 0x68, 0x18, 0x10, 0x37, 0x39,
  0x29, 0x66, 0xF0 };

// Glyph, Offset to bitmap, Width, Height, xAdvance, xOffset, yOffset

const gfxglyph_t HotStuff8Glyphs[] PROGMEM = {
  {32,     0,   1,   1,   8,    0,    0 },   // 0x00 ' ' 
  {48,     1,   6,  10,   8,    1,   -9 },   // 0x01 '0' 
  {49,     9,   7,  10,   8,    1,   -9 },   // 0x02 '1' 
  {50,    18,   6,  10,   8,    1,   -9 },   // 0x03 '2' 
  {51,    26,   6,  10,   8,    1,   -9 },   // 0x04 '3' 
  {52,    34,   7,  10,   8,    1,   -9 },   // 0x05 '4' 
  {53,    43,   6,  10,   8,    1,   -9 },   // 0x06 '5' 
  {54,    51,   7,  10,   8,    1,   -9 },   // 0x07 '6' 
  {55,    60,   7,  10,   8,    0,   -9 },   // 0x08 '7' 
  {56,    69,   6,  10,   8,    1,   -9 },   // 0x09 '8' 
  {57,    77,   7,  10,   8,    1,   -9 },   // 0x0A '9' 
  {45,    86,   4,   2,   8,    2,   -4 },   // 0x0B '-' 
  {37,    87,   8,  11,   8,    0,  -10 },   // 0x0C '%' 
  {46,    98,   2,   2,   8,    3,   -1 }   // 0x0D '.' 
};

const gfxfont_t HotStuff8 PROGMEM = 
{
  (uint8_t  *)HotStuff8Bitmaps, //< Glyph bitmaps, concatenated 
  (gfxglyph_t *)HotStuff8Glyphs, //< Glyph array
  14,// total glyphs in the string
  11,  // newline distance (y axis)
     0,  // minimum X - left most
     0,  // minimum Y - bottom most (descenders can drive this negative)
     8,  // maximum X - right most
    11}; // maximum Y - top most
// Approx. 211 bytes -  but your mileage may vary.

#endif