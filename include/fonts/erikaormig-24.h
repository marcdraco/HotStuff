
#ifndef __FIXEDFONTERIKAORMIGTTF24
#define __FIXEDFONTERIKAORMIGTTF24
const uint8_t HotStuff24Bitmaps[] PROGMEM = {
  0x00, 0xFE, 0x00, 0x0F, 0xFE, 0x00, 0x7F, 0xFC, 0x03, 0xFF, 0xF8, 0x1F,
  0x27, 0xE0, 0xF8, 0x07, 0xC3, 0xE0, 0x1F, 0x0F, 0x00, 0x1C, 0x7C, 0x00,
  0x79, 0xE0, 0x01, 0xE7, 0x80, 0x03, 0xBE, 0x00, 0x1E, 0xF8, 0x00, 0x7B,
  0xE0, 0x01, 0xFF, 0x80, 0x07, 0xDE, 0x00, 0x0F, 0x78, 0x00, 0x3D, 0xE0,
  0x00, 0xE7, 0xC0, 0x07, 0x9F, 0x00, 0x1E, 0x3E, 0x00, 0xF0, 0xFC, 0x03,
  0xC1, 0xF0, 0x1E, 0x07, 0xE0, 0xF8, 0x0F, 0xFF, 0xE0, 0x1F, 0xFF, 0x00,
  0x3F, 0xF8, 0x00, 0x3F, 0x80, 0x00, 0xE0, 0x0F, 0x80, 0xFE, 0x0F, 0xF1,
  0xFF, 0xBF, 0xFF, 0xFF, 0xEF, 0xFF, 0x78, 0xF8, 0x07, 0xC0, 0x3E, 0x01,
  0xF0, 0x0F, 0x80, 0x7C, 0x03, 0xE0, 0x1F, 0x00, 0xF8, 0x07, 0xC0, 0x3E,
  0x01, 0xF0, 0x0F, 0x80, 0x7C, 0x03, 0xE0, 0x1F, 0x00, 0xF8, 0x07, 0xC0,
  0x3E, 0x00, 0xE0, 0x07, 0xF8, 0x01, 0xFF, 0xC0, 0x7F, 0xFC, 0x1F, 0x9F,
  0xC7, 0xC0, 0x7C, 0xF0, 0x07, 0xDC, 0x00, 0xFF, 0x80, 0x0F, 0x70, 0x01,
  0xE0, 0x00, 0x3C, 0x00, 0x07, 0x00, 0x01, 0xE0, 0x00, 0xF8, 0x00, 0x7F,
  0x00, 0x3F, 0xC0, 0x1F, 0xE0, 0x07, 0xF0, 0x01, 0xF8, 0x00, 0x7C, 0x00,
  0x1F, 0x00, 0x03, 0xC0, 0x00, 0xF0, 0x00, 0x1E, 0x00, 0x07, 0xC0, 0x00,
  0xFF, 0xFF, 0xDF, 0xFF, 0xF9, 0xFF, 0xFF, 0x23, 0xFF, 0xC0, 0x01, 0xF8,
  0x00, 0x7F, 0xF0, 0x0F, 0xFF, 0x81, 0xFF, 0xFC, 0x1E, 0x07, 0xC1, 0xC0,
  0x3C, 0x00, 0x03, 0xE0, 0x00, 0x1E, 0x00, 0x01, 0xC0, 0x00, 0x3C, 0x00,
  0x07, 0x80, 0x03, 0xF8, 0x00, 0x7F, 0x80, 0x0F, 0xF8, 0x00, 0xFF, 0xC0,
  0x00, 0x3E, 0x00, 0x01, 0xE0, 0x00, 0x1F, 0x00, 0x00, 0xF0, 0x00, 0x0F,
  0x00, 0x00, 0xF0, 0x00, 0x1E, 0x00, 0x01, 0xE0, 0x00, 0x3E, 0x00, 0x07,
  0xC0, 0x01, 0xF8, 0x00, 0xFF, 0x80, 0x7F, 0xF0, 0x7F, 0xFC, 0x0F, 0xFF,
  0x00, 0xFF, 0xC0, 0x07, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00,
  0x03, 0xF0, 0x00, 0x0F, 0xE0, 0x00, 0x7F, 0x80, 0x01, 0xFE, 0x00, 0x0F,
  0xF8, 0x00, 0x3F, 0xE0, 0x01, 0xFF, 0x80, 0x07, 0xFE, 0x00, 0x3F, 0xF8,
  0x00, 0xFB, 0xE0, 0x07, 0xCF, 0x80, 0x1E, 0x3E, 0x00, 0xF8, 0xF8, 0x03,
  0xC3, 0xE0, 0x1F, 0x0F, 0x80, 0x7C, 0x3E, 0x03, 0xE0, 0xF8, 0x0F, 0x03,
  0xE0, 0x7E, 0x0F, 0x81, 0xFF, 0xFF, 0xEF, 0xFF, 0xFF, 0xDF, 0xFF, 0xFF,
  0x3F, 0xFF, 0xF0, 0x00, 0x3E, 0x00, 0x00, 0xF8, 0x00, 0x03, 0xE0, 0x00,
  0x0F, 0x80, 0x00, 0x3E, 0x00, 0x00, 0xF8, 0x00, 0x03, 0xE0, 0x00, 0x0F,
  0x00, 0x7F, 0xFF, 0x1F, 0xFF, 0xEF, 0xFF, 0xFB, 0xFF, 0xFC, 0xF0, 0x00,
  0x3C, 0x00, 0x0F, 0x00, 0x03, 0xC0, 0x00, 0xF0, 0x00, 0x3C, 0x78, 0x0F,
  0xFF, 0xC3, 0xFF, 0xFC, 0xFF, 0xFF, 0x3F, 0x0F, 0xEF, 0x00, 0xF9, 0x80,
  0x1E, 0x00, 0x03, 0xC0, 0x00, 0xF0, 0x00, 0x3C, 0x00, 0x0F, 0x00, 0x07,
  0x80, 0x01, 0xE0, 0x00, 0xF0, 0x00, 0x7C, 0x00, 0x1E, 0x00, 0x1F, 0x80,
  0x1F, 0xE0, 0x1F, 0xF0, 0x7F, 0xF0, 0x3F, 0xF8, 0x0F, 0xF0, 0x01, 0xE0,
  0x00, 0x00, 0x0F, 0x80, 0x0F, 0xF8, 0x07, 0xFF, 0x01, 0xFF, 0x80, 0xFF,
  0x80, 0x3F, 0x80, 0x07, 0xE0, 0x01, 0xF8, 0x00, 0x3E, 0x00, 0x0F, 0x80,
  0x01, 0xE0, 0x00, 0x7C, 0x00, 0x0F, 0x80, 0x01, 0xE0, 0x00, 0x3C, 0x7E,
  0x07, 0xFF, 0xF0, 0xFF, 0xFF, 0x1F, 0xFF, 0xF3, 0xF0, 0x5E, 0x7C, 0x01,
  0xEF, 0x00, 0x1D, 0xE0, 0x03, 0xFC, 0x00, 0x7F, 0x80, 0x0F, 0xF0, 0x01,
  0xEF, 0x00, 0x39, 0xF0, 0x0F, 0x1F, 0x03, 0xC3, 0xFF, 0xF8, 0x3F, 0xFF,
  0x01, 0xFF, 0x80, 0x0F, 0xC0, 0x3F, 0xFF, 0xE1, 0xFF, 0xFF, 0xF3, 0xFF,
  0xFF, 0xFF, 0xFF, 0xFF, 0xEF, 0xFC, 0xFF, 0x9F, 0x00, 0x7E, 0x3E, 0x00,
  0xF8, 0x7C, 0x03, 0xE0, 0x60, 0x07, 0xC0, 0x00, 0x1F, 0x80, 0x00, 0x3E,
  0x00, 0x00, 0xF8, 0x00, 0x03, 0xE0, 0x00, 0x07, 0xC0, 0x00, 0x0F, 0x80,
  0x00, 0x1E, 0x00, 0x00, 0x7C, 0x00, 0x00, 0xF0, 0x00, 0x01, 0xE0, 0x00,
  0x03, 0xC0, 0x00, 0x0F, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x3C, 0x00, 0x00,
  0x78, 0x00, 0x00, 0xF0, 0x00, 0x01, 0xE0, 0x00, 0x03, 0xC0, 0x00, 0x07,
  0x80, 0x00, 0x0F, 0x80, 0x00, 0x1E, 0x00, 0x00, 0x3C, 0x00, 0x00, 0x70,
  0x00, 0x03, 0xFE, 0x00, 0x0F, 0xFF, 0xC0, 0x3F, 0xFF, 0xC0, 0xFF, 0xFF,
  0xC3, 0xF0, 0x3F, 0xC7, 0x80, 0x3F, 0x9F, 0x00, 0x3F, 0x3E, 0x00, 0x7E,
  0x7C, 0x00, 0xF8, 0xF8, 0x01, 0xF1, 0xF8, 0x07, 0xE1, 0xF8, 0x1F, 0x81,
  0xFF, 0xFF, 0x03, 0xFF, 0xFE, 0x07, 0xFF, 0xFC, 0x1F, 0xFF, 0xFC, 0x7C,
  0x00, 0xFC, 0xF0, 0x00, 0xFB, 0xC0, 0x00, 0xFF, 0x80, 0x01, 0xFF, 0x00,
  0x03, 0xFE, 0x00, 0x07, 0xDC, 0x00, 0x1F, 0xBC, 0x00, 0x3E, 0x3E, 0x03,
  0xF8, 0x7F, 0xFF, 0xE0, 0x7F, 0xFF, 0x80, 0x7F, 0xFC, 0x00, 0x3F, 0xC0,
  0x00, 0x01, 0xF8, 0x00, 0x7F, 0xF0, 0x1F, 0xFF, 0xC3, 0xFF, 0xFE, 0x7F,
  0xFF, 0xE7, 0xF8, 0xFE, 0xFE, 0x07, 0xEF, 0xC0, 0x3E, 0xFC, 0x03, 0xEF,
  0x80, 0x1F, 0xF8, 0x01, 0xFF, 0x80, 0x1F, 0x7C, 0x03, 0xF7, 0xC0, 0x3F,
  0x3E, 0x07, 0xF1, 0xFF, 0xFF, 0x0F, 0xFF, 0xF0, 0x7F, 0xFE, 0x00, 0x61,
  0xE0, 0x00, 0x1C, 0x00, 0x01, 0xC0, 0x00, 0x3C, 0x00, 0x03, 0xC0, 0x00,
  0x7C, 0x00, 0x0F, 0x80, 0x01, 0xF8, 0x00, 0x3F, 0x00, 0x0F, 0xE0, 0x07,
  0xFC, 0x03, 0xFF, 0x80, 0x7F, 0xF8, 0x03, 0xF8, 0x00, 0x00, 0x3F, 0xFF,
  0xF9, 0xFF, 0xFF, 0xFB, 0xFF, 0xFF, 0xF3, 0xFF, 0xFF, 0xE0, 0xF8, 0x07,
  0xC0, 0xF0, 0x07, 0xC1, 0xE0, 0x0F, 0x83, 0xC3, 0x9F, 0x07, 0x87, 0xBE,
  0x0F, 0x1F, 0x7C, 0x1F, 0x3E, 0xF8, 0x3F, 0xFD, 0xF0, 0x7F, 0xFB, 0xE0,
  0xFF, 0xF0, 0x01, 0xFF, 0xE0, 0x03, 0xFF, 0xC0, 0x07, 0x8F, 0x80, 0x0F,
  0x1F, 0x00, 0x1E, 0x3E, 0x00, 0x3C, 0x3C, 0x00, 0x78, 0x00, 0x00, 0xF0,
  0x00, 0x01, 0xE0, 0x00, 0x07, 0xF8, 0x00, 0xFF, 0xFE, 0x01, 0xFF, 0xFC,
  0x03, 0xFF, 0xF8, 0x03, 0xFF, 0xE0, 0x00, 0x01, 0xFC, 0x60, 0x1F, 0xFF,
  0x81, 0xFF, 0xFC, 0x1F, 0xFF, 0xE1, 0xFF, 0xFF, 0x1F, 0x9F, 0xF8, 0xF8,
  0x6F, 0xCF, 0xC0, 0x7E, 0x7F, 0x03, 0xF3, 0xF0, 0x1F, 0xBF, 0x00, 0xFD,
  0xF8, 0x03, 0xEF, 0xC0, 0x0F, 0x7C, 0x00, 0x03, 0xC0, 0x00, 0x1F, 0x00,
  0x00, 0xF8, 0x00, 0x37, 0xC0, 0x07, 0xFE, 0x00, 0x7E, 0xF8, 0x03, 0xF7,
  0xF1, 0xFF, 0xBF, 0x8F, 0xF8, 0xFC, 0x3F, 0x87, 0xFF, 0xFC, 0x1F, 0xFF,
  0xC0, 0x7F, 0xFE, 0x00, 0xFF, 0xC0, 0x03, 0xFC, 0x00, 0x3F, 0xFF, 0xE1,
  0xFF, 0xFF, 0xEF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0xFF, 0xFD, 0xFF,
  0xFF, 0xE3, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x70, 0x00, 0x01, 0xE0, 0x00,
  0x0F, 0xC0, 0x00, 0x3F, 0x00, 0x01, 0xFC, 0x00, 0x07, 0xE0, 0x00, 0x3F,
  0x00, 0x00, 0xF8, 0x00, 0x07, 0xE0, 0x00, 0x1F, 0x00, 0x00, 0xF8, 0x00,
  0x07, 0xE0, 0x00, 0x1F, 0x00, 0x00, 0x7C, 0x00, 0x01, 0xF0, 0x00, 0x0F,
  0x80, 0x00, 0x7E, 0x00, 0x01, 0xF0, 0x00, 0x0F, 0xC0, 0x00, 0x3E, 0x00,
  0x01, 0xF8, 0x00, 0x07, 0xE0, 0x00, 0x3F, 0x00, 0x00, 0xF8, 0x00, 0x07,
  0xE0, 0x00, 0x1F, 0x00, 0x00, 0xFC, 0x00, 0x03, 0xF0, 0x00, 0x1F, 0x80,
  0x00, 0x7E, 0x00, 0x03, 0xF0, 0x00, 0x0F, 0xC0, 0x00, 0x7E, 0x00, 0x01,
  0xF8, 0x00, 0x0F, 0xE0, 0x00, 0x3F, 0x00, 0x00, 0x78, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x0F, 0xE0, 0x00, 0x0F, 0xF8,
  0x00, 0x0F, 0xFC, 0x01, 0xFF, 0xFE, 0x01, 0xFF, 0xFF, 0x01, 0xFF, 0xFB,
  0x80, 0x7F, 0xF9, 0xE0, 0x3F, 0x7C, 0xF0, 0x0F, 0x0E, 0x38, 0x07, 0x83,
  0xDE, 0x01, 0xE1, 0xFF, 0x80, 0xF0, 0x7F, 0xC0, 0x3C, 0x1F, 0xF0, 0x0F,
  0x0F, 0xF8, 0x01, 0xC7, 0xFC, 0x00, 0x7F, 0xCE, 0x00, 0x0F, 0xE7, 0x8F,
  0x01, 0xF1, 0xC7, 0xF0, 0x00, 0xF3, 0xFE, 0x00, 0x79, 0xF3, 0xC0, 0x1C,
  0x78, 0xF0, 0x0F, 0x3C, 0x3C, 0x03, 0x8E, 0x0F, 0x01, 0xE7, 0x83, 0xC0,
  0x71, 0xC0, 0xE0, 0x3C, 0x70, 0x70, 0x0E, 0x1E, 0x7C, 0x0F, 0x83, 0xFF,
  0x03, 0xC0, 0xFF, 0x81, 0xE0, 0x1F, 0xC0, 0x78, 0x03, 0x80, 0x3C, 0x00,
  0x00, 0x0F, 0x00, 0x00, 0x03, 0xC0, 0x00, 0x00, 0xE0, 0x00, 0x00, 0x0E,
  0x0F, 0xE7, 0xFB, 0xFF, 0xFF, 0xFF, 0xFF, 0xFD, 0xFF, 0x3F, 0x87, 0x80 };

// Glyph, Offset to bitmap, Width, Height, xAdvance, xOffset, yOffset

const gfxglyph_t HotStuff24Glyphs[] PROGMEM = {
  {48,     0,  22,  28,  28,    3,  -27 },   // 0x00 '0' 
  {49,    77,  13,  28,  28,    7,  -27 },   // 0x01 '1' 
  {50,   123,  19,  28,  29,    5,  -27 },   // 0x02 '2' 
  {51,   190,  20,  32,  28,    4,  -26 },   // 0x03 '3' 
  {52,   270,  22,  33,  28,    3,  -29 },   // 0x04 '4' 
  {53,   361,  18,  32,  28,    5,  -27 },   // 0x05 '5' 
  {54,   433,  19,  32,  28,    5,  -31 },   // 0x06 '6' 
  {55,   509,  23,  32,  28,    3,  -27 },   // 0x07 '7' 
  {56,   601,  23,  29,  29,    3,  -28 },   // 0x08 '8' 
  {57,   685,  20,  32,  28,    4,  -27 },   // 0x09 '9' 
  {32,   765,   1,   1,  28,    0,    0 },   // 0x0A ' ' 
  {70,   766,  23,  28,  29,    3,  -27 },   // 0x0B 'F' 
  {67,   847,  21,  28,  28,    4,  -27 },   // 0x0C 'C' 
  {45,   921,  22,   7,  28,    3,  -15 },   // 0x0D '-' 
  {47,   941,  22,  38,  28,    3,  -32 },   // 0x0E '/' 
  {37,  1046,  26,  36,  28,    1,  -31 },   // 0x0F '%' 
  {46,  1163,  10,  10,  28,    9,   -9 }   // 0x10 '.' 
};

const gfxfont_t HotStuff24 PROGMEM = 
{
  (uint8_t  *)HotStuff24Bitmaps, //< Glyph bitmaps, concatenated 
  (gfxglyph_t *)HotStuff24Glyphs, //< Glyph array
  17,// total glyphs in the string
  38,  // newline distance (y axis)
     0,  // minimum X - left most
    -5,  // minimum Y - bottom most (descenders can drive this negative)
    27,  // maximum X - right most
    33}; // maximum Y - top most
// Approx. 1309 bytes -  but your mileage may vary.

#endif