
#ifndef __FIXEDFONTNOTOSANSMONOREGULARTTF8
#define __FIXEDFONTNOTOSANSMONOREGULARTTF8
const uint8_t HotStuff8Bitmaps[] PROGMEM = {
  0x00, 0xFA, 0xAA, 0x0F, 0xDA, 0x52, 0x90, 0x09, 0x0C, 0x84, 0x82, 0x47,
  0xF8, 0x90, 0x49, 0xFF, 0x24, 0x12, 0x09, 0x04, 0x80, 0x10, 0x79, 0xFE,
  0x8D, 0x0A, 0x1E, 0x0F, 0x12, 0x26, 0x5F, 0xE1, 0x00, 0x71, 0x69, 0x24,
  0x92, 0x89, 0x43, 0xE0, 0x2E, 0x39, 0x14, 0x9A, 0x49, 0x2C, 0x70, 0x70,
  0x48, 0x48, 0x48, 0x70, 0x60, 0xD3, 0x9A, 0x8E, 0x84, 0xCE, 0x73, 0xF0,
  0x36, 0x44, 0xCC, 0xCC, 0xCC, 0x44, 0x63, 0xC6, 0x22, 0x33, 0x33, 0x33,
  0x22, 0x6C, 0x10, 0x21, 0x4F, 0xF3, 0x8D, 0x89, 0x00, 0x10, 0x20, 0x40,
  0x8F, 0xE2, 0x04, 0x08, 0x6D, 0x60, 0xF8, 0xF0, 0x0C, 0x21, 0x84, 0x10,
  0xC2, 0x18, 0x41, 0x0C, 0x20, 0x3C, 0xCF, 0x1C, 0x78, 0xB3, 0x64, 0xD1,
  0xE3, 0x85, 0x99, 0xE0, 0x33, 0xCB, 0x0C, 0x30, 0xC3, 0x0C, 0x30, 0xC3,
  0x3F, 0x7C, 0xC6, 0x06, 0x02, 0x06, 0x04, 0x0C, 0x18, 0x30, 0x60, 0xC0,
  0xFF, 0x7D, 0x8C, 0x18, 0x30, 0x47, 0x01, 0x81, 0x02, 0x06, 0x1F, 0xE0,
  0x0C, 0x0C, 0x14, 0x34, 0x24, 0x64, 0x44, 0x84, 0xFF, 0x04, 0x04, 0x04,
  0x7C, 0x81, 0x02, 0x04, 0x1F, 0x81, 0x83, 0x02, 0x06, 0x1F, 0xC0, 0x1E,
  0xC1, 0x06, 0x0B, 0xDC, 0xF0, 0xC1, 0x83, 0x85, 0x99, 0xE0, 0xFE, 0x04,
  0x08, 0x30, 0x41, 0x82, 0x04, 0x18, 0x20, 0xC1, 0x00, 0x3C, 0x8F, 0x0E,
  0x36, 0xC7, 0x1B, 0x63, 0x83, 0x87, 0x1B, 0xE0, 0x3C, 0x8E, 0x0C, 0x18,
  0x38, 0xDE, 0x81, 0x02, 0x0C, 0x33, 0xC0, 0xF0, 0x03, 0xC0, 0x6C, 0x00,
  0x03, 0x6B, 0x00, 0x02, 0x0C, 0x63, 0x08, 0x0E, 0x07, 0x03, 0xFE, 0x00,
  0x07, 0xF0, 0x81, 0x80, 0xC0, 0x60, 0x23, 0x9C, 0x60, 0xFC, 0x8C, 0x08,
  0x10, 0x61, 0x86, 0x08, 0x10, 0x00, 0xC1, 0x80, 0x1E, 0x19, 0x90, 0x69,
  0xDD, 0x2D, 0x96, 0xCB, 0x65, 0x96, 0xAF, 0x90, 0x0C, 0x21, 0xF0, 0x0C,
  0x0E, 0x05, 0x02, 0xC1, 0x61, 0x90, 0x88, 0x7E, 0x61, 0x20, 0x90, 0x78,
  0x30, 0xFC, 0xC6, 0xC2, 0xC2, 0xC6, 0xF8, 0xC6, 0xC2, 0xC3, 0xC2, 0xC6,
  0xFC, 0x1F, 0x62, 0x40, 0xC0, 0xC0, 0x80, 0x80, 0xC0, 0xC0, 0x40, 0x62,
  0x3E, 0xF8, 0xCC, 0xC6, 0xC2, 0xC3, 0xC3, 0xC3, 0xC3, 0xC2, 0xC6, 0xCC,
  0xF8, 0xFF, 0x83, 0x06, 0x0C, 0x1F, 0xF0, 0x60, 0xC1, 0x83, 0x07, 0xF0,
  0xFF, 0x83, 0x06, 0x0C, 0x18, 0x3F, 0xE0, 0xC1, 0x83, 0x06, 0x00, 0x3E,
  0xC7, 0x04, 0x08, 0x10, 0x23, 0xC1, 0x83, 0x85, 0x89, 0xF0, 0xC3, 0x87,
  0x0E, 0x1C, 0x3F, 0xF0, 0xE1, 0xC3, 0x87, 0x0E, 0x10, 0xFC, 0x82, 0x08,
  0x20, 0x82, 0x08, 0x20, 0x82, 0x3F, 0x08, 0x42, 0x10, 0x84, 0x21, 0x08,
  0x67, 0xE0, 0xC2, 0xC4, 0xCC, 0xD8, 0xD0, 0xF0, 0xF0, 0xD8, 0xCC, 0xC4,
  0xC6, 0xC3, 0x82, 0x08, 0x20, 0x82, 0x08, 0x20, 0x82, 0x08, 0x3F, 0xC7,
  0xC7, 0xC7, 0xA7, 0xAF, 0xAB, 0xBB, 0x9B, 0x93, 0x83, 0x83, 0x83, 0xC3,
  0xC6, 0x8D, 0x19, 0x32, 0x66, 0xC5, 0x8B, 0x0E, 0x1C, 0x30, 0x3C, 0x66,
  0xC2, 0x82, 0x83, 0x83, 0x83, 0x83, 0x82, 0xC2, 0x66, 0x3C, 0xFC, 0xC6,
  0xC2, 0xC3, 0xC2, 0xC6, 0xFC, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0x3C, 0x66,
  0xC2, 0x82, 0x83, 0x83, 0x83, 0x83, 0x82, 0xC2, 0x66, 0x3C, 0x04, 0x06,
  0x02, 0xFC, 0xC6, 0xC6, 0xC2, 0xC6, 0xC6, 0xF8, 0xC8, 0xCC, 0xC4, 0xC2,
  0xC3, 0x3E, 0xC5, 0x02, 0x06, 0x07, 0x07, 0x03, 0x02, 0x06, 0x1F, 0xE0,
  0xFF, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10,
  0xC3, 0x87, 0x0E, 0x1C, 0x38, 0x70, 0xE1, 0xC3, 0x85, 0x19, 0xE0, 0xC1,
  0xA0, 0xD8, 0x4C, 0x22, 0x31, 0x10, 0xC8, 0x2C, 0x16, 0x0A, 0x03, 0x01,
  0x80, 0xC0, 0xA0, 0x50, 0x29, 0xB4, 0xDA, 0x6D, 0x54, 0xAA, 0x53, 0x29,
  0x98, 0xC4, 0x60, 0xC3, 0x46, 0x64, 0x2C, 0x38, 0x18, 0x18, 0x28, 0x24,
  0x44, 0xC2, 0x83, 0x83, 0xC2, 0x46, 0x64, 0x2C, 0x28, 0x18, 0x10, 0x10,
  0x10, 0x10, 0x10, 0x7E, 0x0C, 0x10, 0x60, 0x83, 0x04, 0x18, 0x20, 0xC1,
  0x07, 0xF0, 0xF2, 0x49, 0x24, 0x92, 0x49, 0xC0, 0xC1, 0x06, 0x08, 0x20,
  0xC1, 0x06, 0x08, 0x20, 0xC1, 0xE4, 0x92, 0x49, 0x24, 0x93, 0xC0, 0x10,
  0x10, 0x28, 0x28, 0x64, 0x44, 0xC2, 0x83, 0xFF, 0x80, 0xC8, 0x80, 0x7C,
  0x8C, 0x09, 0xFC, 0x38, 0x61, 0xE7, 0x7A, 0xC0, 0xC0, 0xC0, 0xC0, 0xFC,
  0xE6, 0xC2, 0xC2, 0xC3, 0xC2, 0xC2, 0xE6, 0xBC, 0x3E, 0xC5, 0x06, 0x0C,
  0x18, 0x10, 0x31, 0x3E, 0x02, 0x04, 0x08, 0x17, 0xA8, 0xF1, 0xC1, 0x83,
  0x07, 0x1A, 0x33, 0xA0, 0x3C, 0xCF, 0x0C, 0x1F, 0xF0, 0x30, 0x31, 0x3E,
  0x0F, 0x18, 0x10, 0x10, 0xFE, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10,
  0x10, 0x3A, 0x8F, 0x0C, 0x18, 0x30, 0x70, 0xA3, 0x3A, 0x04, 0x0C, 0x37,
  0xC0, 0xC1, 0x83, 0x06, 0x0D, 0xDC, 0xF0, 0xE1, 0xC3, 0x87, 0x0E, 0x1C,
  0x20, 0x18, 0x30, 0x00, 0x0F, 0x83, 0x06, 0x0C, 0x18, 0x30, 0x60, 0xCF,
  0xE0, 0x18, 0xC0, 0x07, 0x84, 0x21, 0x08, 0x42, 0x10, 0x84, 0x33, 0xF0,
  0x81, 0x02, 0x04, 0x08, 0x71, 0x26, 0x58, 0xF1, 0xA2, 0x24, 0x68, 0x60,
  0xF8, 0x30, 0x60, 0xC1, 0x83, 0x06, 0x0C, 0x18, 0x30, 0x60, 0xCF, 0xE0,
  0xF6, 0xDA, 0x9B, 0x93, 0x93, 0x93, 0x93, 0x93, 0x93, 0x9D, 0xCF, 0x0E,
  0x1C, 0x38, 0x70, 0xE1, 0xC2, 0x3C, 0x46, 0xC2, 0x82, 0x83, 0x82, 0xC2,
  0x46, 0x3C, 0xBC, 0xE6, 0xC2, 0xC2, 0xC3, 0xC2, 0xC2, 0xE6, 0xFC, 0xC0,
  0xC0, 0xC0, 0xC0, 0x3A, 0x8F, 0x1C, 0x18, 0x30, 0x70, 0xA3, 0x3A, 0x04,
  0x08, 0x10, 0x20, 0xF7, 0x19, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0xFC,
  0x7F, 0x18, 0x30, 0x30, 0x30, 0xE3, 0xF8, 0x30, 0x60, 0xC7, 0xF3, 0x06,
  0x0C, 0x18, 0x30, 0x60, 0xC0, 0xF0, 0xC3, 0x87, 0x0E, 0x1C, 0x38, 0x71,
  0xE3, 0x7A, 0x83, 0xC2, 0x46, 0x44, 0x64, 0x2C, 0x28, 0x38, 0x18, 0xC0,
  0xE0, 0x53, 0x2B, 0xB5, 0x52, 0xA9, 0x5C, 0xA6, 0x23, 0x00, 0xC3, 0x46,
  0x2C, 0x38, 0x18, 0x38, 0x6C, 0x46, 0xC3, 0x83, 0xC2, 0x46, 0x44, 0x64,
  0x24, 0x38, 0x18, 0x18, 0x10, 0x10, 0x30, 0xE0, 0x7E, 0x0C, 0x30, 0x41,
  0x86, 0x08, 0x20, 0xFE, 0x19, 0x88, 0x42, 0x10, 0x98, 0x21, 0x08, 0x43,
  0x0C, 0xFF, 0xFF, 0x80, 0xC3, 0x08, 0x42, 0x10, 0x64, 0x21, 0x08, 0x46,
  0x60, 0x73, 0x3C };

// Glyph, Offset to bitmap, Width, Height, xAdvance, xOffset, yOffset

const gfxglyph_t HotStuff8Glyphs[] PROGMEM = {
  {32,     0,   1,   1,   9,    0,    0 },   // 0x00 ' ' 
  {33,     1,   2,  12,   9,    4,  -11 },   // 0x01 '!' 
  {34,     4,   5,   4,   9,    2,  -11 },   // 0x02 '"' 
  {35,     7,   9,  12,   9,    0,  -11 },   // 0x03 '#' 
  {36,    21,   7,  13,   9,    1,  -12 },   // 0x04 '$' 
  {37,    33,   9,  12,   9,    0,  -11 },   // 0x05 '%' 
  {38,    47,   8,  12,   9,    1,  -11 },   // 0x06 '&' 
  {39,    59,   1,   4,   9,    4,  -11 },   // 0x07 ''' 
  {40,    60,   4,  14,   9,    3,  -11 },   // 0x08 '(' 
  {41,    67,   4,  14,   9,    2,  -10 },   // 0x09 ')' 
  {42,    74,   7,   7,   9,    1,  -12 },   // 0x0A '*' 
  {43,    81,   7,   8,   9,    1,   -9 },   // 0x0B '+' 
  {44,    88,   3,   4,   9,    3,   -1 },   // 0x0C ',' 
  {45,    90,   5,   1,   9,    2,   -4 },   // 0x0D '-' 
  {46,    91,   2,   2,   9,    4,   -1 },   // 0x0E '.' 
  {47,    92,   6,  12,   9,    2,  -11 },   // 0x0F '/' 
  {48,   101,   7,  12,   9,    1,  -11 },   // 0x10 '0' 
  {49,   112,   6,  12,   9,    2,  -11 },   // 0x11 '1' 
  {50,   121,   8,  12,   9,    1,  -11 },   // 0x12 '2' 
  {51,   133,   7,  12,   9,    1,  -11 },   // 0x13 '3' 
  {52,   144,   8,  12,   9,    1,  -11 },   // 0x14 '4' 
  {53,   156,   7,  12,   9,    1,  -11 },   // 0x15 '5' 
  {54,   167,   7,  12,   9,    1,  -11 },   // 0x16 '6' 
  {55,   178,   7,  12,   9,    1,  -11 },   // 0x17 '7' 
  {56,   189,   7,  12,   9,    1,  -11 },   // 0x18 '8' 
  {57,   200,   7,  12,   9,    1,  -11 },   // 0x19 '9' 
  {58,   211,   2,   9,   9,    4,   -8 },   // 0x1A ':' 
  {59,   214,   3,  11,   9,    3,   -8 },   // 0x1B ';' 
  {60,   219,   7,   8,   9,    1,   -9 },   // 0x1C '<' 
  {61,   226,   7,   4,   9,    1,   -7 },   // 0x1D '=' 
  {62,   230,   7,   8,   9,    1,   -9 },   // 0x1E '>' 
  {63,   237,   7,  12,   9,    1,  -11 },   // 0x1F '?' 
  {64,   248,   9,  13,   9,    0,  -11 },   // 0x20 '@' 
  {65,   263,   9,  12,   9,    0,  -11 },   // 0x21 'A' 
  {66,   277,   8,  12,   9,    1,  -11 },   // 0x22 'B' 
  {67,   289,   8,  12,   9,    1,  -11 },   // 0x23 'C' 
  {68,   301,   8,  12,   9,    1,  -11 },   // 0x24 'D' 
  {69,   313,   7,  12,   9,    1,  -11 },   // 0x25 'E' 
  {70,   324,   7,  12,   9,    1,  -11 },   // 0x26 'F' 
  {71,   335,   7,  12,   9,    1,  -11 },   // 0x27 'G' 
  {72,   346,   7,  12,   9,    1,  -11 },   // 0x28 'H' 
  {73,   357,   6,  12,   9,    2,  -11 },   // 0x29 'I' 
  {74,   366,   5,  12,   9,    2,  -11 },   // 0x2A 'J' 
  {75,   374,   8,  12,   9,    1,  -11 },   // 0x2B 'K' 
  {76,   386,   6,  12,   9,    2,  -11 },   // 0x2C 'L' 
  {77,   395,   8,  12,   9,    1,  -11 },   // 0x2D 'M' 
  {78,   407,   7,  12,   9,    1,  -11 },   // 0x2E 'N' 
  {79,   418,   8,  12,   9,    1,  -11 },   // 0x2F 'O' 
  {80,   430,   8,  12,   9,    1,  -11 },   // 0x30 'P' 
  {81,   442,   8,  15,   9,    1,  -11 },   // 0x31 'Q' 
  {82,   457,   8,  12,   9,    1,  -11 },   // 0x32 'R' 
  {83,   469,   7,  12,   9,    1,  -11 },   // 0x33 'S' 
  {84,   480,   8,  12,   9,    1,  -11 },   // 0x34 'T' 
  {85,   492,   7,  12,   9,    1,  -11 },   // 0x35 'U' 
  {86,   503,   9,  12,   9,    0,  -11 },   // 0x36 'V' 
  {87,   517,   9,  12,   9,    0,  -11 },   // 0x37 'W' 
  {88,   531,   8,  12,   9,    1,  -11 },   // 0x38 'X' 
  {89,   543,   8,  12,   9,    1,  -11 },   // 0x39 'Y' 
  {90,   555,   7,  12,   9,    1,  -11 },   // 0x3A 'Z' 
  {91,   566,   3,  14,   9,    4,  -11 },   // 0x3B '[' 
  {92,   572,   6,  12,   9,    1,  -11 },   // 0x3C '\' 
  {93,   581,   3,  14,   9,    2,  -10 },   // 0x3D ']' 
  {94,   587,   8,   8,   9,    1,  -11 },   // 0x3E '^' 
  {95,   595,   9,   1,   9,    0,    2 },   // 0x3F '_' 
  {96,   597,   3,   3,   9,    3,  -12 },   // 0x40 '`' 
  {97,   599,   7,   9,   9,    1,   -8 },   // 0x41 'a' 
  {98,   607,   8,  13,   9,    1,  -12 },   // 0x42 'b' 
  {99,   620,   7,   9,   9,    1,   -8 },   // 0x43 'c' 
  {100,   628,   7,  13,   9,    1,  -12 },   // 0x44 'd' 
  {101,   640,   7,   9,   9,    1,   -8 },   // 0x45 'e' 
  {102,   648,   8,  13,   9,    1,  -12 },   // 0x46 'f' 
  {103,   661,   7,  13,   9,    1,   -8 },   // 0x47 'g' 
  {104,   673,   7,  13,   9,    1,  -12 },   // 0x48 'h' 
  {105,   685,   7,  13,   9,    1,  -12 },   // 0x49 'i' 
  {106,   697,   5,  17,   9,    1,  -12 },   // 0x4A 'j' 
  {107,   708,   7,  13,   9,    2,  -12 },   // 0x4B 'k' 
  {108,   720,   7,  13,   9,    1,  -12 },   // 0x4C 'l' 
  {109,   732,   8,   9,   9,    1,   -8 },   // 0x4D 'm' 
  {110,   741,   7,   9,   9,    1,   -8 },   // 0x4E 'n' 
  {111,   749,   8,   9,   9,    1,   -8 },   // 0x4F 'o' 
  {112,   758,   8,  13,   9,    1,   -8 },   // 0x50 'p' 
  {113,   771,   7,  13,   9,    1,   -8 },   // 0x51 'q' 
  {114,   783,   8,   9,   9,    1,   -8 },   // 0x52 'r' 
  {115,   792,   6,   9,   9,    2,   -8 },   // 0x53 's' 
  {116,   799,   7,  12,   9,    1,  -11 },   // 0x54 't' 
  {117,   810,   7,   9,   9,    1,   -8 },   // 0x55 'u' 
  {118,   818,   8,   9,   9,    1,   -8 },   // 0x56 'v' 
  {119,   827,   9,   9,   9,    0,   -8 },   // 0x57 'w' 
  {120,   838,   8,   9,   9,    1,   -8 },   // 0x58 'x' 
  {121,   847,   8,  13,   9,    1,   -8 },   // 0x59 'y' 
  {122,   860,   7,   9,   9,    1,   -8 },   // 0x5A 'z' 
  {123,   868,   5,  14,   9,    2,  -11 },   // 0x5B '{' 
  {124,   877,   1,  17,   9,    4,  -12 },   // 0x5C '|' 
  {125,   880,   5,  14,   9,    2,  -10 },   // 0x5D '}' 
  {126,   889,   7,   2,   9,    1,   -6 }   // 0x5E '~' 
};

const gfxfont_t HotStuff8 PROGMEM = 
{
  (uint8_t  *)HotStuff8Bitmaps, //< Glyph bitmaps, concatenated 
  (gfxglyph_t *)HotStuff8Glyphs, //< Glyph array
  95,// total glyphs in the string
  17,  // newline distance (y axis)
     0,  // minimum X - left most
    -4,  // minimum Y - bottom most (descenders can drive this negative)
     9,  // maximum X - right most
    13}; // maximum Y - top most
// Approx. 1570 bytes -  but your mileage may vary.

#endif