
#ifndef __FIXEDFONTKINGTHINGSTRYPEWRITERTTF7
#define __FIXEDFONTKINGTHINGSTRYPEWRITERTTF7
const uint8_t HotStuff7Bitmaps[] PROGMEM = {
  0x00, 0x08, 0x18, 0x18, 0x14, 0x24, 0x3C, 0x22, 0x62, 0xE7, 0x7C, 0x44,
  0x89, 0x13, 0xE4, 0x48, 0x91, 0x7E, 0x7D, 0x38, 0xE1, 0x82, 0x08, 0xDE,
  0x38, 0xFC, 0x22, 0x22, 0x22, 0x23, 0x23, 0x22, 0x26, 0xFC, 0xFE, 0x22,
  0x22, 0x20, 0x38, 0x28, 0x20, 0x22, 0x7E, 0xFD, 0x14, 0x52, 0x79, 0x24,
  0x10, 0xF0, 0x3C, 0x89, 0x14, 0x08, 0x11, 0xE1, 0x36, 0x14, 0x64, 0x62,
  0x42, 0x42, 0x7E, 0x42, 0x42, 0x42, 0x67, 0xF4, 0x22, 0x22, 0x22, 0xF0,
  0x7C, 0x61, 0x04, 0x10, 0x4D, 0xA4, 0xF0, 0xC9, 0x22, 0xC3, 0x0E, 0x12,
  0x26, 0x44, 0xCE, 0xF8, 0x40, 0x81, 0x02, 0x04, 0x08, 0x91, 0x7E, 0x46,
  0x66, 0x76, 0x7A, 0x5A, 0x7A, 0x46, 0x66, 0xE6, 0xCF, 0xBA, 0x59, 0x55,
  0x74, 0xD3, 0xEC, 0x7C, 0x9F, 0x1E, 0x3C, 0x78, 0xF1, 0xE3, 0x7C, 0x7C,
  0x44, 0x89, 0x13, 0xC4, 0x08, 0x10, 0xF8, 0x79, 0x1A, 0x14, 0x28, 0x50,
  0xA1, 0x7E, 0x78, 0x1C, 0x00, 0x01, 0xF9, 0x0A, 0x27, 0xCF, 0x11, 0x22,
  0x45, 0xCC, 0x7E, 0x18, 0x5C, 0x0C, 0x18, 0x7F, 0x30, 0xFA, 0x5E, 0x9A,
  0x18, 0x18, 0x10, 0x18, 0x18, 0x78, 0x67, 0x42, 0x42, 0x42, 0x42, 0x42,
  0x42, 0x26, 0x3C, 0x0C, 0x8D, 0x22, 0x42, 0x85, 0x0E, 0x18, 0x10, 0xDF,
  0x5A, 0x5A, 0x5A, 0x7A, 0x7E, 0x26, 0x64, 0x24, 0x00, 0x84, 0x90, 0x01,
  0x83, 0x06, 0x16, 0x24, 0xCE, 0xCC, 0x90, 0xA1, 0x81, 0x02, 0x04, 0x08,
  0x78, 0xFE, 0x21, 0x04, 0x21, 0x04, 0x31, 0xFC, 0xF1, 0x10, 0x67, 0xC8,
  0x9F, 0x80, 0x00, 0xC1, 0x07, 0x92, 0x4D, 0x34, 0xDA, 0x70, 0x7C, 0xE3,
  0x08, 0x6D, 0xC0, 0x38, 0x11, 0xE6, 0x48, 0x91, 0x22, 0x6C, 0x7C, 0x7B,
  0x2F, 0xE0, 0xCD, 0xE0, 0x3C, 0xB2, 0x7E, 0x20, 0x82, 0x08, 0xF8, 0x3F,
  0x27, 0x44, 0x64, 0x7C, 0xD8, 0x7E, 0x82, 0x82, 0x7E, 0x81, 0x01, 0x23,
  0xA6, 0x48, 0x91, 0x23, 0xE6, 0x30, 0x80, 0x1C, 0x30, 0xC3, 0x0E, 0xFC,
  0x18, 0x0E, 0x10, 0x84, 0x21, 0x4A, 0x5E, 0xC0, 0x81, 0x3A, 0x47, 0x0E,
  0x12, 0x26, 0x66, 0xF0, 0x42, 0x0C, 0x10, 0x43, 0x0C, 0xFC, 0xFD, 0xAA,
  0x54, 0xAD, 0x5F, 0xBF, 0x80, 0xDC, 0x66, 0x66, 0x66, 0x66, 0x66, 0xFF,
  0x31, 0xE8, 0xE1, 0x85, 0x37, 0x80, 0x18, 0xF8, 0x89, 0x12, 0x24, 0x4D,
  0x94, 0x20, 0xC0, 0x40, 0x79, 0x32, 0x24, 0x48, 0x9B, 0x3E, 0x04, 0x1E,
  0x00, 0xFD, 0xB6, 0x10, 0x43, 0x86, 0x00, 0x7F, 0x14, 0x4E, 0x87, 0xF1,
  0x00, 0x20, 0x8F, 0x98, 0x20, 0x82, 0x0F, 0x38, 0xCC, 0x44, 0x44, 0x44,
  0x46, 0x7C, 0x3E, 0x7E, 0x48, 0xD0, 0xC1, 0x83, 0x00, 0x00, 0x7E, 0xB5,
  0xEB, 0xF7, 0xC4, 0x89, 0x00, 0x76, 0x68, 0x60, 0xC1, 0x86, 0xBD, 0x80,
  0x24, 0x92, 0x86, 0x18, 0x41, 0x34, 0x60, 0xFE, 0x69, 0x84, 0x61, 0x1F,
  0xC0, 0x7A, 0x38, 0x61, 0x86, 0x18, 0x63, 0x78, 0x60, 0x41, 0x04, 0x10,
  0xC3, 0x0C, 0xFC, 0x7A, 0x20, 0x42, 0x19, 0x84, 0x20, 0xF4, 0xFC, 0x63,
  0x1E, 0x0C, 0x10, 0xC2, 0x33, 0x80, 0x00, 0xC3, 0x14, 0x52, 0x4F, 0xC4,
  0x10, 0x7A, 0x04, 0x1C, 0x08, 0x10, 0x42, 0x19, 0x80, 0x18, 0x84, 0x20,
  0xFA, 0x18, 0x52, 0x30, 0xFE, 0x10, 0x82, 0x08, 0x41, 0x04, 0x10, 0x40,
  0x7A, 0x28, 0x71, 0xFE, 0x18, 0x61, 0x78, 0x6A, 0x18, 0x20, 0x44, 0xE0,
  0x40, 0x09, 0xC0, 0xFC, 0x65, 0x2A, 0x64, 0xC7, 0x43, 0x4A, 0x95, 0x46,
  0xE0, 0xF8, 0xFF, 0x3F, 0x4F, 0x81, 0xF0, 0xF2, 0x49, 0x24, 0x92, 0x60,
  0xE3, 0x36, 0x33, 0x33, 0x33, 0x36, 0x26, 0x44, 0x88, 0x8C, 0x44, 0x62,
  0x48, 0x92, 0x49, 0x2D, 0x40, 0x00, 0x20, 0x86, 0x10, 0x42, 0x08, 0x21,
  0x04, 0x20, 0x80 };

// Glyph, Offset to bitmap, Width, Height, xAdvance, xOffset, yOffset

const gfxglyph_t HotStuff7Glyphs[] PROGMEM = {
  {32,     0,   1,   1,   8,    0,    0 },   // 0x00 ' ' 
  {65,     1,   8,   9,   8,    0,   -8 },   // 0x01 'A' 
  {66,    10,   7,   9,   8,    0,   -8 },   // 0x02 'B' 
  {67,    18,   6,   9,   8,    1,   -7 },   // 0x03 'C' 
  {68,    25,   8,   9,   8,    0,   -8 },   // 0x04 'D' 
  {69,    34,   8,   9,   8,    0,   -8 },   // 0x05 'E' 
  {70,    43,   6,   9,   8,    1,   -8 },   // 0x06 'F' 
  {71,    50,   7,   9,   8,    1,   -8 },   // 0x07 'G' 
  {72,    58,   8,   9,   8,    0,   -8 },   // 0x08 'H' 
  {73,    67,   4,   9,   8,    2,   -8 },   // 0x09 'I' 
  {74,    72,   6,   9,   8,    1,   -8 },   // 0x0A 'J' 
  {75,    79,   7,   9,   8,    1,   -7 },   // 0x0B 'K' 
  {76,    87,   7,   9,   8,    0,   -8 },   // 0x0C 'L' 
  {77,    95,   8,   9,   8,    0,   -8 },   // 0x0D 'M' 
  {78,   104,   6,   9,   8,    1,   -8 },   // 0x0E 'N' 
  {79,   111,   7,   9,   8,    0,   -8 },   // 0x0F 'O' 
  {80,   119,   7,   9,   8,    0,   -8 },   // 0x10 'P' 
  {81,   127,   7,  11,   8,    1,   -8 },   // 0x11 'Q' 
  {82,   137,   7,  10,   8,    1,   -9 },   // 0x12 'R' 
  {83,   146,   6,   9,   8,    1,   -8 },   // 0x13 'S' 
  {84,   153,   8,   9,   9,    1,   -8 },   // 0x14 'T' 
  {85,   162,   8,   9,   8,    0,   -8 },   // 0x15 'U' 
  {86,   171,   7,   9,   8,    1,   -8 },   // 0x16 'V' 
  {87,   179,   8,  10,   8,    0,   -8 },   // 0x17 'W' 
  {88,   189,   7,   9,   8,    1,   -8 },   // 0x18 'X' 
  {89,   197,   7,   9,   8,    1,   -8 },   // 0x19 'Y' 
  {90,   205,   6,   9,   8,    1,   -8 },   // 0x1A 'Z' 
  {97,   212,   7,   7,   8,    1,   -6 },   // 0x1B 'a' 
  {98,   219,   6,   9,   8,    1,   -8 },   // 0x1C 'b' 
  {99,   226,   5,   7,   8,    1,   -6 },   // 0x1D 'c' 
  {100,   231,   7,   9,   8,    1,   -8 },   // 0x1E 'd' 
  {101,   239,   6,   6,   8,    1,   -5 },   // 0x1F 'e' 
  {102,   244,   6,   9,   8,    1,   -8 },   // 0x20 'f' 
  {103,   251,   8,  10,   8,    0,   -6 },   // 0x21 'g' 
  {104,   261,   7,   9,   8,    1,   -8 },   // 0x22 'h' 
  {105,   269,   6,   9,   8,    1,   -8 },   // 0x23 'i' 
  {106,   276,   5,  11,   8,    1,   -8 },   // 0x24 'j' 
  {107,   283,   7,   9,   8,    0,   -8 },   // 0x25 'k' 
  {108,   291,   6,   9,   8,    1,   -8 },   // 0x26 'l' 
  {109,   298,   7,   7,   8,    1,   -6 },   // 0x27 'm' 
  {110,   305,   8,   7,   8,    0,   -6 },   // 0x28 'n' 
  {111,   312,   6,   7,   8,    1,   -6 },   // 0x29 'o' 
  {112,   318,   7,  11,   8,    0,   -6 },   // 0x2A 'p' 
  {113,   328,   7,  10,   8,    1,   -6 },   // 0x2B 'q' 
  {114,   337,   6,   7,   8,    1,   -6 },   // 0x2C 'r' 
  {115,   343,   6,   7,   8,    1,   -6 },   // 0x2D 's' 
  {116,   349,   6,   9,   8,    1,   -8 },   // 0x2E 't' 
  {117,   356,   8,   7,   8,    0,   -6 },   // 0x2F 'u' 
  {118,   363,   7,   7,   8,    0,   -6 },   // 0x30 'v' 
  {119,   370,   7,   7,   8,    0,   -6 },   // 0x31 'w' 
  {120,   377,   7,   7,   8,    0,   -6 },   // 0x32 'x' 
  {121,   384,   6,   9,   8,    1,   -6 },   // 0x33 'y' 
  {122,   391,   6,   7,   8,    1,   -6 },   // 0x34 'z' 
  {48,   397,   6,   9,   8,    1,   -8 },   // 0x35 '0' 
  {49,   404,   6,   9,   8,    1,   -8 },   // 0x36 '1' 
  {50,   411,   6,   9,   8,    1,   -8 },   // 0x37 '2' 
  {51,   418,   6,  10,   8,    1,   -8 },   // 0x38 '3' 
  {52,   426,   6,   9,   8,    1,   -8 },   // 0x39 '4' 
  {53,   433,   6,  10,   8,    1,   -8 },   // 0x3A '5' 
  {54,   441,   6,   9,   8,    1,   -8 },   // 0x3B '6' 
  {55,   448,   6,  10,   8,    1,   -8 },   // 0x3C '7' 
  {56,   456,   6,   9,   8,    1,   -8 },   // 0x3D '8' 
  {57,   463,   6,  10,   8,    1,   -8 },   // 0x3E '9' 
  {45,   471,   6,   1,   8,    1,   -3 },   // 0x3F '-' 
  {37,   472,   7,   9,   8,    0,   -8 },   // 0x40 '%' 
  {46,   480,   2,   2,   8,    3,   -1 },   // 0x41 '.' 
  {44,   481,   2,   3,   8,    3,   -1 },   // 0x42 ',' 
  {33,   482,   2,   8,   8,    3,   -8 },   // 0x43 '!' 
  {58,   484,   3,   7,   8,    2,   -6 },   // 0x44 ':' 
  {91,   487,   3,  12,   8,    3,   -9 },   // 0x45 '[' 
  {93,   492,   4,  12,   8,    2,   -9 },   // 0x46 ']' 
  {40,   498,   4,  12,   8,    2,   -9 },   // 0x47 '(' 
  {41,   504,   3,  12,   8,    2,   -9 },   // 0x48 ')' 
  {47,   509,   6,  13,   8,    1,  -10 }   // 0x49 '/' 
};

const gfxfont_t HotStuff7 PROGMEM = 
{
  (uint8_t  *)HotStuff7Bitmaps, //< Glyph bitmaps, concatenated 
  (gfxglyph_t *)HotStuff7Glyphs, //< Glyph array
  74,// total glyphs in the string
  13,  // newline distance (y axis)
     0,  // minimum X - left most
    -4,  // minimum Y - bottom most (descenders can drive this negative)
     9,  // maximum X - right most
    11}; // maximum Y - top most
// Approx. 1051 bytes -  but your mileage may vary.

#endif