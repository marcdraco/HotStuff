
#ifndef __FIXEDFONTSOURCECODEPROBOLDTTF7
#define __FIXEDFONTSOURCECODEPROBOLDTTF7
const uint8_t HotStuff7Bitmaps[] PROGMEM = {
  0x00, 0x1C, 0x3C, 0x3C, 0x36, 0x26, 0x66, 0x7E, 0x63, 0xC3, 0xF9, 0x9B,
  0x36, 0x6F, 0x98, 0xF1, 0xE7, 0xFC, 0x3E, 0xCB, 0x06, 0x0C, 0x18, 0x30,
  0x32, 0x3E, 0xF9, 0x9B, 0x36, 0x3C, 0x78, 0xF3, 0x66, 0xF8, 0xFF, 0x0C,
  0x30, 0xFF, 0x0C, 0x30, 0xFC, 0xFF, 0x0C, 0x30, 0xFB, 0x0C, 0x30, 0xC0,
  0x3C, 0xCF, 0x06, 0x0C, 0x1B, 0xF1, 0xB3, 0x3C, 0xCF, 0x9F, 0x3E, 0x7F,
  0xF9, 0xF3, 0xE7, 0xCE, 0xFC, 0xC3, 0x0C, 0x30, 0xC3, 0x0C, 0xFC, 0x7C,
  0x30, 0xC3, 0x0C, 0x30, 0xF3, 0xF8, 0xCF, 0x9B, 0x67, 0x8F, 0x9F, 0x33,
  0x66, 0xC6, 0xE1, 0xC3, 0x87, 0x0E, 0x1C, 0x38, 0x70, 0xFE, 0xCF, 0x3A,
  0xED, 0xF7, 0x5C, 0x71, 0xC4, 0xCF, 0xBE, 0xFD, 0xF7, 0x5D, 0xF3, 0xCC,
  0x79, 0x9B, 0x1E, 0x3C, 0x78, 0xF1, 0xE6, 0x78, 0xFD, 0x8F, 0x1E, 0x3C,
  0xFF, 0xB0, 0x60, 0xC0, 0x3C, 0x66, 0x66, 0x63, 0xE3, 0x63, 0x67, 0x66,
  0x3C, 0x1C, 0x07, 0xFD, 0x9B, 0x1E, 0x3C, 0xDF, 0x37, 0x66, 0xC6, 0x7D,
  0x8B, 0x07, 0x87, 0xC3, 0xC1, 0xE6, 0xF8, 0xFF, 0x18, 0x18, 0x18, 0x18,
  0x18, 0x18, 0x18, 0x18, 0xC7, 0x8F, 0x1E, 0x3C, 0x78, 0xB1, 0x66, 0x78,
  0xE3, 0x63, 0x62, 0x66, 0x26, 0x36, 0x34, 0x1C, 0x1C, 0xC3, 0xC3, 0xCB,
  0x5B, 0x5B, 0x5F, 0x57, 0x56, 0x66, 0xE3, 0x66, 0x36, 0x3C, 0x1C, 0x3C,
  0x36, 0x66, 0xE3, 0xE3, 0x66, 0x66, 0x34, 0x3C, 0x18, 0x18, 0x18, 0x18,
  0xFE, 0x18, 0x60, 0xC3, 0x0E, 0x18, 0x70, 0xFE, 0x7A, 0x30, 0xDF, 0xCF,
  0x3F, 0x40, 0xC1, 0x83, 0x07, 0xEC, 0xD8, 0xF1, 0xE3, 0xCD, 0xF0, 0x3C,
  0xCF, 0x06, 0x0C, 0x0C, 0x8F, 0x80, 0x0C, 0x30, 0xDF, 0xCF, 0x3C, 0xF3,
  0xCD, 0xD0, 0x79, 0x9B, 0x1F, 0xFC, 0x1C, 0x1F, 0x00, 0x1E, 0x60, 0xC7,
  0xE3, 0x06, 0x0C, 0x18, 0x30, 0x60, 0x7F, 0x9B, 0x36, 0x67, 0x98, 0x1F,
  0x43, 0xC6, 0xF8, 0xC1, 0x83, 0x06, 0xEE, 0xD9, 0xF3, 0xE7, 0xCF, 0x9C,
  0x19, 0xC6, 0x0F, 0x8C, 0x63, 0x18, 0xC6, 0x19, 0xC6, 0x0F, 0x8C, 0x63,
  0x18, 0xC6, 0x31, 0xF8, 0xC1, 0x83, 0x06, 0x7D, 0xDF, 0x3E, 0x7C, 0xCD,
  0x8C, 0xF0, 0x60, 0xC1, 0x83, 0x06, 0x0C, 0x18, 0x30, 0x3C, 0xDF, 0xFB,
  0xDB, 0xDB, 0xDB, 0xDB, 0xDB, 0xDD, 0xDB, 0x3E, 0x7C, 0xF9, 0xF3, 0x80,
  0x79, 0x9B, 0x1E, 0x3C, 0x79, 0x9E, 0x00, 0xFD, 0x9B, 0x1E, 0x3C, 0x79,
  0xBE, 0x60, 0xC1, 0x80, 0x77, 0x3C, 0xF3, 0xCF, 0x37, 0xC3, 0x0C, 0x30,
  0x9E, 0x8C, 0x30, 0xC3, 0x0C, 0x00, 0x7D, 0x8B, 0x83, 0xE0, 0xF1, 0xBE,
  0x00, 0x30, 0x63, 0xF3, 0x87, 0x0E, 0x1C, 0x18, 0x1E, 0xCF, 0x3C, 0xF3,
  0xCF, 0x37, 0x40, 0xE3, 0x62, 0x66, 0x36, 0x34, 0x3C, 0x1C, 0xDB, 0xDB,
  0xDB, 0x7F, 0x7F, 0x77, 0x76, 0xCE, 0xD9, 0xE1, 0xC7, 0x8D, 0xB3, 0x80,
  0xE3, 0x62, 0x26, 0x36, 0x34, 0x1C, 0x1C, 0x18, 0x18, 0x70, 0xFC, 0x38,
  0x61, 0x87, 0x0C, 0x3F, 0x80, 0x79, 0x9B, 0x16, 0x3F, 0x7E, 0xF1, 0x66,
  0x78, 0x38, 0xF0, 0xE1, 0xC3, 0x87, 0x0E, 0x1C, 0xFE, 0xFA, 0x30, 0xC3,
  0x0C, 0x63, 0x18, 0xFC, 0xFA, 0x30, 0xC3, 0x38, 0x30, 0xE3, 0xF8, 0x0E,
  0x1E, 0x16, 0x36, 0x66, 0x66, 0xFF, 0x06, 0x06, 0x7D, 0x0C, 0x30, 0xF8,
  0x30, 0xE3, 0xF8, 0x3C, 0xCF, 0x06, 0x0F, 0xD8, 0xB1, 0xA6, 0x38, 0xFE,
  0x18, 0x60, 0xC3, 0x06, 0x0C, 0x18, 0x30, 0x79, 0x9B, 0x33, 0xE7, 0xD9,
  0xB1, 0xE6, 0x78, 0x79, 0x9B, 0x36, 0x27, 0xE0, 0x83, 0x46, 0xF8, 0xF8,
  0x71, 0xD3, 0xD6, 0x70, 0x00, 0x37, 0x6D, 0xCD, 0x07, 0xDF, 0x00, 0xDF,
  0xB5, 0x80, 0xDB, 0x6C, 0x37, 0xC0, 0xDF, 0x01, 0xBE, 0xF8, 0x88, 0x88,
  0x88, 0x88, 0x8F, 0xF8, 0xC6, 0x31, 0x8C, 0x63, 0x18, 0xC7, 0xF0, 0x27,
  0x4C, 0x88, 0x88, 0x8C, 0x46, 0x30, 0x8C, 0x62, 0x33, 0x33, 0x32, 0x6C,
  0x80 };

// Glyph, Offset to bitmap, Width, Height, xAdvance, xOffset, yOffset

const gfxglyph_t HotStuff7Glyphs[] PROGMEM = {
  {32,     0,   1,   1,   8,    0,    0 },   // 0x00 ' ' 
  {65,     1,   8,   9,   8,    0,   -8 },   // 0x01 'A' 
  {66,    10,   7,   9,   8,    1,   -8 },   // 0x02 'B' 
  {67,    18,   7,   9,   8,    1,   -8 },   // 0x03 'C' 
  {68,    26,   7,   9,   8,    1,   -8 },   // 0x04 'D' 
  {69,    34,   6,   9,   8,    1,   -8 },   // 0x05 'E' 
  {70,    41,   6,   9,   8,    2,   -8 },   // 0x06 'F' 
  {71,    48,   7,   9,   8,    1,   -8 },   // 0x07 'G' 
  {72,    56,   7,   9,   8,    1,   -8 },   // 0x08 'H' 
  {73,    64,   6,   9,   8,    1,   -8 },   // 0x09 'I' 
  {74,    71,   6,   9,   8,    1,   -8 },   // 0x0A 'J' 
  {75,    78,   7,   9,   8,    1,   -8 },   // 0x0B 'K' 
  {76,    86,   7,   9,   8,    1,   -8 },   // 0x0C 'L' 
  {77,    94,   6,   9,   8,    1,   -8 },   // 0x0D 'M' 
  {78,   101,   6,   9,   8,    1,   -8 },   // 0x0E 'N' 
  {79,   108,   7,   9,   8,    1,   -8 },   // 0x0F 'O' 
  {80,   116,   7,   9,   8,    1,   -8 },   // 0x10 'P' 
  {81,   124,   8,  11,   8,    0,   -8 },   // 0x11 'Q' 
  {82,   135,   7,   9,   8,    1,   -8 },   // 0x12 'R' 
  {83,   143,   7,   9,   8,    1,   -8 },   // 0x13 'S' 
  {84,   151,   8,   9,   8,    0,   -8 },   // 0x14 'T' 
  {85,   160,   7,   9,   8,    1,   -8 },   // 0x15 'U' 
  {86,   168,   8,   9,   8,    0,   -8 },   // 0x16 'V' 
  {87,   177,   8,   9,   8,    0,   -8 },   // 0x17 'W' 
  {88,   186,   8,   9,   8,    0,   -8 },   // 0x18 'X' 
  {89,   195,   8,   9,   8,    0,   -8 },   // 0x19 'Y' 
  {90,   204,   7,   9,   8,    1,   -8 },   // 0x1A 'Z' 
  {97,   212,   6,   7,   8,    1,   -6 },   // 0x1B 'a' 
  {98,   218,   7,  10,   8,    1,   -9 },   // 0x1C 'b' 
  {99,   227,   7,   7,   8,    1,   -6 },   // 0x1D 'c' 
  {100,   234,   6,  10,   8,    1,   -9 },   // 0x1E 'd' 
  {101,   242,   7,   7,   8,    1,   -6 },   // 0x1F 'e' 
  {102,   249,   7,  10,   8,    1,   -9 },   // 0x20 'f' 
  {103,   258,   7,  10,   8,    1,   -6 },   // 0x21 'g' 
  {104,   267,   7,  10,   8,    1,   -9 },   // 0x22 'h' 
  {105,   276,   5,  11,   8,    1,  -10 },   // 0x23 'i' 
  {106,   283,   5,  14,   8,    1,  -10 },   // 0x24 'j' 
  {107,   292,   7,  10,   8,    1,   -9 },   // 0x25 'k' 
  {108,   301,   7,  10,   8,    1,   -9 },   // 0x26 'l' 
  {109,   310,   8,   7,   8,    0,   -6 },   // 0x27 'm' 
  {110,   317,   7,   7,   8,    1,   -6 },   // 0x28 'n' 
  {111,   324,   7,   7,   8,    1,   -6 },   // 0x29 'o' 
  {112,   331,   7,  10,   8,    1,   -6 },   // 0x2A 'p' 
  {113,   340,   6,  10,   8,    1,   -6 },   // 0x2B 'q' 
  {114,   348,   6,   7,   8,    2,   -6 },   // 0x2C 'r' 
  {115,   354,   7,   7,   8,    1,   -6 },   // 0x2D 's' 
  {116,   361,   7,   9,   8,    1,   -8 },   // 0x2E 't' 
  {117,   369,   6,   7,   8,    1,   -6 },   // 0x2F 'u' 
  {118,   375,   8,   7,   8,    0,   -6 },   // 0x30 'v' 
  {119,   382,   8,   7,   8,    0,   -6 },   // 0x31 'w' 
  {120,   389,   7,   7,   8,    1,   -6 },   // 0x32 'x' 
  {121,   396,   8,  10,   8,    0,   -6 },   // 0x33 'y' 
  {122,   406,   7,   7,   8,    1,   -6 },   // 0x34 'z' 
  {48,   413,   7,   9,   8,    1,   -8 },   // 0x35 '0' 
  {49,   421,   7,   9,   8,    1,   -8 },   // 0x36 '1' 
  {50,   429,   6,   9,   8,    1,   -8 },   // 0x37 '2' 
  {51,   436,   6,   9,   8,    1,   -8 },   // 0x38 '3' 
  {52,   443,   8,   9,   8,    0,   -8 },   // 0x39 '4' 
  {53,   452,   6,   9,   8,    1,   -8 },   // 0x3A '5' 
  {54,   459,   7,   9,   8,    1,   -8 },   // 0x3B '6' 
  {55,   467,   7,   9,   8,    1,   -8 },   // 0x3C '7' 
  {56,   475,   7,   9,   8,    1,   -8 },   // 0x3D '8' 
  {57,   483,   7,   9,   8,    1,   -8 },   // 0x3E '9' 
  {45,   491,   5,   1,   8,    2,   -4 },   // 0x3F '-' 
  {37,   492,   8,   9,   8,    0,   -8 },   // 0x40 '%' 
  {46,   501,   3,   3,   8,    3,   -2 },   // 0x41 '.' 
  {44,   503,   3,   6,   8,    3,   -2 },   // 0x42 ',' 
  {33,   506,   3,   9,   8,    3,   -8 },   // 0x43 '!' 
  {58,   510,   3,   8,   8,    3,   -7 },   // 0x44 ':' 
  {91,   513,   4,  12,   8,    3,   -9 },   // 0x45 '[' 
  {93,   519,   5,  12,   8,    1,   -9 },   // 0x46 ']' 
  {40,   527,   4,  13,   8,    3,   -9 },   // 0x47 '(' 
  {41,   534,   4,  13,   8,    2,   -9 }   // 0x48 ')' 
};

const gfxfont_t HotStuff7 PROGMEM = 
{
  (uint8_t  *)HotStuff7Bitmaps, //< Glyph bitmaps, concatenated 
  (gfxglyph_t *)HotStuff7Glyphs, //< Glyph array
  73,// total glyphs in the string
  14,  // newline distance (y axis)
     0,  // minimum X - left most
    -3,  // minimum Y - bottom most (descenders can drive this negative)
     8,  // maximum X - right most
    11}; // maximum Y - top most
// Approx. 1066 bytes -  but your mileage may vary.

#endif