
#ifndef __FIXEDFONTUBUNTUMONORTTF6
#define __FIXEDFONTUBUNTUMONORTTF6
const uint8_t HotStuff6Bitmaps[] PROGMEM = {
  0x00, 0xFA, 0xB6, 0x80, 0x29, 0x7E, 0xAF, 0xD2, 0x80, 0x27, 0x88, 0x61,
  0x1E, 0x20, 0xED, 0xAD, 0xF6, 0xB6, 0xE0, 0x22, 0x94, 0xD9, 0xC9, 0xA0,
  0xE0, 0x2A, 0x49, 0x22, 0x20, 0x88, 0x92, 0x4A, 0x80, 0x27, 0xC8, 0xA0,
  0x21, 0x3E, 0x42, 0x00, 0x58, 0xE0, 0x80, 0x11, 0x22, 0x24, 0x44, 0x88,
  0x69, 0x9F, 0x99, 0x60, 0x2E, 0x22, 0x22, 0xF0, 0x69, 0x12, 0x48, 0xF0,
  0xE1, 0x16, 0x11, 0xE0, 0x31, 0x95, 0x2F, 0x88, 0x40, 0xF8, 0x8E, 0x11,
  0xE0, 0x34, 0x8E, 0x99, 0x60, 0xF1, 0x22, 0x44, 0x40, 0x69, 0x96, 0x99,
  0xE0, 0x69, 0x97, 0x12, 0xC0, 0x88, 0x40, 0x58, 0x16, 0x86, 0x10, 0xF0,
  0xF0, 0x86, 0x16, 0x80, 0xE1, 0x12, 0x40, 0x40, 0x32, 0x63, 0x3A, 0xD6,
  0x68, 0x30, 0x22, 0x94, 0xA7, 0x46, 0x20, 0xE9, 0x9E, 0x99, 0xE0, 0x78,
  0x88, 0x88, 0x70, 0xE9, 0x99, 0x99, 0xE0, 0xF8, 0x8E, 0x88, 0xF0, 0xF8,
  0x8F, 0x88, 0x80, 0x78, 0x88, 0x99, 0x70, 0x99, 0x9F, 0x99, 0x90, 0xE9,
  0x24, 0xB8, 0x71, 0x11, 0x19, 0x60, 0x9A, 0xAC, 0xAA, 0x90, 0x88, 0x88,
  0x88, 0xF0, 0x8E, 0xF7, 0x58, 0xC6, 0x20, 0x9D, 0xDB, 0xBB, 0x90, 0x69,
  0x99, 0x99, 0x60, 0xE9, 0x99, 0xE8, 0x80, 0x69, 0x99, 0x99, 0x64, 0x30,
  0xE9, 0x9E, 0xA9, 0x90, 0x78, 0x86, 0x11, 0xE0, 0xF9, 0x08, 0x42, 0x10,
  0x80, 0x99, 0x99, 0x99, 0x60, 0x8C, 0x54, 0xA5, 0x38, 0x80, 0x86, 0x18,
  0x6D, 0xB6, 0xD4, 0x80, 0x8A, 0x94, 0x45, 0x2A, 0x20, 0x8A, 0x94, 0x42,
  0x10, 0x80, 0xF1, 0x24, 0x48, 0xF0, 0xF2, 0x49, 0x24, 0xE0, 0x88, 0x44,
  0x42, 0x22, 0x11, 0xE4, 0x92, 0x49, 0xE0, 0x22, 0x95, 0x10, 0xFC, 0x90,
  0x61, 0x79, 0x97, 0x88, 0xE9, 0x99, 0x9E, 0x78, 0x88, 0x87, 0x11, 0x79,
  0x99, 0x97, 0x69, 0xF8, 0x87, 0x3A, 0x3C, 0x84, 0x21, 0x08, 0x7C, 0x63,
  0x18, 0xBC, 0x3E, 0x88, 0xE9, 0x99, 0x99, 0x40, 0xC4, 0x44, 0x43, 0x10,
  0x1E, 0x10, 0x84, 0x21, 0x0F, 0x80, 0x88, 0x9A, 0xCC, 0xA9, 0xC4, 0x44,
  0x44, 0x43, 0xF5, 0x6B, 0x58, 0xC4, 0xE9, 0x99, 0x99, 0x69, 0x99, 0x96,
  0xE9, 0x99, 0x9E, 0x88, 0x79, 0x99, 0x97, 0x11, 0xF8, 0x88, 0x88, 0x78,
  0x42, 0x1E, 0x44, 0xF4, 0x44, 0x43, 0x99, 0x99, 0x97, 0x8C, 0x54, 0xA5,
  0x10, 0x8D, 0x6B, 0x55, 0x28, 0x8A, 0x88, 0x45, 0x44, 0x99, 0x95, 0x62,
  0x2C, 0xF1, 0x24, 0x8F, 0x34, 0x44, 0x84, 0x44, 0x43, 0xFF, 0xC0, 0xC2,
  0x22, 0x12, 0x22, 0x2C, 0x6C, 0x80 };

// Glyph, Offset to bitmap, Width, Height, xAdvance, xOffset, yOffset

const gfxglyph_t HotStuff6Glyphs[] PROGMEM = {
  {32,     0,   1,   1,   6,    0,    0 },   // 0x00 ' ' 
  {33,     1,   1,   7,   6,    2,   -6 },   // 0x01 '!' 
  {34,     2,   3,   3,   6,    2,   -7 },   // 0x02 '"' 
  {35,     4,   5,   7,   6,    0,   -6 },   // 0x03 '#' 
  {36,     9,   4,   9,   6,    1,   -7 },   // 0x04 '$' 
  {37,    14,   5,   7,   6,    0,   -6 },   // 0x05 '%' 
  {38,    19,   5,   7,   6,    0,   -6 },   // 0x06 '&' 
  {39,    24,   1,   3,   6,    2,   -7 },   // 0x07 ''' 
  {40,    25,   3,   9,   6,    1,   -6 },   // 0x08 '(' 
  {41,    29,   3,   9,   6,    2,   -6 },   // 0x09 ')' 
  {42,    33,   5,   4,   6,    1,   -6 },   // 0x0A '*' 
  {43,    36,   5,   5,   6,    1,   -5 },   // 0x0B '+' 
  {44,    40,   2,   3,   6,    1,    0 },   // 0x0C ',' 
  {45,    41,   3,   1,   6,    2,   -3 },   // 0x0D '-' 
  {46,    42,   1,   1,   6,    2,    0 },   // 0x0E '.' 
  {47,    43,   4,  10,   6,    1,   -7 },   // 0x0F '/' 
  {48,    48,   4,   7,   6,    1,   -6 },   // 0x10 '0' 
  {49,    52,   4,   7,   6,    1,   -6 },   // 0x11 '1' 
  {50,    56,   4,   7,   6,    1,   -6 },   // 0x12 '2' 
  {51,    60,   4,   7,   6,    1,   -6 },   // 0x13 '3' 
  {52,    64,   5,   7,   6,    0,   -6 },   // 0x14 '4' 
  {53,    69,   4,   7,   6,    1,   -6 },   // 0x15 '5' 
  {54,    73,   4,   7,   6,    1,   -6 },   // 0x16 '6' 
  {55,    77,   4,   7,   6,    1,   -6 },   // 0x17 '7' 
  {56,    81,   4,   7,   6,    1,   -6 },   // 0x18 '8' 
  {57,    85,   4,   7,   6,    1,   -6 },   // 0x19 '9' 
  {58,    89,   1,   5,   6,    2,   -4 },   // 0x1A ':' 
  {59,    90,   2,   7,   6,    1,   -4 },   // 0x1B ';' 
  {60,    92,   4,   5,   6,    1,   -5 },   // 0x1C '<' 
  {61,    95,   4,   3,   6,    1,   -4 },   // 0x1D '=' 
  {62,    97,   4,   5,   6,    1,   -5 },   // 0x1E '>' 
  {63,   100,   4,   7,   6,    1,   -6 },   // 0x1F '?' 
  {64,   104,   5,   9,   6,    0,   -6 },   // 0x20 '@' 
  {65,   110,   5,   7,   6,    0,   -6 },   // 0x21 'A' 
  {66,   115,   4,   7,   6,    1,   -6 },   // 0x22 'B' 
  {67,   119,   4,   7,   6,    1,   -6 },   // 0x23 'C' 
  {68,   123,   4,   7,   6,    1,   -6 },   // 0x24 'D' 
  {69,   127,   4,   7,   6,    1,   -6 },   // 0x25 'E' 
  {70,   131,   4,   7,   6,    1,   -6 },   // 0x26 'F' 
  {71,   135,   4,   7,   6,    1,   -6 },   // 0x27 'G' 
  {72,   139,   4,   7,   6,    1,   -6 },   // 0x28 'H' 
  {73,   143,   3,   7,   6,    2,   -6 },   // 0x29 'I' 
  {74,   146,   4,   7,   6,    1,   -6 },   // 0x2A 'J' 
  {75,   150,   4,   7,   6,    1,   -6 },   // 0x2B 'K' 
  {76,   154,   4,   7,   6,    1,   -6 },   // 0x2C 'L' 
  {77,   158,   5,   7,   6,    0,   -6 },   // 0x2D 'M' 
  {78,   163,   4,   7,   6,    1,   -6 },   // 0x2E 'N' 
  {79,   167,   4,   7,   6,    1,   -6 },   // 0x2F 'O' 
  {80,   171,   4,   7,   6,    1,   -6 },   // 0x30 'P' 
  {81,   175,   4,   9,   6,    1,   -6 },   // 0x31 'Q' 
  {82,   180,   4,   7,   6,    1,   -6 },   // 0x32 'R' 
  {83,   184,   4,   7,   6,    1,   -6 },   // 0x33 'S' 
  {84,   188,   5,   7,   6,    1,   -6 },   // 0x34 'T' 
  {85,   193,   4,   7,   6,    1,   -6 },   // 0x35 'U' 
  {86,   197,   5,   7,   6,    0,   -6 },   // 0x36 'V' 
  {87,   202,   6,   7,   6,    0,   -6 },   // 0x37 'W' 
  {88,   208,   5,   7,   6,    0,   -6 },   // 0x38 'X' 
  {89,   213,   5,   7,   6,    1,   -6 },   // 0x39 'Y' 
  {90,   218,   4,   7,   6,    1,   -6 },   // 0x3A 'Z' 
  {91,   222,   3,   9,   6,    2,   -6 },   // 0x3B '[' 
  {92,   226,   4,  10,   6,    1,   -7 },   // 0x3C '\' 
  {93,   231,   3,   9,   6,    1,   -6 },   // 0x3D ']' 
  {94,   235,   5,   4,   6,    1,   -6 },   // 0x3E '^' 
  {95,   238,   6,   1,   6,    0,    2 },   // 0x3F '_' 
  {96,   239,   2,   2,   6,    2,   -7 },   // 0x40 '`' 
  {97,   240,   4,   6,   6,    1,   -5 },   // 0x41 'a' 
  {98,   243,   4,   8,   6,    1,   -7 },   // 0x42 'b' 
  {99,   247,   4,   6,   6,    1,   -5 },   // 0x43 'c' 
  {100,   250,   4,   8,   6,    1,   -7 },   // 0x44 'd' 
  {101,   254,   4,   6,   6,    1,   -5 },   // 0x45 'e' 
  {102,   257,   5,   8,   6,    1,   -7 },   // 0x46 'f' 
  {103,   262,   5,   8,   6,    0,   -5 },   // 0x47 'g' 
  {104,   267,   4,   8,   6,    1,   -7 },   // 0x48 'h' 
  {105,   271,   4,   8,   6,    1,   -7 },   // 0x49 'i' 
  {106,   275,   5,  10,   6,    0,   -7 },   // 0x4A 'j' 
  {107,   282,   4,   8,   6,    1,   -7 },   // 0x4B 'k' 
  {108,   286,   4,   8,   6,    1,   -7 },   // 0x4C 'l' 
  {109,   290,   5,   6,   6,    0,   -5 },   // 0x4D 'm' 
  {110,   294,   4,   6,   6,    1,   -5 },   // 0x4E 'n' 
  {111,   297,   4,   6,   6,    1,   -5 },   // 0x4F 'o' 
  {112,   300,   4,   8,   6,    1,   -5 },   // 0x50 'p' 
  {113,   304,   4,   8,   6,    1,   -5 },   // 0x51 'q' 
  {114,   308,   4,   6,   6,    1,   -5 },   // 0x52 'r' 
  {115,   311,   4,   6,   6,    1,   -5 },   // 0x53 's' 
  {116,   314,   4,   8,   6,    1,   -7 },   // 0x54 't' 
  {117,   318,   4,   6,   6,    1,   -5 },   // 0x55 'u' 
  {118,   321,   5,   6,   6,    0,   -5 },   // 0x56 'v' 
  {119,   325,   5,   6,   6,    0,   -5 },   // 0x57 'w' 
  {120,   329,   5,   6,   6,    0,   -5 },   // 0x58 'x' 
  {121,   333,   4,   8,   6,    1,   -5 },   // 0x59 'y' 
  {122,   337,   4,   6,   6,    1,   -5 },   // 0x5A 'z' 
  {123,   340,   4,  10,   6,    1,   -7 },   // 0x5B '{' 
  {124,   345,   1,  10,   6,    3,   -7 },   // 0x5C '|' 
  {125,   347,   4,  10,   6,    1,   -7 },   // 0x5D '}' 
  {126,   352,   5,   2,   6,    0,   -3 }   // 0x5E '~' 
};

const gfxfont_t HotStuff6 PROGMEM = 
{
  (uint8_t  *)HotStuff6Bitmaps, //< Glyph bitmaps, concatenated 
  (gfxglyph_t *)HotStuff6Glyphs, //< Glyph array
  95,// total glyphs in the string
   1,  // newline distance (y axis)
     0,  // minimum X - left most
    -2,  // minimum Y - bottom most (descenders can drive this negative)
     6,  // maximum X - right most
     8}; // maximum Y - top most
// Approx. 1033 bytes -  but your mileage may vary.

#endif