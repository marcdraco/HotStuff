
#ifndef __FIXEDFONTGOMMOGRATTF18
#define __FIXEDFONTGOMMOGRATTF18
const uint8_t HotStuff18Bitmaps[] PROGMEM = {
  0x00, 0x1D, 0x87, 0x81, 0x19, 0xE5, 0x04, 0x31, 0xBF, 0x05, 0x18, 0xBF,
  0xFB, 0xED, 0xBF, 0xFE, 0x95, 0xBF, 0xFF, 0xDA, 0xDF, 0xFF, 0xD1, 0x5F,
  0xFF, 0xF8, 0xEF, 0xE1, 0xF8, 0x77, 0xE2, 0xFC, 0xAF, 0xF1, 0x3E, 0xDF,
  0xF8, 0x1F, 0x6F, 0xF8, 0x0F, 0xF6, 0xFC, 0x07, 0xFA, 0x7E, 0x43, 0xF9,
  0x3F, 0x21, 0xFC, 0x9F, 0x80, 0xFE, 0x8F, 0xC0, 0x7E, 0xC7, 0xE8, 0x3F,
  0x6B, 0xF4, 0x1F, 0xB5, 0xFA, 0x4F, 0xDA, 0xFD, 0x37, 0xED, 0x7F, 0x2B,
  0xF6, 0x7F, 0x93, 0xF9, 0x3F, 0xEB, 0xFC, 0x8F, 0xFD, 0xFE, 0xCB, 0xF7,
  0x7F, 0x73, 0xFE, 0xFF, 0xB9, 0xFF, 0xFF, 0x5C, 0x3F, 0xFF, 0x97, 0x0F,
  0xFF, 0x8B, 0x87, 0xFF, 0xC4, 0x44, 0xE3, 0x94, 0x29, 0xEF, 0xF6, 0x40,
  0x00, 0x00, 0xA0, 0x8C, 0x00, 0x20, 0x39, 0xE0, 0x22, 0x40, 0x0F, 0xD0,
  0xA0, 0x0F, 0xA3, 0x00, 0x07, 0xF1, 0x84, 0x6F, 0xFB, 0x52, 0xDF, 0xF9,
  0xAB, 0x5F, 0xFC, 0xD5, 0x8F, 0xFE, 0xAA, 0xC7, 0xFF, 0x55, 0x23, 0xDF,
  0xA4, 0x91, 0x0F, 0xD8, 0xC0, 0x27, 0xEC, 0x60, 0xC3, 0xF4, 0x32, 0x07,
  0xFA, 0x15, 0x56, 0xFA, 0x8A, 0xAA, 0x7D, 0x85, 0x15, 0x3F, 0x42, 0x0A,
  0x9F, 0x61, 0x05, 0x4F, 0xB0, 0xC0, 0xA7, 0xD8, 0x60, 0x13, 0xEC, 0x50,
  0x11, 0xF6, 0x29, 0x20, 0xFD, 0x10, 0x98, 0x7E, 0x14, 0x4F, 0x3F, 0x08,
  0x2F, 0x9F, 0xBE, 0x07, 0xFF, 0xFF, 0x03, 0xFF, 0xFF, 0xC1, 0xFF, 0xFF,
  0xF0, 0xFF, 0xFF, 0xF9, 0x7B, 0xFF, 0xFC, 0xC0, 0x00, 0x06, 0x00, 0x6F,
  0x1F, 0x03, 0xD0, 0x30, 0x80, 0xC0, 0x80, 0x11, 0x01, 0x87, 0xC4, 0xB0,
  0x1F, 0xF1, 0x31, 0xFF, 0xFE, 0x9D, 0x1F, 0xFF, 0xAC, 0x7F, 0xFF, 0xD4,
  0x3F, 0xFF, 0xF6, 0x3F, 0xFF, 0xFB, 0x0F, 0xC0, 0xFF, 0x03, 0xEC, 0x7E,
  0x80, 0xF8, 0x3F, 0x00, 0xF8, 0x3F, 0x88, 0x28, 0x1F, 0xC6, 0x00, 0x1F,
  0xC0, 0xA0, 0xDF, 0xE0, 0x65, 0x3F, 0xE8, 0x22, 0xBF, 0xF4, 0x25, 0x7F,
  0xF6, 0x1A, 0x7F, 0xEC, 0x45, 0x7F, 0xD8, 0x26, 0xBF, 0xD0, 0x43, 0x3F,
  0xC0, 0x41, 0xBF, 0x8F, 0x00, 0xBF, 0xCE, 0x32, 0x5F, 0xC0, 0x3D, 0x2F,
  0xE0, 0x3E, 0x8F, 0xFF, 0xFF, 0x47, 0xFF, 0xFF, 0x23, 0xFF, 0xFF, 0xD1,
  0xFF, 0xFF, 0xE8, 0xFF, 0xFF, 0xF0, 0x12, 0x78, 0x38, 0x3E, 0xEF, 0xE2,
  0x43, 0x08, 0x03, 0x80, 0x60, 0x7E, 0x40, 0x03, 0x00, 0xC2, 0x40, 0x60,
  0x0D, 0x2E, 0x00, 0x0F, 0x8F, 0xFF, 0xFF, 0xC3, 0xFF, 0xFF, 0xA1, 0xFF,
  0xFF, 0xD0, 0xFF, 0xFF, 0xF0, 0x7F, 0xFF, 0xE0, 0xBF, 0x03, 0xE0, 0x5E,
  0xE1, 0xF0, 0x26, 0x05, 0xF4, 0x01, 0x03, 0xFA, 0x40, 0x42, 0xF9, 0xA0,
  0x40, 0xFE, 0x90, 0x00, 0xFE, 0x08, 0x04, 0xFF, 0x8C, 0x02, 0x7F, 0xE2,
  0x11, 0x3F, 0xF9, 0x08, 0x1F, 0xFE, 0x02, 0x87, 0xFF, 0x88, 0x30, 0x7F,
  0xE0, 0x86, 0x0F, 0xF4, 0x31, 0x03, 0xF8, 0x7C, 0x69, 0xFC, 0x2F, 0x4C,
  0x7F, 0x17, 0x99, 0x7F, 0x0B, 0xFF, 0x7F, 0xA5, 0xFF, 0xFF, 0xD2, 0xFF,
  0xFF, 0xE9, 0xFF, 0xFF, 0xEC, 0xFF, 0xFF, 0xFB, 0x3C, 0xFF, 0xF5, 0x2F,
  0x8F, 0xE4, 0xC0, 0x30, 0x04, 0xB8, 0x20, 0x1C, 0x40, 0x04, 0x00, 0x00,
  0x05, 0x1F, 0x80, 0x29, 0xF0, 0xFC, 0x19, 0x47, 0xFE, 0x6A, 0x93, 0xFF,
  0x65, 0x51, 0xFF, 0xCA, 0xAD, 0xFF, 0xE5, 0x54, 0xFF, 0xC2, 0xAA, 0xFF,
  0xE6, 0x52, 0x7F, 0xF2, 0x09, 0x7F, 0xF9, 0x01, 0x7F, 0xFE, 0x82, 0xBF,
  0x7E, 0xA1, 0x3F, 0x3F, 0x51, 0x1F, 0x9F, 0xAC, 0x9F, 0x8F, 0xD6, 0x4F,
  0xCF, 0xEB, 0x0F, 0xC7, 0xF4, 0x8F, 0xC1, 0xF9, 0xA7, 0xFF, 0xFF, 0xD7,
  0xFF, 0xFF, 0xEB, 0xFF, 0xFF, 0xF5, 0xFF, 0xFF, 0xFA, 0xFF, 0xFF, 0xFE,
  0x00, 0x07, 0xF1, 0x00, 0x2B, 0xF9, 0x80, 0x55, 0xFA, 0x00, 0xB4, 0xFC,
  0x00, 0x5A, 0xFF, 0x80, 0x6E, 0xFF, 0xC0, 0x34, 0x7F, 0xE0, 0x17, 0x3F,
  0xE0, 0x19, 0x40, 0x04, 0x02, 0x10, 0x31, 0x00, 0x07, 0xE1, 0xC0, 0x20,
  0x80, 0xF9, 0x01, 0x4B, 0x06, 0x1F, 0x7B, 0xFE, 0x17, 0xFF, 0xFC, 0x47,
  0xFF, 0xFC, 0x07, 0xFF, 0xFC, 0x07, 0xFF, 0xF8, 0x07, 0xFF, 0xF8, 0x4F,
  0x81, 0xFC, 0x6F, 0x86, 0x7C, 0x6F, 0x85, 0xBC, 0x6F, 0x81, 0x58, 0x6F,
  0xC0, 0x84, 0xAF, 0x80, 0x54, 0xAF, 0x9F, 0x15, 0x2F, 0xFF, 0xE5, 0x0F,
  0xFF, 0xF1, 0x0F, 0xFF, 0xFC, 0x03, 0xFF, 0xFC, 0x81, 0x01, 0xFE, 0x80,
  0x00, 0xFD, 0xA0, 0x00, 0xFE, 0x00, 0x6E, 0x7E, 0x0C, 0x18, 0x7E, 0x5E,
  0x86, 0x7E, 0x5E, 0x62, 0xFE, 0x5F, 0x1C, 0xFF, 0x5F, 0xE3, 0xFF, 0x5F,
  0xFF, 0xFD, 0x5F, 0xFF, 0xFF, 0x5F, 0xFF, 0xFD, 0xBC, 0x7F, 0xF5, 0x1B,
  0x8F, 0x89, 0x80, 0xC0, 0x32, 0xD1, 0x00, 0xC0, 0x40, 0x00, 0x83, 0x10,
  0x78, 0x30, 0x08, 0xC2, 0xC0, 0xC8, 0xBF, 0xFE, 0x26, 0xBF, 0xFC, 0xD6,
  0xBF, 0xFF, 0xC8, 0xFF, 0xFF, 0xE4, 0x1F, 0xFF, 0xF8, 0x0F, 0xFF, 0xF8,
  0x0F, 0xF0, 0xF8, 0x17, 0xF7, 0xB8, 0x0B, 0xFC, 0x4E, 0x01, 0xFC, 0x82,
  0x01, 0xFE, 0x81, 0x0C, 0xFE, 0x52, 0x02, 0x7E, 0x3F, 0x82, 0x3F, 0xFF,
  0xE0, 0x9F, 0xFF, 0xF8, 0x0F, 0xFF, 0xFE, 0x07, 0xFF, 0xFF, 0x8B, 0xFC,
  0x1F, 0xDD, 0xFC, 0xA7, 0xEF, 0xFE, 0x23, 0xF5, 0xFF, 0x11, 0xFA, 0xDF,
  0x88, 0xFD, 0x6F, 0xE2, 0xFE, 0x77, 0xF8, 0xFE, 0xD5, 0xFF, 0xFF, 0x8E,
  0xFF, 0xFF, 0x46, 0xBF, 0xFF, 0xAA, 0xDF, 0xFF, 0xBD, 0x17, 0xFF, 0xB6,
  0x86, 0x00, 0x14, 0x6C, 0xFE, 0x14, 0x0B, 0xE5, 0xF0, 0x20, 0x02, 0x00,
  0xC0, 0x81, 0xC0, 0x3A, 0xF0, 0x10, 0x1E, 0xFF, 0xFF, 0xFE, 0x3F, 0xFF,
  0xFA, 0x3F, 0xFF, 0xFE, 0x3F, 0xFF, 0xFE, 0x3F, 0xFF, 0xFD, 0xBF, 0x0F,
  0xFA, 0xBC, 0x73, 0xF4, 0x98, 0x0B, 0xF8, 0x04, 0x03, 0xEA, 0x04, 0x07,
  0xE2, 0x08, 0x07, 0xC2, 0x00, 0x0F, 0xC6, 0x05, 0x0F, 0x82, 0x95, 0x1F,
  0x84, 0x15, 0x1F, 0x44, 0x05, 0x1F, 0x55, 0x65, 0xBF, 0x55, 0x65, 0x3E,
  0x54, 0xB4, 0x7E, 0x6C, 0x2A, 0x7C, 0xC0, 0x2C, 0x7B, 0x09, 0x2A, 0xF8,
  0x09, 0x24, 0xF8, 0x31, 0xA5, 0xF9, 0x75, 0xA1, 0xF9, 0x39, 0x4B, 0xF2,
  0xB5, 0xB7, 0xF4, 0xF4, 0xAF, 0xF0, 0xD4, 0xAF, 0xF4, 0x10, 0xAC, 0xF6,
  0x62, 0xA0, 0xA1, 0x06, 0x00, 0x17, 0xFB, 0xB0, 0x18, 0x00, 0x23, 0xC3,
  0xD8, 0x01, 0xFF, 0x8E, 0x21, 0xFF, 0x82, 0x47, 0xFF, 0xE1, 0x5F, 0xFF,
  0xF0, 0x6F, 0xFF, 0xF0, 0x9F, 0xFF, 0xF8, 0x9F, 0xFF, 0xFC, 0x9F, 0xC7,
  0xFA, 0xBF, 0x81, 0xFA, 0xBF, 0x81, 0xFE, 0x9F, 0x81, 0xFA, 0x5F, 0xC3,
  0xFC, 0x9F, 0xE7, 0xFC, 0x8F, 0xFF, 0xF8, 0x87, 0xFF, 0xE0, 0x97, 0xFF,
  0xEC, 0x2F, 0xFF, 0xFA, 0x3F, 0xFF, 0xF4, 0x1F, 0xC3, 0xFA, 0x9F, 0x83,
  0xFA, 0xBF, 0x91, 0xFE, 0xBF, 0x81, 0xFE, 0xBF, 0x81, 0xFE, 0x3F, 0xC3,
  0xFE, 0x1F, 0xFF, 0xFA, 0x1F, 0xFF, 0xFC, 0x5F, 0xFF, 0xFC, 0x6F, 0xFF,
  0xF0, 0xE7, 0xFF, 0xE1, 0xA9, 0xFF, 0x86, 0x57, 0x1C, 0x8A, 0x30, 0x3F,
  0x7C, 0x08, 0xFB, 0x80, 0x08, 0x10, 0x69, 0x19, 0x87, 0xFE, 0x81, 0x04,
  0x67, 0x27, 0x9F, 0xFC, 0xD6, 0x9F, 0xFF, 0x6A, 0x5F, 0xFF, 0xEC, 0x5F,
  0xFF, 0xEC, 0x2F, 0xFF, 0xFD, 0x0F, 0xE1, 0xFD, 0x87, 0xE8, 0x7E, 0xEB,
  0xFC, 0x3F, 0xB7, 0xFA, 0x0F, 0xFB, 0xFD, 0x07, 0xEE, 0xFE, 0x27, 0xF4,
  0x3F, 0x83, 0xFA, 0x1F, 0xFF, 0xFC, 0x07, 0xFF, 0xFE, 0x41, 0xFF, 0xFF,
  0xA2, 0x7F, 0xFF, 0xC8, 0x87, 0xCF, 0xE6, 0x04, 0x47, 0xF2, 0x30, 0xAB,
  0xF8, 0xA8, 0x2B, 0xFC, 0x53, 0x45, 0xFE, 0x51, 0xA5, 0xFF, 0x25, 0xED,
  0xFE, 0x95, 0xFF, 0xFF, 0x05, 0xFF, 0xFF, 0x08, 0xFF, 0xFF, 0xB4, 0x3F,
  0xFF, 0xB6, 0x33, 0xFF, 0x35, 0x06, 0x7F, 0x24, 0x60, 0xE0, 0xF2, 0x01,
  0x83, 0xB0, 0x18, 0x30, 0x00, 0x00, 0x00, 0x0C, 0x40, 0x20, 0x00, 0x00,
  0x20, 0x00, 0x92, 0x04, 0xC8, 0x33, 0x00, 0x8C, 0x02, 0x50, 0x09, 0x00,
  0x20, 0x00, 0xA0, 0x02, 0x00, 0x01, 0x00, 0xFF, 0xDF, 0xFE, 0x7F, 0xFB,
  0xFF, 0xEF, 0xFF, 0xA0, 0x00, 0x7F, 0xF0, 0x10, 0x00, 0x41, 0x81, 0x01,
  0x46, 0x15, 0x14, 0x44, 0x61, 0x11, 0x49, 0x41, 0x15, 0x04, 0x02, 0x90,
  0x14, 0x40, 0x80, 0xC2, 0x01, 0x00, 0x00, 0x00, 0x00, 0x04, 0x40, 0x20,
  0x00, 0x00, 0x00, 0x50, 0x01, 0x40, 0x05, 0x00, 0x94, 0x00, 0x50, 0x00,
  0xC0, 0x05, 0x00, 0x00, 0x00, 0x00, 0x12, 0x00, 0x08, 0x00, 0x0A, 0x10,
  0x20, 0x42, 0x81, 0x00, 0x02, 0x00, 0x08, 0x00, 0x20, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x04, 0x00, 0x10, 0x22, 0x40, 0x85, 0x00, 0x24, 0x20, 0x10,
  0x82, 0x02, 0x04, 0x00, 0x00, 0x00, 0x00, 0x60, 0x02, 0x00, 0x60, 0x21,
  0x80, 0x00, 0x00, 0x42, 0x01, 0x5A, 0x05, 0x60, 0x14, 0x00, 0x50, 0x00,
  0xC0, 0x01, 0x20, 0x08, 0x80, 0x0B, 0x01, 0x8C, 0x08, 0x28, 0x00, 0xA4,
  0x22, 0x90, 0x8C, 0x42, 0x31, 0x08, 0x84, 0x02, 0x10, 0x0A, 0x00, 0x40,
  0x03, 0x01, 0x00, 0x00, 0x00, 0x05, 0x78, 0x03, 0xF0, 0x0F, 0xEA, 0x3F,
  0x8E, 0xFE, 0x35, 0xE8, 0x28, 0x01, 0x5C, 0x66, 0x00, 0x00 };

// Glyph, Offset to bitmap, Width, Height, xAdvance, xOffset, yOffset

const gfxglyph_t HotStuff18Glyphs[] PROGMEM = {
  {32,     0,   1,   1,  14,    0,    0 },   // 0x00 ' ' 
  {48,     1,  25,  35,  25,    0,  -34 },   // 0x01 '0' 
  {49,   111,  25,  35,  24,    0,  -34 },   // 0x02 '1' 
  {50,   221,  25,  35,  25,    0,  -34 },   // 0x03 '2' 
  {51,   331,  25,  35,  25,    0,  -34 },   // 0x04 '3' 
  {52,   441,  25,  35,  25,    0,  -34 },   // 0x05 '4' 
  {53,   551,  24,  35,  25,    0,  -34 },   // 0x06 '5' 
  {54,   656,  25,  35,  25,    0,  -34 },   // 0x07 '6' 
  {55,   766,  24,  35,  24,    0,  -34 },   // 0x08 '7' 
  {56,   871,  24,  35,  24,    0,  -34 },   // 0x09 '8' 
  {57,   976,  25,  35,  24,   -1,  -34 },   // 0x0A '9' 
  {45,  1086,  14,  35,  14,    0,  -34 },   // 0x0B '-' 
  {37,  1148,  14,  34,  14,    0,  -34 },   // 0x0C '%' 
  {46,  1208,  14,  35,  14,    0,  -34 }   // 0x0D '.' 
};

const gfxfont_t HotStuff18 PROGMEM = 
{
  (uint8_t  *)HotStuff18Bitmaps, //< Glyph bitmaps, concatenated 
  (gfxglyph_t *)HotStuff18Glyphs, //< Glyph array
  14,// total glyphs in the string
  35,  // newline distance (y axis)
    -1,  // minimum X - left most
     0,  // minimum Y - bottom most (descenders can drive this negative)
    25,  // maximum X - right most
    35}; // maximum Y - top most
// Approx. 1382 bytes -  but your mileage may vary.

#endif