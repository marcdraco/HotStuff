
#ifndef __FIXEDFONTDEJAVUSERIFTTF6
#define __FIXEDFONTDEJAVUSERIFTTF6
const uint8_t HotStuff6Bitmaps[] PROGMEM = {
  0x00, 0x08, 0x0E, 0x05, 0x02, 0x82, 0x21, 0x11, 0xFC, 0x82, 0xE3, 0x80,
  0xFC, 0x85, 0x0A, 0x17, 0xC8, 0x50, 0xA1, 0xFC, 0x3E, 0x41, 0x80, 0x80,
  0x80, 0x80, 0x80, 0x43, 0x3E, 0xFC, 0x46, 0x41, 0x41, 0x41, 0x41, 0x41,
  0x46, 0xFC, 0xFE, 0x85, 0x02, 0x27, 0xC8, 0x90, 0x21, 0xFE, 0xFE, 0x85,
  0x02, 0x27, 0xC8, 0x90, 0x20, 0xE0, 0x3E, 0x41, 0x80, 0x80, 0x80, 0x87,
  0x81, 0x41, 0x3E, 0xE3, 0xA0, 0x90, 0x48, 0x27, 0xF2, 0x09, 0x04, 0x82,
  0xE3, 0x80, 0xE9, 0x24, 0x92, 0xE0, 0x38, 0x84, 0x21, 0x08, 0x42, 0x10,
  0xA5, 0xC0, 0xEE, 0x44, 0x48, 0x50, 0x60, 0x50, 0x48, 0x44, 0xE3, 0xE0,
  0x81, 0x02, 0x04, 0x08, 0x10, 0x21, 0xFE, 0xE0, 0xEC, 0x19, 0x45, 0x28,
  0xA4, 0xA4, 0x94, 0x91, 0x12, 0x02, 0xE0, 0xE0, 0xC3, 0xB0, 0x94, 0x4B,
  0x24, 0x92, 0x29, 0x0C, 0x86, 0xE1, 0x00, 0x3E, 0x20, 0xA0, 0x30, 0x18,
  0x0C, 0x06, 0x02, 0x82, 0x3E, 0x00, 0xFC, 0x8D, 0x0A, 0x37, 0xC8, 0x10,
  0x20, 0xE0, 0x3E, 0x20, 0xA0, 0x30, 0x18, 0x0C, 0x06, 0x02, 0x82, 0x3E,
  0x02, 0x00, 0xC0, 0xFC, 0x21, 0x10, 0x88, 0x47, 0xC2, 0x21, 0x08, 0x84,
  0xE1, 0x80, 0x7A, 0x18, 0x30, 0x30, 0x30, 0x61, 0x78, 0xFF, 0x24, 0x40,
  0x81, 0x02, 0x04, 0x08, 0x38, 0xE3, 0xA0, 0x90, 0x48, 0x24, 0x12, 0x09,
  0x04, 0xC6, 0x3E, 0x00, 0xE3, 0xA0, 0x90, 0xC4, 0x42, 0x20, 0xA0, 0x50,
  0x38, 0x08, 0x00, 0xE6, 0x74, 0x62, 0x46, 0x22, 0x94, 0x29, 0x42, 0x94,
  0x29, 0x41, 0x08, 0x10, 0x80, 0xE7, 0x42, 0x24, 0x18, 0x18, 0x18, 0x24,
  0x42, 0xE7, 0xE3, 0xA0, 0x88, 0x82, 0x80, 0x80, 0x40, 0x20, 0x10, 0x1C,
  0x00, 0xFF, 0x08, 0x30, 0x41, 0x04, 0x18, 0x21, 0xFE, 0x72, 0x20, 0x9E,
  0x8A, 0x27, 0xC0, 0xC0, 0x81, 0x02, 0xE6, 0x68, 0x50, 0xA1, 0x67, 0xB8,
  0x7B, 0x18, 0x20, 0x83, 0x17, 0x80, 0x0C, 0x08, 0x13, 0xAC, 0xD0, 0xA1,
  0x42, 0xCC, 0xEC, 0x7B, 0x28, 0x7F, 0x83, 0x17, 0x80, 0x3A, 0x11, 0xE4,
  0x21, 0x08, 0x47, 0x00, 0x77, 0x9A, 0x14, 0x28, 0x59, 0x9D, 0x02, 0x8C,
  0xF0, 0xC0, 0x81, 0x02, 0xC6, 0x48, 0x91, 0x22, 0x45, 0xDC, 0x43, 0x24,
  0x92, 0xE0, 0x10, 0x31, 0x11, 0x11, 0x11, 0x1F, 0xC0, 0x81, 0x02, 0x64,
  0x8A, 0x1C, 0x24, 0x45, 0xDC, 0xC9, 0x24, 0x92, 0x5C, 0xD9, 0x8C, 0xC9,
  0x11, 0x22, 0x24, 0x44, 0x88, 0xBB, 0xB8, 0xD8, 0xC9, 0x12, 0x24, 0x48,
  0xBB, 0x80, 0x7B, 0x38, 0x61, 0x87, 0x37, 0x80, 0xDC, 0xCD, 0x0A, 0x14,
  0x2C, 0xD7, 0x20, 0x41, 0xC0, 0x77, 0x9A, 0x14, 0x28, 0x59, 0x9D, 0x02,
  0x04, 0x1C, 0xDB, 0x50, 0x84, 0x23, 0x80, 0x74, 0x60, 0xE0, 0xC5, 0xC0,
  0x44, 0xF4, 0x44, 0x45, 0x70, 0xCC, 0x89, 0x12, 0x24, 0x48, 0x8F, 0x80,
  0xEE, 0x89, 0x11, 0x42, 0x82, 0x04, 0x00, 0xE4, 0xE8, 0x89, 0x29, 0x15,
  0x42, 0xA8, 0x22, 0x04, 0x40, 0xED, 0x23, 0x0C, 0x31, 0x2D, 0xC0, 0xEE,
  0x89, 0x13, 0x42, 0x85, 0x04, 0x08, 0x31, 0xC0, 0xFC, 0x84, 0x44, 0x27,
  0xE0, 0x79, 0x28, 0x61, 0x86, 0x18, 0x52, 0x78, 0x65, 0x08, 0x42, 0x10,
  0x84, 0xF8, 0x7A, 0x10, 0x41, 0x08, 0x42, 0x11, 0xFC, 0x7A, 0x10, 0x41,
  0x38, 0x30, 0x61, 0x78, 0x08, 0x30, 0xA2, 0x44, 0x9F, 0xC2, 0x04, 0x1C,
  0xFA, 0x08, 0x3E, 0x8C, 0x10, 0x63, 0x78, 0x39, 0x18, 0x2E, 0xCE, 0x18,
  0x53, 0x78, 0xFE, 0x10, 0x82, 0x10, 0x41, 0x08, 0x20, 0x7A, 0x18, 0x61,
  0x7B, 0x38, 0x61, 0x78, 0x7B, 0x28, 0x61, 0xCD, 0xD0, 0x62, 0x70, 0xE0,
  0x61, 0x24, 0x89, 0x22, 0x50, 0x6D, 0x82, 0x91, 0x24, 0x49, 0x21, 0x80,
  0xF0, 0x58, 0xFF, 0xF3, 0xC0, 0xF3, 0xC0, 0xF2, 0x49, 0x24, 0x93, 0x80,
  0xE4, 0x92, 0x49, 0x27, 0x80, 0x2A, 0x49, 0x24, 0x88, 0x80, 0x89, 0x12,
  0x49, 0x4A, 0x00 };

// Glyph, Offset to bitmap, Width, Height, xAdvance, xOffset, yOffset

const gfxglyph_t HotStuff6Glyphs[] PROGMEM = {
  {32,     0,   1,   1,   4,    0,    0 },   // 0x00 ' ' 
  {65,     1,   9,   9,   9,    0,   -8 },   // 0x01 'A' 
  {66,    12,   7,   9,   9,    1,   -8 },   // 0x02 'B' 
  {67,    20,   8,   9,   9,    1,   -8 },   // 0x03 'C' 
  {68,    29,   8,   9,   9,    1,   -8 },   // 0x04 'D' 
  {69,    38,   7,   9,   8,    1,   -8 },   // 0x05 'E' 
  {70,    46,   7,   9,   8,    1,   -8 },   // 0x06 'F' 
  {71,    54,   8,   9,   9,    1,   -8 },   // 0x07 'G' 
  {72,    63,   9,   9,  10,    1,   -8 },   // 0x08 'H' 
  {73,    74,   3,   9,   4,    1,   -8 },   // 0x09 'I' 
  {74,    78,   5,  12,   4,   -1,   -8 },   // 0x0A 'J' 
  {75,    86,   8,   9,   9,    1,   -8 },   // 0x0B 'K' 
  {76,    95,   7,   9,   8,    1,   -8 },   // 0x0C 'L' 
  {77,   103,  11,   9,  12,    1,   -8 },   // 0x0D 'M' 
  {78,   116,   9,   9,  10,    1,   -8 },   // 0x0E 'N' 
  {79,   127,   9,   9,  10,    1,   -8 },   // 0x0F 'O' 
  {80,   138,   7,   9,   8,    1,   -8 },   // 0x10 'P' 
  {81,   146,   9,  11,  10,    1,   -8 },   // 0x11 'Q' 
  {82,   159,   9,   9,   9,    1,   -8 },   // 0x12 'R' 
  {83,   170,   6,   9,   7,    1,   -8 },   // 0x13 'S' 
  {84,   177,   7,   9,   8,    1,   -8 },   // 0x14 'T' 
  {85,   185,   9,   9,  10,    1,   -8 },   // 0x15 'U' 
  {86,   196,   9,   9,   9,    0,   -8 },   // 0x16 'V' 
  {87,   207,  12,   9,  12,    0,   -8 },   // 0x17 'W' 
  {88,   221,   8,   9,   9,    1,   -8 },   // 0x18 'X' 
  {89,   230,   9,   9,   8,    0,   -8 },   // 0x19 'Y' 
  {90,   241,   7,   9,   8,    1,   -8 },   // 0x1A 'Z' 
  {97,   249,   6,   7,   7,    1,   -6 },   // 0x1B 'a' 
  {98,   255,   7,  10,   8,    1,   -9 },   // 0x1C 'b' 
  {99,   264,   6,   7,   7,    1,   -6 },   // 0x1D 'c' 
  {100,   270,   7,  10,   8,    1,   -9 },   // 0x1E 'd' 
  {101,   279,   6,   7,   7,    1,   -6 },   // 0x1F 'e' 
  {102,   285,   5,  10,   5,    1,   -9 },   // 0x20 'f' 
  {103,   292,   7,  10,   8,    1,   -6 },   // 0x21 'g' 
  {104,   301,   7,  10,   8,    1,   -9 },   // 0x22 'h' 
  {105,   310,   3,   9,   4,    1,   -8 },   // 0x23 'i' 
  {106,   314,   4,  12,   4,   -1,   -8 },   // 0x24 'j' 
  {107,   320,   7,  10,   8,    1,   -9 },   // 0x25 'k' 
  {108,   329,   3,  10,   4,    1,   -9 },   // 0x26 'l' 
  {109,   333,  11,   7,  12,    1,   -6 },   // 0x27 'm' 
  {110,   343,   7,   7,   8,    1,   -6 },   // 0x28 'n' 
  {111,   350,   6,   7,   7,    1,   -6 },   // 0x29 'o' 
  {112,   356,   7,  10,   8,    1,   -6 },   // 0x2A 'p' 
  {113,   365,   7,  10,   8,    1,   -6 },   // 0x2B 'q' 
  {114,   374,   5,   7,   6,    1,   -6 },   // 0x2C 'r' 
  {115,   379,   5,   7,   6,    1,   -6 },   // 0x2D 's' 
  {116,   384,   4,   9,   5,    1,   -8 },   // 0x2E 't' 
  {117,   389,   7,   7,   8,    1,   -6 },   // 0x2F 'u' 
  {118,   396,   7,   7,   6,    0,   -6 },   // 0x30 'v' 
  {119,   403,  11,   7,  10,    0,   -6 },   // 0x31 'w' 
  {120,   413,   6,   7,   7,    1,   -6 },   // 0x32 'x' 
  {121,   419,   7,  10,   7,    0,   -6 },   // 0x33 'y' 
  {122,   428,   5,   7,   6,    1,   -6 },   // 0x34 'z' 
  {48,   433,   6,   9,   8,    1,   -8 },   // 0x35 '0' 
  {49,   440,   5,   9,   8,    1,   -8 },   // 0x36 '1' 
  {50,   446,   6,   9,   8,    1,   -8 },   // 0x37 '2' 
  {51,   453,   6,   9,   8,    1,   -8 },   // 0x38 '3' 
  {52,   460,   7,   9,   8,    1,   -8 },   // 0x39 '4' 
  {53,   468,   6,   9,   8,    1,   -8 },   // 0x3A '5' 
  {54,   475,   6,   9,   8,    1,   -8 },   // 0x3B '6' 
  {55,   482,   6,   9,   8,    1,   -8 },   // 0x3C '7' 
  {56,   489,   6,   9,   8,    1,   -8 },   // 0x3D '8' 
  {57,   496,   6,   9,   8,    1,   -8 },   // 0x3E '9' 
  {45,   503,   3,   1,   4,    1,   -3 },   // 0x3F '-' 
  {37,   504,  10,   9,  11,    1,   -8 },   // 0x40 '%' 
  {46,   516,   2,   2,   4,    1,   -1 },   // 0x41 '.' 
  {44,   517,   2,   3,   4,    1,    0 },   // 0x42 ',' 
  {33,   518,   2,   9,   5,    2,   -8 },   // 0x43 '!' 
  {58,   521,   2,   5,   4,    1,   -4 },   // 0x44 ':' 
  {91,   523,   3,  11,   5,    1,   -9 },   // 0x45 '[' 
  {93,   528,   3,  11,   5,    1,   -9 },   // 0x46 ']' 
  {40,   533,   3,  11,   5,    1,   -9 },   // 0x47 '(' 
  {41,   538,   3,  11,   5,    1,   -9 }   // 0x48 ')' 
};

const gfxfont_t HotStuff6 PROGMEM = 
{
  (uint8_t  *)HotStuff6Bitmaps, //< Glyph bitmaps, concatenated 
  (gfxglyph_t *)HotStuff6Glyphs, //< Glyph array
  73,// total glyphs in the string
  12,  // newline distance (y axis)
    -1,  // minimum X - left most
    -3,  // minimum Y - bottom most (descenders can drive this negative)
    12,  // maximum X - right most
    10}; // maximum Y - top most
// Approx. 1068 bytes -  but your mileage may vary.

#endif