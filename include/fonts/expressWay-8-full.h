
#ifndef __FIXEDFONTEXPRESSWAYRGTTF8
#define __FIXEDFONTEXPRESSWAYRGTTF8
const uint8_t HotStuff8Bitmaps[] PROGMEM = {
  0x00, 0x0C, 0x03, 0x81, 0xA0, 0x6C, 0x13, 0x0C, 0x43, 0x18, 0xFE, 0x7F,
  0x90, 0x3C, 0x04, 0xFE, 0x61, 0xB0, 0x58, 0x2C, 0x37, 0xF3, 0x0D, 0x83,
  0xC1, 0xE1, 0xBF, 0x80, 0x1E, 0x39, 0x98, 0x78, 0x0C, 0x06, 0x03, 0x01,
  0x80, 0x61, 0xB9, 0x87, 0x80, 0xFC, 0x67, 0xB0, 0xD8, 0x3C, 0x0E, 0x07,
  0x03, 0x83, 0xC3, 0x67, 0xBF, 0x00, 0xFF, 0x83, 0x06, 0x0C, 0x1F, 0xB0,
  0x60, 0xC1, 0x83, 0xF8, 0xFF, 0x83, 0x06, 0x0C, 0x1F, 0xB0, 0x60, 0xC1,
  0x83, 0x00, 0x1E, 0x39, 0x98, 0x78, 0x0C, 0x06, 0x3F, 0x03, 0x81, 0x61,
  0xB9, 0x87, 0x80, 0xC1, 0xE0, 0xF0, 0x78, 0x3C, 0x1F, 0xFF, 0x07, 0x83,
  0xC1, 0xE0, 0xF0, 0x60, 0xFF, 0xFF, 0xFC, 0x03, 0x03, 0x03, 0x03, 0x03,
  0x03, 0x03, 0x03, 0xC3, 0x66, 0x3C, 0xC3, 0x63, 0x31, 0x19, 0x0D, 0x87,
  0xE3, 0xB1, 0x8C, 0xC2, 0x61, 0xB0, 0x60, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0,
  0xC0, 0xC0, 0xC0, 0xC0, 0xFF, 0xFF, 0xC0, 0x7C, 0x0F, 0x83, 0xF8, 0x7F,
  0x1F, 0xA2, 0xF6, 0xDE, 0x5B, 0xCE, 0x78, 0xCF, 0x11, 0x80, 0xC1, 0xF0,
  0xFC, 0x7E, 0x3D, 0x9E, 0x4F, 0x37, 0x8F, 0xC3, 0xE1, 0xF0, 0x60, 0x1E,
  0x1D, 0xC6, 0x1B, 0x02, 0xC0, 0xF0, 0x3C, 0x0F, 0x02, 0x61, 0x9D, 0xC1,
  0xE0, 0xFE, 0x61, 0xB0, 0x78, 0x3C, 0x37, 0xFB, 0x01, 0x80, 0xC0, 0x60,
  0x30, 0x00, 0x1E, 0x1D, 0xC6, 0x1B, 0x02, 0xC0, 0xF0, 0x3C, 0x4F, 0x12,
  0x67, 0x9D, 0xC1, 0xF8, 0x02, 0xFE, 0x63, 0xB0, 0x58, 0x3C, 0x37, 0xFB,
  0x11, 0x8C, 0xC3, 0x61, 0xB0, 0x60, 0x1F, 0x0C, 0xE6, 0x09, 0x80, 0x38,
  0x03, 0xC0, 0x18, 0x03, 0x40, 0xBC, 0xE3, 0xF0, 0xFF, 0x84, 0x02, 0x01,
  0x00, 0x80, 0x40, 0x20, 0x10, 0x08, 0x04, 0x02, 0x00, 0xC1, 0xE0, 0xF0,
  0x78, 0x3C, 0x1E, 0x0F, 0x07, 0x82, 0xC3, 0x3B, 0x8F, 0x80, 0xC0, 0xD8,
  0x36, 0x08, 0x86, 0x31, 0x8C, 0x41, 0x30, 0x6C, 0x0A, 0x03, 0x80, 0xC0,
  0xC3, 0x0D, 0x0C, 0x36, 0x38, 0x99, 0xE6, 0x66, 0x98, 0x92, 0x63, 0xCD,
  0x0F, 0x3C, 0x38, 0x70, 0x61, 0x81, 0x86, 0x00, 0x60, 0xC8, 0x63, 0x30,
  0x68, 0x0E, 0x03, 0x01, 0xE0, 0x4C, 0x33, 0x18, 0x6C, 0x0C, 0xC0, 0xD8,
  0x62, 0x18, 0xCC, 0x1A, 0x07, 0x80, 0xC0, 0x30, 0x0C, 0x03, 0x00, 0xC0,
  0xFF, 0x03, 0x06, 0x0C, 0x08, 0x18, 0x30, 0x60, 0x60, 0xC0, 0xFF, 0xFC,
  0xD8, 0x1B, 0xFC, 0x70, 0xE1, 0xF7, 0x7E, 0xC1, 0x83, 0x06, 0xEE, 0xF8,
  0x70, 0xE1, 0xC3, 0x87, 0xBF, 0xE0, 0x3C, 0xDF, 0x14, 0x08, 0x10, 0x31,
  0x37, 0x38, 0x02, 0x04, 0x0B, 0xD6, 0xF8, 0xE0, 0xC1, 0x83, 0x8D, 0xBB,
  0xD0, 0x38, 0xDB, 0x1C, 0x1F, 0xF0, 0x30, 0x37, 0x38, 0x3B, 0x59, 0xF6,
  0x31, 0x8C, 0x63, 0x18, 0xC0, 0x7A, 0xDF, 0x1C, 0x18, 0x30, 0x71, 0xB7,
  0x3A, 0x0C, 0x11, 0xE3, 0x00, 0xC1, 0x83, 0x07, 0xEE, 0xF8, 0x70, 0xE1,
  0xC3, 0x87, 0x0E, 0x10, 0x83, 0xFF, 0xFF, 0x20, 0x12, 0x49, 0x24, 0x92,
  0xF8, 0xC0, 0xC0, 0xC0, 0xC6, 0xCC, 0xD8, 0xD0, 0xF8, 0xE8, 0xCC, 0xC6,
  0xC3, 0xFF, 0xFF, 0xFF, 0xFC, 0xEE, 0xF7, 0xC6, 0x1C, 0x61, 0xC6, 0x1C,
  0x61, 0xC6, 0x1C, 0x61, 0xC6, 0x10, 0xFD, 0xDF, 0x0E, 0x1C, 0x38, 0x70,
  0xE1, 0xC2, 0x38, 0xDB, 0x1C, 0x18, 0x30, 0x71, 0xB6, 0x38, 0xDD, 0xDF,
  0x0E, 0x1C, 0x38, 0x70, 0xF7, 0xDD, 0x83, 0x06, 0x00, 0x7A, 0xDF, 0x1C,
  0x18, 0x30, 0x71, 0xB7, 0x7A, 0x04, 0x08, 0x10, 0xFF, 0xAC, 0x30, 0xC3,
  0x0C, 0x30, 0xC0, 0x3C, 0xDD, 0x0B, 0x03, 0xC0, 0xD0, 0xF7, 0x7C, 0x23,
  0x19, 0xF6, 0x31, 0x8C, 0x63, 0x1A, 0x70, 0xC3, 0x87, 0x0E, 0x1C, 0x38,
  0x71, 0xF7, 0x7A, 0xC3, 0x43, 0x62, 0x66, 0x26, 0x34, 0x1C, 0x18, 0x18,
  0xC4, 0x68, 0xCD, 0x39, 0x35, 0x26, 0xAC, 0x77, 0x8C, 0x61, 0x8C, 0x31,
  0x80, 0x63, 0x11, 0x0D, 0x03, 0x81, 0xC0, 0xA0, 0xD8, 0xC6, 0xC1, 0x80,
  0xC1, 0x43, 0x62, 0x26, 0x26, 0x34, 0x1C, 0x18, 0x18, 0x18, 0x10, 0x30,
  0xFE, 0x08, 0x30, 0xC3, 0x04, 0x18, 0x60, 0xFE, 0x3C, 0x76, 0x43, 0xC3,
  0xC1, 0xC1, 0xC1, 0xC3, 0x43, 0x76, 0x3C, 0x75, 0x55, 0x54, 0x3D, 0xDE,
  0x08, 0x10, 0x63, 0x9C, 0x60, 0xC1, 0x83, 0xF8, 0x3C, 0xEE, 0x02, 0x06,
  0x1C, 0x06, 0x03, 0x03, 0x82, 0xEE, 0x3C, 0x06, 0x0E, 0x1E, 0x36, 0x26,
  0x46, 0xC6, 0xFF, 0x06, 0x06, 0x06, 0x7E, 0x40, 0xC0, 0xFE, 0xE6, 0x43,
  0x03, 0x03, 0x83, 0xEE, 0x3C, 0x1C, 0x38, 0x60, 0x7E, 0xE6, 0xC3, 0xC1,
  0xC3, 0xC3, 0x7E, 0x3C, 0xFF, 0x03, 0x06, 0x04, 0x0C, 0x08, 0x18, 0x18,
  0x10, 0x10, 0x30, 0x7D, 0xDF, 0x1E, 0x37, 0xD8, 0xE0, 0xC1, 0x83, 0xDD,
  0xF0, 0x3C, 0x6E, 0xC2, 0x83, 0x83, 0xC7, 0x7F, 0x02, 0x06, 0x3C, 0x30,
  0xF8, 0x70, 0x68, 0xE4, 0x51, 0x49, 0x23, 0xBC, 0x32, 0x19, 0x14, 0x9A,
  0x49, 0xA8, 0x70, 0x80, 0x69, 0x60, 0xFF, 0xAA, 0x0C, 0x84, 0xF2, 0x49,
  0x24, 0x92, 0x49, 0x24, 0x9C, 0xE4, 0x92, 0x49, 0x24, 0x92, 0x49, 0x3C,
  0x36, 0x44, 0x88, 0x88, 0x88, 0x88, 0x88, 0x44, 0x63, 0xC6, 0x22, 0x11,
  0x11, 0x11, 0x11, 0x11, 0x22, 0x6C };

// Glyph, Offset to bitmap, Width, Height, xAdvance, xOffset, yOffset

const gfxglyph_t HotStuff8Glyphs[] PROGMEM = {
  {32,     0,   1,   1,   4,    0,    0 },   // 0x00 ' ' 
  {65,     1,  10,  11,  11,    0,  -10 },   // 0x01 'A' 
  {66,    15,   9,  11,  10,    1,  -10 },   // 0x02 'B' 
  {67,    28,   9,  11,  11,    1,  -10 },   // 0x03 'C' 
  {68,    41,   9,  11,  11,    1,  -10 },   // 0x04 'D' 
  {69,    54,   7,  11,   9,    1,  -10 },   // 0x05 'E' 
  {70,    64,   7,  11,   8,    1,  -10 },   // 0x06 'F' 
  {71,    74,   9,  11,  11,    1,  -10 },   // 0x07 'G' 
  {72,    87,   9,  11,  11,    1,  -10 },   // 0x08 'H' 
  {73,   100,   2,  11,   4,    1,  -10 },   // 0x09 'I' 
  {74,   103,   8,  11,   9,    0,  -10 },   // 0x0A 'J' 
  {75,   114,   9,  11,  10,    1,  -10 },   // 0x0B 'K' 
  {76,   127,   8,  11,   9,    1,  -10 },   // 0x0C 'L' 
  {77,   138,  11,  11,  13,    1,  -10 },   // 0x0D 'M' 
  {78,   154,   9,  11,  11,    1,  -10 },   // 0x0E 'N' 
  {79,   167,  10,  11,  12,    1,  -10 },   // 0x0F 'O' 
  {80,   181,   9,  11,  10,    1,  -10 },   // 0x10 'P' 
  {81,   194,  10,  12,  12,    1,  -10 },   // 0x11 'Q' 
  {82,   209,   9,  11,  10,    1,  -10 },   // 0x12 'R' 
  {83,   222,  10,  11,  10,    0,  -10 },   // 0x13 'S' 
  {84,   236,   9,  11,   9,    0,  -10 },   // 0x14 'T' 
  {85,   249,   9,  11,  11,    1,  -10 },   // 0x15 'U' 
  {86,   262,  10,  11,  11,    0,  -10 },   // 0x16 'V' 
  {87,   276,  14,  11,  14,    0,  -10 },   // 0x17 'W' 
  {88,   296,  10,  11,  10,    0,  -10 },   // 0x18 'X' 
  {89,   310,  10,  11,  10,    0,  -10 },   // 0x19 'Y' 
  {90,   324,   8,  11,   9,    1,  -10 },   // 0x1A 'Z' 
  {97,   335,   7,   9,   9,    1,   -8 },   // 0x1B 'a' 
  {98,   343,   7,  12,   9,    1,  -11 },   // 0x1C 'b' 
  {99,   354,   7,   9,   8,    1,   -8 },   // 0x1D 'c' 
  {100,   362,   7,  12,   9,    1,  -11 },   // 0x1E 'd' 
  {101,   373,   7,   9,   9,    1,   -8 },   // 0x1F 'e' 
  {102,   381,   5,  12,   5,    0,  -11 },   // 0x20 'f' 
  {103,   389,   7,  13,   9,    1,   -8 },   // 0x21 'g' 
  {104,   401,   7,  12,   9,    1,  -11 },   // 0x22 'h' 
  {105,   412,   2,  12,   4,    1,  -11 },   // 0x23 'i' 
  {106,   415,   3,  15,   5,    0,  -11 },   // 0x24 'j' 
  {107,   421,   8,  12,   9,    1,  -11 },   // 0x25 'k' 
  {108,   433,   2,  12,   4,    1,  -11 },   // 0x26 'l' 
  {109,   436,  12,   9,  14,    1,   -8 },   // 0x27 'm' 
  {110,   450,   7,   9,   9,    1,   -8 },   // 0x28 'n' 
  {111,   458,   7,   9,   9,    1,   -8 },   // 0x29 'o' 
  {112,   466,   7,  12,   9,    1,   -8 },   // 0x2A 'p' 
  {113,   477,   7,  12,   9,    1,   -8 },   // 0x2B 'q' 
  {114,   488,   6,   9,   7,    1,   -8 },   // 0x2C 'r' 
  {115,   495,   7,   9,   8,    0,   -8 },   // 0x2D 's' 
  {116,   503,   5,  12,   5,    0,  -11 },   // 0x2E 't' 
  {117,   511,   7,   9,   9,    1,   -8 },   // 0x2F 'u' 
  {118,   519,   8,   9,   8,    0,   -8 },   // 0x30 'v' 
  {119,   528,  11,   9,  11,    0,   -8 },   // 0x31 'w' 
  {120,   541,   9,   9,   9,    0,   -8 },   // 0x32 'x' 
  {121,   552,   8,  12,   9,    0,   -8 },   // 0x33 'y' 
  {122,   564,   7,   9,   8,    1,   -8 },   // 0x34 'z' 
  {48,   572,   8,  11,  10,    1,  -10 },   // 0x35 '0' 
  {49,   583,   2,  11,   5,    1,  -10 },   // 0x36 '1' 
  {50,   586,   7,  11,   9,    1,  -10 },   // 0x37 '2' 
  {51,   596,   8,  11,   9,    1,  -10 },   // 0x38 '3' 
  {52,   607,   8,  11,  10,    1,  -10 },   // 0x39 '4' 
  {53,   618,   8,  11,  10,    1,  -10 },   // 0x3A '5' 
  {54,   629,   8,  11,  10,    1,  -10 },   // 0x3B '6' 
  {55,   640,   8,  11,   8,    0,  -10 },   // 0x3C '7' 
  {56,   651,   7,  11,   9,    1,  -10 },   // 0x3D '8' 
  {57,   661,   8,  11,  10,    1,  -10 },   // 0x3E '9' 
  {45,   672,   5,   1,   6,    0,   -5 },   // 0x3F '-' 
  {37,   673,   9,  12,  10,    0,  -11 },   // 0x40 '%' 
  {46,   687,   1,   1,   3,    1,    0 },   // 0x41 '.' 
  {44,   688,   3,   4,   3,    0,   -1 },   // 0x42 ',' 
  {33,   690,   2,  11,   4,    1,  -10 },   // 0x43 '!' 
  {58,   693,   1,   8,   4,    1,   -8 },   // 0x44 ':' 
  {91,   694,   3,  18,   6,    2,  -14 },   // 0x45 '[' 
  {93,   701,   3,  18,   6,    1,  -14 },   // 0x46 ']' 
  {40,   708,   4,  18,   6,    2,  -14 },   // 0x47 '(' 
  {41,   717,   4,  18,   6,    0,  -14 }   // 0x48 ')' 
};

const gfxfont_t HotStuff8 PROGMEM = 
{
  (uint8_t  *)HotStuff8Bitmaps, //< Glyph bitmaps, concatenated 
  (gfxglyph_t *)HotStuff8Glyphs, //< Glyph array
  73,// total glyphs in the string
  18,  // newline distance (y axis)
     0,  // minimum X - left most
    -4,  // minimum Y - bottom most (descenders can drive this negative)
    14,  // maximum X - right most
    15}; // maximum Y - top most
// Approx. 1251 bytes -  but your mileage may vary.

#endif