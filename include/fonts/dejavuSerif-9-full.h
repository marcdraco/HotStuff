
#ifndef __FIXEDFONTDEJAVUSERIFTTF9
#define __FIXEDFONTDEJAVUSERIFTTF9
const uint8_t HotStuff9Bitmaps[] PROGMEM = {
  0x00, 0x06, 0x00, 0x38, 0x01, 0xC0, 0x16, 0x00, 0x98, 0x04, 0xC0, 0x47,
  0x02, 0x18, 0x3F, 0xC1, 0x03, 0x08, 0x18, 0x80, 0xEE, 0x0F, 0x80, 0xFF,
  0x18, 0xE6, 0x19, 0x86, 0x63, 0x1F, 0x86, 0x19, 0x83, 0x60, 0xD8, 0x36,
  0x0D, 0x86, 0xFF, 0x00, 0x0F, 0xC3, 0x07, 0x60, 0x36, 0x01, 0xC0, 0x0C,
  0x00, 0xC0, 0x0C, 0x00, 0xC0, 0x04, 0x03, 0x60, 0x63, 0x0E, 0x0F, 0x80,
  0xFF, 0x06, 0x1C, 0x60, 0x66, 0x06, 0x60, 0x36, 0x03, 0x60, 0x36, 0x03,
  0x60, 0x36, 0x06, 0x60, 0x66, 0x1C, 0xFF, 0x00, 0xFF, 0xD8, 0x16, 0x05,
  0x84, 0x61, 0x1F, 0xC6, 0x11, 0x84, 0x60, 0x18, 0x06, 0x05, 0x81, 0xFF,
  0xC0, 0xFF, 0xD8, 0x16, 0x05, 0x84, 0x61, 0x1F, 0xC6, 0x11, 0x84, 0x60,
  0x18, 0x06, 0x01, 0x80, 0xF8, 0x00, 0x0F, 0xC3, 0x07, 0x60, 0x34, 0x01,
  0xC0, 0x0C, 0x00, 0xC0, 0x0C, 0x0F, 0xC0, 0x34, 0x03, 0x60, 0x33, 0x07,
  0x0F, 0xC0, 0xF0, 0xF6, 0x06, 0x60, 0x66, 0x06, 0x60, 0x67, 0xFE, 0x60,
  0x66, 0x06, 0x60, 0x66, 0x06, 0x60, 0x66, 0x06, 0xF0, 0xF0, 0xF6, 0x66,
  0x66, 0x66, 0x66, 0x66, 0xF0, 0x3E, 0x18, 0x30, 0x60, 0xC1, 0x83, 0x06,
  0x0C, 0x18, 0x30, 0x60, 0xC1, 0xA3, 0x44, 0x78, 0xF1, 0xE6, 0x08, 0x61,
  0x06, 0x20, 0x6C, 0x07, 0x80, 0x78, 0x06, 0xC0, 0x66, 0x06, 0x70, 0x63,
  0x86, 0x1C, 0xF0, 0xF0, 0xF0, 0x18, 0x06, 0x01, 0x80, 0x60, 0x18, 0x06,
  0x01, 0x80, 0x60, 0x18, 0x06, 0x05, 0x81, 0xFF, 0xC0, 0xE0, 0x0E, 0xC0,
  0x39, 0xC0, 0x73, 0x81, 0x65, 0x82, 0xCB, 0x89, 0x93, 0x13, 0x27, 0x46,
  0x46, 0x8C, 0x8F, 0x19, 0x0C, 0x32, 0x00, 0x6E, 0x01, 0xE0, 0xF0, 0x3B,
  0x80, 0x96, 0x04, 0xB8, 0x24, 0xE1, 0x23, 0x89, 0x0C, 0x48, 0x32, 0x41,
  0xD2, 0x07, 0x90, 0x1C, 0x80, 0x6E, 0x03, 0x00, 0x0F, 0x81, 0x83, 0x18,
  0x0C, 0x80, 0x2C, 0x01, 0xE0, 0x0F, 0x00, 0x78, 0x03, 0xC0, 0x1A, 0x00,
  0x98, 0x0C, 0x60, 0xC0, 0xF8, 0x00, 0xFF, 0x18, 0x66, 0x0D, 0x83, 0x60,
  0xD8, 0x67, 0xF1, 0x80, 0x60, 0x18, 0x06, 0x01, 0x80, 0xF0, 0x00, 0x0F,
  0x81, 0x83, 0x18, 0x0C, 0x80, 0x2C, 0x01, 0xE0, 0x0F, 0x00, 0x78, 0x03,
  0xC0, 0x1A, 0x00, 0x98, 0x0C, 0x60, 0xC0, 0xF8, 0x00, 0xC0, 0x03, 0x80,
  0x0C, 0xFF, 0x06, 0x18, 0x60, 0xC6, 0x0C, 0x60, 0xC6, 0x18, 0x7E, 0x06,
  0x30, 0x61, 0x86, 0x18, 0x60, 0xC6, 0x0C, 0xF0, 0x70, 0x3F, 0x18, 0x6C,
  0x0B, 0x02, 0xE0, 0x1F, 0x03, 0xF8, 0x0F, 0x00, 0xE0, 0x38, 0x0F, 0x06,
  0x7F, 0x00, 0xFF, 0xF8, 0x61, 0x86, 0x10, 0x60, 0x06, 0x00, 0x60, 0x06,
  0x00, 0x60, 0x06, 0x00, 0x60, 0x06, 0x00, 0x60, 0x0F, 0x00, 0xF0, 0x76,
  0x02, 0x60, 0x26, 0x02, 0x60, 0x26, 0x02, 0x60, 0x26, 0x02, 0x60, 0x26,
  0x02, 0x60, 0x23, 0x04, 0x1F, 0x80, 0xF8, 0x7B, 0x01, 0x8C, 0x08, 0x60,
  0x43, 0x84, 0x0C, 0x20, 0x61, 0x01, 0x90, 0x0C, 0x80, 0x68, 0x01, 0xC0,
  0x0E, 0x00, 0x60, 0x00, 0xF8, 0x43, 0xD8, 0x38, 0x23, 0x0E, 0x10, 0xC3,
  0x84, 0x31, 0x61, 0x06, 0x4C, 0x81, 0x93, 0x20, 0x64, 0xC8, 0x1A, 0x32,
  0x03, 0x87, 0x00, 0xE1, 0xC0, 0x38, 0x70, 0x04, 0x0C, 0x00, 0xF8, 0xF1,
  0x82, 0x0E, 0x20, 0x39, 0x00, 0xD0, 0x03, 0x00, 0x18, 0x00, 0xE0, 0x0B,
  0x80, 0x8E, 0x04, 0x30, 0x40, 0xCF, 0x1F, 0x80, 0xF8, 0xF7, 0x06, 0x30,
  0x41, 0x88, 0x1D, 0x80, 0xD0, 0x0E, 0x00, 0x60, 0x06, 0x00, 0x60, 0x06,
  0x00, 0x60, 0x0F, 0x00, 0xFF, 0xF0, 0x1A, 0x07, 0x01, 0xC0, 0x30, 0x0C,
  0x03, 0x80, 0x60, 0x18, 0x07, 0x01, 0xC0, 0xB0, 0x1F, 0xFE, 0x3C, 0x33,
  0x10, 0xC0, 0x67, 0xF6, 0x1B, 0x0D, 0x86, 0x7F, 0x80, 0xE0, 0x18, 0x06,
  0x01, 0x80, 0x60, 0x1B, 0xC7, 0x19, 0x83, 0x60, 0xD8, 0x36, 0x0D, 0x83,
  0x71, 0xBB, 0xC0, 0x3E, 0x63, 0xC1, 0xC0, 0xC0, 0xC0, 0xC1, 0x62, 0x3C,
  0x03, 0x80, 0x60, 0x18, 0x06, 0x01, 0x8F, 0x66, 0x3B, 0x06, 0xC1, 0xB0,
  0x6C, 0x1B, 0x06, 0x63, 0x8F, 0x70, 0x3E, 0x31, 0xB0, 0x78, 0x3F, 0xFE,
  0x03, 0x02, 0xC2, 0x3E, 0x00, 0x3E, 0xC5, 0x83, 0x06, 0x1F, 0x98, 0x30,
  0x60, 0xC1, 0x83, 0x06, 0x1F, 0x00, 0x3D, 0xD8, 0xEC, 0x1B, 0x06, 0xC1,
  0xB0, 0x6C, 0x19, 0x8E, 0x3D, 0x80, 0x64, 0x19, 0x8C, 0x3E, 0x00, 0xE0,
  0x18, 0x06, 0x01, 0x80, 0x60, 0x1B, 0xC7, 0x19, 0x86, 0x61, 0x98, 0x66,
  0x19, 0x86, 0x61, 0xBC, 0xF0, 0x66, 0x00, 0xE6, 0x66, 0x66, 0x66, 0xF0,
  0x0C, 0x30, 0x00, 0x1C, 0x30, 0xC3, 0x0C, 0x30, 0xC3, 0x0C, 0x38, 0xE3,
  0x78, 0xE0, 0x18, 0x06, 0x01, 0x80, 0x60, 0x19, 0xE6, 0x21, 0x90, 0x68,
  0x1F, 0x06, 0x61, 0x98, 0x63, 0x3D, 0xF0, 0xE6, 0x66, 0x66, 0x66, 0x66,
  0x66, 0x6F, 0xEE, 0x71, 0xCE, 0x66, 0x31, 0x98, 0xC6, 0x63, 0x19, 0x8C,
  0x66, 0x31, 0x98, 0xC6, 0xF7, 0xBC, 0xEF, 0x1C, 0x66, 0x19, 0x86, 0x61,
  0x98, 0x66, 0x19, 0x86, 0xF3, 0xC0, 0x3E, 0x31, 0xB0, 0x78, 0x3C, 0x1E,
  0x0F, 0x06, 0xC6, 0x3E, 0x00, 0xEF, 0x1C, 0x66, 0x0D, 0x83, 0x60, 0xD8,
  0x36, 0x0D, 0xC6, 0x6F, 0x18, 0x06, 0x01, 0x80, 0xF0, 0x00, 0x3D, 0xD8,
  0xEC, 0x1B, 0x06, 0xC1, 0xB0, 0x6C, 0x19, 0x8E, 0x3D, 0x80, 0x60, 0x18,
  0x06, 0x03, 0xC0, 0xEE, 0xE5, 0x83, 0x06, 0x0C, 0x18, 0x30, 0xF8, 0x7D,
  0x8F, 0x0F, 0x83, 0xC1, 0xE1, 0xE3, 0x7C, 0x61, 0x86, 0x3F, 0x61, 0x86,
  0x18, 0x61, 0x96, 0x4E, 0xE3, 0x98, 0x66, 0x19, 0x86, 0x61, 0x98, 0x66,
  0x19, 0x8E, 0x3D, 0xC0, 0xF1, 0xD8, 0x23, 0x10, 0xC4, 0x3A, 0x06, 0x81,
  0xA0, 0x30, 0x0C, 0x00, 0xF1, 0x9E, 0xC3, 0x08, 0xCE, 0x21, 0x96, 0x43,
  0x2C, 0x83, 0x9A, 0x07, 0x1C, 0x0E, 0x38, 0x08, 0x60, 0xF9, 0xCC, 0x43,
  0xA0, 0x78, 0x0C, 0x07, 0x81, 0x70, 0x8C, 0xF7, 0xC0, 0xF9, 0xCC, 0x23,
  0x10, 0x64, 0x19, 0x06, 0x80, 0xE0, 0x38, 0x04, 0x01, 0x00, 0x81, 0x20,
  0x70, 0x00, 0xFF, 0x86, 0x8E, 0x1C, 0x18, 0x30, 0x71, 0x61, 0xFF, 0x3E,
  0x31, 0x98, 0xD8, 0x3C, 0x1E, 0x0F, 0x07, 0x83, 0xC1, 0xE0, 0xD8, 0xCC,
  0x63, 0xE0, 0x18, 0xF2, 0x60, 0xC1, 0x83, 0x06, 0x0C, 0x18, 0x30, 0x60,
  0xC7, 0xE0, 0x7C, 0xC6, 0x83, 0x03, 0x03, 0x06, 0x04, 0x08, 0x10, 0x21,
  0x41, 0xFF, 0xFF, 0x7C, 0x63, 0xA0, 0xC0, 0x60, 0x60, 0xC0, 0x1C, 0x03,
  0x01, 0x80, 0xE0, 0x78, 0x67, 0xE0, 0x06, 0x03, 0x80, 0xE0, 0x58, 0x36,
  0x09, 0x84, 0x63, 0x18, 0xFF, 0xC1, 0x80, 0x60, 0x18, 0x1F, 0x80, 0x7F,
  0x3F, 0x90, 0x08, 0x07, 0xE2, 0x18, 0x06, 0x03, 0x01, 0x80, 0xE0, 0x78,
  0x67, 0xE0, 0x1E, 0x11, 0x98, 0x58, 0x0D, 0xE7, 0x1B, 0x07, 0x83, 0xC1,
  0xE0, 0xD0, 0x6C, 0x63, 0xE0, 0xFF, 0xFF, 0xE0, 0x50, 0x20, 0x20, 0x10,
  0x18, 0x08, 0x04, 0x04, 0x02, 0x02, 0x01, 0x00, 0x3E, 0x71, 0xF0, 0x78,
  0x36, 0x30, 0xE1, 0x8D, 0x83, 0xC1, 0xE0, 0xF0, 0x6C, 0x63, 0xE0, 0x3E,
  0x31, 0xB0, 0x58, 0x3C, 0x1E, 0x0F, 0x06, 0xC7, 0x3D, 0x80, 0xD0, 0xCC,
  0x43, 0xC0, 0xF8, 0x78, 0x11, 0x98, 0x42, 0x10, 0x84, 0x22, 0x08, 0x48,
  0x19, 0x90, 0x1E, 0x4F, 0x01, 0x33, 0x02, 0x42, 0x08, 0x84, 0x31, 0x08,
  0x43, 0x31, 0x03, 0xC0, 0xF0, 0x33, 0x6C, 0xFF, 0xFF, 0xC3, 0xC0, 0xF0,
  0x0F, 0xFC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCF, 0xF8, 0xC6, 0x31,
  0x8C, 0x63, 0x18, 0xC6, 0x31, 0x8C, 0x7F, 0x09, 0x88, 0xC4, 0x63, 0x18,
  0xC6, 0x30, 0x86, 0x10, 0xC1, 0x83, 0x08, 0x61, 0x0C, 0x63, 0x18, 0xC6,
  0x23, 0x11, 0x90 };

// Glyph, Offset to bitmap, Width, Height, xAdvance, xOffset, yOffset

const gfxglyph_t HotStuff9Glyphs[] PROGMEM = {
  {32,     0,   1,   1,   6,    0,    0 },   // 0x00 ' ' 
  {65,     1,  13,  13,  13,    0,  -12 },   // 0x01 'A' 
  {66,    23,  10,  13,  13,    2,  -12 },   // 0x02 'B' 
  {67,    40,  12,  13,  14,    1,  -12 },   // 0x03 'C' 
  {68,    60,  12,  13,  15,    2,  -12 },   // 0x04 'D' 
  {69,    80,  10,  13,  13,    2,  -12 },   // 0x05 'E' 
  {70,    97,  10,  13,  12,    2,  -12 },   // 0x06 'F' 
  {71,   114,  12,  13,  14,    1,  -12 },   // 0x07 'G' 
  {72,   134,  12,  13,  16,    2,  -12 },   // 0x08 'H' 
  {73,   154,   4,  13,   8,    2,  -12 },   // 0x09 'I' 
  {74,   161,   7,  17,   7,   -1,  -12 },   // 0x0A 'J' 
  {75,   176,  12,  13,  13,    2,  -12 },   // 0x0B 'K' 
  {76,   196,  10,  13,  12,    2,  -12 },   // 0x0C 'L' 
  {77,   213,  15,  13,  19,    2,  -12 },   // 0x0D 'M' 
  {78,   238,  13,  13,  17,    2,  -12 },   // 0x0E 'N' 
  {79,   260,  13,  13,  15,    1,  -12 },   // 0x0F 'O' 
  {80,   282,  10,  13,  12,    2,  -12 },   // 0x10 'P' 
  {81,   299,  13,  16,  15,    1,  -12 },   // 0x11 'Q' 
  {82,   325,  12,  13,  14,    2,  -12 },   // 0x12 'R' 
  {83,   345,  10,  13,  12,    1,  -12 },   // 0x13 'S' 
  {84,   362,  12,  13,  12,    0,  -12 },   // 0x14 'T' 
  {85,   382,  12,  13,  14,    1,  -12 },   // 0x15 'U' 
  {86,   402,  13,  13,  13,    0,  -12 },   // 0x16 'V' 
  {87,   424,  18,  13,  19,    0,  -12 },   // 0x17 'W' 
  {88,   454,  13,  13,  13,    0,  -12 },   // 0x18 'X' 
  {89,   476,  12,  13,  12,    0,  -12 },   // 0x19 'Y' 
  {90,   496,  11,  13,  13,    1,  -12 },   // 0x1A 'Z' 
  {97,   514,   9,   9,  11,    1,   -8 },   // 0x1B 'a' 
  {98,   525,  10,  14,  12,    1,  -13 },   // 0x1C 'b' 
  {99,   543,   8,   9,  10,    1,   -8 },   // 0x1D 'c' 
  {100,   552,  10,  14,  12,    1,  -13 },   // 0x1E 'd' 
  {101,   570,   9,   9,  11,    1,   -8 },   // 0x1F 'e' 
  {102,   581,   7,  14,   7,    1,  -13 },   // 0x20 'f' 
  {103,   594,  10,  13,  12,    1,   -8 },   // 0x21 'g' 
  {104,   611,  10,  14,  12,    1,  -13 },   // 0x22 'h' 
  {105,   629,   4,  13,   6,    1,  -12 },   // 0x23 'i' 
  {106,   636,   6,  17,   6,   -2,  -12 },   // 0x24 'j' 
  {107,   649,  10,  14,  11,    1,  -13 },   // 0x25 'k' 
  {108,   667,   4,  14,   6,    1,  -13 },   // 0x26 'l' 
  {109,   674,  14,   9,  16,    1,   -8 },   // 0x27 'm' 
  {110,   690,  10,   9,  12,    1,   -8 },   // 0x28 'n' 
  {111,   702,   9,   9,  11,    1,   -8 },   // 0x29 'o' 
  {112,   713,  10,  13,  12,    1,   -8 },   // 0x2A 'p' 
  {113,   730,  10,  13,  12,    1,   -8 },   // 0x2B 'q' 
  {114,   747,   7,   9,   9,    1,   -8 },   // 0x2C 'r' 
  {115,   755,   7,   9,   9,    1,   -8 },   // 0x2D 's' 
  {116,   763,   6,  12,   8,    1,  -11 },   // 0x2E 't' 
  {117,   772,  10,   9,  12,    1,   -8 },   // 0x2F 'u' 
  {118,   784,  10,   9,  10,    0,   -8 },   // 0x30 'v' 
  {119,   796,  15,   9,  15,    0,   -8 },   // 0x31 'w' 
  {120,   813,  10,   9,  10,    0,   -8 },   // 0x32 'x' 
  {121,   825,  10,  13,  10,    0,   -8 },   // 0x33 'y' 
  {122,   842,   8,   9,   9,    1,   -8 },   // 0x34 'z' 
  {48,   851,   9,  13,  11,    1,  -12 },   // 0x35 '0' 
  {49,   866,   7,  13,  11,    2,  -12 },   // 0x36 '1' 
  {50,   878,   8,  13,  11,    1,  -12 },   // 0x37 '2' 
  {51,   891,   9,  13,  11,    1,  -12 },   // 0x38 '3' 
  {52,   906,  10,  13,  11,    1,  -12 },   // 0x39 '4' 
  {53,   923,   9,  13,  11,    1,  -12 },   // 0x3A '5' 
  {54,   938,   9,  13,  11,    1,  -12 },   // 0x3B '6' 
  {55,   953,   9,  13,  11,    1,  -12 },   // 0x3C '7' 
  {56,   968,   9,  13,  11,    1,  -12 },   // 0x3D '8' 
  {57,   983,   9,  13,  11,    1,  -12 },   // 0x3E '9' 
  {45,   998,   5,   1,   6,    1,   -5 },   // 0x3F '-' 
  {37,   999,  15,  13,  17,    1,  -12 },   // 0x40 '%' 
  {46,  1024,   2,   2,   6,    2,   -1 },   // 0x41 '.' 
  {44,  1025,   4,   4,   6,    0,   -1 },   // 0x42 ',' 
  {33,  1027,   2,  13,   7,    2,  -12 },   // 0x43 '!' 
  {58,  1031,   2,   8,   6,    2,   -7 },   // 0x44 ':' 
  {91,  1033,   4,  16,   7,    2,  -13 },   // 0x45 '[' 
  {93,  1041,   5,  16,   7,    1,  -13 },   // 0x46 ']' 
  {40,  1051,   5,  16,   7,    1,  -13 },   // 0x47 '(' 
  {41,  1061,   5,  16,   7,    1,  -13 }   // 0x48 ')' 
};

const gfxfont_t HotStuff9 PROGMEM = 
{
  (uint8_t  *)HotStuff9Bitmaps, //< Glyph bitmaps, concatenated 
  (gfxglyph_t *)HotStuff9Glyphs, //< Glyph array
  73,// total glyphs in the string
  17,  // newline distance (y axis)
    -2,  // minimum X - left most
    -4,  // minimum Y - bottom most (descenders can drive this negative)
    18,  // maximum X - right most
    14}; // maximum Y - top most
// Approx. 1596 bytes -  but your mileage may vary.

#endif