
#ifndef __FIXEDFONTBPMONOBOLDSTENCILTTF12
#define __FIXEDFONTBPMONOBOLDSTENCILTTF12
const uint8_t HotStuff12Bitmaps[] PROGMEM = {
  0x00, 0x07, 0x01, 0x78, 0x13, 0x81, 0xB8, 0x1B, 0x83, 0xBC, 0x39, 0xC3,
  0x9C, 0x39, 0xC7, 0x9E, 0x7C, 0xE7, 0xEE, 0x7E, 0xE7, 0x0F, 0xF0, 0xFE,
  0x07, 0xE0, 0x70, 0xEF, 0x0E, 0xFC, 0xEF, 0xEE, 0x1E, 0xE0, 0xEE, 0x0E,
  0xE1, 0xCE, 0xFC, 0xEF, 0xEE, 0xBF, 0xE0, 0x7E, 0x07, 0xE0, 0x7E, 0x0F,
  0xEF, 0xEE, 0xFC, 0xEF, 0x00, 0x06, 0xE0, 0xF7, 0x8F, 0xBC, 0xFC, 0x67,
  0x80, 0x78, 0x03, 0x80, 0x1C, 0x00, 0xE0, 0x07, 0x00, 0x38, 0x01, 0xE0,
  0x07, 0x80, 0x3E, 0x18, 0xFB, 0xC3, 0xDF, 0x06, 0xE0, 0xEE, 0x0E, 0xF8,
  0xEF, 0xCE, 0x3E, 0xE0, 0xEE, 0x0F, 0xE0, 0x7E, 0x07, 0xE0, 0x7E, 0x07,
  0xE0, 0x7E, 0x0F, 0xE0, 0xEE, 0x3E, 0xEF, 0xCE, 0xF8, 0xEE, 0x00, 0xEF,
  0xDD, 0xFB, 0xBF, 0x70, 0x0E, 0x01, 0xC0, 0x38, 0x07, 0x7C, 0xEF, 0x9D,
  0xF3, 0x80, 0x70, 0x0E, 0x01, 0xC0, 0x3B, 0xFF, 0x7F, 0xEF, 0xE0, 0xEF,
  0xFD, 0xFF, 0xBF, 0xF0, 0x0E, 0x01, 0xC0, 0x38, 0x07, 0x00, 0xEF, 0xDD,
  0xFB, 0xBF, 0x70, 0x0E, 0x01, 0xC0, 0x38, 0x07, 0x00, 0xE0, 0x00, 0x0D,
  0xC1, 0xDE, 0x3D, 0xE7, 0x84, 0x70, 0x0F, 0x00, 0xE0, 0x0E, 0x3F, 0xE3,
  0xFE, 0x3F, 0xE0, 0x7F, 0x07, 0x78, 0x77, 0xC7, 0x3F, 0x71, 0xF7, 0x07,
  0x40, 0xE0, 0xFC, 0x1F, 0x83, 0xF0, 0x7E, 0x0F, 0xC1, 0xF8, 0x3F, 0x7F,
  0xEF, 0xFD, 0xFF, 0x83, 0xF0, 0x7E, 0x0F, 0xC1, 0xF8, 0x3F, 0x07, 0xE0,
  0xE0, 0xE7, 0xFF, 0x3F, 0xF9, 0xFE, 0x0E, 0x00, 0x70, 0x03, 0x80, 0x1C,
  0x00, 0xE0, 0x07, 0x00, 0x38, 0x01, 0xC0, 0x0E, 0x00, 0x70, 0x03, 0x83,
  0xFC, 0xFF, 0xE7, 0xFF, 0x38, 0x7E, 0x77, 0xE7, 0x7E, 0x70, 0x07, 0x00,
  0x70, 0x07, 0x00, 0x70, 0x07, 0x00, 0x70, 0x07, 0x00, 0x70, 0x07, 0x00,
  0xF0, 0x1F, 0xFF, 0xEF, 0xFC, 0xFF, 0x00, 0xE0, 0xFF, 0x07, 0xB8, 0x79,
  0xC7, 0x8E, 0x38, 0x73, 0xC3, 0xBC, 0x1D, 0xC0, 0xEE, 0x07, 0x78, 0x39,
  0xC1, 0xCF, 0x0E, 0x3C, 0x70, 0xF3, 0x87, 0x9C, 0x1E, 0xE0, 0x78, 0xE0,
  0x1C, 0x03, 0x80, 0x70, 0x0E, 0x01, 0xC0, 0x38, 0x07, 0x00, 0xE0, 0x1C,
  0x03, 0x80, 0x70, 0x0E, 0x01, 0xC0, 0x3B, 0xFF, 0x7F, 0xEF, 0xE0, 0xF0,
  0xFF, 0x0F, 0xF0, 0xFF, 0x8F, 0xF9, 0xFF, 0x9F, 0xF9, 0xFF, 0xDF, 0xFF,
  0xFF, 0xFF, 0xFF, 0xFE, 0xF7, 0xEF, 0x7E, 0xF7, 0xEF, 0x7E, 0x77, 0xE0,
  0x70, 0xE0, 0x77, 0x07, 0x70, 0x73, 0x87, 0xB8, 0x79, 0xC7, 0xDC, 0x7C,
  0xE7, 0xE6, 0x7E, 0x73, 0xE3, 0xBE, 0x39, 0xE1, 0xDE, 0x1C, 0xE0, 0xEE,
  0x0E, 0xE0, 0x70, 0x09, 0x01, 0x98, 0x39, 0xC7, 0x9E, 0x70, 0xEE, 0x0F,
  0xE0, 0x7E, 0x07, 0xE0, 0x7E, 0x07, 0xE0, 0x7E, 0x07, 0x70, 0xE7, 0x9E,
  0x79, 0xE3, 0x9C, 0x19, 0x80, 0xEF, 0x0E, 0xFC, 0xEF, 0xEE, 0x1F, 0xE0,
  0x7E, 0x07, 0xE0, 0x7E, 0x0F, 0xE1, 0xEE, 0xFE, 0xEF, 0xCE, 0xF0, 0xE0,
  0x0E, 0x00, 0xE0, 0x0E, 0x00, 0xE0, 0x00, 0x09, 0x01, 0x98, 0x39, 0xC7,
  0x9E, 0x70, 0xEF, 0x0F, 0xE0, 0x7E, 0x07, 0xE0, 0x7E, 0x07, 0xE0, 0x7E,
  0x07, 0xF0, 0xF7, 0x9E, 0x7F, 0xE3, 0xFC, 0x1F, 0x80, 0x00, 0x07, 0xE0,
  0x3C, 0x01, 0x80, 0xEF, 0x0E, 0xF8, 0xEF, 0xCE, 0x1E, 0xE0, 0xEE, 0x0E,
  0xE0, 0xEE, 0x06, 0xEF, 0x4E, 0xF0, 0xEF, 0x8E, 0x3C, 0xE3, 0xCE, 0x1E,
  0xE0, 0xEE, 0x0F, 0xE0, 0x70, 0x0F, 0xC3, 0xFF, 0x3F, 0xE4, 0x06, 0x70,
  0x07, 0x80, 0x7E, 0x03, 0xF8, 0x0F, 0xC0, 0x3E, 0x00, 0xF0, 0x07, 0x00,
  0x77, 0x18, 0x7F, 0xEF, 0xFE, 0x1F, 0x80, 0xFF, 0xFF, 0xFF, 0xFF, 0xF0,
  0x00, 0x00, 0x00, 0x70, 0x07, 0x00, 0x70, 0x07, 0x00, 0x70, 0x07, 0x00,
  0x70, 0x07, 0x00, 0x70, 0x07, 0x00, 0x70, 0x07, 0x00, 0xE0, 0x7E, 0x07,
  0xE0, 0x7E, 0x07, 0xE0, 0x7E, 0x07, 0xE0, 0x7E, 0x07, 0xE0, 0x7E, 0x07,
  0xE0, 0x7E, 0x07, 0xF0, 0xF7, 0x9E, 0x79, 0xE3, 0x9C, 0x19, 0x80, 0x70,
  0x39, 0xC0, 0xE7, 0x87, 0x9E, 0x1E, 0x38, 0x70, 0xE1, 0xC3, 0xCF, 0x0F,
  0x3C, 0x1C, 0xE0, 0x73, 0x81, 0xEE, 0x03, 0xB8, 0x0E, 0xC0, 0x39, 0x00,
  0xF4, 0x01, 0xC0, 0x07, 0x00, 0xE0, 0x7E, 0x07, 0xE0, 0x7E, 0x07, 0xE0,
  0x7E, 0x77, 0xE7, 0x76, 0x77, 0x77, 0x77, 0x73, 0x77, 0x27, 0x7A, 0x77,
  0xA7, 0x5A, 0x75, 0xA7, 0x1A, 0x31, 0xA0, 0x78, 0x39, 0xE1, 0xE3, 0xC7,
  0x0F, 0x3C, 0x1E, 0xE0, 0x39, 0x80, 0xF4, 0x01, 0xC0, 0x07, 0x80, 0x0F,
  0x00, 0xBC, 0x06, 0x78, 0x1D, 0xE0, 0xF3, 0xC3, 0x87, 0x1E, 0x1E, 0x70,
  0x38, 0xF0, 0x7B, 0x83, 0x9E, 0x3C, 0x71, 0xC3, 0x8E, 0x1E, 0xF0, 0x77,
  0x03, 0x98, 0x0E, 0x80, 0x74, 0x03, 0x80, 0x0E, 0x00, 0x70, 0x03, 0x80,
  0x1C, 0x00, 0xE0, 0x07, 0x00, 0x7F, 0xF7, 0xFF, 0x7F, 0xF0, 0x00, 0x01,
  0xC0, 0x3C, 0x07, 0x80, 0x78, 0x0F, 0x00, 0xE0, 0x1E, 0x03, 0xC0, 0x3C,
  0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xF0, 0x3F, 0x1F, 0xE7, 0xFC, 0x07,
  0x01, 0xDF, 0x7F, 0xDF, 0x87, 0xE1, 0xFF, 0x77, 0xDC, 0xF7, 0xE0, 0x1C,
  0x03, 0x80, 0x70, 0x0E, 0x01, 0xDE, 0x3B, 0xE7, 0x7E, 0xE1, 0xFC, 0x1F,
  0x83, 0xF0, 0x7E, 0x0F, 0xC7, 0xBB, 0xF7, 0x7C, 0x6E, 0x00, 0x0F, 0x87,
  0xF9, 0xFF, 0x7C, 0x4F, 0x01, 0xC0, 0x38, 0x07, 0x80, 0xF8, 0xCF, 0xF8,
  0xFF, 0x07, 0xC0, 0x00, 0xE0, 0x1C, 0x03, 0x80, 0x70, 0x0E, 0x1D, 0xCF,
  0xBB, 0xF7, 0x70, 0xFC, 0x1F, 0x83, 0xF0, 0x7E, 0x0F, 0xE1, 0xDF, 0xB9,
  0xF7, 0x1E, 0xE0, 0x1B, 0x07, 0x71, 0xEF, 0x78, 0xEE, 0x0F, 0xDF, 0xFB,
  0xFF, 0x00, 0xF0, 0x4F, 0xF8, 0xFF, 0x87, 0xC0, 0x07, 0xC1, 0xFC, 0x7F,
  0x8F, 0x01, 0xC0, 0xFB, 0xDF, 0x7B, 0xEE, 0x1C, 0x03, 0x80, 0x70, 0x0E,
  0x01, 0xC0, 0x38, 0x3F, 0x7F, 0xEF, 0xFD, 0xE0, 0x0E, 0xC7, 0xDD, 0xFB,
  0xBC, 0x7F, 0x0F, 0xC1, 0xF8, 0x3F, 0x07, 0xF0, 0xEF, 0xDC, 0xFB, 0x8F,
  0x70, 0x0E, 0xE3, 0xDF, 0xF3, 0xFE, 0x3F, 0x00, 0xE0, 0x1C, 0x03, 0x80,
  0x70, 0x0E, 0x01, 0xCF, 0x3B, 0xF7, 0x7F, 0xE9, 0xFC, 0x1F, 0x83, 0xF0,
  0x7E, 0x0F, 0xC1, 0xF8, 0x3F, 0x07, 0xE0, 0xE0, 0x06, 0x00, 0xF0, 0x0F,
  0x00, 0xF0, 0x00, 0x00, 0x00, 0xEE, 0x0E, 0xE0, 0xEE, 0x00, 0xE0, 0x0E,
  0x00, 0xE0, 0x0E, 0x00, 0xE0, 0x0E, 0x0F, 0xE7, 0xFE, 0x7F, 0xE7, 0x01,
  0xE0, 0x3C, 0x07, 0x80, 0x60, 0x00, 0x7D, 0xCF, 0xB9, 0xF7, 0x00, 0xE0,
  0x1C, 0x03, 0x80, 0x70, 0x0E, 0x01, 0xC0, 0x38, 0x07, 0x01, 0xE0, 0x7F,
  0xFF, 0x7F, 0xCF, 0xF0, 0xE0, 0x0E, 0x00, 0xE0, 0x0E, 0x00, 0xE0, 0x0E,
  0x3C, 0xE3, 0xCE, 0x78, 0xEF, 0x0E, 0xF0, 0xEE, 0x0E, 0xF0, 0xEF, 0x0E,
  0x78, 0xE3, 0xCE, 0x1E, 0xE0, 0xF0, 0x77, 0x07, 0x70, 0x77, 0x00, 0x70,
  0x07, 0x00, 0x70, 0x07, 0x00, 0x70, 0x07, 0x00, 0x70, 0x07, 0x00, 0x70,
  0x07, 0x00, 0x70, 0xFF, 0x7F, 0xF7, 0xFF, 0x70, 0xEC, 0xDF, 0x37, 0xCC,
  0xF3, 0x3E, 0xEF, 0xDD, 0xFB, 0xBF, 0x77, 0xEE, 0xFD, 0xDF, 0xBB, 0xF7,
  0x70, 0xEF, 0x9D, 0xFB, 0xBF, 0xF4, 0xFE, 0x0F, 0xC1, 0xF8, 0x3F, 0x07,
  0xE0, 0xFC, 0x1F, 0x83, 0xF0, 0x70, 0x1B, 0x07, 0x71, 0xEF, 0x78, 0xFE,
  0x0F, 0xC1, 0xF8, 0x3F, 0x07, 0xF1, 0xEF, 0x78, 0xEE, 0x0D, 0x80, 0xEF,
  0x1D, 0xF3, 0xBF, 0x70, 0xFE, 0x0F, 0xC1, 0xF8, 0x3F, 0x07, 0xE1, 0xDD,
  0xFB, 0xBE, 0x77, 0x0E, 0x01, 0xC0, 0x38, 0x07, 0x00, 0x0E, 0xC7, 0xDD,
  0xFB, 0xBC, 0x7E, 0x0F, 0xC1, 0xF8, 0x3F, 0x07, 0xF0, 0xEF, 0xDC, 0xFB,
  0x8F, 0x70, 0x0E, 0x01, 0xC0, 0x38, 0x07, 0xFD, 0xFF, 0xDF, 0xFD, 0xF1,
  0xC0, 0x1C, 0x01, 0xC0, 0x1C, 0x01, 0xC0, 0x1C, 0x0F, 0xFC, 0xFF, 0xCF,
  0xFC, 0x1F, 0xC7, 0xF8, 0x3F, 0x30, 0x07, 0xC0, 0x7E, 0x07, 0xF0, 0x3E,
  0x60, 0xCF, 0xE3, 0xFF, 0x0F, 0x80, 0x00, 0x00, 0xE0, 0x0E, 0x0F, 0xFF,
  0xFF, 0xFF, 0xFF, 0x00, 0x00, 0xE0, 0x0E, 0x00, 0xE0, 0x0E, 0x00, 0xF0,
  0x07, 0xF0, 0x7F, 0x01, 0xF0, 0xE0, 0xFC, 0x1F, 0x83, 0xF0, 0x7E, 0x0F,
  0xC1, 0xF8, 0x3F, 0x07, 0xF0, 0xEF, 0xDD, 0xFB, 0x9F, 0x70, 0xE0, 0xF7,
  0x0E, 0x70, 0xE7, 0x8E, 0x39, 0xC3, 0x9C, 0x1D, 0xC1, 0xD8, 0x1C, 0x80,
  0xE8, 0x0E, 0x00, 0xE0, 0xEE, 0xFD, 0xDF, 0xBB, 0xF7, 0x7E, 0xEF, 0xDD,
  0xBD, 0xB3, 0xBA, 0x77, 0x4E, 0xE9, 0xDD, 0x3B, 0xA0, 0xF0, 0xF7, 0x9E,
  0x39, 0xC3, 0xCC, 0x1E, 0x80, 0xF0, 0x07, 0x01, 0x78, 0x3B, 0xC3, 0x9C,
  0x78, 0xEF, 0x0F, 0xF0, 0x77, 0x0E, 0x70, 0xE7, 0x8E, 0x39, 0xC3, 0x9C,
  0x1B, 0xC1, 0xB8, 0x13, 0x80, 0x70, 0x07, 0x00, 0x70, 0x0E, 0x00, 0xE0,
  0x0C, 0x01, 0xC0, 0xFF, 0xDF, 0xFB, 0xFF, 0x00, 0x00, 0xF0, 0x3C, 0x07,
  0x01, 0xC0, 0x00, 0x1F, 0xFF, 0xFF, 0xFF, 0xF0, 0x0F, 0x03, 0xFC, 0x3F,
  0xE1, 0x9E, 0xC0, 0xFE, 0x07, 0xE0, 0x7E, 0x07, 0xE0, 0x7E, 0x07, 0xF0,
  0x37, 0x98, 0x7F, 0xC3, 0xFC, 0x0F, 0x00, 0x07, 0x07, 0x70, 0x77, 0x07,
  0x70, 0x47, 0x00, 0x70, 0x07, 0x00, 0x70, 0x07, 0x00, 0x70, 0x07, 0x00,
  0x70, 0xFF, 0x7F, 0xF7, 0xFF, 0x70, 0x1F, 0x0F, 0xF3, 0xFC, 0x70, 0x30,
  0x0E, 0x01, 0xC0, 0x78, 0x1E, 0x07, 0x81, 0xE0, 0x78, 0x00, 0x07, 0xFF,
  0xFF, 0xFF, 0xF8, 0x3F, 0x1F, 0xF1, 0xFF, 0x00, 0x00, 0x1C, 0x7F, 0x0F,
  0xE1, 0xFE, 0x01, 0xE0, 0x1C, 0x00, 0xC0, 0xCF, 0xFD, 0xFF, 0x1F, 0xC0,
  0x01, 0xC0, 0x38, 0x07, 0x00, 0x74, 0x0E, 0xC1, 0xCC, 0x1D, 0xC3, 0x9C,
  0x71, 0xCF, 0xDF, 0xFD, 0xFF, 0xDF, 0x01, 0xC0, 0x1C, 0x01, 0xC0, 0x3F,
  0xE3, 0xFE, 0x3F, 0xE0, 0x00, 0x7F, 0x07, 0xFC, 0x3F, 0xE0, 0x0E, 0x00,
  0xF0, 0x00, 0x00, 0xF7, 0x1E, 0x7F, 0xEF, 0xFC, 0x3F, 0x00, 0x01, 0xC0,
  0x7C, 0x0F, 0xE1, 0xF0, 0x3C, 0x07, 0x80, 0x7F, 0xC7, 0xFE, 0x78, 0xF0,
  0x07, 0x70, 0x77, 0x00, 0x78, 0xE3, 0xFE, 0x3F, 0xC0, 0xF8, 0xFF, 0xFF,
  0xFF, 0xFF, 0x80, 0x00, 0x3C, 0x07, 0x80, 0xE0, 0x3C, 0x07, 0x01, 0xE0,
  0x38, 0x0F, 0x01, 0xC0, 0x78, 0x0E, 0x00, 0x1B, 0x07, 0x71, 0xEF, 0x38,
  0xE7, 0x1C, 0xF7, 0x0E, 0xE3, 0xDE, 0x71, 0xDC, 0x1F, 0x83, 0xF8, 0xFF,
  0xBE, 0xF7, 0x86, 0xC0, 0x1F, 0x0F, 0xF1, 0xFF, 0x08, 0xFE, 0x0F, 0xC0,
  0xFC, 0x63, 0xFF, 0x3F, 0xE0, 0x38, 0x0F, 0x07, 0xC7, 0xF0, 0xFC, 0x1C,
  0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x80, 0x7F, 0xFF, 0xFE, 0xFC, 0xE0, 0x1C,
  0xCD, 0xCF, 0xF8, 0x7B, 0x80, 0x70, 0x07, 0x00, 0xE0, 0x1F, 0xE1, 0xFF,
  0x3F, 0x33, 0x80, 0x73, 0xF7, 0x3F, 0xE1, 0xE0, 0x77, 0xFF, 0xF7, 0x00,
  0x7B, 0xBD, 0xEF, 0x70, 0x73, 0x9C, 0xE7, 0x39, 0xCE, 0x73, 0x80, 0x07,
  0x7F, 0xFF, 0x70, 0x77, 0xFF, 0xF7, 0x01, 0xDF, 0xFF, 0xDC, 0xFF, 0xFF,
  0xFF, 0xFF, 0x80, 0xFF, 0xFF, 0xCE, 0x73, 0x9C, 0xE7, 0x39, 0xCE, 0x73,
  0x9C, 0xFF, 0xFE, 0xFF, 0xFE, 0x73, 0x9C, 0xE7, 0x39, 0xCE, 0x73, 0x9C,
  0xE7, 0xFF, 0xFE, 0x0C, 0x38, 0xF9, 0xE7, 0x8E, 0x3C, 0x70, 0xE1, 0xC3,
  0x87, 0x0E, 0x1E, 0x1C, 0x3C, 0x78, 0x78, 0x78, 0x60, 0x00, 0x60, 0xE1,
  0xE3, 0xC3, 0xC3, 0x87, 0x87, 0x0E, 0x1C, 0x38, 0x70, 0xE3, 0xC7, 0x1E,
  0x38, 0xF3, 0xC3, 0x00, 0x00 };

// Glyph, Offset to bitmap, Width, Height, xAdvance, xOffset, yOffset

const gfxglyph_t HotStuff12Glyphs[] PROGMEM = {
  {32,     0,   1,   1,  14,    0,    0 },   // 0x00 ' ' 
  {65,     1,  12,  17,  14,    1,  -16 },   // 0x01 'A' 
  {66,    27,  12,  17,  14,    1,  -16 },   // 0x02 'B' 
  {67,    53,  13,  17,  14,    1,  -16 },   // 0x03 'C' 
  {68,    81,  12,  17,  14,    1,  -16 },   // 0x04 'D' 
  {69,   107,  11,  17,  14,    1,  -16 },   // 0x05 'E' 
  {70,   131,  11,  17,  14,    1,  -16 },   // 0x06 'F' 
  {71,   155,  12,  17,  14,    1,  -16 },   // 0x07 'G' 
  {72,   181,  11,  17,  14,    1,  -16 },   // 0x08 'H' 
  {73,   205,  13,  17,  14,    1,  -16 },   // 0x09 'I' 
  {74,   233,  12,  17,  14,    1,  -16 },   // 0x0A 'J' 
  {75,   259,  13,  17,  14,    1,  -16 },   // 0x0B 'K' 
  {76,   287,  11,  17,  14,    1,  -16 },   // 0x0C 'L' 
  {77,   311,  12,  17,  14,    1,  -16 },   // 0x0D 'M' 
  {78,   337,  12,  17,  14,    1,  -16 },   // 0x0E 'N' 
  {79,   363,  12,  17,  14,    1,  -16 },   // 0x0F 'O' 
  {80,   389,  12,  17,  14,    1,  -16 },   // 0x10 'P' 
  {81,   415,  12,  21,  14,    1,  -16 },   // 0x11 'Q' 
  {82,   447,  12,  17,  14,    1,  -16 },   // 0x12 'R' 
  {83,   473,  12,  17,  14,    1,  -16 },   // 0x13 'S' 
  {84,   499,  12,  17,  14,    1,  -16 },   // 0x14 'T' 
  {85,   525,  12,  17,  14,    1,  -16 },   // 0x15 'U' 
  {86,   551,  14,  17,  14,    0,  -16 },   // 0x16 'V' 
  {87,   581,  12,  17,  14,    1,  -16 },   // 0x17 'W' 
  {88,   607,  14,  17,  14,    0,  -16 },   // 0x18 'X' 
  {89,   637,  13,  17,  14,    0,  -16 },   // 0x19 'Y' 
  {90,   665,  12,  17,  14,    1,  -16 },   // 0x1A 'Z' 
  {97,   691,  10,  12,  14,    2,  -11 },   // 0x1B 'a' 
  {98,   706,  11,  17,  14,    2,  -16 },   // 0x1C 'b' 
  {99,   730,  11,  12,  14,    2,  -11 },   // 0x1D 'c' 
  {100,   747,  11,  17,  14,    1,  -16 },   // 0x1E 'd' 
  {101,   771,  11,  12,  14,    1,  -11 },   // 0x1F 'e' 
  {102,   788,  11,  17,  14,    1,  -16 },   // 0x20 'f' 
  {103,   812,  11,  17,  14,    2,  -11 },   // 0x21 'g' 
  {104,   836,  11,  17,  14,    2,  -16 },   // 0x22 'h' 
  {105,   860,  12,  18,  14,    1,  -17 },   // 0x23 'i' 
  {106,   887,  11,  21,  14,    1,  -16 },   // 0x24 'j' 
  {107,   916,  12,  17,  14,    1,  -16 },   // 0x25 'k' 
  {108,   942,  12,  17,  14,    1,  -16 },   // 0x26 'l' 
  {109,   968,  11,  12,  14,    2,  -11 },   // 0x27 'm' 
  {110,   985,  11,  12,  14,    2,  -11 },   // 0x28 'n' 
  {111,  1002,  11,  12,  14,    1,  -11 },   // 0x29 'o' 
  {112,  1019,  11,  16,  14,    2,  -11 },   // 0x2A 'p' 
  {113,  1041,  11,  16,  14,    2,  -11 },   // 0x2B 'q' 
  {114,  1063,  12,  12,  14,    1,  -11 },   // 0x2C 'r' 
  {115,  1081,  11,  12,  14,    2,  -11 },   // 0x2D 's' 
  {116,  1098,  12,  15,  14,    1,  -14 },   // 0x2E 't' 
  {117,  1121,  11,  12,  14,    2,  -11 },   // 0x2F 'u' 
  {118,  1138,  12,  12,  14,    1,  -11 },   // 0x30 'v' 
  {119,  1156,  11,  12,  14,    2,  -11 },   // 0x31 'w' 
  {120,  1173,  12,  12,  14,    1,  -11 },   // 0x32 'x' 
  {121,  1191,  12,  16,  14,    1,  -11 },   // 0x33 'y' 
  {122,  1215,  11,  12,  14,    2,  -11 },   // 0x34 'z' 
  {48,  1232,  12,  15,  14,    1,  -14 },   // 0x35 '0' 
  {49,  1255,  12,  15,  14,    1,  -14 },   // 0x36 '1' 
  {50,  1278,  11,  15,  14,    1,  -14 },   // 0x37 '2' 
  {51,  1299,  11,  15,  14,    2,  -14 },   // 0x38 '3' 
  {52,  1320,  12,  15,  14,    1,  -14 },   // 0x39 '4' 
  {53,  1343,  12,  15,  14,    1,  -14 },   // 0x3A '5' 
  {54,  1366,  12,  16,  14,    1,  -15 },   // 0x3B '6' 
  {55,  1390,  11,  15,  14,    2,  -14 },   // 0x3C '7' 
  {56,  1411,  11,  15,  14,    1,  -14 },   // 0x3D '8' 
  {57,  1432,  11,  15,  14,    1,  -14 },   // 0x3E '9' 
  {45,  1453,  11,   3,  14,    2,   -7 },   // 0x3F '-' 
  {37,  1458,  12,  17,  14,    1,  -16 },   // 0x40 '%' 
  {46,  1484,   5,   5,  14,    2,   -4 },   // 0x41 '.' 
  {44,  1488,   5,   6,  14,    2,   -3 },   // 0x42 ',' 
  {33,  1492,   5,  17,  14,    2,  -16 },   // 0x43 '!' 
  {58,  1503,   5,  11,  14,    2,  -10 },   // 0x44 ':' 
  {45,  1510,  11,   3,  14,    2,   -7 },   // 0x45 '-' 
  {91,  1515,   5,  19,  14,    7,  -16 },   // 0x46 '[' 
  {93,  1527,   5,  19,  14,    2,  -16 },   // 0x47 ']' 
  {40,  1539,   7,  21,  14,    5,  -17 },   // 0x48 '(' 
  {41,  1558,   7,  21,  14,    2,  -17 }   // 0x49 ')' 
};

const gfxfont_t HotStuff12 PROGMEM = 
{
  (uint8_t  *)HotStuff12Bitmaps, //< Glyph bitmaps, concatenated 
  (gfxglyph_t *)HotStuff12Glyphs, //< Glyph array
  74,// total glyphs in the string
  21,  // newline distance (y axis)
     0,  // minimum X - left most
    -5,  // minimum Y - bottom most (descenders can drive this negative)
    14,  // maximum X - right most
    18}; // maximum Y - top most
// Approx. 2109 bytes -  but your mileage may vary.

#endif