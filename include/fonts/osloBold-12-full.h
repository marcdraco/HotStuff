
#ifndef __FIXEDFONTOSLOIIBOLDTTF12
#define __FIXEDFONTOSLOIIBOLDTTF12
const uint8_t HotStuff12Bitmaps[] PROGMEM = {
  0x00, 0x08, 0x03, 0x00, 0xC0, 0x30, 0x14, 0x05, 0x81, 0x20, 0x48, 0x32,
  0x0F, 0x82, 0x10, 0x84, 0x61, 0x10, 0x44, 0x19, 0x02, 0x40, 0xB0, 0x28,
  0x0C, 0xFE, 0x20, 0x68, 0x0A, 0x01, 0x80, 0x60, 0x18, 0x06, 0x02, 0x81,
  0xBF, 0x88, 0x1A, 0x02, 0x80, 0x60, 0x18, 0x06, 0x01, 0x80, 0xA0, 0x6F,
  0xE0, 0x1E, 0x18, 0x64, 0x0A, 0x01, 0x80, 0x60, 0x18, 0x06, 0x00, 0x80,
  0x20, 0x08, 0x02, 0x00, 0x80, 0x20, 0x18, 0x06, 0x01, 0x40, 0x98, 0x61,
  0xE0, 0xFE, 0x20, 0x68, 0x0A, 0x01, 0x80, 0x60, 0x18, 0x06, 0x01, 0x80,
  0x60, 0x18, 0x06, 0x01, 0x80, 0x60, 0x18, 0x06, 0x01, 0x80, 0xA0, 0x6F,
  0xE0, 0xFF, 0xC0, 0x20, 0x10, 0x08, 0x04, 0x02, 0x01, 0x00, 0x80, 0x7F,
  0xE0, 0x10, 0x08, 0x04, 0x02, 0x01, 0x00, 0x80, 0x40, 0x3F, 0xE0, 0xFF,
  0xC0, 0x20, 0x10, 0x08, 0x04, 0x02, 0x01, 0x00, 0x80, 0x7F, 0xE0, 0x10,
  0x08, 0x04, 0x02, 0x01, 0x00, 0x80, 0x40, 0x20, 0x00, 0x1E, 0x18, 0x64,
  0x0A, 0x01, 0x80, 0x60, 0x18, 0x06, 0x00, 0x80, 0x21, 0xF8, 0x06, 0x01,
  0x80, 0x60, 0x18, 0x06, 0x01, 0x40, 0xD8, 0x71, 0xE4, 0x80, 0x60, 0x18,
  0x06, 0x01, 0x80, 0x60, 0x18, 0x06, 0x01, 0x80, 0x7F, 0xF8, 0x06, 0x01,
  0x80, 0x60, 0x18, 0x06, 0x01, 0x80, 0x60, 0x18, 0x04, 0xFF, 0x84, 0x02,
  0x01, 0x00, 0x80, 0x40, 0x20, 0x10, 0x08, 0x04, 0x02, 0x01, 0x00, 0x80,
  0x40, 0x20, 0x10, 0x08, 0x04, 0x3F, 0xE0, 0x07, 0xC0, 0x10, 0x04, 0x01,
  0x00, 0x40, 0x10, 0x04, 0x01, 0x00, 0x40, 0x10, 0x04, 0x01, 0x00, 0x40,
  0x18, 0x06, 0x01, 0x40, 0x98, 0x61, 0xE0, 0x80, 0xE0, 0x48, 0x22, 0x18,
  0x8C, 0x26, 0x0B, 0x02, 0x80, 0xC0, 0x20, 0x0C, 0x02, 0x80, 0xB0, 0x26,
  0x08, 0xC2, 0x18, 0x82, 0x20, 0x48, 0x0C, 0x80, 0x40, 0x20, 0x10, 0x08,
  0x04, 0x02, 0x01, 0x00, 0x80, 0x40, 0x20, 0x10, 0x08, 0x04, 0x02, 0x01,
  0x00, 0x80, 0x40, 0x3F, 0xE0, 0x80, 0x70, 0x3C, 0x0F, 0x87, 0xA1, 0x6C,
  0xD9, 0x26, 0x79, 0x8C, 0x63, 0x18, 0x86, 0x01, 0x80, 0x60, 0x18, 0x06,
  0x01, 0x80, 0x60, 0x18, 0x04, 0x80, 0x70, 0x1C, 0x07, 0x81, 0xA0, 0x6C,
  0x19, 0x06, 0x61, 0x88, 0x63, 0x18, 0x46, 0x19, 0x82, 0x60, 0xD8, 0x16,
  0x07, 0x80, 0xE0, 0x38, 0x04, 0x1E, 0x18, 0x64, 0x0A, 0x01, 0x80, 0x60,
  0x18, 0x06, 0x01, 0x80, 0x60, 0x18, 0x06, 0x01, 0x80, 0x60, 0x18, 0x06,
  0x01, 0x40, 0x98, 0x61, 0xE0, 0xFE, 0x20, 0x68, 0x0A, 0x01, 0x80, 0x60,
  0x18, 0x06, 0x02, 0x81, 0xBF, 0x88, 0x02, 0x00, 0x80, 0x20, 0x08, 0x02,
  0x00, 0x80, 0x20, 0x08, 0x00, 0x1E, 0x0C, 0x31, 0x02, 0x40, 0x28, 0x05,
  0x00, 0xA0, 0x14, 0x02, 0x80, 0x50, 0x0A, 0x01, 0x40, 0x28, 0x05, 0x18,
  0xA1, 0x94, 0x1E, 0x41, 0x8C, 0x30, 0x79, 0x80, 0xFC, 0x41, 0xA0, 0x50,
  0x18, 0x0C, 0x06, 0x03, 0x02, 0x83, 0x7F, 0x22, 0x10, 0x88, 0x44, 0x12,
  0x09, 0x02, 0x81, 0x40, 0xE0, 0x20, 0x1E, 0x18, 0x44, 0x0A, 0x01, 0x80,
  0x60, 0x18, 0x01, 0x00, 0x60, 0x07, 0x80, 0x18, 0x02, 0x00, 0x60, 0x18,
  0x06, 0x01, 0x40, 0x88, 0x61, 0xE0, 0xFF, 0x84, 0x02, 0x01, 0x00, 0x80,
  0x40, 0x20, 0x10, 0x08, 0x04, 0x02, 0x01, 0x00, 0x80, 0x40, 0x20, 0x10,
  0x08, 0x04, 0x02, 0x00, 0x80, 0x60, 0x18, 0x06, 0x01, 0x80, 0x60, 0x18,
  0x06, 0x01, 0x80, 0x60, 0x18, 0x06, 0x01, 0x80, 0x60, 0x18, 0x06, 0x01,
  0x40, 0x98, 0x61, 0xE0, 0x80, 0xE0, 0x24, 0x09, 0x02, 0x41, 0x90, 0x42,
  0x10, 0x84, 0x21, 0x08, 0x83, 0x20, 0x48, 0x12, 0x05, 0x81, 0x40, 0x30,
  0x0C, 0x03, 0x00, 0x80, 0x80, 0x60, 0x18, 0x06, 0x01, 0x80, 0x60, 0x18,
  0x06, 0x01, 0x88, 0x63, 0x18, 0xC6, 0x79, 0x92, 0x6C, 0xDA, 0x17, 0x87,
  0xC0, 0xF0, 0x38, 0x04, 0x80, 0xD0, 0x24, 0x18, 0x84, 0x23, 0x0C, 0x81,
  0x20, 0x50, 0x0C, 0x02, 0x00, 0xC0, 0x70, 0x12, 0x0C, 0x82, 0x30, 0x84,
  0x41, 0x10, 0x28, 0x0C, 0x80, 0xE0, 0xD0, 0x48, 0x22, 0x21, 0x10, 0x50,
  0x28, 0x1C, 0x04, 0x02, 0x01, 0x00, 0x80, 0x40, 0x20, 0x10, 0x08, 0x04,
  0x02, 0x00, 0xFF, 0xC0, 0x20, 0x18, 0x04, 0x03, 0x00, 0x80, 0x60, 0x10,
  0x04, 0x02, 0x00, 0x80, 0x60, 0x10, 0x0C, 0x02, 0x00, 0x80, 0x40, 0x10,
  0x0F, 0xF8, 0x08, 0x03, 0x00, 0xC0, 0x30, 0x14, 0x05, 0x81, 0x20, 0x48,
  0x32, 0x0F, 0x82, 0x10, 0x84, 0x61, 0x10, 0x44, 0x19, 0x02, 0x40, 0xB0,
  0x28, 0x0C, 0xFE, 0x20, 0x68, 0x0A, 0x01, 0x80, 0x60, 0x18, 0x06, 0x02,
  0x81, 0xBF, 0x88, 0x1A, 0x02, 0x80, 0x60, 0x18, 0x06, 0x01, 0x80, 0xA0,
  0x6F, 0xE0, 0x1E, 0x18, 0x64, 0x0A, 0x01, 0x80, 0x60, 0x18, 0x06, 0x00,
  0x80, 0x20, 0x08, 0x02, 0x00, 0x80, 0x20, 0x18, 0x06, 0x01, 0x40, 0x98,
  0x61, 0xE0, 0xFE, 0x20, 0x68, 0x0A, 0x01, 0x80, 0x60, 0x18, 0x06, 0x01,
  0x80, 0x60, 0x18, 0x06, 0x01, 0x80, 0x60, 0x18, 0x06, 0x01, 0x80, 0xA0,
  0x6F, 0xE0, 0xFF, 0xC0, 0x20, 0x10, 0x08, 0x04, 0x02, 0x01, 0x00, 0x80,
  0x7F, 0xE0, 0x10, 0x08, 0x04, 0x02, 0x01, 0x00, 0x80, 0x40, 0x3F, 0xE0,
  0xFF, 0xC0, 0x20, 0x10, 0x08, 0x04, 0x02, 0x01, 0x00, 0x80, 0x7F, 0xE0,
  0x10, 0x08, 0x04, 0x02, 0x01, 0x00, 0x80, 0x40, 0x20, 0x00, 0x1E, 0x18,
  0x64, 0x0A, 0x01, 0x80, 0x60, 0x18, 0x06, 0x00, 0x80, 0x21, 0xF8, 0x06,
  0x01, 0x80, 0x60, 0x18, 0x06, 0x01, 0x40, 0xD8, 0x71, 0xE4, 0x80, 0x60,
  0x18, 0x06, 0x01, 0x80, 0x60, 0x18, 0x06, 0x01, 0x80, 0x7F, 0xF8, 0x06,
  0x01, 0x80, 0x60, 0x18, 0x06, 0x01, 0x80, 0x60, 0x18, 0x04, 0xFF, 0x84,
  0x02, 0x01, 0x00, 0x80, 0x40, 0x20, 0x10, 0x08, 0x04, 0x02, 0x01, 0x00,
  0x80, 0x40, 0x20, 0x10, 0x08, 0x04, 0x3F, 0xE0, 0x07, 0xC0, 0x10, 0x04,
  0x01, 0x00, 0x40, 0x10, 0x04, 0x01, 0x00, 0x40, 0x10, 0x04, 0x01, 0x00,
  0x40, 0x18, 0x06, 0x01, 0x40, 0x98, 0x61, 0xE0, 0x80, 0xE0, 0x48, 0x22,
  0x18, 0x8C, 0x26, 0x0B, 0x02, 0x80, 0xC0, 0x20, 0x0C, 0x02, 0x80, 0xB0,
  0x26, 0x08, 0xC2, 0x18, 0x82, 0x20, 0x48, 0x0C, 0x80, 0x40, 0x20, 0x10,
  0x08, 0x04, 0x02, 0x01, 0x00, 0x80, 0x40, 0x20, 0x10, 0x08, 0x04, 0x02,
  0x01, 0x00, 0x80, 0x40, 0x3F, 0xE0, 0x80, 0x70, 0x3C, 0x0F, 0x87, 0xA1,
  0x6C, 0xD9, 0x26, 0x79, 0x8C, 0x63, 0x18, 0x86, 0x01, 0x80, 0x60, 0x18,
  0x06, 0x01, 0x80, 0x60, 0x18, 0x04, 0x80, 0x70, 0x1C, 0x07, 0x81, 0xA0,
  0x6C, 0x19, 0x06, 0x61, 0x88, 0x63, 0x18, 0x46, 0x19, 0x82, 0x60, 0xD8,
  0x16, 0x07, 0x80, 0xE0, 0x38, 0x04, 0x1E, 0x18, 0x64, 0x0A, 0x01, 0x80,
  0x60, 0x18, 0x06, 0x01, 0x80, 0x60, 0x18, 0x06, 0x01, 0x80, 0x60, 0x18,
  0x06, 0x01, 0x40, 0x98, 0x61, 0xE0, 0xFE, 0x20, 0x68, 0x0A, 0x01, 0x80,
  0x60, 0x18, 0x06, 0x02, 0x81, 0xBF, 0x88, 0x02, 0x00, 0x80, 0x20, 0x08,
  0x02, 0x00, 0x80, 0x20, 0x08, 0x00, 0x1E, 0x0C, 0x31, 0x02, 0x40, 0x28,
  0x05, 0x00, 0xA0, 0x14, 0x02, 0x80, 0x50, 0x0A, 0x01, 0x40, 0x28, 0x05,
  0x18, 0xA1, 0x94, 0x1E, 0x41, 0x8C, 0x30, 0x79, 0x80, 0xFC, 0x41, 0xA0,
  0x50, 0x18, 0x0C, 0x06, 0x03, 0x02, 0x83, 0x7F, 0x22, 0x10, 0x88, 0x44,
  0x12, 0x09, 0x02, 0x81, 0x40, 0xE0, 0x20, 0x1E, 0x18, 0x44, 0x0A, 0x01,
  0x80, 0x60, 0x18, 0x01, 0x00, 0x60, 0x07, 0x80, 0x18, 0x02, 0x00, 0x60,
  0x18, 0x06, 0x01, 0x40, 0x88, 0x61, 0xE0, 0xFF, 0x84, 0x02, 0x01, 0x00,
  0x80, 0x40, 0x20, 0x10, 0x08, 0x04, 0x02, 0x01, 0x00, 0x80, 0x40, 0x20,
  0x10, 0x08, 0x04, 0x02, 0x00, 0x80, 0x60, 0x18, 0x06, 0x01, 0x80, 0x60,
  0x18, 0x06, 0x01, 0x80, 0x60, 0x18, 0x06, 0x01, 0x80, 0x60, 0x18, 0x06,
  0x01, 0x40, 0x98, 0x61, 0xE0, 0x80, 0xE0, 0x24, 0x09, 0x02, 0x41, 0x90,
  0x42, 0x10, 0x84, 0x21, 0x08, 0x83, 0x20, 0x48, 0x12, 0x05, 0x81, 0x40,
  0x30, 0x0C, 0x03, 0x00, 0x80, 0x80, 0x60, 0x18, 0x06, 0x01, 0x80, 0x60,
  0x18, 0x06, 0x01, 0x88, 0x63, 0x18, 0xC6, 0x79, 0x92, 0x6C, 0xDA, 0x17,
  0x87, 0xC0, 0xF0, 0x38, 0x04, 0x80, 0xD0, 0x24, 0x18, 0x84, 0x23, 0x0C,
  0x81, 0x20, 0x50, 0x0C, 0x02, 0x00, 0xC0, 0x70, 0x12, 0x0C, 0x82, 0x30,
  0x84, 0x41, 0x10, 0x28, 0x0C, 0x80, 0xE0, 0xD0, 0x48, 0x22, 0x21, 0x10,
  0x50, 0x28, 0x1C, 0x04, 0x02, 0x01, 0x00, 0x80, 0x40, 0x20, 0x10, 0x08,
  0x04, 0x02, 0x00, 0xFF, 0xC0, 0x20, 0x18, 0x04, 0x03, 0x00, 0x80, 0x60,
  0x10, 0x04, 0x02, 0x00, 0x80, 0x60, 0x10, 0x0C, 0x02, 0x00, 0x80, 0x40,
  0x10, 0x0F, 0xF8, 0x9E, 0x18, 0x64, 0x0B, 0x01, 0xA0, 0x68, 0x19, 0x06,
  0x41, 0x88, 0x62, 0x18, 0x46, 0x11, 0x82, 0x60, 0x98, 0x16, 0x05, 0x40,
  0x98, 0x61, 0xE4, 0xF8, 0x04, 0x02, 0x01, 0x00, 0x80, 0x40, 0x20, 0x10,
  0x08, 0x04, 0x02, 0x01, 0x00, 0x80, 0x40, 0x20, 0x10, 0x08, 0x04, 0x3F,
  0xE0, 0x1E, 0x08, 0x64, 0x0A, 0x01, 0x80, 0x40, 0x10, 0x04, 0x02, 0x01,
  0x00, 0x40, 0x20, 0x10, 0x08, 0x02, 0x01, 0x00, 0x80, 0x40, 0x10, 0x0F,
  0xFC, 0x1E, 0x08, 0x64, 0x0A, 0x01, 0x80, 0x40, 0x10, 0x04, 0x02, 0x01,
  0x01, 0x80, 0x10, 0x02, 0x00, 0x40, 0x18, 0x06, 0x01, 0x40, 0x88, 0x61,
  0xE0, 0x01, 0x00, 0xC0, 0x30, 0x14, 0x05, 0x02, 0x40, 0x90, 0x44, 0x11,
  0x08, 0x42, 0x11, 0x04, 0x41, 0x20, 0x4F, 0xFC, 0x04, 0x01, 0x00, 0x40,
  0x10, 0xFF, 0xE0, 0x08, 0x02, 0x00, 0x9E, 0x38, 0x4C, 0x0A, 0x01, 0x80,
  0x60, 0x10, 0x04, 0x01, 0x00, 0x60, 0x18, 0x06, 0x01, 0x40, 0x88, 0x61,
  0xE0, 0x1E, 0x18, 0x64, 0x0A, 0x01, 0x9E, 0x78, 0x6C, 0x0A, 0x01, 0x80,
  0x60, 0x18, 0x06, 0x01, 0x80, 0x60, 0x18, 0x06, 0x01, 0x40, 0x98, 0x61,
  0xE0, 0xFF, 0xE0, 0x28, 0x0A, 0x04, 0x81, 0x00, 0x80, 0x20, 0x10, 0x04,
  0x01, 0x00, 0x80, 0x20, 0x10, 0x04, 0x02, 0x00, 0x80, 0x40, 0x10, 0x08,
  0x00, 0x1E, 0x18, 0x64, 0x0A, 0x01, 0x80, 0x60, 0x18, 0x05, 0x02, 0x21,
  0x07, 0x82, 0x11, 0x02, 0x80, 0x60, 0x18, 0x06, 0x01, 0x40, 0x98, 0x61,
  0xE0, 0x1E, 0x18, 0x64, 0x0A, 0x01, 0x80, 0x60, 0x18, 0x05, 0x02, 0x61,
  0x87, 0xC0, 0x20, 0x10, 0x04, 0x02, 0x01, 0x00, 0x40, 0x20, 0x10, 0x08,
  0x00, 0xFF, 0xC0, 0x73, 0x16, 0x34, 0x67, 0x41, 0x02, 0x04, 0x10, 0x20,
  0x41, 0x02, 0x04, 0x17, 0x31, 0x63, 0x46, 0x70, 0xC0, 0xF0, 0xFF, 0xFE,
  0xE0, 0xE1, 0xC0, 0xFF, 0xC0, 0xF2, 0x49, 0x24, 0x92, 0x49, 0x24, 0x92,
  0x49, 0x38, 0xE4, 0x92, 0x49, 0x24, 0x92, 0x49, 0x24, 0x92, 0x78, 0x69,
  0x29, 0x24, 0x92, 0x49, 0x24, 0x89, 0x26, 0x89, 0x24, 0x49, 0x24, 0x92,
  0x49, 0x49, 0x28 };

// Glyph, Offset to bitmap, Width, Height, xAdvance, xOffset, yOffset

const gfxglyph_t HotStuff12Glyphs[] PROGMEM = {
  {32,     0,   1,   1,   5,    0,    0 },   // 0x00 ' ' 
  {65,     1,  10,  19,  11,    0,  -18 },   // 0x01 'A' 
  {66,    25,  10,  19,  11,    0,  -18 },   // 0x02 'B' 
  {67,    49,  10,  19,  11,    0,  -18 },   // 0x03 'C' 
  {68,    73,  10,  19,  11,    0,  -18 },   // 0x04 'D' 
  {69,    97,   9,  19,  11,    0,  -18 },   // 0x05 'E' 
  {70,   119,   9,  19,  11,    0,  -18 },   // 0x06 'F' 
  {71,   141,  10,  19,  11,    0,  -18 },   // 0x07 'G' 
  {72,   165,  10,  19,  11,    0,  -18 },   // 0x08 'H' 
  {73,   189,   9,  19,  11,    0,  -18 },   // 0x09 'I' 
  {74,   211,  10,  19,  11,    0,  -18 },   // 0x0A 'J' 
  {75,   235,  10,  19,  11,    0,  -18 },   // 0x0B 'K' 
  {76,   259,   9,  19,  11,    0,  -18 },   // 0x0C 'L' 
  {77,   281,  10,  19,  11,    0,  -18 },   // 0x0D 'M' 
  {78,   305,  10,  19,  11,    0,  -18 },   // 0x0E 'N' 
  {79,   329,  10,  19,  11,    0,  -18 },   // 0x0F 'O' 
  {80,   353,  10,  19,  11,    0,  -18 },   // 0x10 'P' 
  {81,   377,  11,  19,  11,    0,  -18 },   // 0x11 'Q' 
  {82,   404,   9,  19,  10,    0,  -18 },   // 0x12 'R' 
  {83,   426,  10,  19,  11,    0,  -18 },   // 0x13 'S' 
  {84,   450,   9,  19,  11,    0,  -18 },   // 0x14 'T' 
  {85,   472,  10,  19,  11,    0,  -18 },   // 0x15 'U' 
  {86,   496,  10,  19,  11,    0,  -18 },   // 0x16 'V' 
  {87,   520,  10,  19,  11,    0,  -18 },   // 0x17 'W' 
  {88,   544,  10,  19,  11,    0,  -18 },   // 0x18 'X' 
  {89,   568,   9,  19,  11,    0,  -18 },   // 0x19 'Y' 
  {90,   590,  10,  19,  11,    0,  -18 },   // 0x1A 'Z' 
  {97,   614,  10,  19,  11,    0,  -18 },   // 0x1B 'a' 
  {98,   638,  10,  19,  11,    0,  -18 },   // 0x1C 'b' 
  {99,   662,  10,  19,  11,    0,  -18 },   // 0x1D 'c' 
  {100,   686,  10,  19,  11,    0,  -18 },   // 0x1E 'd' 
  {101,   710,   9,  19,  11,    0,  -18 },   // 0x1F 'e' 
  {102,   732,   9,  19,  11,    0,  -18 },   // 0x20 'f' 
  {103,   754,  10,  19,  11,    0,  -18 },   // 0x21 'g' 
  {104,   778,  10,  19,  11,    0,  -18 },   // 0x22 'h' 
  {105,   802,   9,  19,  11,    0,  -18 },   // 0x23 'i' 
  {106,   824,  10,  19,  11,    0,  -18 },   // 0x24 'j' 
  {107,   848,  10,  19,  11,    0,  -18 },   // 0x25 'k' 
  {108,   872,   9,  19,  11,    0,  -18 },   // 0x26 'l' 
  {109,   894,  10,  19,  11,    0,  -18 },   // 0x27 'm' 
  {110,   918,  10,  19,  11,    0,  -18 },   // 0x28 'n' 
  {111,   942,  10,  19,  11,    0,  -18 },   // 0x29 'o' 
  {112,   966,  10,  19,  11,    0,  -18 },   // 0x2A 'p' 
  {113,   990,  11,  19,  11,    0,  -18 },   // 0x2B 'q' 
  {114,  1017,   9,  19,  10,    0,  -18 },   // 0x2C 'r' 
  {115,  1039,  10,  19,  11,    0,  -18 },   // 0x2D 's' 
  {116,  1063,   9,  19,  11,    0,  -18 },   // 0x2E 't' 
  {117,  1085,  10,  19,  11,    0,  -18 },   // 0x2F 'u' 
  {118,  1109,  10,  19,  11,    0,  -18 },   // 0x30 'v' 
  {119,  1133,  10,  19,  11,    0,  -18 },   // 0x31 'w' 
  {120,  1157,  10,  19,  11,    0,  -18 },   // 0x32 'x' 
  {121,  1181,   9,  19,  11,    0,  -18 },   // 0x33 'y' 
  {122,  1203,  10,  19,  11,    0,  -18 },   // 0x34 'z' 
  {48,  1227,  10,  19,  11,    0,  -18 },   // 0x35 '0' 
  {49,  1251,   9,  19,  11,    0,  -18 },   // 0x36 '1' 
  {50,  1273,  10,  19,  11,    0,  -18 },   // 0x37 '2' 
  {51,  1297,  10,  19,  11,    0,  -18 },   // 0x38 '3' 
  {52,  1321,  10,  19,  11,    0,  -18 },   // 0x39 '4' 
  {53,  1345,  10,  19,  11,    0,  -18 },   // 0x3A '5' 
  {54,  1369,  10,  19,  11,    0,  -18 },   // 0x3B '6' 
  {55,  1393,  10,  19,  11,    0,  -18 },   // 0x3C '7' 
  {56,  1417,  10,  19,  11,    0,  -18 },   // 0x3D '8' 
  {57,  1441,  10,  19,  11,    0,  -18 },   // 0x3E '9' 
  {45,  1465,  10,   1,  11,    0,   -9 },   // 0x3F '-' 
  {37,  1467,   7,  19,   8,    0,  -18 },   // 0x40 '%' 
  {46,  1484,   1,   2,   2,    0,   -1 },   // 0x41 '.' 
  {44,  1485,   1,   4,   2,    0,   -1 },   // 0x42 ',' 
  {33,  1486,   1,  19,   2,    0,  -18 },   // 0x43 '!' 
  {58,  1489,   1,  10,   2,    0,   -9 },   // 0x44 ':' 
  {45,  1491,  10,   1,  11,    0,   -9 },   // 0x45 '-' 
  {91,  1493,   3,  23,   4,    0,  -20 },   // 0x46 '[' 
  {93,  1502,   3,  23,   4,    0,  -20 },   // 0x47 ']' 
  {40,  1511,   3,  21,   3,    0,  -19 },   // 0x48 '(' 
  {41,  1519,   3,  21,   3,   -1,  -19 }   // 0x49 ')' 
};

const gfxfont_t HotStuff12 PROGMEM = 
{
  (uint8_t  *)HotStuff12Bitmaps, //< Glyph bitmaps, concatenated 
  (gfxglyph_t *)HotStuff12Glyphs, //< Glyph array
  74,// total glyphs in the string
  23,  // newline distance (y axis)
    -1,  // minimum X - left most
    -2,  // minimum Y - bottom most (descenders can drive this negative)
    11,  // maximum X - right most
    21}; // maximum Y - top most
// Approx. 2059 bytes -  but your mileage may vary.

#endif