
#ifndef __FIXEDFONTCOURIERPRIMEREGULARTTF8
#define __FIXEDFONTCOURIERPRIMEREGULARTTF8
const uint8_t HotStuff8Bitmaps[] PROGMEM = {
  0x00, 0xFA, 0xA3, 0xC0, 0xDA, 0xD2, 0x90, 0x09, 0x04, 0x82, 0xCF, 0xF1,
  0x20, 0x93, 0xFE, 0x48, 0x24, 0x14, 0x00, 0x21, 0xDA, 0xE8, 0xE1, 0xF3,
  0xC9, 0xA7, 0xE2, 0x00, 0x70, 0x44, 0xE2, 0xCE, 0x80, 0x80, 0x98, 0x92,
  0x89, 0x03, 0x00, 0x3C, 0x44, 0x40, 0x40, 0x63, 0xB4, 0x9C, 0x8C, 0x7B,
  0xFA, 0x36, 0x48, 0x88, 0x88, 0x88, 0x46, 0x30, 0xC6, 0x21, 0x11, 0x11,
  0x11, 0x26, 0xC0, 0x10, 0x21, 0xDD, 0xC3, 0x8C, 0x80, 0x10, 0x20, 0x47,
  0xF1, 0x02, 0x04, 0x00, 0x7B, 0x40, 0xFE, 0xF0, 0x04, 0x30, 0x86, 0x10,
  0xC2, 0x18, 0x41, 0x08, 0x20, 0x3C, 0x42, 0x81, 0x81, 0x81, 0x81, 0x81,
  0x42, 0x3C, 0x33, 0x41, 0x04, 0x10, 0x41, 0x04, 0xFC, 0x78, 0x88, 0x10,
  0x20, 0xC3, 0x0C, 0x31, 0xFE, 0xFA, 0x10, 0x41, 0x38, 0x10, 0x61, 0x78,
  0x08, 0x30, 0xA2, 0x4C, 0x9F, 0xC2, 0x04, 0x3E, 0xFA, 0x08, 0x3E, 0x84,
  0x10, 0x61, 0x78, 0x1D, 0x84, 0x3E, 0x86, 0x18, 0x61, 0x78, 0xFE, 0x30,
  0x82, 0x10, 0x43, 0x08, 0x60, 0x7A, 0x18, 0x61, 0x7A, 0x38, 0x61, 0x78,
  0x7A, 0x28, 0x61, 0x7C, 0x10, 0x86, 0xE0, 0xF0, 0x3C, 0x6C, 0x00, 0xF6,
  0x80, 0x06, 0x39, 0xC6, 0x07, 0x03, 0x81, 0x80, 0xFE, 0x00, 0x00, 0x0F,
  0xE0, 0xC0, 0x30, 0x0C, 0x03, 0x0C, 0x30, 0xC0, 0xFA, 0x10, 0x43, 0x30,
  0x80, 0x18, 0x60, 0x1E, 0x30, 0x93, 0xB2, 0x99, 0x4C, 0xA6, 0x6C, 0x80,
  0x3C, 0x00, 0x3C, 0x03, 0x01, 0x60, 0x48, 0x23, 0x0F, 0xC2, 0x11, 0x02,
  0xE3, 0xC0, 0xFC, 0x85, 0x0A, 0x17, 0xE8, 0x50, 0xA1, 0xFC, 0x3F, 0x43,
  0x81, 0x80, 0x80, 0x80, 0x80, 0x41, 0x3E, 0xFC, 0x42, 0x41, 0x41, 0x41,
  0x41, 0x41, 0x42, 0xFC, 0xFE, 0x42, 0x40, 0x48, 0x78, 0x48, 0x41, 0x41,
  0xFF, 0xFF, 0x90, 0x48, 0x24, 0x83, 0xC1, 0x20, 0x80, 0x40, 0xF8, 0x00,
  0x3E, 0x42, 0x82, 0x80, 0x80, 0x8F, 0x82, 0x42, 0x3C, 0xE7, 0x42, 0x42,
  0x42, 0x7E, 0x42, 0x42, 0x42, 0xE7, 0xFC, 0x10, 0x10, 0x10, 0x10, 0x10,
  0x10, 0x10, 0xFF, 0x3F, 0x04, 0x04, 0x04, 0x04, 0x84, 0x84, 0x84, 0x78,
  0xEF, 0x44, 0x48, 0x50, 0x70, 0x48, 0x4C, 0x44, 0xE6, 0xF8, 0x10, 0x08,
  0x04, 0x02, 0x01, 0x04, 0x82, 0x41, 0xFF, 0x80, 0xE3, 0xB1, 0x9D, 0xCA,
  0xA5, 0x52, 0x49, 0x24, 0x82, 0xE3, 0x80, 0xE7, 0x62, 0x52, 0x52, 0x4A,
  0x4A, 0x46, 0x46, 0xF2, 0x3C, 0x42, 0x81, 0x81, 0x81, 0x81, 0x81, 0x42,
  0x3C, 0xFF, 0x10, 0xC8, 0x24, 0x12, 0x19, 0xF0, 0x80, 0x40, 0xF8, 0x00,
  0x3C, 0x42, 0x81, 0x81, 0x81, 0x81, 0x81, 0x42, 0x3C, 0x22, 0x7F, 0xFC,
  0x42, 0x42, 0x42, 0x7C, 0x4C, 0x46, 0x42, 0xE3, 0x3F, 0x43, 0x40, 0x70,
  0x1E, 0x01, 0xC1, 0xC1, 0xFE, 0xFF, 0x91, 0x91, 0x91, 0x10, 0x10, 0x10,
  0x10, 0x7C, 0xE7, 0x42, 0x42, 0x42, 0x42, 0x42, 0x42, 0x42, 0x3C, 0xF3,
  0xD8, 0x62, 0x10, 0x84, 0x12, 0x04, 0x81, 0xE0, 0x30, 0x0C, 0x00, 0xF1,
  0xD0, 0x24, 0xC9, 0x32, 0x4C, 0x8F, 0xC3, 0x30, 0xCC, 0x33, 0x00, 0xE3,
  0x91, 0x0D, 0x83, 0x80, 0x80, 0xA0, 0x88, 0x82, 0xE3, 0x80, 0xF3, 0xB1,
  0x88, 0x82, 0x81, 0xC0, 0x40, 0x20, 0x10, 0x3E, 0x00, 0xFF, 0x86, 0x8E,
  0x9C, 0x18, 0x39, 0x71, 0xE1, 0xFF, 0xF8, 0x88, 0x88, 0x88, 0x88, 0x88,
  0xF0, 0x82, 0x04, 0x10, 0x60, 0x83, 0x04, 0x18, 0x20, 0xC1, 0xF1, 0x11,
  0x11, 0x11, 0x11, 0x11, 0xF0, 0x20, 0xC5, 0x12, 0x8E, 0x20, 0xFF, 0xC0,
  0x87, 0x04, 0x3C, 0x42, 0x02, 0x7E, 0x82, 0x86, 0x7B, 0xC0, 0x81, 0x02,
  0xE6, 0x28, 0x50, 0xA1, 0x63, 0xB8, 0x3F, 0x41, 0x81, 0x80, 0x80, 0x41,
  0x3E, 0x0E, 0x02, 0x02, 0x3A, 0x46, 0x82, 0x82, 0x82, 0x46, 0x3B, 0x3C,
  0x42, 0x81, 0xFF, 0x80, 0xC2, 0x7C, 0x1E, 0x40, 0x87, 0xE2, 0x04, 0x08,
  0x10, 0x21, 0xF8, 0x3B, 0x46, 0x82, 0x82, 0x82, 0x46, 0x7A, 0x02, 0x02,
  0x7C, 0xC0, 0x40, 0x40, 0x5C, 0x62, 0x42, 0x42, 0x42, 0x42, 0xE7, 0x10,
  0x20, 0x00, 0x0F, 0x02, 0x04, 0x08, 0x10, 0x23, 0xF8, 0x08, 0x40, 0x0F,
  0x84, 0x21, 0x08, 0x42, 0x18, 0xF8, 0xC0, 0x40, 0x40, 0x4F, 0x44, 0x58,
  0x78, 0x6C, 0x46, 0xEF, 0xF0, 0x20, 0x40, 0x81, 0x02, 0x04, 0x08, 0x11,
  0xFC, 0xFB, 0x13, 0x24, 0x89, 0x22, 0x48, 0x92, 0x2E, 0xCC, 0xDC, 0x62,
  0x42, 0x42, 0x42, 0x42, 0xE7, 0x3C, 0x42, 0x81, 0x81, 0x81, 0x42, 0x3C,
  0xDC, 0x62, 0x41, 0x41, 0x41, 0x62, 0x5C, 0x40, 0x40, 0xF0, 0x3B, 0x46,
  0x82, 0x82, 0x82, 0x46, 0x3A, 0x02, 0x02, 0x0F, 0xDE, 0xE1, 0x82, 0x04,
  0x08, 0x3E, 0x00, 0x7E, 0x18, 0x1E, 0x06, 0x1F, 0x80, 0x20, 0x40, 0x87,
  0xF2, 0x04, 0x08, 0x10, 0x22, 0x3C, 0xCE, 0x42, 0x42, 0x42, 0x42, 0x46,
  0x3B, 0xF3, 0xD8, 0x42, 0x10, 0xC8, 0x16, 0x07, 0x00, 0xC0, 0xE1, 0xD3,
  0x24, 0xC9, 0x32, 0x3F, 0x0C, 0xC3, 0x30, 0xE3, 0x91, 0x05, 0x03, 0x83,
  0x63, 0x1B, 0x8E, 0xF3, 0xD8, 0x42, 0x30, 0xC8, 0x16, 0x03, 0x00, 0x80,
  0x20, 0x10, 0x18, 0x00, 0xFF, 0x18, 0x61, 0x87, 0x0C, 0x7F, 0x80, 0x19,
  0x08, 0x42, 0x13, 0x04, 0x21, 0x08, 0x41, 0x80, 0xFF, 0xF8, 0xC1, 0x08,
  0x42, 0x10, 0x64, 0x21, 0x08, 0x4C, 0x00, 0x02, 0xFE, 0x00 };

// Glyph, Offset to bitmap, Width, Height, xAdvance, xOffset, yOffset

const gfxglyph_t HotStuff8Glyphs[] PROGMEM = {
  {32,     0,   1,   1,  10,    0,    0 },   // 0x00 ' ' 
  {33,     1,   2,   9,  10,    4,   -8 },   // 0x01 '!' 
  {34,     4,   5,   4,  10,    2,   -8 },   // 0x02 '"' 
  {35,     7,   9,  10,  10,    0,   -9 },   // 0x03 '#' 
  {36,    19,   6,  11,  10,    2,   -9 },   // 0x04 '$' 
  {37,    28,   9,   9,  10,    0,   -8 },   // 0x05 '%' 
  {38,    39,   8,   9,  10,    1,   -8 },   // 0x06 '&' 
  {39,    48,   2,   4,  10,    4,   -8 },   // 0x07 ''' 
  {40,    49,   4,  13,  10,    2,   -9 },   // 0x08 '(' 
  {41,    56,   4,  13,  10,    3,   -9 },   // 0x09 ')' 
  {42,    63,   7,   6,  10,    1,   -8 },   // 0x0A '*' 
  {43,    69,   7,   7,  10,    1,   -7 },   // 0x0B '+' 
  {44,    76,   3,   4,  10,    3,   -1 },   // 0x0C ',' 
  {45,    78,   7,   1,  10,    1,   -4 },   // 0x0D '-' 
  {46,    79,   2,   2,  10,    3,   -1 },   // 0x0E '.' 
  {47,    80,   6,  12,  10,    2,   -9 },   // 0x0F '/' 
  {48,    89,   8,   9,  10,    1,   -8 },   // 0x10 '0' 
  {49,    98,   6,   9,  10,    1,   -8 },   // 0x11 '1' 
  {50,   105,   7,   9,  10,    1,   -8 },   // 0x12 '2' 
  {51,   113,   6,   9,  10,    2,   -8 },   // 0x13 '3' 
  {52,   120,   7,   9,  10,    1,   -8 },   // 0x14 '4' 
  {53,   128,   6,   9,  10,    2,   -8 },   // 0x15 '5' 
  {54,   135,   6,   9,  10,    2,   -8 },   // 0x16 '6' 
  {55,   142,   6,   9,  10,    2,   -8 },   // 0x17 '7' 
  {56,   149,   6,   9,  10,    2,   -8 },   // 0x18 '8' 
  {57,   156,   6,   9,  10,    2,   -8 },   // 0x19 '9' 
  {58,   163,   2,   7,  10,    4,   -6 },   // 0x1A ':' 
  {59,   165,   3,   9,  10,    3,   -6 },   // 0x1B ';' 
  {60,   169,   7,   7,  10,    1,   -7 },   // 0x1C '<' 
  {61,   176,   7,   5,  10,    1,   -6 },   // 0x1D '=' 
  {62,   181,   8,   7,  10,    1,   -7 },   // 0x1E '>' 
  {63,   188,   6,   9,  10,    2,   -8 },   // 0x1F '?' 
  {64,   195,   9,   9,  10,    0,   -7 },   // 0x20 '@' 
  {65,   206,  10,   9,  10,    0,   -8 },   // 0x21 'A' 
  {66,   218,   7,   9,  10,    1,   -8 },   // 0x22 'B' 
  {67,   226,   8,   9,  10,    1,   -8 },   // 0x23 'C' 
  {68,   235,   8,   9,  10,    1,   -8 },   // 0x24 'D' 
  {69,   244,   8,   9,  10,    1,   -8 },   // 0x25 'E' 
  {70,   253,   9,   9,  10,    0,   -8 },   // 0x26 'F' 
  {71,   264,   8,   9,  10,    1,   -8 },   // 0x27 'G' 
  {72,   273,   8,   9,  10,    1,   -8 },   // 0x28 'H' 
  {73,   282,   8,   9,  10,    1,   -8 },   // 0x29 'I' 
  {74,   291,   8,   9,  10,    1,   -8 },   // 0x2A 'J' 
  {75,   300,   8,   9,  10,    1,   -8 },   // 0x2B 'K' 
  {76,   309,   9,   9,  10,    0,   -8 },   // 0x2C 'L' 
  {77,   320,   9,   9,  10,    0,   -8 },   // 0x2D 'M' 
  {78,   331,   8,   9,  10,    1,   -8 },   // 0x2E 'N' 
  {79,   340,   8,   9,  10,    1,   -8 },   // 0x2F 'O' 
  {80,   349,   9,   9,  10,    0,   -8 },   // 0x30 'P' 
  {81,   360,   8,  11,  10,    1,   -8 },   // 0x31 'Q' 
  {82,   371,   8,   9,  10,    1,   -8 },   // 0x32 'R' 
  {83,   380,   8,   9,  10,    0,   -8 },   // 0x33 'S' 
  {84,   389,   8,   9,  10,    1,   -8 },   // 0x34 'T' 
  {85,   398,   8,   9,  10,    1,   -8 },   // 0x35 'U' 
  {86,   407,  10,   9,  10,    0,   -8 },   // 0x36 'V' 
  {87,   419,  10,   9,  10,    0,   -8 },   // 0x37 'W' 
  {88,   431,   9,   9,  10,    0,   -8 },   // 0x38 'X' 
  {89,   442,   9,   9,  10,    0,   -8 },   // 0x39 'Y' 
  {90,   453,   8,   9,  10,    1,   -8 },   // 0x3A 'Z' 
  {91,   462,   4,  13,  10,    3,   -9 },   // 0x3B '[' 
  {92,   469,   6,  12,  10,    2,   -9 },   // 0x3C '\' 
  {93,   478,   4,  13,  10,    3,   -9 },   // 0x3D ']' 
  {94,   485,   6,   6,  10,    2,   -8 },   // 0x3E '^' 
  {95,   490,  10,   1,  10,    0,    3 },   // 0x3F '_' 
  {96,   492,   5,   3,  10,    2,  -10 },   // 0x40 '`' 
  {97,   494,   8,   7,  10,    1,   -6 },   // 0x41 'a' 
  {98,   501,   7,  10,  10,    1,   -9 },   // 0x42 'b' 
  {99,   510,   8,   7,  10,    1,   -6 },   // 0x43 'c' 
  {100,   517,   8,  10,  10,    1,   -9 },   // 0x44 'd' 
  {101,   527,   8,   7,  10,    1,   -6 },   // 0x45 'e' 
  {102,   534,   7,  10,  10,    2,   -9 },   // 0x46 'f' 
  {103,   543,   8,  10,  10,    1,   -6 },   // 0x47 'g' 
  {104,   553,   8,  10,  10,    1,   -9 },   // 0x48 'h' 
  {105,   563,   7,  11,  10,    2,  -10 },   // 0x49 'i' 
  {106,   573,   5,  14,  10,    2,  -10 },   // 0x4A 'j' 
  {107,   582,   8,  10,  10,    1,   -9 },   // 0x4B 'k' 
  {108,   592,   7,  10,  10,    2,   -9 },   // 0x4C 'l' 
  {109,   601,  10,   7,  10,    0,   -6 },   // 0x4D 'm' 
  {110,   610,   8,   7,  10,    1,   -6 },   // 0x4E 'n' 
  {111,   617,   8,   7,  10,    1,   -6 },   // 0x4F 'o' 
  {112,   624,   8,  10,  10,    0,   -6 },   // 0x50 'p' 
  {113,   634,   8,  10,  10,    1,   -6 },   // 0x51 'q' 
  {114,   644,   7,   7,  10,    2,   -6 },   // 0x52 'r' 
  {115,   651,   6,   7,  10,    2,   -6 },   // 0x53 's' 
  {116,   657,   7,  10,  10,    1,   -9 },   // 0x54 't' 
  {117,   666,   8,   7,  10,    1,   -6 },   // 0x55 'u' 
  {118,   673,  10,   7,  10,    0,   -6 },   // 0x56 'v' 
  {119,   682,  10,   7,  10,    0,   -6 },   // 0x57 'w' 
  {120,   691,   9,   7,  10,    0,   -6 },   // 0x58 'x' 
  {121,   699,  10,  10,  10,    0,   -6 },   // 0x59 'y' 
  {122,   712,   7,   7,  10,    2,   -6 },   // 0x5A 'z' 
  {123,   719,   5,  13,  10,    2,   -9 },   // 0x5B '{' 
  {124,   728,   1,  13,  10,    4,   -9 },   // 0x5C '|' 
  {125,   730,   5,  13,  10,    3,   -9 },   // 0x5D '}' 
  {126,   739,   7,   3,  10,    1,   -5 }   // 0x5E '~' 
};

const gfxfont_t HotStuff8 PROGMEM = 
{
  (uint8_t  *)HotStuff8Bitmaps, //< Glyph bitmaps, concatenated 
  (gfxglyph_t *)HotStuff8Glyphs, //< Glyph array
  95,// total glyphs in the string
   1,  // newline distance (y axis)
     0,  // minimum X - left most
    -3,  // minimum Y - bottom most (descenders can drive this negative)
    10,  // maximum X - right most
    11}; // maximum Y - top most
// Approx. 1421 bytes -  but your mileage may vary.

#endif