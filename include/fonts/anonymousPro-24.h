
#ifndef __FIXEDFONTANONYMOUSPROBOLDTTF24
#define __FIXEDFONTANONYMOUSPROBOLDTTF24
const uint8_t HotStuff24Bitmaps[] PROGMEM = {
  0x00, 0x00, 0xFF, 0x00, 0x03, 0xFF, 0xC0, 0x07, 0xFF, 0xE0, 0x0F, 0xFF,
  0xF0, 0x1F, 0x07, 0xF8, 0x3E, 0x03, 0xFC, 0x3C, 0x01, 0xFC, 0x78, 0x00,
  0xFE, 0x78, 0x01, 0xFE, 0x78, 0x03, 0xFE, 0xF0, 0x07, 0xFF, 0xF0, 0x0F,
  0xFF, 0xF0, 0x1F, 0xEF, 0xF0, 0x3F, 0xCF, 0xF0, 0x7F, 0x8F, 0xF1, 0xFF,
  0x0F, 0xF3, 0xFE, 0x0F, 0xF7, 0xFC, 0x0F, 0xFF, 0xF8, 0x0F, 0xFF, 0xF0,
  0x0F, 0x7F, 0xE0, 0x0E, 0x7F, 0xC0, 0x1E, 0x7F, 0x80, 0x1E, 0x3F, 0x80,
  0x3C, 0x3F, 0xC0, 0x7C, 0x1F, 0xE0, 0xF8, 0x0F, 0xFF, 0xF0, 0x07, 0xFF,
  0xE0, 0x03, 0xFF, 0xC0, 0x00, 0xFF, 0x00, 0x00, 0xF0, 0x00, 0x78, 0x00,
  0x3C, 0x00, 0x3E, 0x00, 0x1F, 0x00, 0x1F, 0x80, 0x0F, 0xC0, 0x0F, 0xE0,
  0x1F, 0xF0, 0x7F, 0xF8, 0x3F, 0xBC, 0x1F, 0x9E, 0x0E, 0x0F, 0x00, 0x07,
  0x80, 0x03, 0xC0, 0x01, 0xE0, 0x00, 0xF0, 0x00, 0x78, 0x00, 0x3C, 0x00,
  0x1E, 0x00, 0x0F, 0x00, 0x07, 0x80, 0x03, 0xC0, 0x01, 0xE0, 0x00, 0xF0,
  0x00, 0x78, 0x07, 0xFF, 0xE3, 0xFF, 0xF1, 0xFF, 0xF8, 0xFF, 0xFC, 0x03,
  0xFC, 0x00, 0xFF, 0xF0, 0x1F, 0xFF, 0x83, 0xFF, 0xFC, 0x7F, 0x07, 0xEF,
  0xC0, 0x1E, 0xF8, 0x00, 0xFF, 0x80, 0x0F, 0xF0, 0x00, 0xFF, 0x00, 0x0F,
  0xF0, 0x00, 0xF0, 0x00, 0x1E, 0x00, 0x03, 0xE0, 0x00, 0x7E, 0x00, 0x0F,
  0xC0, 0x01, 0xF8, 0x00, 0x3F, 0x00, 0x07, 0xE0, 0x00, 0xFC, 0x00, 0x1F,
  0x80, 0x03, 0xF0, 0x00, 0x7E, 0x00, 0x1F, 0xC0, 0xF3, 0xF8, 0x0F, 0x7F,
  0x00, 0xFF, 0xE0, 0x0F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
  0xFF, 0xFF, 0x00, 0xFC, 0x00, 0x7F, 0xF0, 0x0F, 0xFF, 0xC1, 0xFF, 0xFE,
  0x3F, 0x03, 0xE3, 0xE0, 0x1F, 0x7C, 0x00, 0xF7, 0x80, 0x0F, 0x78, 0x00,
  0xF7, 0x80, 0x0F, 0x00, 0x01, 0xF0, 0x00, 0x3E, 0x00, 0x0F, 0xE0, 0x07,
  0xFC, 0x00, 0x7F, 0x00, 0x07, 0xF0, 0x00, 0x7F, 0xC0, 0x00, 0x7E, 0x00,
  0x01, 0xE0, 0x00, 0x0F, 0xF8, 0x00, 0xFF, 0x80, 0x0F, 0x78, 0x00, 0xF7,
  0xC0, 0x0F, 0x7E, 0x01, 0xF3, 0xF0, 0x3E, 0x3F, 0xFF, 0xE1, 0xFF, 0xFC,
  0x07, 0xFF, 0x80, 0x1F, 0xC0, 0x00, 0x1F, 0x00, 0x01, 0xF8, 0x00, 0x0F,
  0xC0, 0x00, 0xFE, 0x00, 0x0F, 0xF0, 0x00, 0x7F, 0x80, 0x07, 0xFC, 0x00,
  0x7D, 0xE0, 0x03, 0xCF, 0x00, 0x3E, 0x78, 0x01, 0xE3, 0xC0, 0x1F, 0x1E,
  0x01, 0xF0, 0xF0, 0x0F, 0x07, 0x80, 0xF8, 0x3C, 0x07, 0x81, 0xE0, 0x78,
  0x0F, 0x07, 0xC0, 0x78, 0x3F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
  0xFF, 0xFF, 0xFC, 0x00, 0x3C, 0x00, 0x01, 0xE0, 0x00, 0x0F, 0x00, 0x00,
  0x78, 0x00, 0x7F, 0xFE, 0x03, 0xFF, 0xF0, 0x1F, 0xFF, 0x80, 0xFF, 0xFC,
  0xFF, 0xFF, 0xC7, 0xFF, 0xFE, 0x3F, 0xFF, 0xF1, 0xFF, 0xFF, 0x8F, 0x00,
  0x00, 0x78, 0x00, 0x03, 0xC0, 0x00, 0x1E, 0x00, 0x00, 0xF8, 0x00, 0x07,
  0xC7, 0xE0, 0x3E, 0xFF, 0xC1, 0xFF, 0xFF, 0x8F, 0xFF, 0xFE, 0x7F, 0x03,
  0xF3, 0xE0, 0x07, 0xDE, 0x00, 0x1E, 0x00, 0x00, 0xF8, 0x00, 0x03, 0xC0,
  0x00, 0x1E, 0x00, 0x00, 0xF1, 0x80, 0x07, 0xFC, 0x00, 0x3D, 0xE0, 0x03,
  0xEF, 0x80, 0x1E, 0x7E, 0x01, 0xF1, 0xF8, 0x3F, 0x0F, 0xFF, 0xF8, 0x3F,
  0xFF, 0x80, 0x7F, 0xF0, 0x00, 0xFE, 0x00, 0x00, 0xFE, 0x00, 0x0F, 0xFF,
  0x00, 0xFF, 0xFE, 0x07, 0xFF, 0xF8, 0x3F, 0x81, 0xC0, 0xF8, 0x02, 0x07,
  0xC0, 0x00, 0x1E, 0x00, 0x00, 0x78, 0x00, 0x01, 0xC3, 0xF8, 0x0F, 0x3F,
  0xF8, 0x3D, 0xFF, 0xF0, 0xFF, 0xFF, 0xE3, 0xFC, 0x0F, 0xCF, 0xC0, 0x0F,
  0xBE, 0x00, 0x1E, 0xF8, 0x00, 0x7F, 0xC0, 0x00, 0xFF, 0x00, 0x03, 0xFC,
  0x00, 0x0F, 0xF0, 0x00, 0x3D, 0xC0, 0x00, 0xF7, 0x80, 0x07, 0xDE, 0x00,
  0x1E, 0x3C, 0x00, 0xF8, 0xFC, 0x0F, 0xC1, 0xFF, 0xFF, 0x03, 0xFF, 0xF8,
  0x07, 0xFF, 0x80, 0x03, 0xF8, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x07, 0xF8, 0x00, 0x7B, 0xC0, 0x07,
  0x9E, 0x00, 0x38, 0xF0, 0x03, 0xC0, 0x00, 0x3C, 0x00, 0x01, 0xC0, 0x00,
  0x1E, 0x00, 0x00, 0xE0, 0x00, 0x0F, 0x00, 0x00, 0x70, 0x00, 0x07, 0x80,
  0x00, 0x38, 0x00, 0x01, 0xC0, 0x00, 0x1E, 0x00, 0x00, 0xF0, 0x00, 0x07,
  0x80, 0x00, 0x38, 0x00, 0x01, 0xC0, 0x00, 0x1E, 0x00, 0x00, 0xF0, 0x00,
  0x07, 0x80, 0x00, 0x3C, 0x00, 0x01, 0xE0, 0x00, 0x0F, 0x00, 0x00, 0x78,
  0x00, 0x03, 0xFC, 0x00, 0xFF, 0xF0, 0x3F, 0xFF, 0xC7, 0xFF, 0xFE, 0x7E,
  0x07, 0xEF, 0x80, 0x1F, 0xF0, 0x00, 0xFF, 0x00, 0x0F, 0xF0, 0x00, 0xFF,
  0x00, 0x0F, 0x78, 0x01, 0xE7, 0xE0, 0x7E, 0x3F, 0xFF, 0xC0, 0xFF, 0xF0,
  0x0F, 0xFF, 0x01, 0xFF, 0xF8, 0x3E, 0x07, 0xC7, 0x80, 0x1E, 0x78, 0x01,
  0xEF, 0x00, 0x0F, 0xF0, 0x00, 0xFF, 0x00, 0x0F, 0xF0, 0x00, 0xFF, 0x80,
  0x1F, 0xF8, 0x01, 0xE7, 0xE0, 0x7E, 0x3F, 0xFF, 0xC3, 0xFF, 0xFC, 0x0F,
  0xFF, 0x00, 0x3F, 0xC0, 0x01, 0xFC, 0x00, 0x1F, 0xFE, 0x01, 0xFF, 0xFC,
  0x0F, 0xFF, 0xF8, 0x3F, 0x03, 0xF1, 0xF0, 0x03, 0xC7, 0x80, 0x07, 0xBE,
  0x00, 0x1E, 0xF0, 0x00, 0x3B, 0xC0, 0x00, 0xFF, 0x00, 0x03, 0xFC, 0x00,
  0x0F, 0xF0, 0x00, 0x3F, 0xE0, 0x01, 0xF7, 0x80, 0x07, 0xDF, 0x00, 0x3F,
  0x3F, 0x03, 0xFC, 0x7F, 0xFF, 0xF0, 0xFF, 0xFB, 0xC1, 0xFF, 0xCF, 0x01,
  0xFC, 0x38, 0x00, 0x01, 0xE0, 0x00, 0x07, 0x80, 0x00, 0x3C, 0x04, 0x01,
  0xF0, 0x3C, 0x1F, 0x81, 0xFF, 0xFE, 0x07, 0xFF, 0xF0, 0x0F, 0xFF, 0x00,
  0x07, 0xF0, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
  0xFF, 0xF0, 0x00, 0x00, 0x18, 0x1E, 0x00, 0x38, 0xFF, 0x00, 0xFB, 0xFF,
  0x01, 0xEF, 0xFF, 0x07, 0x9F, 0x3E, 0x1F, 0x3C, 0x3C, 0x3C, 0x7C, 0xF8,
  0xF0, 0xFF, 0xF3, 0xE0, 0xFF, 0xC7, 0x80, 0xFF, 0x1F, 0x00, 0x78, 0x7C,
  0x00, 0x00, 0xF0, 0x00, 0x03, 0xE0, 0x00, 0x0F, 0x80, 0x00, 0x1E, 0x00,
  0x00, 0x7C, 0x00, 0x00, 0xF0, 0x00, 0x03, 0xC0, 0x00, 0x0F, 0x80, 0x00,
  0x1E, 0x1E, 0x00, 0x78, 0xFF, 0x01, 0xF3, 0xFF, 0x03, 0xCF, 0xFF, 0x0F,
  0x9F, 0x3E, 0x3E, 0x3C, 0x3C, 0x78, 0x7C, 0xF9, 0xF0, 0xFF, 0xF3, 0xC0,
  0xFF, 0xCF, 0x00, 0xFF, 0x1E, 0x00, 0xF8, 0x08, 0x00, 0x00, 0xFF, 0xFF,
  0xFF, 0xFF, 0xF0, 0x01, 0xFC, 0x78, 0x3F, 0xFB, 0xC3, 0xFF, 0xDE, 0x3F,
  0xFF, 0xF3, 0xF0, 0x7F, 0xBE, 0x00, 0xFD, 0xE0, 0x03, 0xFF, 0x00, 0x1F,
  0xF0, 0x00, 0x7F, 0x80, 0x03, 0xFC, 0x00, 0x01, 0xE0, 0x00, 0x0F, 0x00,
  0x00, 0x7C, 0x00, 0x01, 0xE0, 0x00, 0x8F, 0x80, 0x0C, 0x3F, 0x01, 0xF1,
  0xFF, 0xFF, 0xC3, 0xFF, 0xFC, 0x0F, 0xFF, 0x80, 0x0F, 0xF0, 0x00, 0x00,
  0x1F, 0x80, 0x7F, 0xC0, 0x7F, 0xE0, 0x7F, 0xF0, 0x3E, 0x00, 0x3E, 0x00,
  0x1E, 0x00, 0x0F, 0x00, 0x07, 0x80, 0x7F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
  0xFF, 0xFF, 0xF8, 0x3C, 0x00, 0x1E, 0x00, 0x0F, 0x00, 0x07, 0x80, 0x03,
  0xC0, 0x01, 0xE0, 0x00, 0xF0, 0x00, 0x78, 0x00, 0x3C, 0x00, 0x1E, 0x00,
  0x0F, 0x00, 0x07, 0x80, 0x03, 0xC0, 0x3F, 0xFF, 0x1F, 0xFF, 0x8F, 0xFF,
  0xC7, 0xFF, 0xE0 };

// Glyph, Offset to bitmap, Width, Height, xAdvance, xOffset, yOffset

const gfxglyph_t HotStuff24Glyphs[] PROGMEM = {
  {32,     0,   1,   1,  26,    0,    0 },   // 0x00 ' ' 
  {48,     1,  24,  30,  26,   -1,  -29 },   // 0x01 '0' 
  {49,    91,  17,  30,  26,    1,  -29 },   // 0x02 '1' 
  {50,   155,  20,  30,  26,    1,  -29 },   // 0x03 '2' 
  {51,   230,  20,  30,  26,    0,  -29 },   // 0x04 '3' 
  {52,   305,  21,  30,  26,    0,  -29 },   // 0x05 '4' 
  {53,   384,  21,  30,  26,    1,  -29 },   // 0x06 '5' 
  {54,   463,  22,  30,  26,    0,  -29 },   // 0x07 '6' 
  {55,   546,  21,  30,  26,    1,  -29 },   // 0x08 '7' 
  {56,   625,  20,  30,  25,    0,  -29 },   // 0x09 '8' 
  {57,   700,  22,  30,  26,    0,  -29 },   // 0x0A '9' 
  {45,   783,  21,   4,  26,    0,  -12 },   // 0x0B '-' 
  {37,   794,  23,  32,  26,   -1,  -30 },   // 0x0C '%' 
  {46,   886,   6,   6,  26,    8,   -5 },   // 0x0D '.' 
  {99,   891,  21,  21,  26,    0,  -20 },   // 0x0E 'c' 
  {102,   947,  17,  30,  26,    4,  -29 }   // 0x0F 'f' 
};

const gfxfont_t HotStuff24 PROGMEM = 
{
  (uint8_t  *)HotStuff24Bitmaps, //< Glyph bitmaps, concatenated 
  (gfxglyph_t *)HotStuff24Glyphs, //< Glyph array
  16,// total glyphs in the string
  32,  // newline distance (y axis)
    -1,  // minimum X - left most
    -1,  // minimum Y - bottom most (descenders can drive this negative)
    23,  // maximum X - right most
    31}; // maximum Y - top most
// Approx. 1137 bytes -  but your mileage may vary.

#endif