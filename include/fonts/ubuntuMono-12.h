
#ifndef __FIXEDFONTUBUNTUMONORTTF12
#define __FIXEDFONTUBUNTUMONORTTF12
const uint8_t HotStuff12Bitmaps[] PROGMEM = {
  0x00, 0x6D, 0xB6, 0xDB, 0x6C, 0x0F, 0xF8, 0xCF, 0x3C, 0xF3, 0xCF, 0x30,
  0x31, 0x8C, 0x63, 0x18, 0xC6, 0xFF, 0xFF, 0xF3, 0x19, 0xCE, 0x63, 0x3F,
  0xFF, 0xFD, 0x8C, 0x63, 0x18, 0xC6, 0x30, 0x0C, 0x06, 0x0F, 0xCF, 0xEE,
  0x16, 0x03, 0x01, 0xE0, 0x7C, 0x0F, 0x80, 0xE0, 0x30, 0x1E, 0x1F, 0xFC,
  0xFC, 0x0C, 0x06, 0x03, 0x00, 0x70, 0x7B, 0x1B, 0x67, 0x6C, 0xCD, 0xB1,
  0xB6, 0x1D, 0x80, 0x70, 0x0D, 0xC3, 0x6C, 0x6D, 0x99, 0xB7, 0x36, 0xC6,
  0xF0, 0x70, 0x3C, 0x1F, 0x86, 0x61, 0x98, 0x66, 0x1F, 0x03, 0xC0, 0xE6,
  0x6D, 0xB3, 0xEC, 0x73, 0x0C, 0xE7, 0x9F, 0xE3, 0xCC, 0xFF, 0xF0, 0x04,
  0x1C, 0x61, 0x87, 0x0C, 0x38, 0x60, 0xC1, 0x83, 0x06, 0x0E, 0x0C, 0x1C,
  0x1C, 0x1C, 0x1C, 0x10, 0x41, 0xC1, 0xC1, 0xC1, 0xC1, 0x83, 0x83, 0x06,
  0x0C, 0x18, 0x30, 0xE1, 0x87, 0x0C, 0x71, 0xC1, 0x00, 0x0C, 0x03, 0x04,
  0xCB, 0xFF, 0x1E, 0x03, 0x01, 0xE0, 0xCC, 0x12, 0x00, 0x0C, 0x03, 0x00,
  0xC0, 0x30, 0xFF, 0xFF, 0xF0, 0xC0, 0x30, 0x0C, 0x03, 0x00, 0x77, 0x73,
  0xEC, 0xFF, 0xC0, 0xFF, 0x80, 0x03, 0x03, 0x06, 0x06, 0x06, 0x0C, 0x0C,
  0x0C, 0x0C, 0x18, 0x18, 0x18, 0x30, 0x30, 0x30, 0x30, 0x60, 0x60, 0x60,
  0xC0, 0xC0, 0x1E, 0x0F, 0xC7, 0x39, 0x86, 0xC0, 0xF0, 0x3C, 0xCF, 0x33,
  0xCC, 0xF0, 0x3C, 0x0D, 0x86, 0x73, 0x8F, 0xC1, 0xE0, 0x0C, 0x0E, 0x0F,
  0x0D, 0x8C, 0xC0, 0x60, 0x30, 0x18, 0x0C, 0x06, 0x03, 0x01, 0x80, 0xC3,
  0xFD, 0xFE, 0x3C, 0x7F, 0x11, 0xC0, 0x60, 0x30, 0x18, 0x18, 0x18, 0x18,
  0x1C, 0x0C, 0x0C, 0x0C, 0x07, 0xFF, 0xFE, 0x3E, 0x3F, 0xC4, 0x38, 0x06,
  0x01, 0x80, 0xC1, 0xE0, 0x7C, 0x03, 0x80, 0x30, 0x0C, 0x03, 0x81, 0xFF,
  0xE7, 0xE0, 0x07, 0x03, 0xC1, 0xF0, 0x6C, 0x3B, 0x0C, 0xC6, 0x31, 0x8C,
  0xC3, 0x3F, 0xFF, 0xFC, 0x0C, 0x03, 0x00, 0xC0, 0x30, 0x3F, 0xBF, 0xD8,
  0x0C, 0x06, 0x03, 0x01, 0xF0, 0xFE, 0x07, 0x00, 0xC0, 0x60, 0x38, 0x3F,
  0xF9, 0xF0, 0x03, 0x87, 0xE3, 0xC1, 0xC0, 0x60, 0x38, 0x0D, 0xF3, 0xFE,
  0xC1, 0xF0, 0x3C, 0x0F, 0x03, 0x61, 0xDF, 0xE1, 0xF0, 0xFF, 0xFF, 0xC0,
  0x60, 0x60, 0x60, 0x30, 0x30, 0x18, 0x08, 0x0C, 0x06, 0x03, 0x03, 0x01,
  0x80, 0xC0, 0x1F, 0x1F, 0xEE, 0x1F, 0x03, 0xC0, 0xF8, 0x67, 0xF0, 0xFC,
  0x67, 0xB0, 0x7C, 0x0F, 0x03, 0xE1, 0xDF, 0xE3, 0xF0, 0x3E, 0x1F, 0xEE,
  0x1B, 0x03, 0xC0, 0xF0, 0x3E, 0x0D, 0xFF, 0x3F, 0xC0, 0x70, 0x18, 0x0E,
  0x0F, 0x1F, 0x87, 0x80, 0xFF, 0x80, 0x00, 0xFF, 0x80, 0x77, 0x70, 0x00,
  0x00, 0x77, 0x73, 0xEC, 0x00, 0xC0, 0xF1, 0xF3, 0xE0, 0xC0, 0x3E, 0x01,
  0xF0, 0x0F, 0x00, 0xC0, 0xFF, 0xFF, 0xF0, 0x00, 0x00, 0x00, 0x3F, 0xFF,
  0xFC, 0xC0, 0x3C, 0x03, 0xE0, 0x1F, 0x00, 0xC1, 0xF3, 0xE3, 0xC0, 0xC0,
  0x00, 0x7C, 0xFE, 0x87, 0x03, 0x03, 0x06, 0x0C, 0x18, 0x30, 0x30, 0x00,
  0x00, 0x70, 0x70, 0x70, 0x1F, 0x0F, 0xE7, 0x1D, 0x83, 0x60, 0xF0, 0xFC,
  0x7F, 0x33, 0xCC, 0xF3, 0x3C, 0xCF, 0x1F, 0xE3, 0xD8, 0x07, 0x00, 0xE0,
  0x1F, 0x83, 0xE0, 0x0E, 0x03, 0xE0, 0x6C, 0x0D, 0x81, 0xB0, 0x63, 0x0C,
  0x61, 0x8C, 0x71, 0x8F, 0xF9, 0xFF, 0x30, 0x66, 0x0D, 0x80, 0xF0, 0x18,
  0xFE, 0x3F, 0xCC, 0x3B, 0x06, 0xC1, 0xB0, 0xCF, 0xE3, 0xFC, 0xC1, 0xB0,
  0x3C, 0x0F, 0x03, 0xC1, 0xFF, 0xEF, 0xE0, 0x0F, 0x8F, 0xF7, 0x0D, 0x80,
  0xE0, 0x30, 0x0C, 0x03, 0x00, 0xC0, 0x30, 0x0E, 0x01, 0x80, 0x70, 0x4F,
  0xF0, 0xF8, 0xFC, 0x3F, 0xCC, 0x3B, 0x06, 0xC1, 0xF0, 0x3C, 0x0F, 0x03,
  0xC0, 0xF0, 0x3C, 0x1F, 0x06, 0xC3, 0xBF, 0xCF, 0xC0, 0xFF, 0x7F, 0xB0,
  0x18, 0x0C, 0x06, 0x03, 0xFD, 0xFE, 0xC0, 0x60, 0x30, 0x18, 0x0C, 0x07,
  0xFF, 0xFE, 0xFF, 0xFF, 0xF0, 0x18, 0x0C, 0x06, 0x03, 0xFD, 0xFE, 0xC0,
  0x60, 0x30, 0x18, 0x0C, 0x06, 0x03, 0x00, 0x0F, 0x8F, 0xF7, 0x0D, 0x80,
  0xE0, 0x30, 0x0C, 0x03, 0x00, 0xC0, 0xF0, 0x3E, 0x0D, 0x83, 0x70, 0xCF,
  0xF0, 0xFC, 0xC0, 0xF0, 0x3C, 0x0F, 0x03, 0xC0, 0xF0, 0x3F, 0xFF, 0xFF,
  0xC0, 0xF0, 0x3C, 0x0F, 0x03, 0xC0, 0xF0, 0x3C, 0x0C, 0xFF, 0xFF, 0x18,
  0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0xFF, 0xFF,
  0x3F, 0x9F, 0xC0, 0x60, 0x30, 0x18, 0x0C, 0x06, 0x03, 0x01, 0x80, 0xC0,
  0x60, 0x34, 0x3F, 0xF9, 0xF8, 0xC1, 0xE1, 0xB1, 0x99, 0x8D, 0xC6, 0xC3,
  0xC1, 0xE0, 0xD8, 0x66, 0x31, 0x98, 0xCC, 0x36, 0x1B, 0x06, 0xC0, 0x60,
  0x30, 0x18, 0x0C, 0x06, 0x03, 0x01, 0x80, 0xC0, 0x60, 0x30, 0x18, 0x0C,
  0x07, 0xFF, 0xFE, 0x61, 0x98, 0x66, 0x19, 0x4A, 0x52, 0x94, 0xBC, 0xCF,
  0x33, 0xCC, 0xF0, 0x3C, 0x0F, 0x03, 0xC0, 0xF0, 0x3C, 0x0C, 0xE0, 0xF8,
  0x3F, 0x0F, 0xC3, 0xD8, 0xF6, 0x3C, 0xCF, 0x33, 0xC6, 0xF1, 0xBC, 0x3F,
  0x0F, 0xC1, 0xF0, 0x7C, 0x1C, 0x1E, 0x0F, 0xC6, 0x39, 0x86, 0xC0, 0xF0,
  0x3C, 0x0F, 0x03, 0xC0, 0xF0, 0x3C, 0x0D, 0x86, 0x63, 0x8F, 0xC1, 0xE0,
  0xFC, 0x7F, 0xB0, 0xF8, 0x3C, 0x1E, 0x0F, 0x07, 0x86, 0xFF, 0x7E, 0x30,
  0x18, 0x0C, 0x06, 0x03, 0x00, 0x1E, 0x0F, 0xC6, 0x39, 0x86, 0xC0, 0xF0,
  0x3C, 0x0F, 0x03, 0xC0, 0xF0, 0x3C, 0x0F, 0x86, 0x63, 0x8F, 0xC1, 0xE0,
  0x30, 0x0E, 0x01, 0xE0, 0x18, 0xFC, 0x3F, 0xCC, 0x33, 0x06, 0xC1, 0xB0,
  0x6C, 0x1B, 0x0C, 0xFE, 0x3F, 0x0C, 0x63, 0x18, 0xC3, 0x30, 0x6C, 0x0C,
  0x3E, 0x3F, 0xB8, 0x58, 0x0C, 0x07, 0x01, 0xE0, 0x7C, 0x0F, 0x01, 0xC0,
  0x60, 0x3C, 0x3F, 0xF9, 0xF8, 0xFF, 0xFF, 0xF0, 0xC0, 0x30, 0x0C, 0x03,
  0x00, 0xC0, 0x30, 0x0C, 0x03, 0x00, 0xC0, 0x30, 0x0C, 0x03, 0x00, 0xC0,
  0xC0, 0xF0, 0x3C, 0x0F, 0x03, 0xC0, 0xF0, 0x3C, 0x0F, 0x03, 0xC0, 0xF0,
  0x3C, 0x0F, 0x03, 0xE1, 0x9F, 0xE3, 0xF0, 0xC0, 0x78, 0x0D, 0x83, 0x30,
  0x66, 0x0C, 0xE1, 0x8C, 0x61, 0x8C, 0x39, 0x83, 0x20, 0x6C, 0x0F, 0x81,
  0xE0, 0x1C, 0x03, 0x80, 0xC0, 0xF0, 0x3C, 0x0F, 0x03, 0xC0, 0xF0, 0x3C,
  0xCF, 0x33, 0xCC, 0xF7, 0xBD, 0x2F, 0xCF, 0xE1, 0xF8, 0x7C, 0x0C, 0xC0,
  0xD8, 0x66, 0x18, 0xCC, 0x33, 0x07, 0x81, 0xE0, 0x30, 0x1E, 0x07, 0x83,
  0x30, 0xCC, 0x61, 0x98, 0x6C, 0x0C, 0xC0, 0x36, 0x06, 0x60, 0x63, 0x0C,
  0x30, 0xC1, 0x98, 0x19, 0x80, 0xF0, 0x0F, 0x00, 0x60, 0x06, 0x00, 0x60,
  0x06, 0x00, 0x60, 0x06, 0x00, 0xFF, 0xFF, 0xF0, 0x18, 0x06, 0x03, 0x01,
  0x80, 0xE0, 0x30, 0x18, 0x0E, 0x03, 0x01, 0x80, 0xE0, 0x3F, 0xFF, 0xFC,
  0xFF, 0xFC, 0x30, 0xC3, 0x0C, 0x30, 0xC3, 0x0C, 0x30, 0xC3, 0x0C, 0x30,
  0xC3, 0xFF, 0xC0, 0xC0, 0xC0, 0x60, 0x60, 0x60, 0x30, 0x30, 0x30, 0x30,
  0x18, 0x18, 0x18, 0x0C, 0x0C, 0x0C, 0x0C, 0x06, 0x06, 0x06, 0x03, 0x03,
  0xFF, 0xF0, 0xC3, 0x0C, 0x30, 0xC3, 0x0C, 0x30, 0xC3, 0x0C, 0x30, 0xC3,
  0x0F, 0xFF, 0xC0, 0x0E, 0x01, 0xC0, 0x6C, 0x1D, 0xC3, 0x18, 0xC1, 0xB8,
  0x3A, 0x02, 0xFF, 0xFF, 0xFF, 0x4E, 0x63, 0x7E, 0x3F, 0x80, 0xE0, 0x33,
  0xFB, 0xFF, 0x87, 0x83, 0xE1, 0xBF, 0xCF, 0xE0, 0xC0, 0x60, 0x30, 0x18,
  0x0C, 0x06, 0x03, 0xF9, 0xFE, 0xC3, 0x60, 0xF0, 0x78, 0x3C, 0x1E, 0x0F,
  0x0D, 0xFE, 0xFC, 0x00, 0x1F, 0xCF, 0xF7, 0x03, 0x80, 0xC0, 0x30, 0x0C,
  0x03, 0x80, 0x70, 0x0F, 0xF1, 0xFC, 0x01, 0x80, 0xC0, 0x60, 0x30, 0x18,
  0x0C, 0xFE, 0xFF, 0x63, 0xE0, 0xF0, 0x78, 0x3C, 0x1E, 0x0D, 0x86, 0xFF,
  0x1F, 0x80, 0x1F, 0x0F, 0xE6, 0x1F, 0x03, 0xFF, 0xFF, 0xFC, 0x03, 0x00,
  0x70, 0x9F, 0xE1, 0xF0, 0x0F, 0x0F, 0xCE, 0x26, 0x03, 0x01, 0x83, 0xFD,
  0xFE, 0x30, 0x18, 0x0C, 0x06, 0x03, 0x01, 0x80, 0xC0, 0x60, 0x30, 0x00,
  0x1F, 0xBF, 0xD8, 0x78, 0x3C, 0x1E, 0x0F, 0x07, 0x83, 0x61, 0xBF, 0xCF,
  0xE0, 0x34, 0x3B, 0xF8, 0xF8, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xFC,
  0xFE, 0xC7, 0xC3, 0xC3, 0xC3, 0xC3, 0xC3, 0xC3, 0xC3, 0xC3, 0x38, 0x0E,
  0x03, 0x80, 0x00, 0x00, 0x3E, 0x0F, 0x80, 0x60, 0x18, 0x06, 0x01, 0x80,
  0x60, 0x18, 0x07, 0x10, 0xFC, 0x1E, 0x0E, 0x1C, 0x38, 0x00, 0x0F, 0xDF,
  0x83, 0x06, 0x0C, 0x18, 0x30, 0x60, 0xC1, 0x83, 0x07, 0x1F, 0xF3, 0xC0,
  0xC0, 0x60, 0x30, 0x18, 0x0C, 0x06, 0x03, 0x07, 0x8E, 0xCE, 0x6C, 0x3C,
  0x1E, 0x0D, 0x86, 0x63, 0x19, 0x86, 0xC1, 0x80, 0xF8, 0x3E, 0x01, 0x80,
  0x60, 0x18, 0x06, 0x01, 0x80, 0x60, 0x18, 0x06, 0x01, 0x80, 0x60, 0x18,
  0x06, 0x01, 0xC4, 0x3F, 0x07, 0x80, 0xFB, 0xBF, 0xFC, 0xCF, 0x33, 0xCC,
  0xF3, 0x3C, 0xCF, 0x03, 0xC0, 0xF0, 0x3C, 0x0C, 0xFC, 0xFE, 0xC7, 0xC3,
  0xC3, 0xC3, 0xC3, 0xC3, 0xC3, 0xC3, 0xC3, 0x1E, 0x1F, 0xE6, 0x1B, 0x03,
  0xC0, 0xF0, 0x3C, 0x0F, 0x03, 0x61, 0x9F, 0xE1, 0xE0, 0xFC, 0x7F, 0xB0,
  0xD8, 0x3C, 0x1E, 0x0F, 0x07, 0x83, 0xC3, 0x7F, 0xBF, 0x98, 0x0C, 0x06,
  0x03, 0x00, 0x1F, 0xBF, 0xD8, 0x78, 0x3C, 0x1E, 0x0F, 0x07, 0x83, 0x61,
  0xBF, 0xC7, 0xE0, 0x30, 0x18, 0x0C, 0x06, 0x7F, 0xFF, 0xC0, 0xC0, 0xC0,
  0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0x7E, 0xFE, 0xC2, 0xC0, 0xF0, 0x7E,
  0x0F, 0x03, 0x83, 0xFF, 0x7C, 0x30, 0x18, 0x0C, 0x1F, 0xFF, 0xF9, 0x80,
  0xC0, 0x60, 0x30, 0x18, 0x0C, 0x07, 0x13, 0xF8, 0x78, 0xC3, 0xC3, 0xC3,
  0xC3, 0xC3, 0xC3, 0xC3, 0xC3, 0xE3, 0x7F, 0x3F, 0xC0, 0xF0, 0x36, 0x19,
  0x86, 0x61, 0x8C, 0xC3, 0x30, 0xDC, 0x1E, 0x07, 0x80, 0xC0, 0xC0, 0x78,
  0x0F, 0x01, 0xE0, 0x34, 0x4C, 0xD9, 0x9A, 0xB3, 0xDE, 0x71, 0xCE, 0x18,
  0x82, 0x00, 0xC0, 0xD8, 0x63, 0x30, 0x78, 0x1E, 0x03, 0x01, 0xE0, 0xEC,
  0x33, 0x18, 0x6C, 0x0C, 0xC0, 0xF0, 0x36, 0x19, 0x86, 0x71, 0x8C, 0x63,
  0x30, 0x6C, 0x1B, 0x03, 0x80, 0xE0, 0x38, 0x1C, 0x3E, 0x0F, 0x00, 0xFF,
  0xFF, 0x06, 0x0E, 0x0C, 0x18, 0x30, 0x60, 0x60, 0xFF, 0xFF, 0x0F, 0x8F,
  0xC6, 0x03, 0x01, 0x80, 0xC0, 0x60, 0x30, 0x18, 0x1C, 0x3C, 0x1E, 0x03,
  0x80, 0xC0, 0x60, 0x30, 0x18, 0x0C, 0x06, 0x03, 0xF0, 0xF8, 0xFF, 0xFF,
  0xFF, 0xFF, 0xFF, 0xC0, 0xF8, 0x7E, 0x03, 0x01, 0x80, 0xC0, 0x60, 0x30,
  0x18, 0x0C, 0x07, 0x01, 0xE0, 0xF0, 0xE0, 0x60, 0x30, 0x18, 0x0C, 0x06,
  0x03, 0x1F, 0x8F, 0x80, 0x78, 0x5F, 0x3C, 0xFA, 0x1C };

// Glyph, Offset to bitmap, Width, Height, xAdvance, xOffset, yOffset

const gfxglyph_t HotStuff12Glyphs[] PROGMEM = {
  {32,     0,   1,   1,  12,    0,    0 },   // 0x00 ' ' 
  {33,     1,   3,  15,  12,    4,  -14 },   // 0x01 '!' 
  {34,     7,   6,   6,  12,    3,  -15 },   // 0x02 '"' 
  {35,    12,  10,  15,  12,    1,  -14 },   // 0x03 '#' 
  {36,    31,   9,  19,  12,    2,  -16 },   // 0x04 '$' 
  {37,    53,  11,  15,  12,    0,  -14 },   // 0x05 '%' 
  {38,    74,  10,  15,  12,    1,  -14 },   // 0x06 '&' 
  {39,    93,   2,   6,  12,    5,  -15 },   // 0x07 ''' 
  {40,    95,   7,  19,  12,    3,  -14 },   // 0x08 '(' 
  {41,   112,   7,  19,  12,    2,  -14 },   // 0x09 ')' 
  {42,   129,  10,   9,  12,    1,  -14 },   // 0x0A '*' 
  {43,   141,  10,  10,  12,    1,  -10 },   // 0x0B '+' 
  {44,   154,   4,   6,  12,    4,   -2 },   // 0x0C ',' 
  {45,   157,   5,   2,  12,    3,   -6 },   // 0x0D '-' 
  {46,   159,   3,   3,  12,    4,   -2 },   // 0x0E '.' 
  {47,   161,   8,  21,  12,    2,  -16 },   // 0x0F '/' 
  {48,   182,  10,  15,  12,    1,  -14 },   // 0x10 '0' 
  {49,   201,   9,  15,  12,    2,  -14 },   // 0x11 '1' 
  {50,   218,   9,  15,  12,    2,  -14 },   // 0x12 '2' 
  {51,   235,  10,  15,  12,    1,  -14 },   // 0x13 '3' 
  {52,   254,  10,  15,  12,    1,  -14 },   // 0x14 '4' 
  {53,   273,   9,  15,  12,    2,  -14 },   // 0x15 '5' 
  {54,   290,  10,  15,  12,    1,  -14 },   // 0x16 '6' 
  {55,   309,   9,  15,  12,    2,  -14 },   // 0x17 '7' 
  {56,   326,  10,  15,  12,    1,  -14 },   // 0x18 '8' 
  {57,   345,  10,  15,  12,    1,  -14 },   // 0x19 '9' 
  {58,   364,   3,  11,  12,    4,  -10 },   // 0x1A ':' 
  {59,   369,   4,  14,  12,    3,  -10 },   // 0x1B ';' 
  {60,   376,  10,   9,  12,    1,  -10 },   // 0x1C '<' 
  {61,   388,  10,   7,  12,    1,   -9 },   // 0x1D '=' 
  {62,   397,  10,   9,  12,    1,  -10 },   // 0x1E '>' 
  {63,   409,   8,  15,  12,    3,  -14 },   // 0x1F '?' 
  {64,   424,  10,  18,  12,    1,  -14 },   // 0x20 '@' 
  {65,   447,  11,  15,  12,    0,  -14 },   // 0x21 'A' 
  {66,   468,  10,  15,  12,    1,  -14 },   // 0x22 'B' 
  {67,   487,  10,  15,  12,    1,  -14 },   // 0x23 'C' 
  {68,   506,  10,  15,  12,    1,  -14 },   // 0x24 'D' 
  {69,   525,   9,  15,  12,    2,  -14 },   // 0x25 'E' 
  {70,   542,   9,  15,  12,    2,  -14 },   // 0x26 'F' 
  {71,   559,  10,  15,  12,    1,  -14 },   // 0x27 'G' 
  {72,   578,  10,  15,  12,    1,  -14 },   // 0x28 'H' 
  {73,   597,   8,  15,  12,    2,  -14 },   // 0x29 'I' 
  {74,   612,   9,  15,  12,    1,  -14 },   // 0x2A 'J' 
  {75,   629,   9,  15,  12,    2,  -14 },   // 0x2B 'K' 
  {76,   646,   9,  15,  12,    2,  -14 },   // 0x2C 'L' 
  {77,   663,  10,  15,  12,    1,  -14 },   // 0x2D 'M' 
  {78,   682,  10,  15,  12,    1,  -14 },   // 0x2E 'N' 
  {79,   701,  10,  15,  12,    1,  -14 },   // 0x2F 'O' 
  {80,   720,   9,  15,  12,    2,  -14 },   // 0x30 'P' 
  {81,   737,  10,  19,  12,    1,  -14 },   // 0x31 'Q' 
  {82,   761,  10,  15,  12,    1,  -14 },   // 0x32 'R' 
  {83,   780,   9,  15,  12,    2,  -14 },   // 0x33 'S' 
  {84,   797,  10,  15,  12,    1,  -14 },   // 0x34 'T' 
  {85,   816,  10,  15,  12,    1,  -14 },   // 0x35 'U' 
  {86,   835,  11,  15,  12,    0,  -14 },   // 0x36 'V' 
  {87,   856,  10,  15,  12,    1,  -14 },   // 0x37 'W' 
  {88,   875,  10,  15,  12,    1,  -14 },   // 0x38 'X' 
  {89,   894,  12,  15,  12,    0,  -14 },   // 0x39 'Y' 
  {90,   917,  10,  15,  12,    1,  -14 },   // 0x3A 'Z' 
  {91,   936,   6,  19,  12,    3,  -14 },   // 0x3B '[' 
  {92,   951,   8,  21,  12,    2,  -16 },   // 0x3C '\' 
  {93,   972,   6,  19,  12,    3,  -14 },   // 0x3D ']' 
  {94,   987,  11,   8,  12,    1,  -14 },   // 0x3E '^' 
  {95,   998,  12,   2,  12,    0,    3 },   // 0x3F '_' 
  {96,  1001,   4,   4,  12,    4,  -15 },   // 0x40 '`' 
  {97,  1003,   9,  11,  12,    1,  -10 },   // 0x41 'a' 
  {98,  1016,   9,  17,  12,    2,  -16 },   // 0x42 'b' 
  {99,  1036,  10,  11,  12,    1,  -10 },   // 0x43 'c' 
  {100,  1050,   9,  17,  12,    1,  -16 },   // 0x44 'd' 
  {101,  1070,  10,  11,  12,    1,  -10 },   // 0x45 'e' 
  {102,  1084,   9,  17,  12,    2,  -16 },   // 0x46 'f' 
  {103,  1104,   9,  15,  12,    1,  -10 },   // 0x47 'g' 
  {104,  1121,   8,  17,  12,    2,  -16 },   // 0x48 'h' 
  {105,  1138,  10,  16,  12,    1,  -15 },   // 0x49 'i' 
  {106,  1158,   7,  20,  12,    2,  -15 },   // 0x4A 'j' 
  {107,  1176,   9,  17,  12,    2,  -16 },   // 0x4B 'k' 
  {108,  1196,  10,  17,  12,    1,  -16 },   // 0x4C 'l' 
  {109,  1218,  10,  11,  12,    1,  -10 },   // 0x4D 'm' 
  {110,  1232,   8,  11,  12,    2,  -10 },   // 0x4E 'n' 
  {111,  1243,  10,  11,  12,    1,  -10 },   // 0x4F 'o' 
  {112,  1257,   9,  15,  12,    2,  -10 },   // 0x50 'p' 
  {113,  1274,   9,  15,  12,    1,  -10 },   // 0x51 'q' 
  {114,  1291,   8,  11,  12,    3,  -10 },   // 0x52 'r' 
  {115,  1302,   8,  11,  12,    2,  -10 },   // 0x53 's' 
  {116,  1313,   9,  14,  12,    2,  -13 },   // 0x54 't' 
  {117,  1329,   8,  11,  12,    2,  -10 },   // 0x55 'u' 
  {118,  1340,  10,  11,  12,    1,  -10 },   // 0x56 'v' 
  {119,  1354,  11,  11,  12,    0,  -10 },   // 0x57 'w' 
  {120,  1370,  10,  11,  12,    1,  -10 },   // 0x58 'x' 
  {121,  1384,  10,  15,  12,    1,  -10 },   // 0x59 'y' 
  {122,  1403,   8,  11,  12,    2,  -10 },   // 0x5A 'z' 
  {123,  1414,   9,  21,  12,    2,  -16 },   // 0x5B '{' 
  {124,  1438,   2,  21,  12,    5,  -16 },   // 0x5C '|' 
  {125,  1444,   9,  21,  12,    2,  -16 },   // 0x5D '}' 
  {126,  1468,  10,   4,  12,    1,   -8 }   // 0x5E '~' 
};

const gfxfont_t HotStuff12 PROGMEM = 
{
  (uint8_t  *)HotStuff12Bitmaps, //< Glyph bitmaps, concatenated 
  (gfxglyph_t *)HotStuff12Glyphs, //< Glyph array
  95,// total glyphs in the string
   1,  // newline distance (y axis)
     0,  // minimum X - left most
    -4,  // minimum Y - bottom most (descenders can drive this negative)
    12,  // maximum X - right most
    17}; // maximum Y - top most
// Approx. 2152 bytes -  but your mileage may vary.

#endif