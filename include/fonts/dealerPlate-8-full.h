
#ifndef __FIXEDFONTDEALERPLATECALIFORNIATTF8
#define __FIXEDFONTDEALERPLATECALIFORNIATTF8
const uint8_t HotStuff8Bitmaps[] PROGMEM = {
  0x00, 0x30, 0xC3, 0x0C, 0x31, 0xE4, 0x92, 0x49, 0xE4, 0x92, 0xCC, 0xF9,
  0x24, 0xD3, 0x4D, 0x27, 0x92, 0x4D, 0x34, 0xD2, 0xF8, 0x69, 0x98, 0x88,
  0x88, 0x89, 0x99, 0x60, 0xF9, 0x24, 0xD3, 0x4D, 0x34, 0xD3, 0x4D, 0x34,
  0xD2, 0xF8, 0xFC, 0x21, 0x08, 0x43, 0xD0, 0x84, 0x21, 0x0F, 0x80, 0xFC,
  0x21, 0x08, 0x43, 0xD0, 0x84, 0x21, 0x08, 0x00, 0x69, 0x98, 0x88, 0x8B,
  0x99, 0x99, 0x60, 0x99, 0x99, 0x99, 0xF9, 0x99, 0x99, 0x90, 0xFB, 0x18,
  0xC6, 0x31, 0x8C, 0x63, 0x18, 0xCF, 0x80, 0x11, 0x11, 0x11, 0x11, 0x19,
  0x99, 0x60, 0x9B, 0xAA, 0xCC, 0xCC, 0xEA, 0xA9, 0x90, 0x84, 0x21, 0x08,
  0x42, 0x10, 0x84, 0x21, 0x0F, 0x80, 0x9C, 0xE7, 0xFF, 0xFF, 0xF7, 0x9C,
  0xE7, 0x39, 0x80, 0x99, 0xDD, 0xDD, 0xFB, 0xBB, 0x99, 0x90, 0xF9, 0x99,
  0x99, 0x99, 0x99, 0x99, 0xF0, 0xE9, 0x99, 0x99, 0xF8, 0x88, 0x88, 0x80,
  0x69, 0x99, 0x99, 0x99, 0xBB, 0xBF, 0x10, 0xE9, 0x99, 0x99, 0xFA, 0xA9,
  0x99, 0x90, 0x66, 0xA0, 0x84, 0x30, 0x86, 0x10, 0xE7, 0x2F, 0x00, 0xFB,
  0x18, 0xC6, 0x31, 0x8C, 0x63, 0x18, 0xC6, 0x00, 0x99, 0x99, 0x99, 0x99,
  0x99, 0x99, 0x60, 0xCD, 0x34, 0x92, 0x49, 0x24, 0x9E, 0x30, 0xC3, 0x0C,
  0x30, 0x86, 0x1C, 0x73, 0xCD, 0x75, 0xDE, 0x79, 0xE6, 0x92, 0x48, 0x4D,
  0x24, 0x8E, 0x30, 0xC3, 0x0C, 0x31, 0x24, 0x92, 0xCC, 0x99, 0x97, 0x66,
  0x66, 0x66, 0x66, 0x60, 0xF8, 0x84, 0x62, 0x11, 0x88, 0x46, 0x21, 0x0F,
  0x80, 0x30, 0xC3, 0x0C, 0x31, 0xE4, 0x92, 0x49, 0xE4, 0x92, 0xCC, 0xF9,
  0x24, 0xD3, 0x4D, 0x27, 0x92, 0x4D, 0x34, 0xD2, 0xF8, 0x69, 0x98, 0x88,
  0x88, 0x89, 0x99, 0x60, 0xF9, 0x24, 0xD3, 0x4D, 0x34, 0xD3, 0x4D, 0x34,
  0xD2, 0xF8, 0xFC, 0x21, 0x08, 0x43, 0xD0, 0x84, 0x21, 0x0F, 0x80, 0xFC,
  0x21, 0x08, 0x43, 0xD0, 0x84, 0x21, 0x08, 0x00, 0x69, 0x98, 0x88, 0x8B,
  0x99, 0x99, 0x60, 0x99, 0x99, 0x99, 0xF9, 0x99, 0x99, 0x90, 0xFB, 0x18,
  0xC6, 0x31, 0x8C, 0x63, 0x18, 0xCF, 0x80, 0x11, 0x11, 0x11, 0x11, 0x19,
  0x99, 0x60, 0x9B, 0xAA, 0xCC, 0xCC, 0xEA, 0xA9, 0x90, 0x84, 0x21, 0x08,
  0x42, 0x10, 0x84, 0x21, 0x0F, 0x80, 0x9C, 0xE7, 0xFF, 0xFF, 0xF7, 0x9C,
  0xE7, 0x39, 0x80, 0x99, 0xDD, 0xDD, 0xFB, 0xBB, 0x99, 0x90, 0xF9, 0x99,
  0x99, 0x99, 0x99, 0x99, 0xF0, 0xE9, 0x99, 0x99, 0xF8, 0x88, 0x88, 0x80,
  0x69, 0x99, 0x99, 0x99, 0xBB, 0xBF, 0x10, 0xE9, 0x99, 0x99, 0xFA, 0xA9,
  0x99, 0x90, 0x66, 0xA0, 0x84, 0x30, 0x86, 0x10, 0xE7, 0x2F, 0x00, 0xFB,
  0x18, 0xC6, 0x31, 0x8C, 0x63, 0x18, 0xC6, 0x00, 0x99, 0x99, 0x99, 0x99,
  0x99, 0x99, 0x60, 0xCD, 0x34, 0x92, 0x49, 0x24, 0x9E, 0x30, 0xC3, 0x0C,
  0x30, 0x86, 0x1C, 0x73, 0xCD, 0x75, 0xDE, 0x79, 0xE6, 0x92, 0x48, 0x4D,
  0x24, 0x8E, 0x30, 0xC3, 0x0C, 0x31, 0x24, 0x92, 0xCC, 0x99, 0x97, 0x66,
  0x66, 0x66, 0x66, 0x60, 0xF8, 0x84, 0x62, 0x11, 0x88, 0x46, 0x21, 0x0F,
  0x80, 0x69, 0x99, 0x99, 0x99, 0x99, 0x99, 0x60, 0x67, 0x18, 0xC6, 0x31,
  0x8C, 0x63, 0x18, 0xCF, 0x80, 0x74, 0x86, 0x21, 0x18, 0x88, 0x44, 0x21,
  0x0F, 0x80, 0x69, 0x11, 0x11, 0x31, 0x11, 0x19, 0xF0, 0x44, 0x44, 0x4C,
  0x89, 0x99, 0xF1, 0x10, 0xF8, 0x88, 0x8F, 0x91, 0x11, 0x19, 0x70, 0x32,
  0x64, 0xC8, 0xF9, 0x99, 0x99, 0x60, 0xF8, 0xC4, 0x23, 0x10, 0x84, 0x62,
  0x10, 0x84, 0x00, 0x69, 0x99, 0x99, 0xF9, 0x99, 0x99, 0x70, 0x69, 0x99,
  0x99, 0xF1, 0x12, 0x24, 0xC0, 0xE0, 0xE6, 0xAA, 0xAA, 0xF0, 0x41, 0x08,
  0x3D, 0x55, 0x55, 0x9C, 0x80, 0xF0, 0xFF, 0xC8, 0x84, 0xE0, 0xEA, 0xAA,
  0xAA, 0xAA, 0xC0, 0xED, 0xB6, 0xDB, 0x6D, 0xB6, 0xDB, 0xE0, 0x7A, 0xAA,
  0xAA, 0xAA, 0x40, 0x99, 0x36, 0xDB, 0x6D, 0xB6, 0xD2, 0x80 };

// Glyph, Offset to bitmap, Width, Height, xAdvance, xOffset, yOffset

const gfxglyph_t HotStuff8Glyphs[] PROGMEM = {
  {32,     0,   1,   1,   3,    0,    0 },   // 0x00 ' ' 
  {65,     1,   6,  13,   6,    0,  -12 },   // 0x01 'A' 
  {66,    11,   6,  13,   6,    0,  -12 },   // 0x02 'B' 
  {67,    21,   4,  13,   6,    1,  -12 },   // 0x03 'C' 
  {68,    28,   6,  13,   6,    0,  -12 },   // 0x04 'D' 
  {69,    38,   5,  13,   6,    1,  -12 },   // 0x05 'E' 
  {70,    47,   5,  13,   6,    1,  -12 },   // 0x06 'F' 
  {71,    56,   4,  13,   6,    1,  -12 },   // 0x07 'G' 
  {72,    63,   4,  13,   6,    1,  -12 },   // 0x08 'H' 
  {73,    70,   5,  13,   6,    1,  -12 },   // 0x09 'I' 
  {74,    79,   4,  13,   6,    1,  -12 },   // 0x0A 'J' 
  {75,    86,   4,  13,   6,    1,  -12 },   // 0x0B 'K' 
  {76,    93,   5,  13,   6,    1,  -12 },   // 0x0C 'L' 
  {77,   102,   5,  13,   6,    1,  -12 },   // 0x0D 'M' 
  {78,   111,   4,  13,   6,    1,  -12 },   // 0x0E 'N' 
  {79,   118,   4,  13,   6,    1,  -12 },   // 0x0F 'O' 
  {80,   125,   4,  13,   6,    1,  -12 },   // 0x10 'P' 
  {81,   132,   4,  13,   6,    1,  -12 },   // 0x11 'Q' 
  {82,   139,   4,  13,   6,    1,  -12 },   // 0x12 'R' 
  {83,   146,   5,  13,   6,    1,  -12 },   // 0x13 'S' 
  {84,   155,   5,  13,   6,    1,  -12 },   // 0x14 'T' 
  {85,   164,   4,  13,   6,    1,  -12 },   // 0x15 'U' 
  {86,   171,   6,  13,   6,    0,  -12 },   // 0x16 'V' 
  {87,   181,   6,  13,   6,    0,  -12 },   // 0x17 'W' 
  {88,   191,   6,  13,   6,    0,  -12 },   // 0x18 'X' 
  {89,   201,   4,  13,   6,    1,  -12 },   // 0x19 'Y' 
  {90,   208,   5,  13,   6,    1,  -12 },   // 0x1A 'Z' 
  {97,   217,   6,  13,   6,    0,  -12 },   // 0x1B 'a' 
  {98,   227,   6,  13,   6,    0,  -12 },   // 0x1C 'b' 
  {99,   237,   4,  13,   6,    1,  -12 },   // 0x1D 'c' 
  {100,   244,   6,  13,   6,    0,  -12 },   // 0x1E 'd' 
  {101,   254,   5,  13,   6,    1,  -12 },   // 0x1F 'e' 
  {102,   263,   5,  13,   6,    1,  -12 },   // 0x20 'f' 
  {103,   272,   4,  13,   6,    1,  -12 },   // 0x21 'g' 
  {104,   279,   4,  13,   6,    1,  -12 },   // 0x22 'h' 
  {105,   286,   5,  13,   6,    1,  -12 },   // 0x23 'i' 
  {106,   295,   4,  13,   6,    1,  -12 },   // 0x24 'j' 
  {107,   302,   4,  13,   6,    1,  -12 },   // 0x25 'k' 
  {108,   309,   5,  13,   6,    1,  -12 },   // 0x26 'l' 
  {109,   318,   5,  13,   6,    1,  -12 },   // 0x27 'm' 
  {110,   327,   4,  13,   6,    1,  -12 },   // 0x28 'n' 
  {111,   334,   4,  13,   6,    1,  -12 },   // 0x29 'o' 
  {112,   341,   4,  13,   6,    1,  -12 },   // 0x2A 'p' 
  {113,   348,   4,  13,   6,    1,  -12 },   // 0x2B 'q' 
  {114,   355,   4,  13,   6,    1,  -12 },   // 0x2C 'r' 
  {115,   362,   5,  13,   6,    1,  -12 },   // 0x2D 's' 
  {116,   371,   5,  13,   6,    1,  -12 },   // 0x2E 't' 
  {117,   380,   4,  13,   6,    1,  -12 },   // 0x2F 'u' 
  {118,   387,   6,  13,   6,    0,  -12 },   // 0x30 'v' 
  {119,   397,   6,  13,   6,    0,  -12 },   // 0x31 'w' 
  {120,   407,   6,  13,   6,    0,  -12 },   // 0x32 'x' 
  {121,   417,   4,  13,   6,    1,  -12 },   // 0x33 'y' 
  {122,   424,   5,  13,   6,    1,  -12 },   // 0x34 'z' 
  {48,   433,   4,  13,   6,    1,  -12 },   // 0x35 '0' 
  {49,   440,   5,  13,   6,    1,  -12 },   // 0x36 '1' 
  {50,   449,   5,  13,   6,    1,  -12 },   // 0x37 '2' 
  {51,   458,   4,  13,   6,    1,  -12 },   // 0x38 '3' 
  {52,   465,   4,  13,   6,    1,  -12 },   // 0x39 '4' 
  {53,   472,   4,  13,   6,    1,  -12 },   // 0x3A '5' 
  {54,   479,   4,  13,   6,    1,  -12 },   // 0x3B '6' 
  {55,   486,   5,  13,   6,    1,  -12 },   // 0x3C '7' 
  {56,   495,   4,  13,   6,    1,  -12 },   // 0x3D '8' 
  {57,   502,   4,  13,   6,    1,  -12 },   // 0x3E '9' 
  {45,   509,   3,   1,   3,    0,   -6 },   // 0x3F '-' 
  {37,   510,   6,  13,   6,    0,  -12 },   // 0x40 '%' 
  {46,   520,   1,   1,   3,    1,    0 },   // 0x41 '.' 
  {44,   521,   1,   4,   3,    1,   -1 },   // 0x42 ',' 
  {33,   522,   1,  13,   3,    1,  -12 },   // 0x43 '!' 
  {58,   524,   1,   6,   3,    1,   -8 },   // 0x44 ':' 
  {45,   525,   3,   1,   3,    0,   -6 },   // 0x45 '-' 
  {91,   526,   2,  17,   3,    1,  -14 },   // 0x46 '[' 
  {93,   531,   3,  17,   3,    0,  -14 },   // 0x47 ']' 
  {40,   538,   2,  17,   3,    1,  -14 },   // 0x48 '(' 
  {41,   543,   3,  17,   3,    0,  -14 }   // 0x49 ')' 
};

const gfxfont_t HotStuff8 PROGMEM = 
{
  (uint8_t  *)HotStuff8Bitmaps, //< Glyph bitmaps, concatenated 
  (gfxglyph_t *)HotStuff8Glyphs, //< Glyph array
  74,// total glyphs in the string
  17,  // newline distance (y axis)
     0,  // minimum X - left most
    -2,  // minimum Y - bottom most (descenders can drive this negative)
     6,  // maximum X - right most
    15}; // maximum Y - top most
// Approx. 1082 bytes -  but your mileage may vary.

#endif