
#ifndef __FIXEDFONTNOTOSANSMONOREGULARTTF12
#define __FIXEDFONTNOTOSANSMONOREGULARTTF12
const uint8_t HotStuff12Bitmaps[] PROGMEM = {
  0x00, 0x03, 0x00, 0x1E, 0x00, 0x78, 0x01, 0xE0, 0x0C, 0xC0, 0x33, 0x00,
  0xCC, 0x07, 0x18, 0x18, 0x60, 0x61, 0x81, 0xFF, 0x0F, 0xFC, 0x30, 0x30,
  0xC0, 0xC6, 0x01, 0x98, 0x06, 0xE0, 0x1C, 0xFF, 0x1F, 0xF3, 0x03, 0x60,
  0x6C, 0x0D, 0x81, 0xB0, 0x77, 0xFC, 0xFF, 0x98, 0x3B, 0x03, 0xE0, 0x3C,
  0x07, 0x81, 0xF0, 0x37, 0xFE, 0xFF, 0x00, 0x0F, 0xC7, 0xFD, 0xC1, 0x30,
  0x0C, 0x01, 0x80, 0x30, 0x06, 0x00, 0xC0, 0x18, 0x03, 0x00, 0x60, 0x0C,
  0x00, 0xC0, 0x1C, 0x01, 0xFE, 0x0F, 0xC0, 0xFE, 0x1F, 0xE3, 0x0E, 0x60,
  0x6C, 0x0D, 0x80, 0xF0, 0x1E, 0x03, 0xC0, 0x78, 0x0F, 0x01, 0xE0, 0x7C,
  0x0D, 0x83, 0xB0, 0xE7, 0xF8, 0xFC, 0x00, 0xFF, 0xFF, 0xFC, 0x03, 0x00,
  0xC0, 0x30, 0x0C, 0x03, 0xFF, 0xFF, 0xF0, 0x0C, 0x03, 0x00, 0xC0, 0x30,
  0x0C, 0x03, 0xFF, 0xFF, 0xC0, 0xFF, 0xFF, 0xFC, 0x03, 0x00, 0xC0, 0x30,
  0x0C, 0x03, 0x00, 0xFF, 0xFF, 0xFC, 0x03, 0x00, 0xC0, 0x30, 0x0C, 0x03,
  0x00, 0xC0, 0x00, 0x0F, 0xC3, 0xFC, 0xE0, 0xB8, 0x06, 0x01, 0xC0, 0x30,
  0x06, 0x00, 0xC3, 0xF8, 0x7F, 0x01, 0xF0, 0x36, 0x06, 0xC0, 0xDC, 0x19,
  0xFF, 0x0F, 0xE0, 0xC0, 0xF0, 0x3C, 0x0F, 0x03, 0xC0, 0xF0, 0x3C, 0x0F,
  0xFF, 0xFF, 0xF0, 0x3C, 0x0F, 0x03, 0xC0, 0xF0, 0x3C, 0x0F, 0x03, 0xC0,
  0xC0, 0xFF, 0xFF, 0x86, 0x03, 0x01, 0x80, 0xC0, 0x60, 0x30, 0x18, 0x0C,
  0x06, 0x03, 0x01, 0x80, 0xC0, 0x61, 0xFE, 0xFF, 0x80, 0x01, 0x80, 0xC0,
  0x60, 0x30, 0x18, 0x0C, 0x06, 0x03, 0x01, 0x80, 0xC0, 0x60, 0x30, 0x18,
  0x1C, 0x0D, 0xFE, 0x7C, 0x00, 0xC0, 0xF8, 0x3B, 0x0E, 0x61, 0x8C, 0x61,
  0x9C, 0x33, 0x06, 0xC0, 0xFC, 0x1D, 0x83, 0xB8, 0x63, 0x0C, 0x31, 0x87,
  0x30, 0x66, 0x06, 0xC0, 0xE0, 0xC0, 0x60, 0x30, 0x18, 0x0C, 0x06, 0x03,
  0x01, 0x80, 0xC0, 0x60, 0x30, 0x18, 0x0C, 0x06, 0x03, 0x01, 0xFF, 0xFF,
  0x80, 0xE0, 0x7F, 0x0F, 0xF0, 0xFF, 0x0F, 0xD0, 0xBD, 0x9B, 0xD9, 0xBC,
  0x9B, 0xCF, 0x3C, 0xF3, 0xCF, 0x3C, 0x63, 0xC6, 0x3C, 0x03, 0xC0, 0x3C,
  0x03, 0xC0, 0x30, 0xE0, 0xF8, 0x3B, 0x0E, 0xC3, 0xF0, 0xF6, 0x3D, 0x8F,
  0x33, 0xCC, 0xF1, 0xBC, 0x6F, 0x0B, 0xC3, 0xF0, 0xDC, 0x1F, 0x07, 0xC0,
  0xC0, 0x0F, 0x83, 0xFC, 0x70, 0xE6, 0x06, 0x60, 0x7C, 0x03, 0xC0, 0x3C,
  0x03, 0xC0, 0x3C, 0x03, 0xC0, 0x3C, 0x03, 0x60, 0x76, 0x06, 0x70, 0xE3,
  0xFC, 0x0F, 0x00, 0xFF, 0x1F, 0xFB, 0x03, 0x60, 0x7C, 0x07, 0x80, 0xF0,
  0x3E, 0x06, 0xC1, 0xDF, 0xF3, 0xF8, 0x60, 0x0C, 0x01, 0x80, 0x30, 0x06,
  0x00, 0xC0, 0x00, 0x0F, 0x83, 0xFC, 0x70, 0xE6, 0x06, 0x60, 0x7C, 0x03,
  0xC0, 0x3C, 0x03, 0xC0, 0x3C, 0x03, 0xC0, 0x3C, 0x03, 0x60, 0x76, 0x06,
  0x70, 0xE3, 0xFC, 0x0F, 0x80, 0x0C, 0x00, 0xC0, 0x06, 0x00, 0x70, 0xFE,
  0x1F, 0xF3, 0x07, 0x60, 0x6C, 0x0D, 0x81, 0xB0, 0x36, 0x0C, 0xFF, 0x9F,
  0xC3, 0x1C, 0x61, 0x8C, 0x39, 0x83, 0x30, 0x36, 0x06, 0xC0, 0x60, 0x1F,
  0x9F, 0xF6, 0x07, 0x80, 0xE0, 0x38, 0x07, 0x00, 0xF0, 0x1F, 0x01, 0xE0,
  0x1C, 0x03, 0x00, 0xC0, 0x38, 0x1F, 0xFE, 0x7F, 0x00, 0xFF, 0xFF, 0xFF,
  0x06, 0x00, 0x60, 0x06, 0x00, 0x60, 0x06, 0x00, 0x60, 0x06, 0x00, 0x60,
  0x06, 0x00, 0x60, 0x06, 0x00, 0x60, 0x06, 0x00, 0x60, 0x06, 0x00, 0xC0,
  0xF0, 0x3C, 0x0F, 0x03, 0xC0, 0xF0, 0x3C, 0x0F, 0x03, 0xC0, 0xF0, 0x3C,
  0x0F, 0x03, 0xC0, 0xF0, 0x3E, 0x1D, 0xFE, 0x3F, 0x00, 0xC0, 0x3E, 0x01,
  0xB8, 0x0C, 0xC0, 0xC6, 0x06, 0x30, 0x30, 0xC3, 0x06, 0x18, 0x30, 0xC0,
  0xC6, 0x06, 0x60, 0x33, 0x00, 0x98, 0x07, 0x80, 0x3C, 0x00, 0xE0, 0x06,
  0x00, 0xC0, 0x3E, 0x01, 0xB0, 0x0D, 0x80, 0x6C, 0x63, 0x63, 0x1B, 0x3C,
  0xD9, 0xE6, 0x4D, 0x32, 0x49, 0x92, 0x68, 0xF3, 0x47, 0x8A, 0x3C, 0x51,
  0xC3, 0x8E, 0x1C, 0x70, 0xE0, 0xE0, 0x76, 0x06, 0x30, 0xC3, 0x0C, 0x19,
  0x81, 0x98, 0x0F, 0x00, 0x70, 0x06, 0x00, 0xF0, 0x0F, 0x01, 0x98, 0x38,
  0xC3, 0x0C, 0x70, 0x66, 0x06, 0xC0, 0x30, 0xC0, 0x36, 0x07, 0x60, 0x63,
  0x0E, 0x30, 0xC1, 0x9C, 0x19, 0x80, 0xD8, 0x0F, 0x00, 0x70, 0x06, 0x00,
  0x60, 0x06, 0x00, 0x60, 0x06, 0x00, 0x60, 0x06, 0x00, 0x7F, 0xDF, 0xF0,
  0x18, 0x06, 0x03, 0x00, 0xC0, 0x60, 0x18, 0x0C, 0x07, 0x01, 0x80, 0xE0,
  0x30, 0x18, 0x06, 0x03, 0xFF, 0xFF, 0xC0, 0x3F, 0x1F, 0xE4, 0x1C, 0x03,
  0x00, 0xCF, 0xF7, 0xFF, 0x03, 0xC0, 0xF0, 0x3C, 0x1F, 0xFF, 0x7C, 0xC0,
  0xC0, 0x18, 0x03, 0x00, 0x60, 0x0C, 0x01, 0x9E, 0x3F, 0xE7, 0x0E, 0xC0,
  0xD8, 0x1F, 0x01, 0xE0, 0x3C, 0x07, 0x81, 0xF0, 0x37, 0x0E, 0xFF, 0x99,
  0xE0, 0x1F, 0x8F, 0xF7, 0x07, 0x80, 0xC0, 0x30, 0x0C, 0x03, 0x00, 0xC0,
  0x38, 0x07, 0x00, 0xFF, 0x1F, 0x80, 0x00, 0x60, 0x0C, 0x01, 0x80, 0x30,
  0x06, 0x3E, 0xCF, 0xFB, 0x87, 0x60, 0x7C, 0x0F, 0x81, 0xE0, 0x3C, 0x07,
  0xC0, 0xD8, 0x1B, 0x87, 0x3F, 0xE3, 0xEC, 0x0F, 0x83, 0xFC, 0x70, 0x66,
  0x06, 0x60, 0x3F, 0xFF, 0xFF, 0xFE, 0x00, 0x60, 0x06, 0x00, 0x70, 0x23,
  0xFE, 0x0F, 0xC0, 0x03, 0xE1, 0xFC, 0x30, 0x06, 0x00, 0xC1, 0xFF, 0xFF,
  0xF8, 0x60, 0x0C, 0x01, 0x80, 0x30, 0x06, 0x00, 0xC0, 0x18, 0x03, 0x00,
  0x60, 0x0C, 0x01, 0x80, 0x1F, 0x67, 0xFD, 0xC3, 0xB0, 0x3E, 0x07, 0xC0,
  0xF0, 0x1E, 0x03, 0xE0, 0x6C, 0x0D, 0xC3, 0x9F, 0xF1, 0xF6, 0x00, 0xC0,
  0x18, 0x03, 0x40, 0xEF, 0xF8, 0xFC, 0x00, 0xC0, 0x30, 0x0C, 0x03, 0x00,
  0xC0, 0x33, 0xCD, 0xFB, 0x87, 0xE0, 0xF0, 0x3C, 0x0F, 0x03, 0xC0, 0xF0,
  0x3C, 0x0F, 0x03, 0xC0, 0xF0, 0x30, 0x0C, 0x01, 0xC0, 0x30, 0x00, 0x00,
  0x01, 0xF8, 0x3F, 0x00, 0x60, 0x0C, 0x01, 0x80, 0x30, 0x06, 0x00, 0xC0,
  0x18, 0x03, 0x00, 0x60, 0x7F, 0xDF, 0xFC, 0x03, 0x01, 0xC0, 0xC0, 0x00,
  0x01, 0xF8, 0xFC, 0x06, 0x03, 0x01, 0x80, 0xC0, 0x60, 0x30, 0x18, 0x0C,
  0x06, 0x03, 0x01, 0x80, 0xC0, 0x60, 0x30, 0x3B, 0xF9, 0xF8, 0xE0, 0x1C,
  0x03, 0x80, 0x70, 0x0E, 0x01, 0xC1, 0xF8, 0x77, 0x1C, 0xE7, 0x1C, 0xC3,
  0xB0, 0x6F, 0x0F, 0x61, 0xC6, 0x38, 0xE7, 0x0E, 0xE0, 0xDC, 0x0C, 0xFE,
  0x1F, 0xC0, 0x38, 0x07, 0x00, 0xE0, 0x1C, 0x03, 0x80, 0x70, 0x0E, 0x01,
  0xC0, 0x38, 0x07, 0x00, 0xE0, 0x1C, 0x03, 0x80, 0x70, 0x7F, 0xDF, 0xFC,
  0xDC, 0xEF, 0xFF, 0xE7, 0x3C, 0x63, 0xC6, 0x3C, 0x63, 0xC6, 0x3C, 0x63,
  0xC6, 0x3C, 0x63, 0xC6, 0x3C, 0x63, 0xC6, 0x30, 0xCF, 0x3F, 0xFE, 0x0F,
  0x83, 0xC0, 0xF0, 0x3C, 0x0F, 0x03, 0xC0, 0xF0, 0x3C, 0x0F, 0x03, 0xC0,
  0xC0, 0x0F, 0x03, 0xFC, 0x70, 0xE6, 0x06, 0xE0, 0x7C, 0x03, 0xC0, 0x3C,
  0x03, 0xE0, 0x76, 0x06, 0x70, 0xE3, 0xFC, 0x0F, 0x80, 0xCF, 0x1F, 0xF3,
  0x83, 0x60, 0x6C, 0x0F, 0x80, 0xF0, 0x1E, 0x03, 0xC0, 0xF8, 0x1B, 0x87,
  0x7F, 0xCC, 0xF1, 0x80, 0x30, 0x06, 0x00, 0xC0, 0x18, 0x03, 0x00, 0x00,
  0x1F, 0x67, 0xFD, 0xC3, 0xB0, 0x3E, 0x07, 0xC0, 0xF0, 0x1E, 0x03, 0xE0,
  0x6C, 0x0D, 0xC3, 0x9F, 0xF1, 0xF6, 0x00, 0xC0, 0x18, 0x03, 0x00, 0x60,
  0x0C, 0x01, 0x80, 0x7C, 0xF7, 0xDF, 0x0F, 0x00, 0xE0, 0x0E, 0x00, 0xC0,
  0x0C, 0x00, 0xC0, 0x0C, 0x00, 0xC0, 0x0C, 0x07, 0xF8, 0xFF, 0xC0, 0x1F,
  0x9F, 0xE6, 0x09, 0x80, 0x60, 0x0E, 0x01, 0xF0, 0x1E, 0x01, 0xC0, 0x78,
  0x1B, 0xFE, 0x7F, 0x00, 0x0C, 0x01, 0x80, 0x30, 0x06, 0x0F, 0xFF, 0xFF,
  0xC3, 0x00, 0x60, 0x0C, 0x01, 0x80, 0x30, 0x06, 0x00, 0xC0, 0x18, 0x03,
  0x00, 0x7F, 0x03, 0xE0, 0xC0, 0xF0, 0x3C, 0x0F, 0x03, 0xC0, 0xF0, 0x3C,
  0x0F, 0x03, 0xC0, 0xF0, 0x3E, 0x1D, 0xFF, 0x3E, 0xC0, 0xC0, 0x36, 0x06,
  0x60, 0x66, 0x06, 0x30, 0xC3, 0x0C, 0x30, 0xC1, 0x98, 0x19, 0x81, 0x98,
  0x0F, 0x00, 0xF0, 0x07, 0x00, 0xC0, 0x0D, 0x80, 0x36, 0x31, 0x98, 0xC6,
  0x67, 0x99, 0x9E, 0x66, 0x69, 0x8B, 0x36, 0x2C, 0xD0, 0xF3, 0xC3, 0xC7,
  0x0E, 0x1C, 0x38, 0x70, 0xE0, 0x77, 0x0E, 0x30, 0xC1, 0x98, 0x1F, 0x80,
  0xF0, 0x06, 0x00, 0xF0, 0x1D, 0x81, 0x9C, 0x30, 0xC7, 0x06, 0xE0, 0x70,
  0xC0, 0x36, 0x07, 0x60, 0x67, 0x06, 0x30, 0xC3, 0x0C, 0x18, 0xC1, 0x98,
  0x19, 0x80, 0xD8, 0x0D, 0x00, 0x70, 0x07, 0x00, 0x60, 0x06, 0x00, 0xC0,
  0x0C, 0x0F, 0x80, 0xF0, 0x00, 0xFF, 0xFF, 0xF0, 0x18, 0x0E, 0x07, 0x01,
  0x80, 0xC0, 0x70, 0x38, 0x0C, 0x06, 0x03, 0xFF, 0xFF, 0xC0, 0x0F, 0x03,
  0xFC, 0x30, 0xC6, 0x0E, 0x61, 0xE6, 0x1A, 0xC3, 0x3C, 0x73, 0xC6, 0x3C,
  0xC3, 0xCC, 0x37, 0x82, 0x78, 0x67, 0x06, 0x30, 0xE3, 0xFC, 0x0F, 0x00,
  0x0E, 0x0F, 0x8F, 0x61, 0x18, 0x06, 0x01, 0x80, 0x60, 0x18, 0x06, 0x01,
  0x80, 0x60, 0x18, 0x06, 0x01, 0x80, 0x61, 0xFF, 0x7F, 0xC0, 0x3E, 0x1F,
  0xF3, 0x06, 0x00, 0x60, 0x0C, 0x01, 0x80, 0x70, 0x0C, 0x03, 0x80, 0xE0,
  0x38, 0x06, 0x01, 0x80, 0x60, 0x18, 0x07, 0xFF, 0xFF, 0xE0, 0x3F, 0x3F,
  0xEC, 0x1C, 0x03, 0x00, 0xC0, 0x70, 0x38, 0xF8, 0x3F, 0x80, 0x70, 0x0C,
  0x03, 0x00, 0xC0, 0x38, 0x1F, 0xFE, 0x7E, 0x00, 0x01, 0x80, 0x38, 0x02,
  0x80, 0x68, 0x0D, 0x80, 0xD8, 0x19, 0x83, 0x18, 0x31, 0x86, 0x18, 0x61,
  0x8F, 0xFF, 0xFF, 0xF0, 0x18, 0x01, 0x80, 0x18, 0x01, 0x80, 0x7F, 0x9F,
  0xE6, 0x01, 0x80, 0xC0, 0x30, 0x0F, 0xC3, 0xFC, 0x03, 0x80, 0x70, 0x0C,
  0x03, 0x00, 0xC0, 0x38, 0x1B, 0xFE, 0x7E, 0x00, 0x07, 0xC1, 0xFC, 0x38,
  0x03, 0x00, 0x60, 0x06, 0x00, 0x6F, 0x8F, 0xFC, 0xF0, 0x6E, 0x06, 0xE0,
  0x36, 0x03, 0x60, 0x36, 0x06, 0x70, 0x63, 0xFC, 0x0F, 0x80, 0xFF, 0xFF,
  0xFF, 0x00, 0x60, 0x06, 0x00, 0xC0, 0x0C, 0x00, 0xC0, 0x18, 0x01, 0x80,
  0x30, 0x03, 0x00, 0x70, 0x06, 0x00, 0x60, 0x0C, 0x00, 0xC0, 0x1C, 0x00,
  0x3F, 0x1F, 0xEE, 0x1F, 0x03, 0xC0, 0xF8, 0x77, 0x38, 0xFC, 0x3F, 0x1C,
  0xEC, 0x0F, 0x03, 0xC0, 0xF0, 0x3C, 0x1D, 0xFE, 0x3F, 0x00, 0x1F, 0x03,
  0xFC, 0x70, 0xE6, 0x06, 0xE0, 0x6C, 0x03, 0xE0, 0x76, 0x07, 0x70, 0xF3,
  0xFB, 0x0E, 0x60, 0x06, 0x00, 0x60, 0x0C, 0x01, 0xC3, 0xF8, 0x3E, 0x00,
  0xFF, 0xFC, 0x38, 0x31, 0xF0, 0x8C, 0x66, 0x31, 0x90, 0xC6, 0xC3, 0x1A,
  0x07, 0xD8, 0x0E, 0x40, 0x03, 0x00, 0x09, 0xE0, 0x6F, 0x81, 0x23, 0x0D,
  0x8C, 0x26, 0x31, 0x88, 0xC6, 0x32, 0x30, 0x78, 0xDF, 0x00, 0x77, 0x66,
  0xCC, 0xDB, 0x6D, 0xB6, 0xDB, 0x60, 0x37, 0xC0, 0xDF, 0x00, 0x00, 0x03,
  0x6C, 0xFF, 0xFC, 0xFF, 0xF1, 0x8C, 0x63, 0x18, 0xC6, 0x31, 0x8C, 0x63,
  0x18, 0xC6, 0x31, 0xFF, 0x80, 0xFF, 0xC6, 0x31, 0x8C, 0x63, 0x18, 0xC6,
  0x31, 0x8C, 0x63, 0x18, 0xC7, 0xFF, 0x80, 0x19, 0x9C, 0xC6, 0x63, 0x18,
  0xC6, 0x31, 0x8C, 0x63, 0x1C, 0x63, 0x0C, 0x70, 0xE3, 0x0C, 0x63, 0x8C,
  0x63, 0x18, 0xC6, 0x31, 0x8C, 0x66, 0x33, 0x19, 0x80 };

// Glyph, Offset to bitmap, Width, Height, xAdvance, xOffset, yOffset

const gfxglyph_t HotStuff12Glyphs[] PROGMEM = {
  {32,     0,   1,   1,  14,    0,    0 },   // 0x00 ' ' 
  {65,     1,  14,  17,  14,    0,  -16 },   // 0x01 'A' 
  {66,    31,  11,  17,  14,    2,  -16 },   // 0x02 'B' 
  {67,    55,  11,  17,  14,    2,  -16 },   // 0x03 'C' 
  {68,    79,  11,  17,  14,    2,  -16 },   // 0x04 'D' 
  {69,   103,  10,  17,  14,    2,  -16 },   // 0x05 'E' 
  {70,   125,  10,  17,  14,    2,  -16 },   // 0x06 'F' 
  {71,   147,  11,  17,  14,    1,  -16 },   // 0x07 'G' 
  {72,   171,  10,  17,  14,    2,  -16 },   // 0x08 'H' 
  {73,   193,   9,  17,  14,    3,  -16 },   // 0x09 'I' 
  {74,   213,   9,  17,  14,    2,  -16 },   // 0x0A 'J' 
  {75,   233,  11,  17,  14,    2,  -16 },   // 0x0B 'K' 
  {76,   257,   9,  17,  14,    3,  -16 },   // 0x0C 'L' 
  {77,   277,  12,  17,  14,    1,  -16 },   // 0x0D 'M' 
  {78,   303,  10,  17,  14,    2,  -16 },   // 0x0E 'N' 
  {79,   325,  12,  17,  14,    1,  -16 },   // 0x0F 'O' 
  {80,   351,  11,  17,  14,    2,  -16 },   // 0x10 'P' 
  {81,   375,  12,  21,  14,    1,  -16 },   // 0x11 'Q' 
  {82,   407,  11,  17,  14,    2,  -16 },   // 0x12 'R' 
  {83,   431,  10,  17,  14,    2,  -16 },   // 0x13 'S' 
  {84,   453,  12,  17,  14,    1,  -16 },   // 0x14 'T' 
  {85,   479,  10,  17,  14,    2,  -16 },   // 0x15 'U' 
  {86,   501,  13,  17,  14,    1,  -16 },   // 0x16 'V' 
  {87,   529,  13,  17,  14,    1,  -16 },   // 0x17 'W' 
  {88,   557,  12,  17,  14,    1,  -16 },   // 0x18 'X' 
  {89,   583,  12,  17,  14,    1,  -16 },   // 0x19 'Y' 
  {90,   609,  10,  17,  14,    2,  -16 },   // 0x1A 'Z' 
  {97,   631,  10,  13,  14,    2,  -12 },   // 0x1B 'a' 
  {98,   648,  11,  18,  14,    2,  -17 },   // 0x1C 'b' 
  {99,   673,  10,  13,  14,    2,  -12 },   // 0x1D 'c' 
  {100,   690,  11,  18,  14,    1,  -17 },   // 0x1E 'd' 
  {101,   715,  12,  13,  14,    1,  -12 },   // 0x1F 'e' 
  {102,   735,  11,  18,  14,    2,  -17 },   // 0x20 'f' 
  {103,   760,  11,  19,  14,    1,  -12 },   // 0x21 'g' 
  {104,   787,  10,  18,  14,    2,  -17 },   // 0x22 'h' 
  {105,   810,  11,  18,  14,    2,  -17 },   // 0x23 'i' 
  {106,   835,   9,  24,  14,    1,  -17 },   // 0x24 'j' 
  {107,   862,  11,  18,  14,    2,  -17 },   // 0x25 'k' 
  {108,   887,  11,  18,  14,    2,  -17 },   // 0x26 'l' 
  {109,   912,  12,  13,  14,    1,  -12 },   // 0x27 'm' 
  {110,   932,  10,  13,  14,    2,  -12 },   // 0x28 'n' 
  {111,   949,  12,  13,  14,    1,  -12 },   // 0x29 'o' 
  {112,   969,  11,  19,  14,    2,  -12 },   // 0x2A 'p' 
  {113,   996,  11,  19,  14,    1,  -12 },   // 0x2B 'q' 
  {114,  1023,  12,  13,  14,    1,  -12 },   // 0x2C 'r' 
  {115,  1043,  10,  13,  14,    2,  -12 },   // 0x2D 's' 
  {116,  1060,  11,  17,  14,    1,  -16 },   // 0x2E 't' 
  {117,  1084,  10,  13,  14,    2,  -12 },   // 0x2F 'u' 
  {118,  1101,  12,  13,  14,    1,  -12 },   // 0x30 'v' 
  {119,  1121,  14,  13,  14,    0,  -12 },   // 0x31 'w' 
  {120,  1144,  12,  13,  14,    1,  -12 },   // 0x32 'x' 
  {121,  1164,  12,  19,  14,    1,  -12 },   // 0x33 'y' 
  {122,  1193,  10,  13,  14,    2,  -12 },   // 0x34 'z' 
  {48,  1210,  12,  17,  14,    1,  -16 },   // 0x35 '0' 
  {49,  1236,  10,  17,  14,    2,  -16 },   // 0x36 '1' 
  {50,  1258,  11,  17,  14,    2,  -16 },   // 0x37 '2' 
  {51,  1282,  10,  17,  14,    2,  -16 },   // 0x38 '3' 
  {52,  1304,  12,  17,  14,    1,  -16 },   // 0x39 '4' 
  {53,  1330,  10,  17,  14,    2,  -16 },   // 0x3A '5' 
  {54,  1352,  12,  17,  14,    1,  -16 },   // 0x3B '6' 
  {55,  1378,  12,  17,  14,    1,  -16 },   // 0x3C '7' 
  {56,  1404,  10,  17,  14,    2,  -16 },   // 0x3D '8' 
  {57,  1426,  12,  17,  14,    1,  -16 },   // 0x3E '9' 
  {45,  1452,   7,   2,  14,    4,   -6 },   // 0x3F '-' 
  {37,  1454,  14,  17,  14,    0,  -16 },   // 0x40 '%' 
  {46,  1484,   3,   3,  14,    6,   -2 },   // 0x41 '.' 
  {44,  1486,   4,   6,  14,    5,   -2 },   // 0x42 ',' 
  {33,  1489,   3,  17,  14,    6,  -16 },   // 0x43 '!' 
  {58,  1496,   3,  13,  14,    6,  -12 },   // 0x44 ':' 
  {45,  1501,   7,   2,  14,    4,   -6 },   // 0x45 '-' 
  {91,  1503,   5,  21,  14,    6,  -16 },   // 0x46 '[' 
  {93,  1517,   5,  21,  14,    3,  -16 },   // 0x47 ']' 
  {40,  1531,   5,  20,  14,    5,  -16 },   // 0x48 '(' 
  {41,  1544,   5,  20,  14,    4,  -15 }   // 0x49 ')' 
};

const gfxfont_t HotStuff12 PROGMEM = 
{
  (uint8_t  *)HotStuff12Bitmaps, //< Glyph bitmaps, concatenated 
  (gfxglyph_t *)HotStuff12Glyphs, //< Glyph array
  74,// total glyphs in the string
  24,  // newline distance (y axis)
     0,  // minimum X - left most
    -6,  // minimum Y - bottom most (descenders can drive this negative)
    14,  // maximum X - right most
    18}; // maximum Y - top most
// Approx. 2089 bytes -  but your mileage may vary.

#endif