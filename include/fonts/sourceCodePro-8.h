
#ifndef __FIXEDFONTSOURCECODEPROBOLDTTF8
#define __FIXEDFONTSOURCECODEPROBOLDTTF8
const uint8_t HotStuff8Bitmaps[] PROGMEM = {
  0x00, 0x3C, 0x7E, 0xE6, 0xC7, 0xDB, 0xDB, 0xC7, 0xE6, 0x7E, 0x3C, 0x78,
  0x78, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0xFF, 0xFF, 0x7C, 0xFE, 0x46,
  0x06, 0x0E, 0x0C, 0x18, 0x70, 0xFF, 0xFF, 0x7C, 0xFE, 0x46, 0x06, 0x3C,
  0x3E, 0x06, 0x87, 0xFE, 0x7C, 0x1E, 0x1E, 0x36, 0x7E, 0x6E, 0xCE, 0xFF,
  0xFF, 0x0E, 0x0E, 0x7E, 0x7E, 0x60, 0x7C, 0x7E, 0x46, 0x07, 0x86, 0xFE,
  0x7C, 0x3E, 0x7F, 0xE2, 0xDC, 0xFE, 0xE7, 0xC3, 0xE7, 0x7E, 0x3C, 0xFF,
  0xFF, 0x06, 0x0C, 0x18, 0x18, 0x18, 0x38, 0x38, 0x30, 0x7C, 0x7E, 0xC6,
  0x7C, 0x7C, 0xCE, 0xC7, 0xC7, 0xFE, 0x3C, 0x7C, 0xFE, 0xC6, 0xC7, 0xFF,
  0x7F, 0x06, 0x46, 0xFC, 0x78, 0xFF, 0xF0, 0x70, 0x3C, 0x72, 0x7B, 0x67,
  0xA3, 0xB8, 0x1E, 0x39, 0x3D, 0xB3, 0xF1, 0xC0, 0x6F, 0xF6 };

// Glyph, Offset to bitmap, Width, Height, xAdvance, xOffset, yOffset

const gfxglyph_t HotStuff8Glyphs[] PROGMEM = {
  {32,     0,   1,   1,  10,    0,    0 },   // 0x00 ' ' 
  {48,     1,   8,  10,  10,    1,   -9 },   // 0x01 '0' 
  {49,    11,   8,  10,  10,    1,   -9 },   // 0x02 '1' 
  {50,    21,   8,  10,  10,    1,   -9 },   // 0x03 '2' 
  {51,    31,   8,  10,  10,    1,   -9 },   // 0x04 '3' 
  {52,    41,   8,  10,  10,    1,   -9 },   // 0x05 '4' 
  {53,    51,   8,  10,  10,    1,   -9 },   // 0x06 '5' 
  {54,    61,   8,  10,  10,    1,   -9 },   // 0x07 '6' 
  {55,    71,   8,  10,  10,    1,   -9 },   // 0x08 '7' 
  {56,    81,   8,  10,  10,    1,   -9 },   // 0x09 '8' 
  {57,    91,   8,  10,  10,    1,   -9 },   // 0x0A '9' 
  {45,   101,   6,   2,  10,    2,   -5 },   // 0x0B '-' 
  {37,   103,   9,  11,  10,    0,  -10 },   // 0x0C '%' 
  {46,   116,   4,   4,  10,    3,   -3 }   // 0x0D '.' 
};

const gfxfont_t HotStuff8 PROGMEM = 
{
  (uint8_t  *)HotStuff8Bitmaps, //< Glyph bitmaps, concatenated 
  (gfxglyph_t *)HotStuff8Glyphs, //< Glyph array
  14,// total glyphs in the string
  11,  // newline distance (y axis)
     0,  // minimum X - left most
     0,  // minimum Y - bottom most (descenders can drive this negative)
     9,  // maximum X - right most
    11}; // maximum Y - top most
// Approx. 230 bytes -  but your mileage may vary.

#endif