
#ifndef __FIXEDFONTNOTOSANSMONOREGULARTTF7
#define __FIXEDFONTNOTOSANSMONOREGULARTTF7
const uint8_t HotStuff7Bitmaps[] PROGMEM = {
  0x00, 0x18, 0x18, 0x1C, 0x34, 0x24, 0x26, 0x7E, 0x42, 0x42, 0xC1, 0xFA,
  0x18, 0x61, 0xFA, 0x18, 0x61, 0x87, 0xE0, 0x3C, 0xC7, 0x04, 0x08, 0x10,
  0x20, 0x60, 0x40, 0x78, 0xF1, 0x1A, 0x14, 0x28, 0x70, 0xE1, 0x42, 0x8D,
  0xE0, 0xFF, 0x0C, 0x30, 0xFF, 0x0C, 0x30, 0xC3, 0xF0, 0xFF, 0x0C, 0x30,
  0xFF, 0x0C, 0x30, 0xC3, 0x00, 0x3D, 0x08, 0x20, 0x9E, 0x18, 0x61, 0xC4,
  0xF0, 0x86, 0x18, 0x61, 0xFE, 0x18, 0x61, 0x86, 0x10, 0xFC, 0xC3, 0x0C,
  0x30, 0xC3, 0x0C, 0x33, 0xF0, 0x08, 0x42, 0x10, 0x84, 0x21, 0x0F, 0x80,
  0x85, 0x12, 0x65, 0x8A, 0x1E, 0x24, 0x44, 0x8D, 0x0C, 0x84, 0x21, 0x08,
  0x42, 0x10, 0x87, 0xC0, 0xC7, 0x97, 0x3E, 0x7A, 0xF6, 0xED, 0xCB, 0x87,
  0x0C, 0xC7, 0x1A, 0x69, 0xB6, 0x59, 0x63, 0x8E, 0x10, 0x79, 0x9A, 0x14,
  0x38, 0x70, 0xE1, 0xC2, 0xCC, 0xF0, 0xFB, 0x1C, 0x71, 0xC7, 0xEC, 0x30,
  0xC3, 0x00, 0x79, 0x9A, 0x14, 0x38, 0x70, 0xE1, 0xC2, 0xCC, 0xF0, 0x20,
  0x20, 0xF9, 0x9B, 0x16, 0x2C, 0xDF, 0x36, 0x64, 0xC5, 0x8C, 0x7D, 0x1C,
  0x10, 0x70, 0x70, 0x41, 0x8F, 0xE0, 0xFE, 0x60, 0xC1, 0x83, 0x06, 0x0C,
  0x18, 0x30, 0x60, 0x86, 0x18, 0x61, 0x86, 0x18, 0x61, 0xCD, 0xE0, 0xC3,
  0x42, 0x42, 0x62, 0x24, 0x24, 0x34, 0x1C, 0x18, 0x18, 0xC1, 0x41, 0x59,
  0x5B, 0x5A, 0x56, 0x56, 0x66, 0x66, 0x66, 0x43, 0x26, 0x24, 0x18, 0x18,
  0x18, 0x1C, 0x24, 0x62, 0xC3, 0xC3, 0x62, 0x26, 0x24, 0x1C, 0x18, 0x08,
  0x08, 0x08, 0x08, 0x7C, 0x30, 0x86, 0x10, 0x82, 0x10, 0x43, 0xF0, 0xF9,
  0x30, 0x5F, 0xC6, 0x18, 0xDD, 0x82, 0x08, 0x2E, 0xCE, 0x18, 0x61, 0x87,
  0x3B, 0x80, 0x3D, 0x1C, 0x20, 0x83, 0x04, 0x4F, 0x04, 0x10, 0x5D, 0xCE,
  0x18, 0x61, 0x87, 0x37, 0x40, 0x7B, 0x18, 0x7F, 0x82, 0x0C, 0x4F, 0x1E,
  0x60, 0xC7, 0xE3, 0x06, 0x0C, 0x18, 0x30, 0x60, 0xC0, 0x77, 0x38, 0x61,
  0x86, 0x1C, 0xDF, 0x06, 0x3F, 0x80, 0x82, 0x08, 0x2E, 0xCF, 0x18, 0x61,
  0x86, 0x18, 0x40, 0x30, 0xC0, 0x3C, 0x10, 0x41, 0x04, 0x10, 0x4F, 0xC0,
  0x18, 0x80, 0xE1, 0x08, 0x42, 0x10, 0x84, 0x21, 0x70, 0xC1, 0x83, 0x06,
  0x3C, 0x9B, 0x3C, 0x78, 0xC9, 0x9B, 0x18, 0xF0, 0x41, 0x04, 0x10, 0x41,
  0x04, 0x10, 0x4F, 0xC0, 0xED, 0x6A, 0x5C, 0xB9, 0x72, 0xE5, 0xCB, 0xBB,
  0x1C, 0x61, 0x86, 0x18, 0x61, 0x7B, 0x38, 0x61, 0x86, 0x1C, 0xDE, 0xBB,
  0x18, 0x61, 0x86, 0x1C, 0x6E, 0x82, 0x08, 0x00, 0x77, 0x38, 0x61, 0x86,
  0x1C, 0xDD, 0x04, 0x10, 0x40, 0xEE, 0x64, 0xC1, 0x02, 0x04, 0x08, 0x7C,
  0x7D, 0x14, 0x1C, 0x18, 0x18, 0xFE, 0x20, 0x8F, 0xC8, 0x20, 0x82, 0x08,
  0x20, 0x70, 0x86, 0x18, 0x61, 0x86, 0x1C, 0xDD, 0x87, 0x0B, 0x12, 0x44,
  0x8D, 0x0C, 0x18, 0x81, 0xC1, 0x59, 0x5A, 0x56, 0x66, 0x66, 0x66, 0x84,
  0x91, 0xE1, 0x83, 0x0D, 0x13, 0x43, 0x87, 0x09, 0x12, 0x46, 0x85, 0x0C,
  0x08, 0x30, 0x43, 0x00, 0xFC, 0x30, 0x84, 0x21, 0x84, 0x3F, 0x7B, 0x38,
  0xE7, 0x96, 0x9A, 0x71, 0x4D, 0xE0, 0x33, 0xC1, 0x04, 0x10, 0x41, 0x04,
  0x11, 0xF0, 0x7A, 0x30, 0x41, 0x0C, 0x63, 0x18, 0xC3, 0xF0, 0x7A, 0x30,
  0x43, 0x70, 0x30, 0x41, 0x8F, 0xE0, 0x18, 0x30, 0xA1, 0x44, 0x89, 0x22,
  0x7F, 0x08, 0x10, 0x7D, 0x0C, 0x3E, 0x0C, 0x10, 0x41, 0x8F, 0xE0, 0x3D,
  0x08, 0x2E, 0xCE, 0x18, 0x61, 0xCD, 0xE0, 0xFC, 0x10, 0x42, 0x08, 0x61,
  0x0C, 0x21, 0x80, 0x7B, 0x38, 0x53, 0x79, 0x68, 0x61, 0xC5, 0xE0, 0x7B,
  0x38, 0x61, 0x85, 0xF0, 0x41, 0x09, 0xC0, 0xF0, 0x62, 0x94, 0x94, 0xE8,
  0x08, 0x16, 0x1D, 0x29, 0x29, 0x47, 0xF0, 0x7A, 0xFF, 0x54, 0xF0, 0xF0,
  0x0F, 0xF2, 0x49, 0x24, 0x92, 0x4E, 0xE4, 0x92, 0x49, 0x24, 0x9E, 0x6B,
  0x49, 0x24, 0x91, 0x30, 0xC8, 0x92, 0x49, 0x2D, 0x60 };

// Glyph, Offset to bitmap, Width, Height, xAdvance, xOffset, yOffset

const gfxglyph_t HotStuff7Glyphs[] PROGMEM = {
  {32,     0,   1,   1,   8,    0,    0 },   // 0x00 ' ' 
  {65,     1,   8,  10,   8,    0,   -9 },   // 0x01 'A' 
  {66,    11,   6,  10,   8,    1,   -9 },   // 0x02 'B' 
  {67,    19,   7,  10,   8,    1,   -9 },   // 0x03 'C' 
  {68,    28,   7,  10,   8,    1,   -9 },   // 0x04 'D' 
  {69,    37,   6,  10,   8,    1,   -9 },   // 0x05 'E' 
  {70,    45,   6,  10,   8,    1,   -9 },   // 0x06 'F' 
  {71,    53,   6,  10,   8,    1,   -9 },   // 0x07 'G' 
  {72,    61,   6,  10,   8,    1,   -9 },   // 0x08 'H' 
  {73,    69,   6,  10,   8,    1,   -9 },   // 0x09 'I' 
  {74,    77,   5,  10,   8,    1,   -9 },   // 0x0A 'J' 
  {75,    84,   7,  10,   8,    1,   -9 },   // 0x0B 'K' 
  {76,    93,   5,  10,   8,    2,   -9 },   // 0x0C 'L' 
  {77,   100,   7,  10,   8,    1,   -9 },   // 0x0D 'M' 
  {78,   109,   6,  10,   8,    1,   -9 },   // 0x0E 'N' 
  {79,   117,   7,  10,   8,    1,   -9 },   // 0x0F 'O' 
  {80,   126,   6,  10,   8,    1,   -9 },   // 0x10 'P' 
  {81,   134,   7,  12,   8,    1,   -9 },   // 0x11 'Q' 
  {82,   145,   7,  10,   8,    1,   -9 },   // 0x12 'R' 
  {83,   154,   6,  10,   8,    1,   -9 },   // 0x13 'S' 
  {84,   162,   7,  10,   8,    1,   -9 },   // 0x14 'T' 
  {85,   171,   6,  10,   8,    1,   -9 },   // 0x15 'U' 
  {86,   179,   8,  10,   8,    0,   -9 },   // 0x16 'V' 
  {87,   189,   8,  10,   8,    0,   -9 },   // 0x17 'W' 
  {88,   199,   8,  10,   8,    0,   -9 },   // 0x18 'X' 
  {89,   209,   8,  10,   8,    0,   -9 },   // 0x19 'Y' 
  {90,   219,   6,  10,   8,    1,   -9 },   // 0x1A 'Z' 
  {97,   227,   6,   8,   8,    1,   -7 },   // 0x1B 'a' 
  {98,   233,   6,  11,   8,    1,  -10 },   // 0x1C 'b' 
  {99,   242,   6,   8,   8,    1,   -7 },   // 0x1D 'c' 
  {100,   248,   6,  11,   8,    1,  -10 },   // 0x1E 'd' 
  {101,   257,   6,   8,   8,    1,   -7 },   // 0x1F 'e' 
  {102,   263,   7,  11,   8,    1,  -10 },   // 0x20 'f' 
  {103,   273,   6,  11,   8,    1,   -7 },   // 0x21 'g' 
  {104,   282,   6,  11,   8,    1,  -10 },   // 0x22 'h' 
  {105,   291,   6,  11,   8,    1,  -10 },   // 0x23 'i' 
  {106,   300,   5,  14,   8,    1,  -10 },   // 0x24 'j' 
  {107,   309,   7,  11,   8,    1,  -10 },   // 0x25 'k' 
  {108,   319,   6,  11,   8,    1,  -10 },   // 0x26 'l' 
  {109,   328,   7,   8,   8,    1,   -7 },   // 0x27 'm' 
  {110,   335,   6,   8,   8,    1,   -7 },   // 0x28 'n' 
  {111,   341,   6,   8,   8,    1,   -7 },   // 0x29 'o' 
  {112,   347,   6,  11,   8,    1,   -7 },   // 0x2A 'p' 
  {113,   356,   6,  11,   8,    1,   -7 },   // 0x2B 'q' 
  {114,   365,   7,   8,   8,    1,   -7 },   // 0x2C 'r' 
  {115,   372,   6,   8,   8,    1,   -7 },   // 0x2D 's' 
  {116,   378,   6,  10,   8,    1,   -9 },   // 0x2E 't' 
  {117,   386,   6,   8,   8,    1,   -7 },   // 0x2F 'u' 
  {118,   392,   7,   8,   8,    1,   -7 },   // 0x30 'v' 
  {119,   399,   8,   8,   8,    0,   -7 },   // 0x31 'w' 
  {120,   407,   7,   8,   8,    1,   -7 },   // 0x32 'x' 
  {121,   414,   7,  11,   8,    1,   -7 },   // 0x33 'y' 
  {122,   424,   6,   8,   8,    1,   -7 },   // 0x34 'z' 
  {48,   430,   6,  10,   8,    1,   -9 },   // 0x35 '0' 
  {49,   438,   6,  10,   8,    1,   -9 },   // 0x36 '1' 
  {50,   446,   6,  10,   8,    1,   -9 },   // 0x37 '2' 
  {51,   454,   6,  10,   8,    1,   -9 },   // 0x38 '3' 
  {52,   462,   7,  10,   8,    1,   -9 },   // 0x39 '4' 
  {53,   471,   6,  10,   8,    1,   -9 },   // 0x3A '5' 
  {54,   479,   6,  10,   8,    1,   -9 },   // 0x3B '6' 
  {55,   487,   6,  10,   8,    1,   -9 },   // 0x3C '7' 
  {56,   495,   6,  10,   8,    1,   -9 },   // 0x3D '8' 
  {57,   503,   6,  10,   8,    1,   -9 },   // 0x3E '9' 
  {45,   511,   4,   1,   8,    2,   -4 },   // 0x3F '-' 
  {37,   512,   8,  10,   8,    0,   -9 },   // 0x40 '%' 
  {46,   522,   2,   2,   8,    3,   -1 },   // 0x41 '.' 
  {44,   523,   2,   4,   8,    3,   -1 },   // 0x42 ',' 
  {33,   524,   2,  10,   8,    3,   -9 },   // 0x43 '!' 
  {58,   527,   2,   8,   8,    3,   -7 },   // 0x44 ':' 
  {91,   529,   3,  13,   8,    3,   -9 },   // 0x45 '[' 
  {93,   534,   3,  13,   8,    2,  -10 },   // 0x46 ']' 
  {40,   539,   3,  12,   8,    3,   -9 },   // 0x47 '(' 
  {41,   544,   3,  12,   8,    2,   -9 }   // 0x48 ')' 
};

const gfxfont_t HotStuff7 PROGMEM = 
{
  (uint8_t  *)HotStuff7Bitmaps, //< Glyph bitmaps, concatenated 
  (gfxglyph_t *)HotStuff7Glyphs, //< Glyph array
  73,// total glyphs in the string
  14,  // newline distance (y axis)
     0,  // minimum X - left most
    -3,  // minimum Y - bottom most (descenders can drive this negative)
     8,  // maximum X - right most
    11}; // maximum Y - top most
// Approx. 1074 bytes -  but your mileage may vary.

#endif