
#ifndef __FIXEDFONTBPMONOBOLDSTENCILTTF8
#define __FIXEDFONTBPMONOBOLDSTENCILTTF8
const uint8_t HotStuff8Bitmaps[] PROGMEM = {
  0x00, 0x00, 0x01, 0xC0, 0x38, 0x09, 0x81, 0x30, 0x26, 0x08, 0x61, 0x0C,
  0x3F, 0x84, 0x30, 0x86, 0x10, 0xC0, 0x00, 0x00, 0x7E, 0x31, 0x98, 0xCC,
  0x67, 0xE3, 0x19, 0x86, 0xC3, 0x61, 0xB1, 0x9F, 0x80, 0x00, 0x00, 0x1F,
  0x18, 0xD8, 0x0C, 0x06, 0x03, 0x01, 0x80, 0xC0, 0x60, 0x18, 0xC7, 0xC0,
  0x00, 0x00, 0x7E, 0x30, 0x98, 0x6C, 0x36, 0x1B, 0x0D, 0x86, 0xC3, 0x61,
  0xB0, 0x9F, 0x80, 0x00, 0x00, 0x7F, 0x30, 0x18, 0x0C, 0x06, 0x03, 0xF1,
  0x80, 0xC0, 0x60, 0x30, 0x1F, 0xC0, 0x00, 0x00, 0x7F, 0x30, 0x18, 0x0C,
  0x06, 0x03, 0xF1, 0x80, 0xC0, 0x60, 0x30, 0x18, 0x00, 0x00, 0x00, 0x1F,
  0x10, 0xD8, 0x0C, 0x06, 0x03, 0x3D, 0x86, 0xC3, 0x61, 0x90, 0xC7, 0xC0,
  0x00, 0x00, 0x61, 0xB0, 0xD8, 0x6C, 0x36, 0x1B, 0xFD, 0x86, 0xC3, 0x61,
  0xB0, 0xD8, 0x60, 0x00, 0x00, 0x3F, 0x06, 0x03, 0x01, 0x80, 0xC0, 0x60,
  0x30, 0x18, 0x0C, 0x06, 0x0F, 0xC0, 0x00, 0x00, 0x7F, 0x01, 0x80, 0xC0,
  0x60, 0x30, 0x18, 0x0C, 0x06, 0x03, 0x03, 0x1F, 0x00, 0x00, 0x00, 0x60,
  0xB0, 0x98, 0x8C, 0x86, 0x83, 0xE1, 0x98, 0xC6, 0x63, 0x30, 0xD8, 0x60,
  0x00, 0x00, 0x60, 0x30, 0x18, 0x0C, 0x06, 0x03, 0x01, 0x80, 0xC0, 0x60,
  0x30, 0x1F, 0xE0, 0x00, 0x00, 0x61, 0xB0, 0xDC, 0xEE, 0x77, 0x3A, 0xAD,
  0x56, 0xAB, 0x55, 0xA4, 0xD2, 0x60, 0x00, 0x00, 0x31, 0x9C, 0xCE, 0x65,
  0xB2, 0xD9, 0x3C, 0x9E, 0x47, 0x23, 0x90, 0xC8, 0x60, 0x00, 0x00, 0x1F,
  0x8C, 0x33, 0x0C, 0xC3, 0x30, 0xCC, 0x33, 0x0C, 0xC3, 0x30, 0xCC, 0x31,
  0xF8, 0x00, 0x00, 0x00, 0x7E, 0x30, 0x98, 0x6C, 0x36, 0x1B, 0x09, 0xF8,
  0xC0, 0x60, 0x30, 0x18, 0x00, 0x00, 0x00, 0x1F, 0x8C, 0x33, 0x0C, 0xC3,
  0x30, 0xCC, 0x33, 0x0C, 0xC3, 0x30, 0xCC, 0x31, 0xF8, 0x10, 0x03, 0x80,
  0x00, 0x00, 0x00, 0x7E, 0x31, 0x98, 0xCC, 0x66, 0x33, 0x11, 0xF0, 0xC4,
  0x63, 0x31, 0x98, 0xC0, 0x00, 0x00, 0x1F, 0x18, 0x4C, 0x06, 0x03, 0x00,
  0xF8, 0x06, 0x03, 0x01, 0x90, 0xC7, 0xC0, 0x00, 0x00, 0x7F, 0x86, 0x03,
  0x01, 0x80, 0xC0, 0x60, 0x30, 0x18, 0x0C, 0x06, 0x03, 0x00, 0x00, 0x00,
  0x61, 0xB0, 0xD8, 0x6C, 0x36, 0x1B, 0x0D, 0x86, 0xC3, 0x61, 0xB0, 0xCF,
  0xC0, 0x00, 0x00, 0x20, 0xC8, 0x32, 0x0C, 0x46, 0x11, 0x84, 0x61, 0x18,
  0x2C, 0x0B, 0x02, 0xC0, 0x60, 0x00, 0x00, 0x00, 0x63, 0x31, 0x98, 0xCD,
  0x66, 0xB3, 0x58, 0xF8, 0x7C, 0x36, 0x1B, 0x0D, 0x80, 0x00, 0x00, 0x21,
  0x88, 0x61, 0x30, 0x4C, 0x0E, 0x01, 0x00, 0xE0, 0x64, 0x19, 0x0C, 0x23,
  0x08, 0x00, 0x00, 0x00, 0x41, 0xA0, 0xC8, 0xC4, 0x61, 0x60, 0xF0, 0x30,
  0x18, 0x0C, 0x06, 0x03, 0x00, 0x00, 0x00, 0x7F, 0x80, 0xC0, 0xC0, 0xC0,
  0xC0, 0xC0, 0xC0, 0xC0, 0x60, 0x30, 0x1F, 0xE0, 0x00, 0x00, 0x3E, 0x01,
  0x80, 0xC0, 0x63, 0xF3, 0x19, 0x9C, 0x76, 0x00, 0x00, 0x00, 0x60, 0x30,
  0x18, 0x0C, 0x06, 0xF3, 0x8D, 0x86, 0xC3, 0x61, 0xB0, 0xD8, 0x4F, 0xC0,
  0x00, 0x00, 0x0F, 0x0C, 0x4C, 0x06, 0x03, 0x01, 0x80, 0x62, 0x1E, 0x00,
  0x00, 0x00, 0x00, 0x60, 0x18, 0x06, 0x01, 0x87, 0xE3, 0x19, 0x86, 0x61,
  0x98, 0x66, 0x18, 0xCE, 0x1D, 0x80, 0x00, 0x00, 0x03, 0xC1, 0x18, 0xC6,
  0x3F, 0x8C, 0x03, 0x00, 0x42, 0x0F, 0x00, 0x00, 0x00, 0x0F, 0x8C, 0x06,
  0x03, 0x07, 0xF8, 0xC0, 0x60, 0x30, 0x18, 0x0C, 0x06, 0x0F, 0xF0, 0x00,
  0x00, 0x1F, 0x10, 0xD8, 0x6C, 0x36, 0x1B, 0x0C, 0x8E, 0x3B, 0x01, 0x90,
  0x87, 0x80, 0x00, 0x00, 0x60, 0x30, 0x18, 0x0C, 0x06, 0xF3, 0x8D, 0x86,
  0xC3, 0x61, 0xB0, 0xD8, 0x6C, 0x30, 0x00, 0x00, 0x06, 0x03, 0x00, 0x00,
  0x03, 0xE0, 0x30, 0x18, 0x0C, 0x06, 0x03, 0x01, 0x87, 0xF8, 0x00, 0x00,
  0x06, 0x03, 0x00, 0x00, 0x01, 0xE0, 0x30, 0x18, 0x0C, 0x06, 0x03, 0x01,
  0x80, 0xC0, 0x60, 0x30, 0xF0, 0x00, 0x00, 0x00, 0x60, 0x30, 0x18, 0x0C,
  0x06, 0x33, 0x31, 0xB0, 0xF0, 0x6C, 0x33, 0x18, 0xCC, 0x30, 0x00, 0x00,
  0x1F, 0x00, 0xC0, 0x30, 0x0C, 0x03, 0x00, 0xC0, 0x30, 0x0C, 0x03, 0x00,
  0xC0, 0x30, 0x7F, 0x80, 0x00, 0x00, 0x5B, 0x3F, 0x96, 0xCB, 0x65, 0xB2,
  0xD9, 0x6C, 0xB6, 0x00, 0x00, 0x00, 0x6F, 0x38, 0xD8, 0x6C, 0x36, 0x1B,
  0x0D, 0x86, 0xC3, 0x00, 0x00, 0x00, 0x07, 0x83, 0x31, 0x86, 0x61, 0x98,
  0x66, 0x18, 0xCC, 0x1E, 0x00, 0x00, 0x00, 0x1B, 0xC7, 0x19, 0x86, 0x61,
  0x98, 0x66, 0x19, 0x86, 0x7F, 0x18, 0x06, 0x01, 0x80, 0x00, 0x00, 0x00,
  0x1F, 0x98, 0xD8, 0x6C, 0x36, 0x1B, 0x0C, 0xC6, 0x3F, 0x01, 0x80, 0xC0,
  0x60, 0x00, 0x00, 0x3C, 0xC6, 0x83, 0x81, 0x80, 0xC0, 0x60, 0x30, 0x7E,
  0x00, 0x00, 0x00, 0x1F, 0x98, 0x0C, 0x03, 0x80, 0x30, 0x0C, 0x06, 0x7E,
  0x00, 0x00, 0x00, 0x0C, 0x06, 0x1F, 0xE1, 0x80, 0xC0, 0x60, 0x30, 0x18,
  0x0C, 0x03, 0xC0, 0x00, 0x00, 0x18, 0xC6, 0x31, 0x8C, 0x63, 0x18, 0xC6,
  0x31, 0x8C, 0x3D, 0x80, 0x00, 0x00, 0x60, 0xB0, 0x4C, 0x46, 0x21, 0xA0,
  0xD0, 0x68, 0x18, 0x00, 0x00, 0x00, 0x6D, 0xB6, 0xDB, 0x6D, 0xB6, 0xD9,
  0xF8, 0x58, 0x2C, 0x00, 0x00, 0x00, 0x20, 0x8C, 0x61, 0xB0, 0x38, 0x0E,
  0x06, 0xC3, 0x18, 0x82, 0x00, 0x00, 0x00, 0x41, 0xA0, 0xC8, 0x64, 0x31,
  0x30, 0x98, 0x4C, 0x1C, 0x06, 0x06, 0x06, 0x00, 0x00, 0x00, 0x3F, 0x80,
  0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0x7F, 0x00, 0x00, 0x00, 0x1E, 0x19,
  0x98, 0xEC, 0x76, 0x7B, 0x6D, 0xE6, 0xE3, 0x71, 0x99, 0x87, 0x80, 0x00,
  0x18, 0x1C, 0x16, 0x03, 0x01, 0x80, 0xC0, 0x60, 0x30, 0x18, 0x0C, 0x3F,
  0xC0, 0x00, 0x00, 0x3E, 0x21, 0x80, 0xC0, 0x60, 0x30, 0x30, 0x30, 0x30,
  0x30, 0x30, 0x1F, 0xE0, 0x00, 0x00, 0x3E, 0x31, 0x80, 0xC0, 0x60, 0x30,
  0xF0, 0x0C, 0x06, 0x03, 0x31, 0x8F, 0x80, 0x00, 0x02, 0x03, 0x03, 0x83,
  0xC3, 0x63, 0x33, 0x19, 0xFE, 0x06, 0x03, 0x01, 0x80, 0x00, 0xFC, 0x60,
  0x30, 0x18, 0x0C, 0x07, 0xE0, 0x18, 0x0C, 0x06, 0x42, 0x1E, 0x00, 0x00,
  0x00, 0x0E, 0x0C, 0x0C, 0x0C, 0x07, 0xC3, 0x11, 0x8C, 0xC6, 0x63, 0x11,
  0x07, 0x00, 0x00, 0xFE, 0x03, 0x01, 0x81, 0x80, 0xC0, 0xC0, 0x60, 0x60,
  0x30, 0x30, 0x18, 0x00, 0x00, 0x00, 0x3E, 0x31, 0x98, 0xCC, 0x66, 0x31,
  0xF1, 0x8C, 0xC6, 0x63, 0x31, 0x8F, 0x80, 0x00, 0x00, 0x1C, 0x11, 0x18,
  0xCC, 0x66, 0x31, 0x18, 0x7C, 0x06, 0x06, 0x06, 0x0E, 0x00, 0x00, 0x00,
  0x3F, 0x80, 0x00, 0x00, 0x0F, 0xE4, 0x89, 0x24, 0x4A, 0x0D, 0x00, 0x80,
  0x4C, 0x24, 0x91, 0x24, 0x49, 0x0C, 0x00, 0x00, 0x03, 0x18, 0x00, 0x03,
  0x19, 0x88, 0x00, 0x0C, 0xCC, 0xCC, 0xCC, 0xCC, 0x0C, 0xC0, 0x03, 0x18,
  0x00, 0x01, 0x8C, 0x00, 0x07, 0xB1, 0x8C, 0x63, 0x18, 0xC6, 0x31, 0x8C,
  0x78, 0x00, 0x07, 0x8C, 0x63, 0x18, 0xC6, 0x31, 0x8C, 0x63, 0x78, 0x00,
  0x00, 0x01, 0x08, 0x43, 0x0C, 0x30, 0xC3, 0x0C, 0x30, 0x40, 0x81, 0x00,
  0x00, 0x00, 0x04, 0x08, 0x10, 0x61, 0x86, 0x18, 0x61, 0x86, 0x10, 0x84,
  0x00, 0x00 };

// Glyph, Offset to bitmap, Width, Height, xAdvance, xOffset, yOffset

const gfxglyph_t HotStuff8Glyphs[] PROGMEM = {
  {32,     0,   1,   1,  10,    0,    0 },   // 0x00 ' ' 
  {65,     1,  11,  13,   9,   -1,  -11 },   // 0x01 'A' 
  {66,    19,   9,  13,   9,    0,  -11 },   // 0x02 'B' 
  {67,    34,   9,  13,   9,    0,  -11 },   // 0x03 'C' 
  {68,    49,   9,  13,   9,    0,  -11 },   // 0x04 'D' 
  {69,    64,   9,  13,   9,    0,  -11 },   // 0x05 'E' 
  {70,    79,   9,  13,   9,    0,  -11 },   // 0x06 'F' 
  {71,    94,   9,  13,   9,    0,  -11 },   // 0x07 'G' 
  {72,   109,   9,  13,   9,    0,  -11 },   // 0x08 'H' 
  {73,   124,   9,  13,   9,    0,  -11 },   // 0x09 'I' 
  {74,   139,   9,  13,   9,    0,  -11 },   // 0x0A 'J' 
  {75,   154,   9,  13,   9,    0,  -11 },   // 0x0B 'K' 
  {76,   169,   9,  13,   9,    0,  -11 },   // 0x0C 'L' 
  {77,   184,   9,  13,   9,    0,  -11 },   // 0x0D 'M' 
  {78,   199,   9,  13,   9,    0,  -11 },   // 0x0E 'N' 
  {79,   214,  10,  13,   9,    0,  -11 },   // 0x0F 'O' 
  {80,   231,   9,  13,   9,    0,  -11 },   // 0x10 'P' 
  {81,   246,  10,  16,   9,    0,  -11 },   // 0x11 'Q' 
  {82,   266,   9,  13,   9,    0,  -11 },   // 0x12 'R' 
  {83,   281,   9,  13,   9,    0,  -11 },   // 0x13 'S' 
  {84,   296,   9,  13,   9,    0,  -11 },   // 0x14 'T' 
  {85,   311,   9,  13,   9,    0,  -11 },   // 0x15 'U' 
  {86,   326,  10,  13,   9,    0,  -11 },   // 0x16 'V' 
  {87,   343,   9,  13,   9,    0,  -11 },   // 0x17 'W' 
  {88,   358,  10,  13,   9,    0,  -11 },   // 0x18 'X' 
  {89,   375,   9,  13,   9,    0,  -11 },   // 0x19 'Y' 
  {90,   390,   9,  13,   9,    0,  -11 },   // 0x1A 'Z' 
  {97,   405,   9,  10,   9,    0,   -8 },   // 0x1B 'a' 
  {98,   417,   9,  14,   9,    0,  -12 },   // 0x1C 'b' 
  {99,   433,   9,  10,   9,    0,   -8 },   // 0x1D 'c' 
  {100,   445,  10,  14,   9,   -1,  -12 },   // 0x1E 'd' 
  {101,   463,  10,  10,   9,   -1,   -8 },   // 0x1F 'e' 
  {102,   476,   9,  14,   9,    0,  -12 },   // 0x20 'f' 
  {103,   492,   9,  13,   9,    0,   -8 },   // 0x21 'g' 
  {104,   507,   9,  14,   9,    0,  -12 },   // 0x22 'h' 
  {105,   523,   9,  14,   9,    0,  -12 },   // 0x23 'i' 
  {106,   539,   9,  17,   9,    0,  -12 },   // 0x24 'j' 
  {107,   559,   9,  14,   9,    0,  -12 },   // 0x25 'k' 
  {108,   575,  10,  14,  10,   -1,  -12 },   // 0x26 'l' 
  {109,   593,   9,  10,   9,    0,   -8 },   // 0x27 'm' 
  {110,   605,   9,  10,   9,    0,   -8 },   // 0x28 'n' 
  {111,   617,  10,  10,  10,   -1,   -8 },   // 0x29 'o' 
  {112,   630,  10,  13,  10,   -1,   -8 },   // 0x2A 'p' 
  {113,   647,   9,  13,   9,    0,   -8 },   // 0x2B 'q' 
  {114,   662,   9,  10,   9,    0,   -8 },   // 0x2C 'r' 
  {115,   674,   9,  10,   9,    0,   -8 },   // 0x2D 's' 
  {116,   686,   9,  12,   9,    0,  -10 },   // 0x2E 't' 
  {117,   700,  10,  10,   9,   -1,   -8 },   // 0x2F 'u' 
  {118,   713,   9,  10,   9,    0,   -8 },   // 0x30 'v' 
  {119,   725,   9,  10,   9,    0,   -8 },   // 0x31 'w' 
  {120,   737,  10,  10,   9,    0,   -8 },   // 0x32 'x' 
  {121,   750,   9,  13,   9,    0,   -8 },   // 0x33 'y' 
  {122,   765,   9,  10,   9,    0,   -8 },   // 0x34 'z' 
  {48,   777,   9,  13,   9,    0,  -11 },   // 0x35 '0' 
  {49,   792,   9,  12,   9,    0,  -10 },   // 0x36 '1' 
  {50,   806,   9,  13,   9,    0,  -11 },   // 0x37 '2' 
  {51,   821,   9,  13,   9,    0,  -11 },   // 0x38 '3' 
  {52,   836,   9,  12,   9,    0,  -10 },   // 0x39 '4' 
  {53,   850,   9,  12,   9,    0,  -10 },   // 0x3A '5' 
  {54,   864,   9,  13,   9,    0,  -11 },   // 0x3B '6' 
  {55,   879,   9,  12,   9,    0,  -10 },   // 0x3C '7' 
  {56,   893,   9,  13,   9,    0,  -11 },   // 0x3D '8' 
  {57,   908,   9,  13,   9,    0,  -11 },   // 0x3E '9' 
  {45,   923,   9,   3,   9,    0,   -5 },   // 0x3F '-' 
  {37,   927,  10,  13,   9,    0,  -11 },   // 0x40 '%' 
  {46,   944,   5,   4,   9,    2,   -2 },   // 0x41 '.' 
  {44,   947,   5,   6,   9,    2,   -2 },   // 0x42 ',' 
  {33,   951,   4,  14,   9,    3,  -12 },   // 0x43 '!' 
  {58,   958,   5,   9,   9,    2,   -7 },   // 0x44 ':' 
  {91,   964,   5,  15,   9,    2,  -12 },   // 0x45 '[' 
  {93,   974,   5,  15,   9,    2,  -12 },   // 0x46 ']' 
  {40,   984,   6,  17,   9,    2,  -13 },   // 0x47 '(' 
  {41,   997,   6,  17,   9,    2,  -13 }   // 0x48 ')' 
};

const gfxfont_t HotStuff8 PROGMEM = 
{
  (uint8_t  *)HotStuff8Bitmaps, //< Glyph bitmaps, concatenated 
  (gfxglyph_t *)HotStuff8Glyphs, //< Glyph array
  73,// total glyphs in the string
  17,  // newline distance (y axis)
    -1,  // minimum X - left most
    -4,  // minimum Y - bottom most (descenders can drive this negative)
    10,  // maximum X - right most
    14}; // maximum Y - top most
// Approx. 1535 bytes -  but your mileage may vary.

#endif