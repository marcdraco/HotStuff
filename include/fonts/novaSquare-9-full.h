
#ifndef __FIXEDFONTNOVASQUARETTF9
#define __FIXEDFONTNOVASQUARETTF9
const uint8_t HotStuff9Bitmaps[] PROGMEM = {
  0x00, 0x7F, 0x7F, 0xF0, 0x78, 0x3C, 0x1E, 0x0F, 0xFF, 0xFF, 0xC1, 0xE0,
  0xF0, 0x78, 0x3C, 0x1C, 0x08, 0xFE, 0x7F, 0xB0, 0xD8, 0x6C, 0x37, 0xFB,
  0xFD, 0x83, 0xC1, 0xE0, 0xF0, 0x78, 0x3F, 0xFF, 0xF8, 0x7F, 0x7F, 0xF0,
  0x78, 0x3C, 0x06, 0x03, 0x01, 0x80, 0xC0, 0x60, 0xF0, 0x78, 0x3F, 0xFB,
  0xF8, 0xFF, 0x7F, 0xF0, 0x78, 0x3C, 0x1E, 0x0F, 0x07, 0x83, 0xC1, 0xE0,
  0xF0, 0x78, 0x3F, 0xFF, 0xF8, 0xFD, 0xFB, 0x06, 0x0C, 0x18, 0x3F, 0x7E,
  0xC1, 0x83, 0x06, 0x0F, 0xFF, 0xC0, 0xFF, 0xFC, 0x30, 0xC3, 0x0F, 0xFF,
  0xC3, 0x0C, 0x30, 0xC2, 0x00, 0x7F, 0x7F, 0xF0, 0x78, 0x3C, 0x06, 0x03,
  0x1F, 0x8F, 0xC1, 0xE0, 0xF0, 0x78, 0x3F, 0xFB, 0xF8, 0x40, 0xE0, 0xF0,
  0x78, 0x3C, 0x1E, 0x0F, 0xFF, 0xFF, 0xC1, 0xE0, 0xF0, 0x78, 0x3C, 0x1C,
  0x08, 0x7F, 0xFF, 0xFF, 0xE0, 0x1F, 0x8F, 0xC0, 0x60, 0x30, 0x18, 0x0C,
  0x06, 0x03, 0x01, 0x80, 0xF0, 0x78, 0x3F, 0xFB, 0xF8, 0x43, 0x61, 0xB1,
  0x99, 0x8C, 0xC6, 0xC3, 0xFD, 0xFF, 0xC1, 0xE0, 0xF0, 0x78, 0x3C, 0x1C,
  0x08, 0x41, 0x83, 0x06, 0x0C, 0x18, 0x30, 0x60, 0xC1, 0x83, 0x06, 0x0F,
  0xFF, 0xC0, 0x7F, 0x7E, 0xFF, 0xFF, 0xC1, 0x83, 0xC1, 0x83, 0xC1, 0x83,
  0xC1, 0x83, 0xC1, 0x83, 0xC1, 0x83, 0xC1, 0x83, 0xC1, 0x83, 0xC1, 0x83,
  0xC1, 0x83, 0xC1, 0x83, 0x81, 0x02, 0x7F, 0x7F, 0xF0, 0x78, 0x3C, 0x1E,
  0x0F, 0x07, 0x83, 0xC1, 0xE0, 0xF0, 0x78, 0x3C, 0x1C, 0x08, 0x7F, 0x7F,
  0xF0, 0x78, 0x3C, 0x1E, 0x0F, 0x07, 0x83, 0xC1, 0xE0, 0xF0, 0x78, 0x3F,
  0xFB, 0xF8, 0xFF, 0x7F, 0xF0, 0x78, 0x3C, 0x1E, 0x0F, 0x07, 0xFF, 0xFF,
  0x60, 0x30, 0x18, 0x0C, 0x04, 0x00, 0x7F, 0x7F, 0xF0, 0x78, 0x3C, 0x1E,
  0x0F, 0x07, 0x83, 0xC1, 0xE6, 0xF3, 0x78, 0xFF, 0xFB, 0xF8, 0xFF, 0x7F,
  0xF0, 0x78, 0x3C, 0x1E, 0x0F, 0x07, 0xFF, 0xFF, 0x66, 0x31, 0x98, 0xCC,
  0x34, 0x1C, 0x3F, 0x1F, 0xE6, 0x19, 0x80, 0x60, 0x1F, 0xE3, 0xFC, 0x03,
  0x00, 0xC0, 0x3C, 0x0F, 0x03, 0xFF, 0xDF, 0xE0, 0x7F, 0xFF, 0xC3, 0x01,
  0x80, 0xC0, 0x60, 0x30, 0x18, 0x0C, 0x06, 0x03, 0x01, 0x80, 0xC0, 0x40,
  0x40, 0xE0, 0xF0, 0x78, 0x3C, 0x1E, 0x0F, 0x07, 0x83, 0xC1, 0xE0, 0xF0,
  0x78, 0x3F, 0xFB, 0xF8, 0x40, 0x58, 0x19, 0x83, 0x30, 0x66, 0x08, 0x63,
  0x0C, 0x61, 0x88, 0x1B, 0x03, 0x60, 0x68, 0x07, 0x00, 0xE0, 0x18, 0x00,
  0x40, 0x81, 0xC1, 0x83, 0xC1, 0x83, 0xC1, 0x83, 0xC1, 0x83, 0xC1, 0x83,
  0xC1, 0x83, 0xC1, 0x83, 0xC1, 0x83, 0xC1, 0x83, 0xC1, 0x83, 0xC1, 0x83,
  0xFF, 0xFF, 0x7E, 0xFE, 0x41, 0xB0, 0x66, 0x31, 0xCC, 0x36, 0x07, 0x81,
  0xC0, 0x70, 0x1E, 0x0D, 0x83, 0x31, 0x8C, 0xC1, 0xB0, 0x60, 0x40, 0xE0,
  0xF0, 0x78, 0x3C, 0x1E, 0x0F, 0x07, 0x83, 0xFF, 0xBF, 0x83, 0x01, 0x80,
  0xC0, 0x40, 0x7F, 0xBF, 0x80, 0xC0, 0xC0, 0x60, 0x60, 0x30, 0x30, 0x18,
  0x18, 0x0C, 0x0C, 0x07, 0xFF, 0xF8, 0x3C, 0x7C, 0x1B, 0xFF, 0xF8, 0xF1,
  0xE3, 0xFE, 0xFC, 0x41, 0x83, 0x06, 0x0F, 0xDF, 0xF1, 0xE3, 0xC7, 0x8F,
  0x1E, 0x3F, 0xEF, 0x80, 0x7E, 0xFF, 0xC3, 0xC0, 0xC0, 0xC0, 0xC0, 0xC3,
  0xFF, 0x7E, 0x01, 0x03, 0x03, 0x03, 0x7F, 0xFF, 0xC3, 0xC3, 0xC3, 0xC3,
  0xC3, 0xC3, 0xFF, 0x7E, 0x7E, 0xFF, 0xC3, 0xC7, 0xCE, 0xD8, 0xF0, 0xC3,
  0xFF, 0x7E, 0x3D, 0xF6, 0x18, 0xFF, 0xE6, 0x18, 0x61, 0x86, 0x18, 0x61,
  0x00, 0x7E, 0xFF, 0xC3, 0xC3, 0xC3, 0xC3, 0xC3, 0xC3, 0xFF, 0x7F, 0x03,
  0x03, 0x3F, 0x7E, 0x41, 0x83, 0x06, 0x0F, 0xDF, 0xF1, 0xE3, 0xC7, 0x8F,
  0x1E, 0x3C, 0x70, 0x80, 0xF1, 0xFF, 0xFF, 0x80, 0x6C, 0x16, 0xDB, 0x6D,
  0xB6, 0xDF, 0xC0, 0x41, 0x83, 0x06, 0x0C, 0xD9, 0xB4, 0x7E, 0xFF, 0x8F,
  0x1E, 0x3C, 0x70, 0x80, 0x7F, 0xFF, 0xFF, 0xE0, 0x7F, 0xF7, 0xFF, 0xF0,
  0xC7, 0x86, 0x3C, 0x31, 0xE1, 0x8F, 0x0C, 0x78, 0x63, 0xC3, 0x1C, 0x10,
  0x80, 0x7E, 0xFF, 0xC3, 0xC3, 0xC3, 0xC3, 0xC3, 0xC3, 0xC3, 0x82, 0x7E,
  0xFF, 0xC3, 0xC3, 0xC3, 0xC3, 0xC3, 0xC3, 0xFF, 0x7E, 0x7D, 0xFF, 0x1E,
  0x3C, 0x78, 0xF1, 0xE3, 0xFF, 0xFB, 0x06, 0x0C, 0x10, 0x00, 0x7E, 0xFF,
  0xC3, 0xC3, 0xC3, 0xC3, 0xC3, 0xC3, 0xFF, 0x7F, 0x03, 0x03, 0x03, 0x02,
  0x7F, 0xF1, 0x8C, 0x63, 0x18, 0xC4, 0x00, 0x7C, 0xFE, 0xC6, 0xFE, 0x7F,
  0x03, 0x03, 0xC3, 0xFF, 0x7E, 0x10, 0xC3, 0x0C, 0xFF, 0xF3, 0x0C, 0x30,
  0xC3, 0x0C, 0x30, 0x80, 0x41, 0xC3, 0xC3, 0xC3, 0xC3, 0xC3, 0xC3, 0xC3,
  0xFF, 0x7E, 0x83, 0x8F, 0x1A, 0x26, 0xCD, 0x8A, 0x1C, 0x38, 0x20, 0x41,
  0x0E, 0x18, 0xF0, 0xC7, 0x86, 0x3C, 0x31, 0xE1, 0x8F, 0x0C, 0x78, 0x63,
  0xFF, 0xFB, 0xFF, 0x80, 0xC7, 0x8D, 0xB1, 0xE3, 0x87, 0x0F, 0x36, 0xC7,
  0x8C, 0x41, 0xC3, 0xC3, 0xC3, 0xC3, 0xC3, 0xC3, 0xC3, 0xFF, 0x7F, 0x03,
  0x03, 0x3F, 0x7E, 0xFE, 0xFE, 0x0C, 0x0C, 0x18, 0x30, 0x30, 0x60, 0x7F,
  0xFE, 0x7F, 0x7F, 0xF0, 0x78, 0x3C, 0x1E, 0x0F, 0x07, 0x83, 0xC1, 0xE0,
  0xF0, 0x78, 0x3F, 0xFB, 0xF8, 0x2F, 0xB6, 0xDB, 0x6D, 0xB6, 0x80, 0x7F,
  0x7F, 0xF0, 0x78, 0x3C, 0x18, 0x0C, 0x0E, 0x06, 0x06, 0x06, 0x06, 0x06,
  0x07, 0xFF, 0xFC, 0x7F, 0x9F, 0xC0, 0x20, 0x18, 0x04, 0x03, 0xE1, 0xFC,
  0x03, 0x00, 0xC0, 0x3C, 0x0F, 0x03, 0xFF, 0xDF, 0xE0, 0x01, 0x01, 0x81,
  0xC1, 0xE0, 0xB0, 0xD8, 0xCC, 0xC6, 0x63, 0x7F, 0xFF, 0xE0, 0x60, 0x30,
  0x18, 0x3F, 0x8F, 0xE3, 0x00, 0x80, 0x60, 0x1F, 0xE7, 0xFC, 0x03, 0x00,
  0xC0, 0x3C, 0x0F, 0x03, 0xFF, 0xDF, 0xE0, 0x7F, 0x7F, 0xF0, 0x78, 0x3C,
  0x07, 0xFB, 0xFF, 0x83, 0xC1, 0xE0, 0xF0, 0x78, 0x3F, 0xFB, 0xF8, 0x7F,
  0xBF, 0x80, 0xC0, 0x60, 0x60, 0x30, 0x18, 0x18, 0x0C, 0x06, 0x06, 0x03,
  0x01, 0x81, 0x80, 0x3F, 0x1F, 0xE6, 0x19, 0x86, 0x61, 0x9F, 0xE7, 0xFB,
  0x03, 0xC0, 0xF0, 0x3C, 0x0F, 0x03, 0xFF, 0xDF, 0xE0, 0x7F, 0x7F, 0xF0,
  0x78, 0x3C, 0x1E, 0x0F, 0x07, 0xFF, 0x7F, 0x80, 0xF0, 0x78, 0x3F, 0xFB,
  0xF8, 0x7F, 0xFF, 0x7E, 0x10, 0x7F, 0x98, 0x30, 0xC8, 0x18, 0x6C, 0x0C,
  0x34, 0x07, 0xFE, 0x01, 0xFB, 0x00, 0x03, 0x7E, 0x01, 0xFF, 0x81, 0xB0,
  0xC0, 0xD8, 0x60, 0x4C, 0x30, 0x67, 0xF8, 0x21, 0xF8, 0xF0, 0xCD, 0xB8,
  0x7F, 0xFF, 0xF0, 0xF0, 0xF0, 0x0F, 0xFE, 0x31, 0x8C, 0x63, 0x18, 0xC6,
  0x31, 0x8C, 0x63, 0x18, 0xF8, 0xF8, 0xC6, 0x31, 0x8C, 0x63, 0x18, 0xC6,
  0x31, 0x8C, 0x63, 0xF8, 0x3F, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC,
  0xF3, 0xCF, 0x33, 0x33, 0x33, 0x33, 0x33, 0x33, 0x33, 0xFC };

// Glyph, Offset to bitmap, Width, Height, xAdvance, xOffset, yOffset

const gfxglyph_t HotStuff9Glyphs[] PROGMEM = {
  {32,     0,   1,   1,   7,    0,    0 },   // 0x00 ' ' 
  {65,     1,   9,  14,  12,    2,  -13 },   // 0x01 'A' 
  {66,    17,   9,  14,  12,    2,  -13 },   // 0x02 'B' 
  {67,    33,   9,  14,  12,    2,  -13 },   // 0x03 'C' 
  {68,    49,   9,  14,  12,    2,  -13 },   // 0x04 'D' 
  {69,    65,   7,  14,  10,    2,  -13 },   // 0x05 'E' 
  {70,    78,   6,  14,  10,    2,  -13 },   // 0x06 'F' 
  {71,    89,   9,  14,  12,    2,  -13 },   // 0x07 'G' 
  {72,   105,   9,  14,  12,    2,  -13 },   // 0x08 'H' 
  {73,   121,   2,  14,   5,    2,  -13 },   // 0x09 'I' 
  {74,   125,   9,  14,  11,    1,  -13 },   // 0x0A 'J' 
  {75,   141,   9,  14,  12,    2,  -13 },   // 0x0B 'K' 
  {76,   157,   7,  14,  10,    2,  -13 },   // 0x0C 'L' 
  {77,   170,  16,  14,  20,    2,  -13 },   // 0x0D 'M' 
  {78,   198,   9,  14,  12,    2,  -13 },   // 0x0E 'N' 
  {79,   214,   9,  14,  12,    2,  -13 },   // 0x0F 'O' 
  {80,   230,   9,  14,  12,    2,  -13 },   // 0x10 'P' 
  {81,   246,   9,  14,  12,    2,  -13 },   // 0x11 'Q' 
  {82,   262,   9,  14,  12,    2,  -13 },   // 0x12 'R' 
  {83,   278,  10,  14,  12,    1,  -13 },   // 0x13 'S' 
  {84,   296,   9,  14,   9,    0,  -13 },   // 0x14 'T' 
  {85,   312,   9,  14,  12,    2,  -13 },   // 0x15 'U' 
  {86,   328,  11,  14,  10,    0,  -13 },   // 0x16 'V' 
  {87,   348,  16,  14,  20,    2,  -13 },   // 0x17 'W' 
  {88,   376,  10,  14,  11,    1,  -13 },   // 0x18 'X' 
  {89,   394,   9,  14,  12,    1,  -13 },   // 0x19 'Y' 
  {90,   410,   9,  14,  11,    1,  -13 },   // 0x1A 'Z' 
  {97,   426,   7,  10,   9,    1,   -9 },   // 0x1B 'a' 
  {98,   435,   7,  14,  10,    2,  -13 },   // 0x1C 'b' 
  {99,   448,   8,  10,  10,    1,   -9 },   // 0x1D 'c' 
  {100,   458,   8,  14,  10,    1,  -13 },   // 0x1E 'd' 
  {101,   472,   8,  10,  10,    1,   -9 },   // 0x1F 'e' 
  {102,   482,   6,  14,   7,    1,  -13 },   // 0x20 'f' 
  {103,   493,   8,  14,  10,    1,   -9 },   // 0x21 'g' 
  {104,   507,   7,  14,  10,    2,  -13 },   // 0x22 'h' 
  {105,   520,   2,  13,   5,    2,  -12 },   // 0x23 'i' 
  {106,   524,   3,  17,   5,    1,  -12 },   // 0x24 'j' 
  {107,   531,   7,  14,  10,    2,  -13 },   // 0x25 'k' 
  {108,   544,   2,  14,   5,    2,  -13 },   // 0x26 'l' 
  {109,   548,  13,  10,  15,    1,   -9 },   // 0x27 'm' 
  {110,   565,   8,  10,  10,    1,   -9 },   // 0x28 'n' 
  {111,   575,   8,  10,  10,    1,   -9 },   // 0x29 'o' 
  {112,   585,   7,  14,  10,    2,   -9 },   // 0x2A 'p' 
  {113,   598,   8,  14,  10,    1,   -9 },   // 0x2B 'q' 
  {114,   612,   5,  10,   6,    1,   -9 },   // 0x2C 'r' 
  {115,   619,   8,  10,   9,    1,   -9 },   // 0x2D 's' 
  {116,   629,   6,  14,   7,    0,  -13 },   // 0x2E 't' 
  {117,   640,   8,  10,  10,    1,   -9 },   // 0x2F 'u' 
  {118,   650,   7,  10,   9,    1,   -9 },   // 0x30 'v' 
  {119,   659,  13,  10,  15,    1,   -9 },   // 0x31 'w' 
  {120,   676,   7,  10,   9,    1,   -9 },   // 0x32 'x' 
  {121,   685,   8,  14,  10,    1,   -9 },   // 0x33 'y' 
  {122,   699,   8,  10,   9,    1,   -9 },   // 0x34 'z' 
  {48,   709,   9,  14,  12,    2,  -13 },   // 0x35 '0' 
  {49,   725,   3,  14,   6,    1,  -13 },   // 0x36 '1' 
  {50,   731,   9,  14,  12,    1,  -13 },   // 0x37 '2' 
  {51,   747,  10,  14,  12,    1,  -13 },   // 0x38 '3' 
  {52,   765,   9,  14,  10,    0,  -13 },   // 0x39 '4' 
  {53,   781,  10,  14,  12,    1,  -13 },   // 0x3A '5' 
  {54,   799,   9,  14,  12,    2,  -13 },   // 0x3B '6' 
  {55,   815,   9,  14,   9,    0,  -13 },   // 0x3C '7' 
  {56,   831,  10,  14,  12,    1,  -13 },   // 0x3D '8' 
  {57,   849,   9,  14,  12,    2,  -13 },   // 0x3E '9' 
  {45,   865,   8,   2,  11,    1,   -7 },   // 0x3F '-' 
  {37,   867,  17,  14,  19,    1,  -13 },   // 0x40 '%' 
  {46,   897,   2,   2,   5,    2,   -1 },   // 0x41 '.' 
  {44,   898,   3,   5,   5,    2,   -1 },   // 0x42 ',' 
  {33,   900,   2,  14,   5,    2,  -13 },   // 0x43 '!' 
  {58,   904,   2,   8,   5,    2,   -7 },   // 0x44 ':' 
  {91,   906,   5,  17,   8,    2,  -14 },   // 0x45 '[' 
  {93,   917,   5,  17,   8,    1,  -14 },   // 0x46 ']' 
  {40,   928,   4,  18,   7,    2,  -15 },   // 0x47 '(' 
  {41,   937,   4,  18,   7,    1,  -15 }   // 0x48 ')' 
};

const gfxfont_t HotStuff9 PROGMEM = 
{
  (uint8_t  *)HotStuff9Bitmaps, //< Glyph bitmaps, concatenated 
  (gfxglyph_t *)HotStuff9Glyphs, //< Glyph array
  73,// total glyphs in the string
  18,  // newline distance (y axis)
     0,  // minimum X - left most
    -4,  // minimum Y - bottom most (descenders can drive this negative)
    18,  // maximum X - right most
    16}; // maximum Y - top most
// Approx. 1471 bytes -  but your mileage may vary.

#endif