
#ifndef __FIXEDFONTCOURIERPRIMEBOLDTTF9
#define __FIXEDFONTCOURIERPRIMEBOLDTTF9
const uint8_t HotStuff9Bitmaps[] PROGMEM = {
  0x00, 0x7E, 0x0F, 0xC0, 0x6C, 0x0D, 0x83, 0x30, 0x7F, 0x0F, 0xE3, 0x8C,
  0xFB, 0xFF, 0x7C, 0x7F, 0x3F, 0xE3, 0x18, 0xC6, 0x3F, 0x0F, 0xE3, 0x0C,
  0xC3, 0x7F, 0xFF, 0xE0, 0x1F, 0xBF, 0xD8, 0x78, 0x3C, 0x06, 0x03, 0x00,
  0xC3, 0x7F, 0x8F, 0x80, 0xFE, 0x7F, 0x98, 0xEC, 0x36, 0x1B, 0x0D, 0x86,
  0xC7, 0xFF, 0x7F, 0x00, 0xFF, 0xFF, 0xD8, 0x6C, 0x07, 0xC3, 0xE1, 0x86,
  0xC3, 0xFF, 0xFF, 0xC0, 0xFF, 0xFF, 0xF3, 0x0C, 0xC0, 0x3E, 0x0F, 0x83,
  0x00, 0xC0, 0xFC, 0x3F, 0x00, 0x3F, 0x3F, 0xB8, 0xD8, 0x6C, 0x06, 0x7F,
  0x3F, 0xC6, 0x7F, 0x1F, 0x00, 0xF7, 0xFB, 0xD8, 0xCC, 0x67, 0xF3, 0xF9,
  0x8C, 0xC6, 0xF7, 0xFB, 0xC0, 0xFF, 0xFF, 0x18, 0x18, 0x18, 0x18, 0x18,
  0x18, 0xFF, 0xFF, 0x3F, 0x9F, 0xC1, 0x80, 0xC0, 0x66, 0x33, 0x19, 0x8C,
  0xFE, 0x3E, 0x00, 0x7B, 0xFF, 0x7C, 0xCE, 0x1B, 0x83, 0xE0, 0x7E, 0x0C,
  0xE1, 0x8C, 0x7D, 0xFF, 0x9C, 0xFC, 0x3F, 0x03, 0x00, 0xC0, 0x30, 0x0C,
  0x33, 0x0C, 0xC3, 0xFF, 0xFF, 0xF0, 0xF1, 0xFE, 0x3D, 0xEF, 0x3D, 0xE6,
  0xAC, 0xDD, 0x99, 0x33, 0x06, 0xF1, 0xFE, 0x3C, 0xE7, 0xFB, 0xDC, 0xCF,
  0x66, 0xB3, 0x79, 0x9C, 0xCE, 0xF3, 0x79, 0x80, 0x3E, 0x3F, 0xB8, 0xF8,
  0x3C, 0x1E, 0x0F, 0x07, 0xC7, 0x7F, 0x1F, 0x00, 0xFF, 0x3F, 0xE3, 0x1C,
  0xC3, 0x30, 0xCF, 0xE3, 0xF0, 0xC0, 0xFC, 0x3F, 0x00, 0x3E, 0x3F, 0xB8,
  0xF8, 0x3C, 0x1E, 0x0F, 0x8E, 0xFE, 0x3E, 0x18, 0x1F, 0xEF, 0xF0, 0xFF,
  0x3F, 0xE6, 0x19, 0x86, 0x7F, 0x1F, 0x86, 0x71, 0x8E, 0xFB, 0xFE, 0x70,
  0x77, 0xFF, 0x1E, 0x07, 0xC7, 0xC1, 0xE3, 0xFF, 0xF8, 0xFF, 0xFF, 0xF6,
  0x7B, 0x3D, 0x98, 0xC0, 0x60, 0x30, 0x7E, 0x3F, 0x00, 0xF7, 0xFB, 0xD8,
  0xCC, 0x66, 0x33, 0x19, 0x8C, 0xC6, 0x7F, 0x1F, 0x00, 0xFB, 0xFF, 0x7D,
  0xC7, 0x18, 0xC3, 0x38, 0x36, 0x06, 0xC0, 0xF0, 0x0E, 0x01, 0xC0, 0xF9,
  0xFF, 0x3D, 0x83, 0x32, 0x66, 0xEC, 0xD5, 0x9A, 0xA1, 0xDC, 0x31, 0x86,
  0x30, 0x7F, 0xCF, 0xF8, 0xEE, 0x0F, 0x80, 0xE0, 0x1E, 0x06, 0xC1, 0x8C,
  0xF3, 0xFE, 0x7C, 0xFB, 0xFE, 0xF7, 0x38, 0xEC, 0x1E, 0x03, 0x00, 0xC0,
  0x30, 0x3F, 0x0F, 0xC0, 0xFF, 0xFF, 0xF1, 0xD9, 0xC1, 0xE1, 0xE1, 0xE6,
  0xE3, 0xFF, 0xFF, 0xC0, 0x3E, 0x3F, 0x90, 0xCF, 0xEF, 0xF6, 0x1B, 0xFE,
  0xF7, 0x70, 0x1C, 0x03, 0x00, 0xC0, 0x37, 0x0F, 0xE3, 0x9C, 0xC3, 0x30,
  0xCE, 0x7F, 0xFB, 0xBC, 0x3F, 0xBF, 0xF8, 0x78, 0x0C, 0x07, 0x0D, 0xFE,
  0x7E, 0x0F, 0x07, 0x80, 0xC0, 0x63, 0xB3, 0xFB, 0x9D, 0x86, 0xC3, 0x73,
  0x9F, 0xE7, 0x70, 0x3E, 0x3F, 0xB8, 0xDF, 0xFF, 0xFF, 0x09, 0xFC, 0x7C,
  0x1F, 0x3F, 0x30, 0x30, 0xFE, 0xFE, 0x30, 0x30, 0x30, 0x30, 0xFE, 0xFE,
  0x3B, 0xBF, 0xF9, 0xD8, 0x6C, 0x37, 0x39, 0xFC, 0x76, 0x03, 0x3F, 0x9F,
  0x80, 0xE0, 0x70, 0x18, 0x0C, 0x06, 0xE3, 0xF9, 0xCC, 0xC6, 0x63, 0x31,
  0xBD, 0xFE, 0xF0, 0x18, 0x18, 0x00, 0x00, 0x78, 0x78, 0x18, 0x18, 0x18,
  0x18, 0xFF, 0xFF, 0x06, 0x0C, 0x00, 0x07, 0xEF, 0xC1, 0x83, 0x06, 0x0C,
  0x18, 0x34, 0x6F, 0xCF, 0x00, 0xE0, 0x70, 0x18, 0x0C, 0x06, 0xFB, 0x7D,
  0xBC, 0xF8, 0x7E, 0x33, 0xBC, 0xFE, 0x30, 0xF8, 0xF8, 0x18, 0x18, 0x18,
  0x18, 0x18, 0x18, 0x18, 0x18, 0xFF, 0xFF, 0xDD, 0xFF, 0xF6, 0x6D, 0x9B,
  0x66, 0xD9, 0xB6, 0x6D, 0x9B, 0xEE, 0x7F, 0x9C, 0xCC, 0x66, 0x33, 0x1B,
  0xDF, 0xEF, 0x3E, 0x3F, 0xB8, 0xF8, 0x3C, 0x1F, 0x1D, 0xFC, 0x7C, 0xEF,
  0x3F, 0xE3, 0x9C, 0xC3, 0x30, 0xCE, 0x73, 0xF8, 0xDC, 0x30, 0x3F, 0x8F,
  0xE0, 0x3B, 0xBF, 0xF9, 0xD8, 0x6C, 0x37, 0x39, 0xFC, 0x76, 0x03, 0x07,
  0xC3, 0xE0, 0x7F, 0x7F, 0x30, 0x20, 0x60, 0x60, 0xFC, 0xFC, 0x7F, 0xFF,
  0x1F, 0xC3, 0xF8, 0xFF, 0xFE, 0x30, 0x30, 0x30, 0xFF, 0xFF, 0x30, 0x30,
  0x30, 0x31, 0x3F, 0x1E, 0xE7, 0x73, 0x98, 0xCC, 0x66, 0x33, 0x39, 0xFE,
  0x77, 0xFB, 0xFE, 0xF7, 0x38, 0xCC, 0x3F, 0x07, 0x81, 0xE0, 0x30, 0xF1,
  0xFE, 0x3D, 0x93, 0x37, 0x66, 0xAC, 0x77, 0x0E, 0xE1, 0x8C, 0xF7, 0xFB,
  0xCD, 0x83, 0x81, 0xC3, 0xBB, 0xDF, 0xEF, 0xFB, 0xFE, 0xF7, 0x38, 0xCC,
  0x1F, 0x07, 0x80, 0xC0, 0x70, 0x18, 0x1E, 0x07, 0x00, 0xFF, 0xFF, 0xF3,
  0xC3, 0x83, 0x83, 0x8F, 0xFF, 0xFF, 0x3E, 0x3F, 0x98, 0xD8, 0x3C, 0x1E,
  0x0F, 0x06, 0xC6, 0x7F, 0x1F, 0x00, 0x18, 0xF8, 0x58, 0x18, 0x18, 0x18,
  0x18, 0x18, 0xFF, 0xFF, 0x7E, 0x7F, 0x63, 0x03, 0x07, 0x0E, 0x18, 0x33,
  0x7F, 0xFF, 0x7D, 0xFF, 0x18, 0x33, 0xC7, 0xC1, 0xC3, 0xFE, 0xF8, 0x0C,
  0x1C, 0x3C, 0x6C, 0x6C, 0xFF, 0xFF, 0x0C, 0x3F, 0x3F, 0xFF, 0xFF, 0x07,
  0xEF, 0xE0, 0xC1, 0xC3, 0xFC, 0xF0, 0x0E, 0x1F, 0x1C, 0x1B, 0xCF, 0xF7,
  0x0F, 0x07, 0xC7, 0x7F, 0x1F, 0x00, 0xFF, 0xFF, 0xC6, 0xC6, 0x0C, 0x0C,
  0x18, 0x18, 0x38, 0x30, 0x7D, 0xFF, 0x1E, 0x37, 0xDF, 0xF1, 0xE3, 0xFE,
  0xF8, 0x3E, 0x3F, 0xB0, 0x78, 0x3F, 0xF9, 0xEC, 0x06, 0x0E, 0x3F, 0x1E,
  0x00, 0x7F, 0xFF, 0x70, 0x9F, 0x1B, 0xE6, 0x3B, 0x80, 0xE0, 0x3F, 0x8F,
  0xFB, 0xB3, 0x67, 0xE0, 0x78, 0xFF, 0x80, 0x76, 0x6E, 0xCC, 0xFF, 0xEC,
  0x87, 0xFC, 0xFF, 0x81, 0xFF, 0xFF, 0xF1, 0x8C, 0x63, 0x18, 0xC6, 0x31,
  0x8C, 0x7F, 0xE0, 0xFF, 0xC6, 0x31, 0x8C, 0x63, 0x18, 0xC6, 0x31, 0xFF,
  0xE0, 0x08, 0x73, 0x9C, 0x63, 0x0C, 0x30, 0xC3, 0x0C, 0x18, 0x70, 0xE1,
  0xC2, 0x43, 0x87, 0x0E, 0x18, 0x30, 0xC3, 0x0C, 0x31, 0xC6, 0x39, 0xCE,
  0x10 };

// Glyph, Offset to bitmap, Width, Height, xAdvance, xOffset, yOffset

const gfxglyph_t HotStuff9Glyphs[] PROGMEM = {
  {32,     0,   1,   1,  11,    0,    0 },   // 0x00 ' ' 
  {65,     1,  11,  10,  11,    0,   -9 },   // 0x01 'A' 
  {66,    15,  10,  10,  11,    0,   -9 },   // 0x02 'B' 
  {67,    28,   9,  10,  11,    1,   -9 },   // 0x03 'C' 
  {68,    40,   9,  10,  11,    1,   -9 },   // 0x04 'D' 
  {69,    52,   9,  10,  11,    1,   -9 },   // 0x05 'E' 
  {70,    64,  10,  10,  11,    0,   -9 },   // 0x06 'F' 
  {71,    77,   9,  10,  11,    1,   -9 },   // 0x07 'G' 
  {72,    89,   9,  10,  11,    1,   -9 },   // 0x08 'H' 
  {73,   101,   8,  10,  11,    1,   -9 },   // 0x09 'I' 
  {74,   111,   9,  10,  11,    1,   -9 },   // 0x0A 'J' 
  {75,   123,  11,  10,  11,    0,   -9 },   // 0x0B 'K' 
  {76,   137,  10,  10,  11,    0,   -9 },   // 0x0C 'L' 
  {77,   150,  11,  10,  11,    0,   -9 },   // 0x0D 'M' 
  {78,   164,   9,  10,  11,    1,   -9 },   // 0x0E 'N' 
  {79,   176,   9,  10,  11,    1,   -9 },   // 0x0F 'O' 
  {80,   188,  10,  10,  11,    0,   -9 },   // 0x10 'P' 
  {81,   201,   9,  12,  11,    1,   -9 },   // 0x11 'Q' 
  {82,   215,  10,  10,  11,    1,   -9 },   // 0x12 'R' 
  {83,   228,   7,  10,  11,    2,   -9 },   // 0x13 'S' 
  {84,   237,   9,  10,  11,    1,   -9 },   // 0x14 'T' 
  {85,   249,   9,  10,  11,    1,   -9 },   // 0x15 'U' 
  {86,   261,  11,  10,  11,    0,   -9 },   // 0x16 'V' 
  {87,   275,  11,  10,  11,    0,   -9 },   // 0x17 'W' 
  {88,   289,  11,  10,  11,    0,   -9 },   // 0x18 'X' 
  {89,   303,  10,  10,  11,    0,   -9 },   // 0x19 'Y' 
  {90,   316,   9,  10,  11,    1,   -9 },   // 0x1A 'Z' 
  {97,   328,   9,   8,  11,    1,   -7 },   // 0x1B 'a' 
  {98,   337,  10,  12,  11,    0,  -11 },   // 0x1C 'b' 
  {99,   352,   9,   8,  11,    1,   -7 },   // 0x1D 'c' 
  {100,   361,   9,  12,  11,    1,  -11 },   // 0x1E 'd' 
  {101,   375,   9,   8,  11,    1,   -7 },   // 0x1F 'e' 
  {102,   384,   8,  12,  11,    2,  -11 },   // 0x20 'f' 
  {103,   396,   9,  11,  11,    1,   -7 },   // 0x21 'g' 
  {104,   409,   9,  12,  11,    1,  -11 },   // 0x22 'h' 
  {105,   423,   8,  12,  11,    1,  -11 },   // 0x23 'i' 
  {106,   435,   7,  15,  11,    1,  -11 },   // 0x24 'j' 
  {107,   449,   9,  12,  11,    1,  -11 },   // 0x25 'k' 
  {108,   463,   8,  12,  11,    1,  -11 },   // 0x26 'l' 
  {109,   475,  10,   8,  11,    0,   -7 },   // 0x27 'm' 
  {110,   485,   9,   8,  11,    1,   -7 },   // 0x28 'n' 
  {111,   494,   9,   8,  11,    1,   -7 },   // 0x29 'o' 
  {112,   503,  10,  11,  11,    0,   -7 },   // 0x2A 'p' 
  {113,   517,   9,  11,  11,    1,   -7 },   // 0x2B 'q' 
  {114,   530,   8,   8,  11,    1,   -7 },   // 0x2C 'r' 
  {115,   538,   7,   8,  11,    2,   -7 },   // 0x2D 's' 
  {116,   545,   8,  11,  11,    1,  -10 },   // 0x2E 't' 
  {117,   556,   9,   8,  11,    1,   -7 },   // 0x2F 'u' 
  {118,   565,  10,   8,  11,    0,   -7 },   // 0x30 'v' 
  {119,   575,  11,   8,  11,    0,   -7 },   // 0x31 'w' 
  {120,   586,   9,   8,  11,    1,   -7 },   // 0x32 'x' 
  {121,   595,  10,  11,  11,    0,   -7 },   // 0x33 'y' 
  {122,   609,   9,   8,  11,    1,   -7 },   // 0x34 'z' 
  {48,   618,   9,  10,  11,    1,   -9 },   // 0x35 '0' 
  {49,   630,   8,  10,  11,    2,   -9 },   // 0x36 '1' 
  {50,   640,   8,  10,  11,    1,   -9 },   // 0x37 '2' 
  {51,   650,   7,  10,  11,    2,   -9 },   // 0x38 '3' 
  {52,   659,   8,  10,  11,    1,   -9 },   // 0x39 '4' 
  {53,   669,   7,  10,  11,    2,   -9 },   // 0x3A '5' 
  {54,   678,   9,  10,  11,    1,   -9 },   // 0x3B '6' 
  {55,   690,   8,  10,  11,    2,   -9 },   // 0x3C '7' 
  {56,   700,   7,  10,  11,    2,   -9 },   // 0x3D '8' 
  {57,   709,   9,  10,  11,    1,   -9 },   // 0x3E '9' 
  {45,   721,   8,   2,  11,    1,   -5 },   // 0x3F '-' 
  {37,   723,  11,  10,  11,    0,   -9 },   // 0x40 '%' 
  {46,   737,   3,   3,  11,    4,   -2 },   // 0x41 '.' 
  {44,   739,   4,   6,  11,    3,   -2 },   // 0x42 ',' 
  {33,   742,   3,  10,  11,    4,   -9 },   // 0x43 '!' 
  {58,   746,   3,   8,  11,    4,   -7 },   // 0x44 ':' 
  {91,   749,   5,  15,  11,    3,  -11 },   // 0x45 '[' 
  {93,   759,   5,  15,  11,    3,  -11 },   // 0x46 ']' 
  {40,   769,   6,  16,  11,    2,  -11 },   // 0x47 '(' 
  {41,   781,   6,  16,  11,    2,  -11 }   // 0x48 ')' 
};

const gfxfont_t HotStuff9 PROGMEM = 
{
  (uint8_t  *)HotStuff9Bitmaps, //< Glyph bitmaps, concatenated 
  (gfxglyph_t *)HotStuff9Glyphs, //< Glyph array
  73,// total glyphs in the string
  16,  // newline distance (y axis)
     0,  // minimum X - left most
    -4,  // minimum Y - bottom most (descenders can drive this negative)
    11,  // maximum X - right most
    12}; // maximum Y - top most
// Approx. 1318 bytes -  but your mileage may vary.

#endif