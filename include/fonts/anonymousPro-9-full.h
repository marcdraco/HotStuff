
#ifndef __FIXEDFONTANONYMOUSPROBOLDTTF9
#define __FIXEDFONTANONYMOUSPROBOLDTTF9
const uint8_t HotStuff9Bitmaps[] PROGMEM = {
  0x00, 0x0C, 0x03, 0x81, 0xE0, 0x48, 0x13, 0x0C, 0xC3, 0xF0, 0xFE, 0x61,
  0x98, 0x6E, 0x0C, 0xFE, 0xFF, 0xC3, 0xC3, 0xFE, 0xFE, 0xC3, 0xC3, 0xC3,
  0xFF, 0xFC, 0x3B, 0x3F, 0xB9, 0xD8, 0x6C, 0x36, 0x03, 0x05, 0x83, 0x63,
  0x3F, 0x8F, 0x00, 0xFC, 0x7F, 0xB0, 0xD8, 0x3C, 0x1E, 0x0F, 0x07, 0x83,
  0xC3, 0x7F, 0xBF, 0x00, 0xFF, 0xFF, 0xC0, 0xC0, 0xFC, 0xFC, 0xC0, 0xC0,
  0xC0, 0xFF, 0xFF, 0xFF, 0xFF, 0xC0, 0xC0, 0xFC, 0xFC, 0xC0, 0xC0, 0xC0,
  0xC0, 0xC0, 0x3B, 0x3F, 0xB9, 0xD8, 0x6C, 0x36, 0x3F, 0x1F, 0x83, 0x63,
  0x3F, 0x8F, 0x80, 0xC3, 0xC3, 0xC3, 0xC3, 0xFF, 0xFF, 0xC3, 0xC3, 0xC3,
  0xC3, 0xC3, 0xFF, 0xF3, 0x0C, 0x30, 0xC3, 0x0C, 0x33, 0xFF, 0xC0, 0x03,
  0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0xC3, 0xE7, 0x7E, 0x3C, 0xC7, 0xCE,
  0xDC, 0xD8, 0xF0, 0xF0, 0xD8, 0xCC, 0xCC, 0xC6, 0xC7, 0xC0, 0xC0, 0xC0,
  0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xFF, 0xFF, 0xE7, 0xE7, 0xE7, 0xFF,
  0xFF, 0xDB, 0xDB, 0xDB, 0xC3, 0xC3, 0xC3, 0xE3, 0xE3, 0xF3, 0xF3, 0xDB,
  0xDB, 0xCB, 0xCF, 0xC7, 0xC7, 0xC7, 0x3E, 0x3F, 0x98, 0xD8, 0x3C, 0x1E,
  0x0F, 0x07, 0x83, 0x63, 0x3F, 0x8F, 0x80, 0xFC, 0xFE, 0xC3, 0xC3, 0xC3,
  0xFF, 0xFC, 0xC0, 0xC0, 0xC0, 0xC0, 0x3E, 0x3F, 0x98, 0xD8, 0x3C, 0x1E,
  0x0F, 0x07, 0x83, 0x41, 0x31, 0x8D, 0x01, 0x80, 0xF8, 0x3C, 0xFC, 0xFF,
  0xC3, 0xC3, 0xC3, 0xCE, 0xF8, 0xCC, 0xCC, 0xC6, 0xC7, 0x7B, 0xFF, 0xC7,
  0xC3, 0x60, 0x1C, 0x06, 0xC3, 0xE3, 0xFF, 0xDE, 0xFF, 0xFF, 0xDB, 0xDB,
  0xDB, 0x18, 0x18, 0x18, 0x18, 0x7E, 0x7E, 0xC3, 0xC3, 0xC3, 0xC3, 0xC3,
  0xC3, 0xC3, 0xC3, 0xE7, 0x7E, 0x3C, 0xE0, 0xD8, 0x66, 0x18, 0x86, 0x33,
  0x0C, 0xC1, 0x30, 0x78, 0x1E, 0x03, 0x80, 0xC0, 0xC0, 0xD8, 0x36, 0x19,
  0xB6, 0x6D, 0x9B, 0x66, 0xF8, 0xFE, 0x3B, 0x0C, 0xC3, 0x30, 0xF7, 0xF7,
  0x66, 0x3C, 0x3C, 0x18, 0x3C, 0x3C, 0x66, 0xF7, 0xF7, 0xE7, 0xE7, 0x66,
  0x66, 0x3C, 0x3C, 0x18, 0x18, 0x18, 0x7E, 0x7E, 0xFE, 0xFE, 0xC6, 0xCC,
  0xC8, 0x18, 0x33, 0x23, 0x63, 0xFF, 0xFF, 0x3E, 0x7F, 0x43, 0x3F, 0xFF,
  0xC3, 0xFF, 0x7B, 0xC0, 0xC0, 0xC0, 0xDC, 0xFE, 0xC7, 0xC3, 0xC3, 0xC7,
  0xFE, 0xDC, 0x3B, 0x7F, 0xE7, 0xC3, 0xC0, 0xE2, 0x7F, 0x3E, 0x07, 0x07,
  0x03, 0x3B, 0x7F, 0xE3, 0xC3, 0xC3, 0xE3, 0x7F, 0x3F, 0x3C, 0x3F, 0x30,
  0xDF, 0xEF, 0xFE, 0x11, 0xFC, 0x7C, 0x0E, 0x7C, 0xC7, 0xFF, 0xE6, 0x0C,
  0x18, 0x31, 0xFB, 0xF0, 0x3B, 0x7F, 0xE3, 0xC3, 0xC3, 0xE3, 0x7F, 0x3B,
  0x03, 0x47, 0xFE, 0x3C, 0xC0, 0xC0, 0xC0, 0xDE, 0xFF, 0xE3, 0xC3, 0xC3,
  0xC3, 0xC3, 0xC3, 0x30, 0xC0, 0x3C, 0xF0, 0xC3, 0x0C, 0x33, 0xFF, 0xC0,
  0x06, 0x0C, 0x00, 0xF1, 0xE0, 0xC1, 0x83, 0x06, 0x0C, 0x18, 0x34, 0x7F,
  0x9E, 0x00, 0xC0, 0xC0, 0xC0, 0xC7, 0xCC, 0xD8, 0xF0, 0xF8, 0xDC, 0xCE,
  0xC7, 0xF3, 0xC3, 0x0C, 0x30, 0xC3, 0x0C, 0x33, 0xFF, 0xC0, 0xF6, 0xFF,
  0xDB, 0xDB, 0xDB, 0xDB, 0xDB, 0xDB, 0xDE, 0xFF, 0xE3, 0xC3, 0xC3, 0xC3,
  0xC3, 0xC3, 0x3E, 0x3F, 0xB8, 0xF8, 0x3C, 0x1F, 0x1D, 0xFC, 0x7C, 0xDC,
  0xFE, 0xC7, 0xC3, 0xC3, 0xC7, 0xFE, 0xDC, 0xC0, 0xC0, 0xC0, 0x3B, 0x7F,
  0xE3, 0xC3, 0xC3, 0xE3, 0x7F, 0x3B, 0x03, 0x03, 0x03, 0xF7, 0xFF, 0xCE,
  0x06, 0x03, 0x01, 0x83, 0xF1, 0xF8, 0x7C, 0xFF, 0xC2, 0x70, 0x0F, 0xC3,
  0xFF, 0x7E, 0x30, 0x18, 0x0C, 0x1F, 0xCF, 0xE1, 0x80, 0xC0, 0x64, 0x31,
  0x9F, 0x87, 0x80, 0xC3, 0xC3, 0xC3, 0xC3, 0xC3, 0xC7, 0xFF, 0x7B, 0xC3,
  0x43, 0x66, 0x66, 0x34, 0x3C, 0x3C, 0x18, 0xD9, 0xDB, 0xDB, 0xDF, 0xFF,
  0x77, 0x66, 0x66, 0xFF, 0xFF, 0x36, 0x3C, 0x3C, 0x66, 0xFF, 0xFF, 0xC3,
  0x43, 0x66, 0x66, 0x26, 0x3C, 0x3C, 0x1C, 0x18, 0x18, 0xF0, 0xF0, 0xFE,
  0xFE, 0xC4, 0x18, 0x30, 0x63, 0xFF, 0xFF, 0x3E, 0x3F, 0x98, 0xD8, 0x7C,
  0x7E, 0x4F, 0x47, 0xC3, 0x63, 0x3F, 0x8F, 0x80, 0x18, 0x30, 0xE7, 0xCD,
  0x83, 0x06, 0x0C, 0x18, 0xFD, 0xF8, 0x3C, 0x7E, 0x63, 0xC3, 0xC2, 0x06,
  0x08, 0x30, 0x63, 0xFF, 0xFF, 0x3C, 0x7F, 0xE3, 0xC3, 0x1E, 0x1E, 0x03,
  0xC3, 0xE3, 0x7E, 0x3C, 0x0E, 0x07, 0x05, 0x86, 0xC2, 0x62, 0x33, 0xFF,
  0xFF, 0x06, 0x0F, 0xC7, 0xE0, 0xFE, 0xFE, 0xC0, 0xDC, 0xFE, 0xC7, 0x03,
  0xC3, 0xC7, 0x7E, 0x3C, 0x1E, 0x7F, 0x62, 0xDC, 0xFE, 0xE7, 0xC3, 0xC3,
  0xE7, 0x7E, 0x3C, 0xFF, 0xFF, 0xC3, 0xC6, 0x04, 0x0C, 0x08, 0x18, 0x18,
  0x18, 0x18, 0x3E, 0x3F, 0x98, 0xCC, 0x63, 0xE3, 0xFB, 0x07, 0x83, 0xE3,
  0xBF, 0x8F, 0x80, 0x3C, 0x7E, 0xE7, 0xC3, 0xC3, 0xE7, 0x7F, 0x3B, 0x86,
  0xFE, 0x78, 0xFF, 0xFF, 0x01, 0x63, 0x92, 0x96, 0x6C, 0x08, 0x18, 0x30,
  0x26, 0x69, 0xC9, 0x86, 0xF0, 0x76, 0x4C, 0x80, 0xFF, 0xFF, 0x3C, 0xF0,
  0x0F, 0xFF, 0xFF, 0xFF, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xFF, 0xFF,
  0x33, 0x33, 0x33, 0x33, 0x33, 0x33, 0xFF, 0x08, 0xCC, 0xC6, 0x63, 0x18,
  0xC6, 0x30, 0xC6, 0x18, 0x61, 0x86, 0x18, 0x63, 0x0C, 0x63, 0x18, 0xC6,
  0x63, 0x33, 0x10 };

// Glyph, Offset to bitmap, Width, Height, xAdvance, xOffset, yOffset

const gfxglyph_t HotStuff9Glyphs[] PROGMEM = {
  {32,     0,   1,   1,  10,    0,    0 },   // 0x00 ' ' 
  {65,     1,  10,  11,  10,   -1,  -10 },   // 0x01 'A' 
  {66,    15,   8,  11,  10,    0,  -10 },   // 0x02 'B' 
  {67,    26,   9,  11,  10,    0,  -10 },   // 0x03 'C' 
  {68,    39,   9,  11,  10,    0,  -10 },   // 0x04 'D' 
  {69,    52,   8,  11,  10,    0,  -10 },   // 0x05 'E' 
  {70,    63,   8,  11,  10,    0,  -10 },   // 0x06 'F' 
  {71,    74,   9,  11,  10,    0,  -10 },   // 0x07 'G' 
  {72,    87,   8,  11,  10,    0,  -10 },   // 0x08 'H' 
  {73,    98,   6,  11,  10,    1,  -10 },   // 0x09 'I' 
  {74,   107,   8,  11,  10,    0,  -10 },   // 0x0A 'J' 
  {75,   118,   8,  11,  10,    0,  -10 },   // 0x0B 'K' 
  {76,   129,   8,  11,  10,    0,  -10 },   // 0x0C 'L' 
  {77,   140,   8,  11,  10,    0,  -10 },   // 0x0D 'M' 
  {78,   151,   8,  11,  10,    0,  -10 },   // 0x0E 'N' 
  {79,   162,   9,  11,  10,    0,  -10 },   // 0x0F 'O' 
  {80,   175,   8,  11,  10,    0,  -10 },   // 0x10 'P' 
  {81,   186,   9,  14,  10,    0,  -10 },   // 0x11 'Q' 
  {82,   202,   8,  11,  10,    0,  -10 },   // 0x12 'R' 
  {83,   213,   8,  11,  10,    0,  -10 },   // 0x13 'S' 
  {84,   224,   8,  11,  10,    0,  -10 },   // 0x14 'T' 
  {85,   235,   8,  11,  10,    0,  -10 },   // 0x15 'U' 
  {86,   246,  10,  11,  10,   -1,  -10 },   // 0x16 'V' 
  {87,   260,  10,  11,  10,   -1,  -10 },   // 0x17 'W' 
  {88,   274,   8,  11,  10,    0,  -10 },   // 0x18 'X' 
  {89,   285,   8,  11,  10,    0,  -10 },   // 0x19 'Y' 
  {90,   296,   8,  11,  10,    0,  -10 },   // 0x1A 'Z' 
  {97,   307,   8,   8,  10,    0,   -7 },   // 0x1B 'a' 
  {98,   315,   8,  11,  10,    0,  -10 },   // 0x1C 'b' 
  {99,   326,   8,   8,  10,    0,   -7 },   // 0x1D 'c' 
  {100,   334,   8,  11,  10,    0,  -10 },   // 0x1E 'd' 
  {101,   345,   9,   8,  10,    0,   -7 },   // 0x1F 'e' 
  {102,   354,   7,  11,  10,    1,  -10 },   // 0x20 'f' 
  {103,   364,   8,  12,  10,    0,   -7 },   // 0x21 'g' 
  {104,   376,   8,  11,  10,    0,  -10 },   // 0x22 'h' 
  {105,   387,   6,  11,  10,    1,  -10 },   // 0x23 'i' 
  {106,   396,   7,  15,  10,    0,  -10 },   // 0x24 'j' 
  {107,   410,   8,  11,  10,    0,  -10 },   // 0x25 'k' 
  {108,   421,   6,  11,  10,    1,  -10 },   // 0x26 'l' 
  {109,   430,   8,   8,  10,    0,   -7 },   // 0x27 'm' 
  {110,   438,   8,   8,  10,    0,   -7 },   // 0x28 'n' 
  {111,   446,   9,   8,  10,    0,   -7 },   // 0x29 'o' 
  {112,   455,   8,  11,  10,    0,   -7 },   // 0x2A 'p' 
  {113,   466,   8,  11,  10,    0,   -7 },   // 0x2B 'q' 
  {114,   477,   9,   8,  10,    0,   -7 },   // 0x2C 'r' 
  {115,   486,   8,   8,  10,    0,   -7 },   // 0x2D 's' 
  {116,   494,   9,  11,  10,    0,  -10 },   // 0x2E 't' 
  {117,   507,   8,   8,  10,    0,   -7 },   // 0x2F 'u' 
  {118,   515,   8,   8,  10,    0,   -7 },   // 0x30 'v' 
  {119,   523,   8,   8,  10,    0,   -7 },   // 0x31 'w' 
  {120,   531,   8,   8,  10,    0,   -7 },   // 0x32 'x' 
  {121,   539,   8,  12,  10,    0,   -7 },   // 0x33 'y' 
  {122,   551,   8,   8,  10,    0,   -7 },   // 0x34 'z' 
  {48,   559,   9,  11,  10,    0,  -10 },   // 0x35 '0' 
  {49,   572,   7,  11,  10,    0,  -10 },   // 0x36 '1' 
  {50,   582,   8,  11,  10,    0,  -10 },   // 0x37 '2' 
  {51,   593,   8,  11,  10,    0,  -10 },   // 0x38 '3' 
  {52,   604,   9,  11,  10,   -1,  -10 },   // 0x39 '4' 
  {53,   617,   8,  11,  10,    0,  -10 },   // 0x3A '5' 
  {54,   628,   8,  11,  10,    0,  -10 },   // 0x3B '6' 
  {55,   639,   8,  11,  10,    0,  -10 },   // 0x3C '7' 
  {56,   650,   9,  11,  10,    0,  -10 },   // 0x3D '8' 
  {57,   663,   8,  11,  10,    0,  -10 },   // 0x3E '9' 
  {45,   674,   8,   2,  10,    0,   -4 },   // 0x3F '-' 
  {37,   676,   8,  12,   9,    0,  -11 },   // 0x40 '%' 
  {46,   688,   2,   2,  10,    3,   -1 },   // 0x41 '.' 
  {44,   689,   4,   5,  10,    2,   -1 },   // 0x42 ',' 
  {33,   692,   2,  11,  10,    3,  -10 },   // 0x43 '!' 
  {58,   695,   2,   8,  10,    3,   -7 },   // 0x44 ':' 
  {45,   697,   8,   2,  10,    0,   -4 },   // 0x45 '-' 
  {91,   699,   4,  16,  10,    3,  -12 },   // 0x46 '[' 
  {93,   707,   4,  16,  10,    1,  -12 },   // 0x47 ']' 
  {40,   715,   5,  16,  10,    1,  -12 },   // 0x48 '(' 
  {41,   725,   5,  16,  10,    2,  -12 }   // 0x49 ')' 
};

const gfxfont_t HotStuff9 PROGMEM = 
{
  (uint8_t  *)HotStuff9Bitmaps, //< Glyph bitmaps, concatenated 
  (gfxglyph_t *)HotStuff9Glyphs, //< Glyph array
  74,// total glyphs in the string
  16,  // newline distance (y axis)
    -1,  // minimum X - left most
    -4,  // minimum Y - bottom most (descenders can drive this negative)
     9,  // maximum X - right most
    13}; // maximum Y - top most
// Approx. 1267 bytes -  but your mileage may vary.

#endif