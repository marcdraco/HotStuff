
#ifndef __FIXEDFONTDEJAVUSERIFBOLDTTF8
#define __FIXEDFONTDEJAVUSERIFBOLDTTF8
const uint8_t HotStuff8Bitmaps[] PROGMEM = {
  0x00, 0x07, 0x00, 0x38, 0x02, 0xC0, 0x13, 0x00, 0x98, 0x08, 0xE0, 0x43,
  0x04, 0x18, 0x3F, 0xE3, 0x03, 0x10, 0x1D, 0xC0, 0xF0, 0xFF, 0x8C, 0x39,
  0x83, 0x30, 0x66, 0x1C, 0xFF, 0x18, 0x33, 0x03, 0x60, 0x6C, 0x0D, 0x83,
  0x7F, 0xC0, 0x0F, 0xC6, 0x1D, 0x81, 0xE0, 0x1C, 0x01, 0x80, 0x30, 0x06,
  0x00, 0xC0, 0x6C, 0x08, 0xC3, 0x0F, 0x80, 0xFF, 0x06, 0x0C, 0x60, 0x66,
  0x03, 0x60, 0x36, 0x03, 0x60, 0x36, 0x03, 0x60, 0x36, 0x06, 0x60, 0xCF,
  0xF0, 0xFF, 0xD8, 0x16, 0x01, 0x80, 0x61, 0x1F, 0xC6, 0x11, 0x80, 0x60,
  0x18, 0x06, 0x07, 0xFF, 0xFF, 0xD8, 0x16, 0x01, 0x80, 0x61, 0x1F, 0xC6,
  0x11, 0x80, 0x60, 0x18, 0x06, 0x03, 0xC0, 0x0F, 0xC3, 0x07, 0x60, 0x3C,
  0x01, 0xC0, 0x0C, 0x00, 0xC0, 0x0C, 0x07, 0xC0, 0x36, 0x03, 0x30, 0x30,
  0xFC, 0xF0, 0x7B, 0x01, 0x98, 0x0C, 0xC0, 0x66, 0x03, 0x3F, 0xF9, 0x80,
  0xCC, 0x06, 0x60, 0x33, 0x01, 0x98, 0x0D, 0xE0, 0xF0, 0xF6, 0x66, 0x66,
  0x66, 0x66, 0x6F, 0x0F, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06,
  0x06, 0x06, 0x06, 0x06, 0x86, 0x7C, 0xF3, 0xF3, 0x04, 0x18, 0xC0, 0xCC,
  0x06, 0x80, 0x3E, 0x01, 0xB8, 0x0C, 0xE0, 0x63, 0x83, 0x0E, 0x18, 0x39,
  0xE0, 0xF0, 0xF0, 0x18, 0x06, 0x01, 0x80, 0x60, 0x18, 0x06, 0x01, 0x80,
  0x60, 0x18, 0x16, 0x07, 0xFF, 0xF0, 0x0E, 0xE0, 0x39, 0x60, 0x72, 0xE1,
  0x64, 0xC2, 0xC9, 0xC9, 0x91, 0x93, 0x21, 0xC6, 0x43, 0x8C, 0x82, 0x19,
  0x00, 0x37, 0x00, 0xF0, 0xC0, 0x76, 0x02, 0x70, 0x27, 0x82, 0x5C, 0x24,
  0xE2, 0x47, 0x24, 0x3A, 0x41, 0xE4, 0x0E, 0x40, 0x6E, 0x02, 0x0F, 0x81,
  0x83, 0x18, 0x0D, 0x80, 0x3C, 0x01, 0xE0, 0x0F, 0x00, 0x78, 0x03, 0xC0,
  0x1B, 0x01, 0x8C, 0x18, 0x1F, 0x00, 0xFF, 0x18, 0xE6, 0x0D, 0x83, 0x60,
  0xD8, 0xE7, 0xF1, 0x80, 0x60, 0x18, 0x06, 0x03, 0xC0, 0x0F, 0x81, 0x83,
  0x18, 0x0D, 0x80, 0x3C, 0x01, 0xE0, 0x0F, 0x00, 0x78, 0x03, 0xC0, 0x1B,
  0x01, 0x8C, 0x18, 0x1F, 0x80, 0x18, 0x00, 0x78, 0x01, 0xC0, 0xFF, 0x06,
  0x18, 0x60, 0xC6, 0x0C, 0x60, 0xC6, 0x18, 0x7F, 0x06, 0x38, 0x61, 0x86,
  0x0C, 0x60, 0xCF, 0x07, 0x3F, 0x10, 0x6C, 0x0B, 0x00, 0xE0, 0x1F, 0xC1,
  0xF8, 0x07, 0x80, 0xF0, 0x3E, 0x19, 0xFC, 0xFF, 0xE3, 0x18, 0xC4, 0x30,
  0x0C, 0x03, 0x00, 0xC0, 0x30, 0x0C, 0x03, 0x00, 0xC0, 0x78, 0xF0, 0x76,
  0x02, 0x60, 0x26, 0x02, 0x60, 0x26, 0x02, 0x60, 0x26, 0x02, 0x60, 0x26,
  0x02, 0x30, 0x41, 0xF8, 0xF8, 0x3B, 0x00, 0x8C, 0x08, 0x60, 0x43, 0x86,
  0x0C, 0x20, 0x61, 0x01, 0x90, 0x0C, 0x80, 0x38, 0x01, 0xC0, 0x0E, 0x00,
  0xF0, 0x63, 0xD8, 0x38, 0x27, 0x0B, 0x10, 0xC2, 0xC4, 0x31, 0xB1, 0x0C,
  0x46, 0x81, 0x91, 0xA0, 0x64, 0x68, 0x1A, 0x1E, 0x03, 0x83, 0x00, 0xE0,
  0xC0, 0x30, 0x30, 0xF9, 0xE7, 0x0C, 0x30, 0x81, 0x90, 0x1D, 0x00, 0xE0,
  0x07, 0x00, 0xB8, 0x11, 0x81, 0x0C, 0x20, 0xEF, 0x1F, 0xF9, 0xDC, 0x23,
  0x10, 0xC4, 0x1A, 0x07, 0x80, 0xC0, 0x30, 0x0C, 0x03, 0x00, 0xC0, 0x78,
  0xFF, 0xF0, 0x1E, 0x07, 0x01, 0xC0, 0x30, 0x0C, 0x03, 0x00, 0xE0, 0x38,
  0x0E, 0x07, 0x80, 0xFF, 0xF0, 0x3C, 0x21, 0x00, 0xCF, 0xEC, 0x36, 0x1B,
  0x0D, 0x86, 0x7F, 0x80, 0xE0, 0x18, 0x06, 0x01, 0xBC, 0x71, 0x98, 0x36,
  0x0D, 0x83, 0x60, 0xD8, 0x37, 0x1B, 0xBC, 0x3E, 0x63, 0xC1, 0xC0, 0xC0,
  0xC0, 0xC1, 0x62, 0x3C, 0x03, 0x80, 0x60, 0x18, 0xF6, 0x63, 0xB0, 0x6C,
  0x1B, 0x06, 0xC1, 0xB0, 0x66, 0x38, 0xF7, 0x3E, 0x31, 0xB0, 0x78, 0x3F,
  0xFE, 0x03, 0x02, 0xC2, 0x3E, 0x00, 0x3E, 0xC5, 0x87, 0xC6, 0x0C, 0x18,
  0x30, 0x60, 0xC1, 0x87, 0xC0, 0x3D, 0xD8, 0xEC, 0x1B, 0x06, 0xC1, 0xB0,
  0x6C, 0x19, 0x8E, 0x3D, 0x90, 0x66, 0x30, 0xF8, 0xE0, 0x18, 0x06, 0x01,
  0xBC, 0x71, 0x98, 0x66, 0x19, 0x86, 0x61, 0x98, 0x66, 0x1B, 0xCF, 0x66,
  0x0E, 0x66, 0x66, 0x66, 0x6F, 0x0C, 0x30, 0x07, 0x0C, 0x30, 0xC3, 0x0C,
  0x30, 0xC3, 0x0E, 0x3F, 0x80, 0xE0, 0x0C, 0x01, 0x80, 0x31, 0xE6, 0x30,
  0xCC, 0x1B, 0x03, 0xF0, 0x67, 0x0C, 0x71, 0x86, 0x79, 0xF0, 0xE6, 0x66,
  0x66, 0x66, 0x66, 0x6F, 0xEE, 0x71, 0xCE, 0x66, 0x31, 0x98, 0xC6, 0x63,
  0x19, 0x8C, 0x66, 0x31, 0x98, 0xC6, 0xF7, 0xBC, 0xEF, 0x1C, 0x66, 0x19,
  0x86, 0x61, 0x98, 0x66, 0x19, 0x86, 0xF3, 0xC0, 0x3E, 0x31, 0xB0, 0x78,
  0x3C, 0x1E, 0x0F, 0x06, 0xC6, 0x3E, 0x00, 0xEF, 0x1C, 0x66, 0x0D, 0x83,
  0x60, 0xD8, 0x36, 0x0D, 0xC6, 0x6F, 0x18, 0x06, 0x03, 0xC0, 0x3D, 0xD8,
  0xEC, 0x1B, 0x06, 0xC1, 0xB0, 0x6C, 0x19, 0x8E, 0x3D, 0x80, 0x60, 0x18,
  0x0F, 0xEF, 0x71, 0x60, 0x60, 0x60, 0x60, 0x60, 0x60, 0xF0, 0x7F, 0xC3,
  0xC1, 0xF8, 0x7E, 0x0F, 0x83, 0xC3, 0xFE, 0x60, 0xC1, 0x87, 0xE6, 0x0C,
  0x18, 0x30, 0x60, 0xC1, 0x89, 0xE0, 0xE3, 0x98, 0x66, 0x19, 0x86, 0x61,
  0x98, 0x66, 0x19, 0x8E, 0x3D, 0xC0, 0xE1, 0xD8, 0x26, 0x10, 0xC4, 0x31,
  0x0C, 0x81, 0xA0, 0x78, 0x1C, 0x00, 0xF1, 0x9D, 0x8E, 0x26, 0x38, 0x8C,
  0xB4, 0x32, 0xD0, 0xD3, 0x43, 0xC6, 0x07, 0x18, 0x18, 0x60, 0xFB, 0xDC,
  0x43, 0xA0, 0x68, 0x0C, 0x05, 0x83, 0x70, 0x8E, 0xF3, 0xC0, 0xF9, 0xD8,
  0x23, 0x10, 0xC4, 0x39, 0x06, 0x81, 0xE0, 0x30, 0x0C, 0x01, 0x04, 0x81,
  0xE0, 0xFF, 0x87, 0x0E, 0x0C, 0x18, 0x30, 0x70, 0xE1, 0xFF, 0x1E, 0x18,
  0x64, 0x0B, 0x03, 0xC0, 0xF0, 0x3C, 0x0F, 0x03, 0xC0, 0xD0, 0x26, 0x18,
  0x78, 0x33, 0xCB, 0x0C, 0x30, 0xC3, 0x0C, 0x30, 0xC3, 0x3F, 0x7E, 0x61,
  0xA0, 0x60, 0x30, 0x18, 0x0C, 0x0C, 0x0C, 0x1C, 0x38, 0x7F, 0xFF, 0xF0,
  0x7E, 0x61, 0xE0, 0x60, 0x30, 0x38, 0x70, 0x0E, 0x03, 0x01, 0xC0, 0xF0,
  0xCF, 0xC0, 0x07, 0x02, 0xC1, 0xB0, 0x4C, 0x23, 0x08, 0xC4, 0x33, 0x0C,
  0xFF, 0xC0, 0xC0, 0x30, 0x3F, 0x7F, 0x3F, 0x90, 0x08, 0x07, 0xE2, 0x18,
  0x06, 0x03, 0x01, 0xC0, 0xF0, 0xCF, 0xC0, 0x1F, 0x31, 0x90, 0x58, 0x0D,
  0xE7, 0x1B, 0x07, 0x83, 0xC1, 0xA0, 0xD8, 0xC7, 0xC0, 0xFF, 0xFF, 0xE0,
  0x70, 0x20, 0x30, 0x10, 0x18, 0x08, 0x0C, 0x04, 0x06, 0x02, 0x00, 0x3E,
  0x60, 0xF0, 0x78, 0x3C, 0x19, 0xF3, 0x8F, 0x83, 0xC1, 0xE0, 0xD8, 0xC7,
  0xC0, 0x3E, 0x31, 0xB0, 0x58, 0x3C, 0x1E, 0x0D, 0x8E, 0x7B, 0x01, 0xA0,
  0x98, 0xCF, 0x80, 0xFF, 0xC0, 0x78, 0x63, 0x31, 0x0C, 0xCC, 0x33, 0x20,
  0xCD, 0x81, 0xE4, 0x00, 0x27, 0x81, 0xB3, 0x04, 0xCC, 0x33, 0x30, 0x8C,
  0xC6, 0x1E, 0xFF, 0x80, 0x33, 0x36, 0xC0, 0xFF, 0xA4, 0x92, 0x1F, 0xF0,
  0xFF, 0x81, 0xFF, 0xFC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCF, 0xF3, 0x33,
  0x33, 0x33, 0x33, 0x33, 0x3F, 0x12, 0x64, 0xCC, 0xCC, 0xCC, 0xC4, 0x62,
  0x10, 0x84, 0x62, 0x33, 0x33, 0x33, 0x32, 0x64, 0x80, 0x0C, 0x21, 0x86,
  0x10, 0xC3, 0x08, 0x61, 0x84, 0x30, 0xC0 };

// Glyph, Offset to bitmap, Width, Height, xAdvance, xOffset, yOffset

const gfxglyph_t HotStuff8Glyphs[] PROGMEM = {
  {32,     0,   1,   1,   6,    0,    0 },   // 0x00 ' ' 
  {65,     1,  13,  12,  12,    0,  -11 },   // 0x01 'A' 
  {66,    21,  11,  12,  13,    1,  -11 },   // 0x02 'B' 
  {67,    38,  11,  12,  13,    1,  -11 },   // 0x03 'C' 
  {68,    55,  12,  12,  14,    1,  -11 },   // 0x04 'D' 
  {69,    73,  10,  12,  12,    1,  -11 },   // 0x05 'E' 
  {70,    88,  10,  12,  11,    1,  -11 },   // 0x06 'F' 
  {71,   103,  12,  12,  14,    1,  -11 },   // 0x07 'G' 
  {72,   121,  13,  12,  15,    1,  -11 },   // 0x08 'H' 
  {73,   141,   4,  12,   6,    1,  -11 },   // 0x09 'I' 
  {74,   147,   8,  15,   7,   -2,  -11 },   // 0x0A 'J' 
  {75,   162,  13,  12,  14,    1,  -11 },   // 0x0B 'K' 
  {76,   182,  10,  12,  11,    1,  -11 },   // 0x0C 'L' 
  {77,   197,  15,  12,  17,    1,  -11 },   // 0x0D 'M' 
  {78,   220,  12,  12,  14,    1,  -11 },   // 0x0E 'N' 
  {79,   238,  13,  12,  15,    1,  -11 },   // 0x0F 'O' 
  {80,   258,  10,  12,  11,    1,  -11 },   // 0x10 'P' 
  {81,   273,  13,  15,  15,    1,  -11 },   // 0x11 'Q' 
  {82,   298,  12,  12,  13,    1,  -11 },   // 0x12 'R' 
  {83,   316,  10,  12,  12,    1,  -11 },   // 0x13 'S' 
  {84,   331,  10,  12,  12,    1,  -11 },   // 0x14 'T' 
  {85,   346,  12,  12,  14,    1,  -11 },   // 0x15 'U' 
  {86,   364,  13,  12,  12,    0,  -11 },   // 0x16 'V' 
  {87,   384,  18,  12,  18,    0,  -11 },   // 0x17 'W' 
  {88,   411,  12,  12,  12,    0,  -11 },   // 0x18 'X' 
  {89,   429,  10,  12,  10,    0,  -11 },   // 0x19 'Y' 
  {90,   444,  11,  12,  12,    1,  -11 },   // 0x1A 'Z' 
  {97,   461,   9,   9,  11,    1,   -8 },   // 0x1B 'a' 
  {98,   472,  10,  12,  11,    1,  -11 },   // 0x1C 'b' 
  {99,   487,   8,   9,  10,    1,   -8 },   // 0x1D 'c' 
  {100,   496,  10,  12,  12,    1,  -11 },   // 0x1E 'd' 
  {101,   511,   9,   9,  11,    1,   -8 },   // 0x1F 'e' 
  {102,   522,   7,  12,   7,    1,  -11 },   // 0x20 'f' 
  {103,   533,  10,  12,  11,    1,   -8 },   // 0x21 'g' 
  {104,   548,  10,  12,  12,    1,  -11 },   // 0x22 'h' 
  {105,   563,   4,  12,   6,    1,  -11 },   // 0x23 'i' 
  {106,   569,   6,  15,   6,   -2,  -11 },   // 0x24 'j' 
  {107,   581,  11,  12,  11,    1,  -11 },   // 0x25 'k' 
  {108,   598,   4,  12,   6,    1,  -11 },   // 0x26 'l' 
  {109,   604,  14,   9,  16,    1,   -8 },   // 0x27 'm' 
  {110,   620,  10,   9,  12,    1,   -8 },   // 0x28 'n' 
  {111,   632,   9,   9,  11,    1,   -8 },   // 0x29 'o' 
  {112,   643,  10,  12,  12,    1,   -8 },   // 0x2A 'p' 
  {113,   658,  10,  12,  12,    1,   -8 },   // 0x2B 'q' 
  {114,   673,   8,   9,   9,    1,   -8 },   // 0x2C 'r' 
  {115,   682,   8,   9,  10,    1,   -8 },   // 0x2D 's' 
  {116,   691,   7,  12,   8,    1,  -11 },   // 0x2E 't' 
  {117,   702,  10,   9,  12,    1,   -8 },   // 0x2F 'u' 
  {118,   714,  10,   9,   9,    0,   -8 },   // 0x30 'v' 
  {119,   726,  14,   9,  14,    0,   -8 },   // 0x31 'w' 
  {120,   742,  10,   9,  10,    0,   -8 },   // 0x32 'x' 
  {121,   754,  10,  12,   9,    0,   -8 },   // 0x33 'y' 
  {122,   769,   8,   9,  10,    1,   -8 },   // 0x34 'z' 
  {48,   778,  10,  12,  11,    1,  -11 },   // 0x35 '0' 
  {49,   793,   6,  12,  11,    2,  -11 },   // 0x36 '1' 
  {50,   802,   9,  12,  11,    1,  -11 },   // 0x37 '2' 
  {51,   816,   9,  12,  11,    1,  -11 },   // 0x38 '3' 
  {52,   830,  10,  12,  11,    1,  -11 },   // 0x39 '4' 
  {53,   845,   9,  12,  11,    1,  -11 },   // 0x3A '5' 
  {54,   859,   9,  12,  11,    1,  -11 },   // 0x3B '6' 
  {55,   873,   9,  12,  11,    1,  -11 },   // 0x3C '7' 
  {56,   887,   9,  12,  11,    1,  -11 },   // 0x3D '8' 
  {57,   901,   9,  12,  11,    1,  -11 },   // 0x3E '9' 
  {45,   915,   5,   2,   7,    1,   -4 },   // 0x3F '-' 
  {37,   917,  14,  12,  15,    0,  -11 },   // 0x40 '%' 
  {46,   938,   3,   3,   5,    1,   -2 },   // 0x41 '.' 
  {44,   940,   4,   5,   6,    0,   -2 },   // 0x42 ',' 
  {33,   943,   3,  12,   7,    2,  -11 },   // 0x43 '!' 
  {58,   948,   3,   8,   6,    1,   -7 },   // 0x44 ':' 
  {91,   951,   4,  14,   8,    2,  -11 },   // 0x45 '[' 
  {93,   958,   4,  14,   8,    1,  -11 },   // 0x46 ']' 
  {40,   965,   4,  15,   8,    2,  -11 },   // 0x47 '(' 
  {41,   973,   4,  15,   8,    1,  -11 },   // 0x48 ')' 
  {47,   981,   6,  13,   6,    0,  -11 }   // 0x49 '/' 
};

const gfxfont_t HotStuff8 PROGMEM = 
{
  (uint8_t  *)HotStuff8Bitmaps, //< Glyph bitmaps, concatenated 
  (gfxglyph_t *)HotStuff8Glyphs, //< Glyph array
  74,// total glyphs in the string
  15,  // newline distance (y axis)
    -2,  // minimum X - left most
    -3,  // minimum Y - bottom most (descenders can drive this negative)
    18,  // maximum X - right most
    12}; // maximum Y - top most
// Approx. 1523 bytes -  but your mileage may vary.

#endif