
#ifndef __FIXEDFONTBUILTTITLINGRGTTF14
#define __FIXEDFONTBUILTTITLINGRGTTF14
const uint8_t HotStuff14Bitmaps[] PROGMEM = {
  0x00, 0x3E, 0x3E, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x76,
  0x77, 0x67, 0x7F, 0x7F, 0x67, 0x63, 0x63, 0x63, 0x63, 0xE3, 0xFC, 0xFE,
  0xCE, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xFE, 0xFE, 0xCE, 0xC7, 0xC7,
  0xC7, 0xC7, 0xC7, 0xC7, 0xCE, 0xFE, 0xFC, 0x7D, 0xFF, 0xBE, 0x3C, 0x78,
  0xF1, 0xE3, 0xC1, 0x83, 0x06, 0x0C, 0x18, 0xF1, 0xE3, 0xC7, 0x8F, 0xBF,
  0xF7, 0xC0, 0xFC, 0xFE, 0xCE, 0xC7, 0xC7, 0xC7, 0xC7, 0xC7, 0xC7, 0xC7,
  0xC7, 0xC7, 0xC7, 0xC7, 0xC7, 0xC7, 0xC7, 0xC7, 0xCE, 0xFE, 0xFC, 0xFF,
  0xFC, 0x30, 0xC3, 0x0C, 0x30, 0xC3, 0xFF, 0xF0, 0xC3, 0x0C, 0x30, 0xC3,
  0x0C, 0x3F, 0xFC, 0xFF, 0xFC, 0x30, 0xC3, 0x0C, 0x30, 0xC3, 0x0F, 0xFF,
  0xC3, 0x0C, 0x30, 0xC3, 0x0C, 0x30, 0xC0, 0x7D, 0xFF, 0xBE, 0x3C, 0x78,
  0xF0, 0x60, 0xC1, 0xBF, 0x7E, 0x3C, 0x78, 0xF1, 0xE3, 0xC7, 0x8F, 0xBF,
  0xF7, 0xC0, 0xC7, 0xC7, 0xC7, 0xC7, 0xC7, 0xC7, 0xC7, 0xC7, 0xC7, 0xFF,
  0xFF, 0xC7, 0xC7, 0xC7, 0xC7, 0xC7, 0xC7, 0xC7, 0xC7, 0xC7, 0xC7, 0xFF,
  0xFF, 0xFF, 0xFF, 0xFF, 0xC0, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03,
  0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0xE3, 0xE3, 0xE3, 0xE7, 0x67, 0x7F,
  0x7E, 0x3C, 0xC7, 0xC7, 0xC6, 0xCE, 0xCE, 0xCC, 0xDC, 0xD8, 0xD8, 0xF8,
  0xD8, 0xD8, 0xDC, 0xDC, 0xCC, 0xCE, 0xCE, 0xC6, 0xC7, 0xC7, 0xC7, 0xC3,
  0x0C, 0x30, 0xC3, 0x0C, 0x30, 0xC3, 0x0C, 0x30, 0xC3, 0x0C, 0x30, 0xC3,
  0x0F, 0xFF, 0xFC, 0xF1, 0xFE, 0x3F, 0xC7, 0xF8, 0xFF, 0x1F, 0xF7, 0xFE,
  0xFF, 0xDB, 0xDB, 0x7B, 0x6F, 0x6D, 0xED, 0xBD, 0xF7, 0x9C, 0xF3, 0x9E,
  0x73, 0xCE, 0x79, 0xCF, 0x39, 0xE2, 0x3C, 0x46, 0xE7, 0xE7, 0xE7, 0xF7,
  0xF7, 0xF7, 0xF7, 0xFF, 0xDF, 0xDF, 0xDF, 0xCF, 0xCF, 0xCF, 0xCF, 0xC7,
  0xC7, 0xC7, 0xC3, 0xC3, 0xC3, 0x7D, 0xFF, 0xBE, 0x3C, 0x78, 0xF1, 0xE3,
  0xC7, 0x8F, 0x1E, 0x3C, 0x78, 0xF1, 0xE3, 0xC7, 0x8F, 0xBF, 0xF7, 0xC0,
  0xFD, 0xFF, 0x3E, 0x3C, 0x78, 0xF1, 0xE3, 0xC7, 0x8F, 0x1E, 0x7F, 0xFF,
  0xB0, 0x60, 0xC1, 0x83, 0x06, 0x0C, 0x00, 0x7D, 0xFF, 0xBE, 0x3C, 0x78,
  0xF1, 0xE3, 0xC7, 0x8F, 0x1E, 0x3C, 0x78, 0xF1, 0xE3, 0xC7, 0x8F, 0xBF,
  0xF7, 0xC3, 0x83, 0x07, 0xFC, 0xFE, 0xCE, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6,
  0xC6, 0xC6, 0xFE, 0xFC, 0xCE, 0xCE, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6,
  0xC7, 0x79, 0xFB, 0xF6, 0x7C, 0xF9, 0xF3, 0x60, 0xE1, 0xE0, 0xF0, 0xE0,
  0xE1, 0xF1, 0xE3, 0xCF, 0x9F, 0xFF, 0xE7, 0x80, 0xFF, 0xFF, 0x18, 0x18,
  0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18,
  0x18, 0x18, 0x18, 0x18, 0x18, 0xC7, 0x8F, 0x1E, 0x3C, 0x78, 0xF1, 0xE3,
  0xC7, 0x8F, 0x1E, 0x3C, 0x78, 0xF1, 0xE3, 0xC7, 0x8F, 0xBF, 0xF7, 0xC0,
  0xE3, 0xB1, 0x98, 0xCC, 0x66, 0x33, 0x19, 0xCC, 0xEE, 0x77, 0x3B, 0x8D,
  0x86, 0xC3, 0x61, 0xB0, 0xD8, 0x6C, 0x36, 0x1B, 0x0F, 0x87, 0xC1, 0xC0,
  0xE3, 0x1D, 0x8C, 0x76, 0x39, 0x98, 0xE6, 0x67, 0x99, 0x9E, 0x66, 0x79,
  0x99, 0xE6, 0x67, 0x99, 0x9A, 0x67, 0x69, 0x9D, 0x26, 0x74, 0xD8, 0xD3,
  0xE3, 0xCF, 0x8F, 0x3C, 0x3C, 0xF0, 0xF3, 0xC3, 0xCF, 0x0F, 0x3C, 0x3C,
  0xF0, 0x63, 0xB1, 0x9C, 0xCE, 0xE3, 0x71, 0xB0, 0xD8, 0x6C, 0x3E, 0x0F,
  0x07, 0x87, 0xC3, 0x61, 0xB0, 0xD8, 0x6E, 0x77, 0x31, 0x98, 0xCC, 0x7E,
  0x38, 0xE3, 0xB1, 0x98, 0xCC, 0xE7, 0x61, 0xB0, 0xD8, 0x6C, 0x3E, 0x0E,
  0x07, 0x03, 0x81, 0xC0, 0xE0, 0x70, 0x38, 0x1C, 0x0E, 0x07, 0x03, 0x81,
  0xC0, 0xFF, 0xFE, 0x06, 0x0E, 0x0E, 0x0C, 0x1C, 0x1C, 0x18, 0x38, 0x38,
  0x30, 0x70, 0x70, 0x60, 0xE0, 0xE0, 0xC0, 0xC0, 0xFE, 0xFE, 0x3E, 0x3E,
  0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x76, 0x77, 0x67, 0x7F,
  0x7F, 0x67, 0x63, 0x63, 0x63, 0x63, 0xE3, 0xFC, 0xFE, 0xCE, 0xC6, 0xC6,
  0xC6, 0xC6, 0xC6, 0xC6, 0xFE, 0xFE, 0xCE, 0xC7, 0xC7, 0xC7, 0xC7, 0xC7,
  0xC7, 0xCE, 0xFE, 0xFC, 0x7D, 0xFF, 0xBE, 0x3C, 0x78, 0xF1, 0xE3, 0xC1,
  0x83, 0x06, 0x0C, 0x18, 0xF1, 0xE3, 0xC7, 0x8F, 0xBF, 0xF7, 0xC0, 0xFC,
  0xFE, 0xCE, 0xC7, 0xC7, 0xC7, 0xC7, 0xC7, 0xC7, 0xC7, 0xC7, 0xC7, 0xC7,
  0xC7, 0xC7, 0xC7, 0xC7, 0xC7, 0xCE, 0xFE, 0xFC, 0xFF, 0xFC, 0x30, 0xC3,
  0x0C, 0x30, 0xC3, 0xFF, 0xF0, 0xC3, 0x0C, 0x30, 0xC3, 0x0C, 0x3F, 0xFC,
  0xFF, 0xFC, 0x30, 0xC3, 0x0C, 0x30, 0xC3, 0x0F, 0xFF, 0xC3, 0x0C, 0x30,
  0xC3, 0x0C, 0x30, 0xC0, 0x7D, 0xFF, 0xBE, 0x3C, 0x78, 0xF0, 0x60, 0xC1,
  0xBF, 0x7E, 0x3C, 0x78, 0xF1, 0xE3, 0xC7, 0x8F, 0xBF, 0xF7, 0xC0, 0xC7,
  0xC7, 0xC7, 0xC7, 0xC7, 0xC7, 0xC7, 0xC7, 0xC7, 0xFF, 0xFF, 0xC7, 0xC7,
  0xC7, 0xC7, 0xC7, 0xC7, 0xC7, 0xC7, 0xC7, 0xC7, 0xFF, 0xFF, 0xFF, 0xFF,
  0xFF, 0xC0, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03,
  0x03, 0x03, 0x03, 0xE3, 0xE3, 0xE3, 0xE7, 0x67, 0x7F, 0x7E, 0x3C, 0xC7,
  0xC7, 0xC6, 0xCE, 0xCE, 0xCC, 0xDC, 0xD8, 0xD8, 0xF8, 0xD8, 0xD8, 0xDC,
  0xDC, 0xCC, 0xCE, 0xCE, 0xC6, 0xC7, 0xC7, 0xC7, 0xC3, 0x0C, 0x30, 0xC3,
  0x0C, 0x30, 0xC3, 0x0C, 0x30, 0xC3, 0x0C, 0x30, 0xC3, 0x0F, 0xFF, 0xFC,
  0xF1, 0xFE, 0x3F, 0xC7, 0xF8, 0xFF, 0x1F, 0xE7, 0xFE, 0xFF, 0xDB, 0xDB,
  0x7B, 0x6F, 0x6D, 0xED, 0xBD, 0xF7, 0x9C, 0xF3, 0x9E, 0x73, 0xCE, 0x79,
  0xCF, 0x39, 0xE2, 0x3C, 0x46, 0xE7, 0xE7, 0xE7, 0xF7, 0xF7, 0xF7, 0xF7,
  0xFF, 0xDF, 0xDF, 0xDF, 0xCF, 0xCF, 0xCF, 0xCF, 0xC7, 0xC7, 0xC7, 0xC3,
  0xC3, 0xC3, 0x7D, 0xFF, 0xBE, 0x3C, 0x78, 0xF1, 0xE3, 0xC7, 0x8F, 0x1E,
  0x3C, 0x78, 0xF1, 0xE3, 0xC7, 0x8F, 0xBF, 0xF7, 0xC0, 0xFD, 0xFF, 0x3E,
  0x3C, 0x78, 0xF1, 0xE3, 0xC7, 0x8F, 0x1E, 0x7F, 0xFF, 0xB0, 0x60, 0xC1,
  0x83, 0x06, 0x0C, 0x00, 0x7D, 0xFF, 0xBE, 0x3C, 0x78, 0xF1, 0xE3, 0xC7,
  0x8F, 0x1E, 0x3C, 0x78, 0xF1, 0xE3, 0xC7, 0x8F, 0xBF, 0xF7, 0xC3, 0x83,
  0x07, 0xFC, 0xFE, 0xCE, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xFE,
  0xFC, 0xCE, 0xCE, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC7, 0x79, 0xFB,
  0xF6, 0x7C, 0xF9, 0xF3, 0x60, 0xE1, 0xE0, 0xF0, 0xE0, 0xE1, 0xF1, 0xE3,
  0xCF, 0x9F, 0xFF, 0xE7, 0x80, 0xFF, 0xFF, 0x18, 0x18, 0x18, 0x18, 0x18,
  0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18,
  0x18, 0x18, 0xC7, 0x8F, 0x1E, 0x3C, 0x78, 0xF1, 0xE3, 0xC7, 0x8F, 0x1E,
  0x3C, 0x78, 0xF1, 0xE3, 0xC7, 0x8F, 0xBF, 0xF7, 0xC0, 0xE3, 0xB1, 0x98,
  0xCC, 0x66, 0x33, 0x19, 0xCC, 0xEE, 0x77, 0x3B, 0x8D, 0x86, 0xC3, 0x61,
  0xB0, 0xD8, 0x6C, 0x36, 0x1B, 0x0F, 0x87, 0xC1, 0xC0, 0xE3, 0x1D, 0x8C,
  0x76, 0x39, 0x98, 0xE6, 0x67, 0x99, 0x9E, 0x66, 0x79, 0x99, 0xE6, 0x67,
  0x99, 0x9A, 0x67, 0x69, 0x9D, 0x26, 0x74, 0xD8, 0xD3, 0xE3, 0xCF, 0x8F,
  0x3C, 0x3C, 0xF0, 0xF3, 0xC3, 0xCF, 0x0F, 0x3C, 0x3C, 0xF0, 0x63, 0xB1,
  0x9C, 0xCE, 0xE3, 0x71, 0xB0, 0xD8, 0x6C, 0x3E, 0x0F, 0x07, 0x87, 0xC3,
  0x61, 0xB0, 0xD8, 0x6E, 0x77, 0x31, 0x98, 0xCC, 0x7E, 0x38, 0xE3, 0xB1,
  0x98, 0xCC, 0xE7, 0x61, 0xB0, 0xD8, 0x6C, 0x3E, 0x0E, 0x07, 0x03, 0x81,
  0xC0, 0xE0, 0x70, 0x38, 0x1C, 0x0E, 0x07, 0x03, 0x81, 0xC0, 0xFF, 0xFE,
  0x06, 0x0E, 0x0E, 0x0C, 0x1C, 0x1C, 0x18, 0x38, 0x38, 0x30, 0x70, 0x70,
  0x60, 0xE0, 0xE0, 0xC0, 0xC0, 0xFE, 0xFE, 0x7D, 0xFF, 0xBE, 0x3C, 0x78,
  0xF1, 0xE3, 0xC7, 0x8F, 0x1E, 0x3C, 0x78, 0xF1, 0xE3, 0xC7, 0x8F, 0xBF,
  0xF7, 0xC0, 0x18, 0x30, 0x61, 0xCF, 0x9F, 0x0E, 0x1C, 0x38, 0x70, 0xE1,
  0xC3, 0x87, 0x0E, 0x1C, 0x38, 0x73, 0xFF, 0xFF, 0xE0, 0x7D, 0xFF, 0xBE,
  0x3C, 0x78, 0xF1, 0xE3, 0x06, 0x0C, 0x18, 0x70, 0xC3, 0x8E, 0x1C, 0x71,
  0xC3, 0x87, 0xFF, 0xE0, 0x7D, 0xFF, 0xBE, 0x3C, 0x78, 0xF1, 0x83, 0x06,
  0x7C, 0xF0, 0x70, 0x60, 0xF1, 0xE3, 0xC7, 0x8F, 0xBF, 0xF7, 0xC0, 0x06,
  0x07, 0x03, 0x81, 0xC0, 0xE0, 0xF0, 0x78, 0x3C, 0x3E, 0x1B, 0x0D, 0x8E,
  0xC6, 0x63, 0x33, 0x99, 0xFF, 0xFF, 0x83, 0x01, 0x80, 0xC0, 0x60, 0xFF,
  0xFF, 0x87, 0x0E, 0x18, 0x37, 0x7F, 0xEE, 0x8C, 0x18, 0x30, 0x78, 0xF1,
  0xE3, 0xC7, 0x8F, 0xBF, 0xF7, 0xC0, 0x7D, 0xFF, 0xBE, 0x3C, 0x78, 0xF0,
  0x60, 0xFD, 0xFF, 0x1E, 0x3C, 0x78, 0xF1, 0xE3, 0xC7, 0x8F, 0xBF, 0xF7,
  0xC0, 0xFF, 0xFC, 0x18, 0x30, 0xE1, 0xC3, 0x06, 0x1C, 0x38, 0x70, 0xC1,
  0x87, 0x0E, 0x18, 0x30, 0xE1, 0xC3, 0x86, 0x00, 0x7D, 0xFF, 0xBE, 0x3C,
  0x78, 0xF1, 0xE3, 0xC7, 0xFF, 0xF7, 0x7C, 0x78, 0xF1, 0xE3, 0xC7, 0x8F,
  0xBF, 0xF7, 0xC0, 0x7D, 0xFF, 0xBE, 0x3C, 0x78, 0xF1, 0xE3, 0xC7, 0x8F,
  0x1F, 0xFF, 0xE1, 0xC3, 0x06, 0x1C, 0x38, 0x61, 0xC7, 0x00, 0xFF, 0xF0,
  0x78, 0x67, 0x84, 0x58, 0xC5, 0x88, 0x59, 0x84, 0x98, 0x5B, 0x05, 0xB0,
  0x5A, 0x07, 0xE6, 0x7E, 0xF0, 0xCB, 0x0C, 0xB0, 0x8B, 0x18, 0xB1, 0x8B,
  0x30, 0xB3, 0x0B, 0x20, 0xB6, 0x0F, 0x40, 0xF0, 0xFC, 0xFD, 0xF8, 0xFF,
  0xFD, 0xB6, 0xDB, 0x6D, 0xB0, 0x1B, 0x6C, 0xFF, 0x80, 0x00, 0x00, 0x7F,
  0xC0, 0xFF, 0xF0, 0xFF, 0xF1, 0x8C, 0x63, 0x18, 0xC6, 0x31, 0x8C, 0x63,
  0x18, 0xC6, 0x31, 0x8C, 0x63, 0x18, 0xC6, 0x31, 0x8C, 0x63, 0xFF, 0xFF,
  0xC6, 0x31, 0x8C, 0x63, 0x18, 0xC6, 0x31, 0x8C, 0x63, 0x18, 0xC6, 0x31,
  0x8C, 0x63, 0x18, 0xC6, 0x31, 0x8F, 0xFF, 0x19, 0x8C, 0xC6, 0x31, 0x98,
  0xC6, 0x31, 0x8C, 0x63, 0x18, 0xC6, 0x31, 0x8C, 0x63, 0x18, 0xC2, 0x18,
  0xC6, 0x18, 0xC3, 0xC3, 0x18, 0xE3, 0x18, 0xC2, 0x18, 0xC6, 0x31, 0x8C,
  0x63, 0x18, 0xC6, 0x31, 0x8C, 0x63, 0x19, 0x8C, 0x63, 0x31, 0x98 };

// Glyph, Offset to bitmap, Width, Height, xAdvance, xOffset, yOffset

const gfxglyph_t HotStuff14Glyphs[] PROGMEM = {
  {32,     0,   1,   1,   4,    0,    0 },   // 0x00 ' ' 
  {65,     1,   8,  21,   9,    0,  -20 },   // 0x01 'A' 
  {66,    22,   8,  21,   9,    1,  -20 },   // 0x02 'B' 
  {67,    43,   7,  21,   9,    1,  -20 },   // 0x03 'C' 
  {68,    62,   8,  21,   9,    1,  -20 },   // 0x04 'D' 
  {69,    83,   6,  21,   8,    1,  -20 },   // 0x05 'E' 
  {70,    99,   6,  21,   8,    1,  -20 },   // 0x06 'F' 
  {71,   115,   7,  21,   9,    1,  -20 },   // 0x07 'G' 
  {72,   134,   8,  21,  10,    1,  -20 },   // 0x08 'H' 
  {73,   155,   2,  21,   4,    1,  -20 },   // 0x09 'I' 
  {74,   161,   8,  21,   9,    0,  -20 },   // 0x0A 'J' 
  {75,   182,   8,  21,  10,    1,  -20 },   // 0x0B 'K' 
  {76,   203,   6,  21,   7,    1,  -20 },   // 0x0C 'L' 
  {77,   219,  11,  21,  13,    1,  -20 },   // 0x0D 'M' 
  {78,   248,   8,  21,   9,    1,  -20 },   // 0x0E 'N' 
  {79,   269,   7,  21,   9,    1,  -20 },   // 0x0F 'O' 
  {80,   288,   7,  21,   9,    1,  -20 },   // 0x10 'P' 
  {81,   307,   7,  24,   9,    1,  -20 },   // 0x11 'Q' 
  {82,   328,   8,  21,   9,    1,  -20 },   // 0x12 'R' 
  {83,   349,   7,  21,   8,    1,  -20 },   // 0x13 'S' 
  {84,   368,   8,  21,   8,    0,  -20 },   // 0x14 'T' 
  {85,   389,   7,  21,   9,    1,  -20 },   // 0x15 'U' 
  {86,   408,   9,  21,   9,    0,  -20 },   // 0x16 'V' 
  {87,   432,  14,  21,  14,    0,  -20 },   // 0x17 'W' 
  {88,   469,   9,  21,   9,    0,  -20 },   // 0x18 'X' 
  {89,   493,   9,  21,   9,    0,  -20 },   // 0x19 'Y' 
  {90,   517,   8,  21,   9,    1,  -20 },   // 0x1A 'Z' 
  {97,   538,   8,  21,   9,    0,  -20 },   // 0x1B 'a' 
  {98,   559,   8,  21,   9,    1,  -20 },   // 0x1C 'b' 
  {99,   580,   7,  21,   9,    1,  -20 },   // 0x1D 'c' 
  {100,   599,   8,  21,   9,    1,  -20 },   // 0x1E 'd' 
  {101,   620,   6,  21,   8,    1,  -20 },   // 0x1F 'e' 
  {102,   636,   6,  21,   8,    1,  -20 },   // 0x20 'f' 
  {103,   652,   7,  21,   9,    1,  -20 },   // 0x21 'g' 
  {104,   671,   8,  21,  10,    1,  -20 },   // 0x22 'h' 
  {105,   692,   2,  21,   4,    1,  -20 },   // 0x23 'i' 
  {106,   698,   8,  21,   9,    0,  -20 },   // 0x24 'j' 
  {107,   719,   8,  21,  10,    1,  -20 },   // 0x25 'k' 
  {108,   740,   6,  21,   7,    1,  -20 },   // 0x26 'l' 
  {109,   756,  11,  21,  13,    1,  -20 },   // 0x27 'm' 
  {110,   785,   8,  21,   9,    1,  -20 },   // 0x28 'n' 
  {111,   806,   7,  21,   9,    1,  -20 },   // 0x29 'o' 
  {112,   825,   7,  21,   9,    1,  -20 },   // 0x2A 'p' 
  {113,   844,   7,  24,   9,    1,  -20 },   // 0x2B 'q' 
  {114,   865,   8,  21,   9,    1,  -20 },   // 0x2C 'r' 
  {115,   886,   7,  21,   8,    1,  -20 },   // 0x2D 's' 
  {116,   905,   8,  21,   8,    0,  -20 },   // 0x2E 't' 
  {117,   926,   7,  21,   9,    1,  -20 },   // 0x2F 'u' 
  {118,   945,   9,  21,   9,    0,  -20 },   // 0x30 'v' 
  {119,   969,  14,  21,  14,    0,  -20 },   // 0x31 'w' 
  {120,  1006,   9,  21,   9,    0,  -20 },   // 0x32 'x' 
  {121,  1030,   9,  21,   9,    0,  -20 },   // 0x33 'y' 
  {122,  1054,   8,  21,   9,    1,  -20 },   // 0x34 'z' 
  {48,  1075,   7,  21,   9,    1,  -20 },   // 0x35 '0' 
  {49,  1094,   7,  21,   9,    1,  -20 },   // 0x36 '1' 
  {50,  1113,   7,  21,   9,    1,  -20 },   // 0x37 '2' 
  {51,  1132,   7,  21,   9,    1,  -20 },   // 0x38 '3' 
  {52,  1151,   9,  21,   9,    0,  -20 },   // 0x39 '4' 
  {53,  1175,   7,  21,   9,    1,  -20 },   // 0x3A '5' 
  {54,  1194,   7,  21,   9,    1,  -20 },   // 0x3B '6' 
  {55,  1213,   7,  21,   9,    1,  -20 },   // 0x3C '7' 
  {56,  1232,   7,  21,   9,    1,  -20 },   // 0x3D '8' 
  {57,  1251,   7,  21,   9,    1,  -20 },   // 0x3E '9' 
  {45,  1270,   6,   2,   7,    1,  -10 },   // 0x3F '-' 
  {37,  1272,  12,  21,  12,    0,  -20 },   // 0x40 '%' 
  {46,  1304,   2,   3,   4,    1,   -2 },   // 0x41 '.' 
  {44,  1305,   2,   7,   4,    1,   -2 },   // 0x42 ',' 
  {33,  1307,   3,  21,   4,    1,  -20 },   // 0x43 '!' 
  {58,  1315,   3,  14,   5,    1,  -13 },   // 0x44 ':' 
  {45,  1321,   6,   2,   7,    1,  -10 },   // 0x45 '-' 
  {91,  1323,   5,  32,   9,    3,  -25 },   // 0x46 '[' 
  {93,  1343,   5,  32,   9,    1,  -25 },   // 0x47 ']' 
  {40,  1363,   5,  32,   9,    3,  -25 },   // 0x48 '(' 
  {41,  1383,   5,  32,   9,    1,  -25 }   // 0x49 ')' 
};

const gfxfont_t HotStuff14 PROGMEM = 
{
  (uint8_t  *)HotStuff14Bitmaps, //< Glyph bitmaps, concatenated 
  (gfxglyph_t *)HotStuff14Glyphs, //< Glyph array
  74,// total glyphs in the string
  32,  // newline distance (y axis)
     0,  // minimum X - left most
    -6,  // minimum Y - bottom most (descenders can drive this negative)
    14,  // maximum X - right most
    26}; // maximum Y - top most
// Approx. 1935 bytes -  but your mileage may vary.

#endif