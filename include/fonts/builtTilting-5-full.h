
#ifndef __FIXEDFONTBUILTTITLINGRGTTF5
#define __FIXEDFONTBUILTTITLINGRGTTF5
const uint8_t HotStuff5Bitmaps[] PROGMEM = {
  0x00, 0x4D, 0xDB, 0xED, 0xF6, 0xFB, 0x6F, 0x76, 0xC9, 0x6B, 0xF6, 0xDB,
  0x6F, 0xF2, 0x79, 0x27, 0xF2, 0x4F, 0x24, 0x76, 0x7B, 0x6B, 0xB6, 0xFB,
  0x6D, 0xFF, 0x24, 0x93, 0x6F, 0xB7, 0x6D, 0x6D, 0x92, 0x49, 0x27, 0xDE,
  0xF7, 0xBA, 0xD6, 0xB5, 0xBF, 0xFB, 0x6D, 0x76, 0xDB, 0x6B, 0xF6, 0xDF,
  0x24, 0x76, 0xDB, 0x6B, 0x20, 0xF6, 0xDF, 0x6D, 0xF6, 0xE3, 0x6F, 0xE9,
  0x24, 0x92, 0xB6, 0xDB, 0x6F, 0xB6, 0xD6, 0xD2, 0xAD, 0x6B, 0x5B, 0xAD,
  0x6A, 0xAD, 0xA6, 0xED, 0xB5, 0xA4, 0x92, 0xE4, 0xA4, 0xA7, 0x4D, 0xDB,
  0xED, 0xF6, 0xFB, 0x6F, 0x76, 0xC9, 0x6B, 0xF6, 0xDB, 0x6F, 0xF2, 0x79,
  0x27, 0xF2, 0x4F, 0x24, 0x76, 0x7B, 0x6B, 0xB6, 0xFB, 0x6D, 0xFF, 0x24,
  0x93, 0x6F, 0xB7, 0x6D, 0x6D, 0x92, 0x49, 0x27, 0xDE, 0xF7, 0xBA, 0xD6,
  0xB5, 0xBF, 0xFB, 0x6D, 0x76, 0xDB, 0x6B, 0xF6, 0xDF, 0x24, 0x76, 0xDB,
  0x6B, 0x20, 0xF6, 0xDF, 0x6D, 0xF6, 0xE3, 0x6F, 0xE9, 0x24, 0x92, 0xB6,
  0xDB, 0x6F, 0xB6, 0xD6, 0xD2, 0xAD, 0x6B, 0x5B, 0xAD, 0x6A, 0xAD, 0xA6,
  0xED, 0xB5, 0xA4, 0x92, 0xE4, 0xA4, 0xA7, 0xF6, 0xDB, 0x6F, 0x59, 0x24,
  0x97, 0xF6, 0x92, 0x97, 0xF4, 0xB3, 0x6F, 0x2D, 0xBB, 0x79, 0x73, 0x93,
  0x6B, 0xF6, 0x7B, 0x6B, 0xE4, 0x94, 0x92, 0xF6, 0xBB, 0x6F, 0xF6, 0xDE,
  0x52, 0xC0, 0xDD, 0xDF, 0x33, 0x77, 0x80, 0xC0, 0xFF, 0x88, 0xEA, 0xAA,
  0xAB, 0xD5, 0x55, 0x57, 0x6A, 0xAA, 0xA9, 0x95, 0x55, 0x56 };

// Glyph, Offset to bitmap, Width, Height, xAdvance, xOffset, yOffset

const gfxglyph_t HotStuff5Glyphs[] PROGMEM = {
  {32,     0,   1,   1,   1,    0,    0 },   // 0x00 ' ' 
  {65,     1,   3,   8,   3,    0,   -7 },   // 0x01 'A' 
  {66,     4,   3,   8,   3,    0,   -7 },   // 0x02 'B' 
  {67,     7,   3,   8,   3,    0,   -7 },   // 0x03 'C' 
  {68,    10,   3,   8,   3,    0,   -7 },   // 0x04 'D' 
  {69,    13,   3,   8,   3,    0,   -7 },   // 0x05 'E' 
  {70,    16,   3,   8,   3,    0,   -7 },   // 0x06 'F' 
  {71,    19,   3,   8,   3,    0,   -7 },   // 0x07 'G' 
  {72,    22,   3,   8,   4,    0,   -7 },   // 0x08 'H' 
  {73,    25,   1,   8,   2,    0,   -7 },   // 0x09 'I' 
  {74,    26,   3,   8,   3,    0,   -7 },   // 0x0A 'J' 
  {75,    29,   3,   8,   4,    0,   -7 },   // 0x0B 'K' 
  {76,    32,   3,   8,   3,    0,   -7 },   // 0x0C 'L' 
  {77,    35,   5,   8,   5,    0,   -7 },   // 0x0D 'M' 
  {78,    40,   3,   8,   4,    0,   -7 },   // 0x0E 'N' 
  {79,    43,   3,   8,   3,    0,   -7 },   // 0x0F 'O' 
  {80,    46,   3,   8,   3,    0,   -7 },   // 0x10 'P' 
  {81,    49,   3,   9,   3,    0,   -7 },   // 0x11 'Q' 
  {82,    53,   3,   8,   3,    0,   -7 },   // 0x12 'R' 
  {83,    56,   3,   8,   3,    0,   -7 },   // 0x13 'S' 
  {84,    59,   3,   8,   3,    0,   -7 },   // 0x14 'T' 
  {85,    62,   3,   8,   3,    0,   -7 },   // 0x15 'U' 
  {86,    65,   3,   8,   3,    0,   -7 },   // 0x16 'V' 
  {87,    68,   5,   8,   5,    0,   -7 },   // 0x17 'W' 
  {88,    73,   3,   8,   3,    0,   -7 },   // 0x18 'X' 
  {89,    76,   3,   8,   3,    0,   -7 },   // 0x19 'Y' 
  {90,    79,   3,   8,   3,    0,   -7 },   // 0x1A 'Z' 
  {97,    82,   3,   8,   3,    0,   -7 },   // 0x1B 'a' 
  {98,    85,   3,   8,   3,    0,   -7 },   // 0x1C 'b' 
  {99,    88,   3,   8,   3,    0,   -7 },   // 0x1D 'c' 
  {100,    91,   3,   8,   3,    0,   -7 },   // 0x1E 'd' 
  {101,    94,   3,   8,   3,    0,   -7 },   // 0x1F 'e' 
  {102,    97,   3,   8,   3,    0,   -7 },   // 0x20 'f' 
  {103,   100,   3,   8,   3,    0,   -7 },   // 0x21 'g' 
  {104,   103,   3,   8,   4,    0,   -7 },   // 0x22 'h' 
  {105,   106,   1,   8,   2,    0,   -7 },   // 0x23 'i' 
  {106,   107,   3,   8,   3,    0,   -7 },   // 0x24 'j' 
  {107,   110,   3,   8,   4,    0,   -7 },   // 0x25 'k' 
  {108,   113,   3,   8,   3,    0,   -7 },   // 0x26 'l' 
  {109,   116,   5,   8,   5,    0,   -7 },   // 0x27 'm' 
  {110,   121,   3,   8,   4,    0,   -7 },   // 0x28 'n' 
  {111,   124,   3,   8,   3,    0,   -7 },   // 0x29 'o' 
  {112,   127,   3,   8,   3,    0,   -7 },   // 0x2A 'p' 
  {113,   130,   3,   9,   3,    0,   -7 },   // 0x2B 'q' 
  {114,   134,   3,   8,   3,    0,   -7 },   // 0x2C 'r' 
  {115,   137,   3,   8,   3,    0,   -7 },   // 0x2D 's' 
  {116,   140,   3,   8,   3,    0,   -7 },   // 0x2E 't' 
  {117,   143,   3,   8,   3,    0,   -7 },   // 0x2F 'u' 
  {118,   146,   3,   8,   3,    0,   -7 },   // 0x30 'v' 
  {119,   149,   5,   8,   5,    0,   -7 },   // 0x31 'w' 
  {120,   154,   3,   8,   3,    0,   -7 },   // 0x32 'x' 
  {121,   157,   3,   8,   3,    0,   -7 },   // 0x33 'y' 
  {122,   160,   3,   8,   3,    0,   -7 },   // 0x34 'z' 
  {48,   163,   3,   8,   3,    0,   -7 },   // 0x35 '0' 
  {49,   166,   3,   8,   3,    0,   -7 },   // 0x36 '1' 
  {50,   169,   3,   8,   3,    0,   -7 },   // 0x37 '2' 
  {51,   172,   3,   8,   3,    0,   -7 },   // 0x38 '3' 
  {52,   175,   3,   8,   3,    0,   -7 },   // 0x39 '4' 
  {53,   178,   3,   8,   3,    0,   -7 },   // 0x3A '5' 
  {54,   181,   3,   8,   3,    0,   -7 },   // 0x3B '6' 
  {55,   184,   3,   8,   3,    0,   -7 },   // 0x3C '7' 
  {56,   187,   3,   8,   3,    0,   -7 },   // 0x3D '8' 
  {57,   190,   3,   8,   3,    0,   -7 },   // 0x3E '9' 
  {45,   193,   2,   1,   3,    0,   -3 },   // 0x3F '-' 
  {37,   194,   4,   8,   5,    0,   -7 },   // 0x40 '%' 
  {46,   198,   1,   1,   2,    0,    0 },   // 0x41 '.' 
  {44,   199,   1,   2,   2,    0,    0 },   // 0x42 ',' 
  {33,   200,   1,   8,   2,    0,   -7 },   // 0x43 '!' 
  {58,   201,   1,   5,   2,    0,   -4 },   // 0x44 ':' 
  {91,   202,   2,  12,   3,    1,   -9 },   // 0x45 '[' 
  {93,   205,   2,  12,   3,    0,   -9 },   // 0x46 ']' 
  {40,   208,   2,  12,   3,    1,   -9 },   // 0x47 '(' 
  {41,   211,   2,  12,   3,    0,   -9 }   // 0x48 ')' 
};

const gfxfont_t HotStuff5 PROGMEM = 
{
  (uint8_t  *)HotStuff5Bitmaps, //< Glyph bitmaps, concatenated 
  (gfxglyph_t *)HotStuff5Glyphs, //< Glyph array
  73,// total glyphs in the string
  12,  // newline distance (y axis)
     0,  // minimum X - left most
    -2,  // minimum Y - bottom most (descenders can drive this negative)
     5,  // maximum X - right most
    10}; // maximum Y - top most
// Approx. 739 bytes -  but your mileage may vary.

#endif