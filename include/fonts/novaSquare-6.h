
#ifndef __FIXEDFONTNOVASQUARETTF6
#define __FIXEDFONTNOVASQUARETTF6
const uint8_t HotStuff6Bitmaps[] PROGMEM = {
  0x7A, 0x18, 0x61, 0x86, 0x18, 0x61, 0x78, 0x75, 0x55, 0x40, 0x7A, 0x18,
  0x41, 0x08, 0x42, 0x10, 0xFC, 0x78, 0x61, 0x0C, 0x3C, 0x18, 0x61, 0xFC,
  0x08, 0x61, 0x8A, 0x4B, 0x2F, 0xC2, 0x08, 0x79, 0x04, 0x10, 0x7C, 0x18,
  0x61, 0xFC, 0x7A, 0x18, 0x3E, 0x86, 0x18, 0x61, 0x78, 0x7C, 0x20, 0x86,
  0x10, 0x43, 0x08, 0x20, 0x79, 0x24, 0x92, 0x7A, 0x18, 0x61, 0xFC, 0x7A,
  0x18, 0x61, 0x85, 0xF0, 0x61, 0x78, 0x00, 0xF8, 0x88, 0xF8, 0x88, 0x80,
  0x7A, 0x18, 0x60, 0x82, 0x08, 0x61, 0x78, 0xF8, 0x00, 0x20, 0x84, 0x10,
  0x82, 0x10, 0x43, 0x08, 0x00, 0xF9, 0x11, 0x42, 0x28, 0x7E, 0x00, 0x7E,
  0x14, 0x42, 0x88, 0xD1, 0x13, 0xE0, 0x80 };

// Glyph, Offset to bitmap, Width, Height, xAdvance, xOffset, yOffset

const gfxglyph_t HotStuff6Glyphs[] PROGMEM = {
  {48,     0,   6,   9,   8,    1,   -8 },   // 0x00 '0' 
  {49,     7,   2,   9,   4,    1,   -8 },   // 0x01 '1' 
  {50,    10,   6,   9,   8,    1,   -8 },   // 0x02 '2' 
  {51,    17,   6,   9,   8,    1,   -8 },   // 0x03 '3' 
  {52,    24,   6,   9,   7,    0,   -8 },   // 0x04 '4' 
  {53,    31,   6,   9,   8,    1,   -8 },   // 0x05 '5' 
  {54,    38,   6,   9,   8,    1,   -8 },   // 0x06 '6' 
  {55,    45,   6,   9,   6,    0,   -8 },   // 0x07 '7' 
  {56,    52,   6,   9,   8,    1,   -8 },   // 0x08 '8' 
  {57,    59,   6,   9,   8,    1,   -8 },   // 0x09 '9' 
  {32,    66,   1,   1,   5,    0,    0 },   // 0x0A ' ' 
  {70,    67,   4,   9,   7,    1,   -8 },   // 0x0B 'F' 
  {67,    72,   6,   9,   8,    1,   -8 },   // 0x0C 'C' 
  {45,    79,   5,   1,   7,    1,   -4 },   // 0x0D '-' 
  {47,    80,   6,  11,   6,    0,   -9 },   // 0x0E '/' 
  {37,    89,  11,   9,  13,    1,   -8 },   // 0x0F '%' 
  {46,   102,   1,   1,   4,    1,    0 }   // 0x10 '.' 
};

const gfxfont_t HotStuff6 PROGMEM = 
{
  (uint8_t  *)HotStuff6Bitmaps, //< Glyph bitmaps, concatenated 
  (gfxglyph_t *)HotStuff6Glyphs, //< Glyph array
  17,// total glyphs in the string
   9,  // newline distance (y axis)
     0,  // minimum X - left most
    -1,  // minimum Y - bottom most (descenders can drive this negative)
    12,  // maximum X - right most
    10}; // maximum Y - top most
// Approx. 236 bytes -  but your mileage may vary.

#endif