
#ifndef __FIXEDFONTNOVAMONOTTF18
#define __FIXEDFONTNOVAMONOTTF18
const uint8_t HotStuff18Bitmaps[] PROGMEM = {
  0x07, 0xE0, 0x1F, 0xF8, 0x3F, 0xFC, 0x7C, 0x3E, 0x70, 0x3E, 0xF0, 0x3F,
  0xE0, 0x77, 0xE0, 0x77, 0xE0, 0xE7, 0xE0, 0xE7, 0xE1, 0xC7, 0xE1, 0xC7,
  0xE3, 0x87, 0xE3, 0x87, 0xE7, 0x07, 0xE7, 0x07, 0xEF, 0x07, 0xEE, 0x07,
  0xFE, 0x07, 0xFC, 0x07, 0xFC, 0x0F, 0x78, 0x0E, 0x78, 0x3E, 0x3F, 0xFC,
  0x1F, 0xF8, 0x07, 0xE0, 0x00, 0x81, 0xC1, 0xE3, 0xF3, 0xFB, 0xDF, 0xCF,
  0xC7, 0x43, 0x81, 0xC0, 0xE0, 0x70, 0x38, 0x1C, 0x0E, 0x07, 0x03, 0x81,
  0xC0, 0xE0, 0x70, 0x38, 0x1C, 0x0E, 0x07, 0x03, 0x81, 0x00, 0x07, 0xE0,
  0x1F, 0xF8, 0x3F, 0xFC, 0x7C, 0x3E, 0x70, 0x0E, 0xF0, 0x0F, 0xE0, 0x07,
  0xE0, 0x07, 0xC0, 0x07, 0x00, 0x07, 0x00, 0x0F, 0x00, 0x1E, 0x00, 0x3C,
  0x00, 0x78, 0x01, 0xF0, 0x03, 0xC0, 0x07, 0x80, 0x0F, 0x00, 0x0E, 0x00,
  0x1C, 0x00, 0x3C, 0x00, 0x38, 0x00, 0x78, 0x00, 0x7F, 0xFF, 0x7F, 0xFF,
  0xFF, 0xFE, 0x3F, 0xFE, 0x7F, 0xFC, 0x7F, 0xFC, 0x00, 0x38, 0x00, 0x78,
  0x00, 0xF0, 0x00, 0xE0, 0x01, 0xE0, 0x01, 0xC0, 0x03, 0xC0, 0x07, 0x80,
  0x07, 0xF0, 0x07, 0xF8, 0x00, 0x7C, 0x00, 0x1E, 0x00, 0x0E, 0x00, 0x07,
  0x60, 0x07, 0xE0, 0x07, 0xE0, 0x07, 0xF0, 0x0F, 0x70, 0x0E, 0x7C, 0x3E,
  0x3F, 0xFC, 0x1F, 0xF8, 0x07, 0xE0, 0x00, 0x02, 0x00, 0x03, 0x80, 0x01,
  0xE0, 0x00, 0x78, 0x00, 0x3E, 0x00, 0x1F, 0x80, 0x07, 0xE0, 0x03, 0xB8,
  0x01, 0xCE, 0x00, 0x73, 0x80, 0x38, 0xE0, 0x1C, 0x38, 0x07, 0x0E, 0x03,
  0x83, 0x81, 0xC0, 0xE0, 0x70, 0x38, 0x38, 0x0E, 0x0F, 0xFF, 0xE7, 0xFF,
  0xF9, 0xFF, 0xFE, 0x00, 0x0E, 0x00, 0x03, 0x80, 0x00, 0xE0, 0x00, 0x38,
  0x00, 0x0E, 0x00, 0x02, 0x00, 0x0F, 0xFE, 0x1F, 0xFC, 0x1F, 0xFC, 0x1C,
  0x00, 0x1C, 0x00, 0x1C, 0x00, 0x18, 0x00, 0x38, 0x00, 0x38, 0x00, 0x38,
  0x00, 0x3F, 0xE0, 0x3F, 0xF8, 0x7F, 0xFC, 0x18, 0x3E, 0x00, 0x0E, 0x00,
  0x0F, 0x00, 0x07, 0x60, 0x07, 0xE0, 0x07, 0xE0, 0x07, 0xF0, 0x0F, 0x70,
  0x0E, 0x7C, 0x3E, 0x3F, 0xFC, 0x1F, 0xF8, 0x07, 0xE0, 0x07, 0xE0, 0x1F,
  0xF8, 0x3F, 0xFC, 0x7C, 0x3E, 0x70, 0x0E, 0xF0, 0x07, 0xE0, 0x07, 0xE0,
  0x07, 0xE0, 0x00, 0xE0, 0x00, 0xE7, 0xE0, 0xEF, 0xF8, 0xFF, 0xFC, 0xFC,
  0x3E, 0xF0, 0x0E, 0xF0, 0x0F, 0xE0, 0x07, 0xE0, 0x07, 0xE0, 0x07, 0xE0,
  0x07, 0xF0, 0x0F, 0x70, 0x0E, 0x7C, 0x3E, 0x3F, 0xFC, 0x1F, 0xF8, 0x07,
  0xE0, 0x7F, 0xFF, 0xFF, 0xFE, 0xFF, 0xFE, 0x00, 0x1C, 0x00, 0x1C, 0x00,
  0x38, 0x00, 0x38, 0x00, 0x70, 0x00, 0x70, 0x00, 0xE0, 0x00, 0xE0, 0x01,
  0xC0, 0x01, 0xC0, 0x03, 0x80, 0x03, 0x80, 0x07, 0x00, 0x07, 0x00, 0x0E,
  0x00, 0x0E, 0x00, 0x1C, 0x00, 0x1C, 0x00, 0x38, 0x00, 0x38, 0x00, 0x70,
  0x00, 0x70, 0x00, 0xC0, 0x00, 0x07, 0xE0, 0x1F, 0xF8, 0x3F, 0xFC, 0x3C,
  0x3C, 0x78, 0x1E, 0x70, 0x0E, 0x70, 0x0E, 0x70, 0x0E, 0x78, 0x1E, 0x38,
  0x1C, 0x3F, 0xF8, 0x0F, 0xF0, 0x1F, 0xF8, 0x3E, 0x7C, 0x78, 0x1E, 0xF0,
  0x0E, 0xE0, 0x07, 0xE0, 0x07, 0xE0, 0x07, 0xE0, 0x07, 0xF0, 0x0F, 0x70,
  0x0E, 0x7C, 0x3E, 0x3F, 0xFC, 0x1F, 0xF8, 0x07, 0xE0, 0x07, 0xE0, 0x1F,
  0xF8, 0x3F, 0xFC, 0x7C, 0x3E, 0x70, 0x0E, 0xF0, 0x0F, 0xE0, 0x07, 0xE0,
  0x07, 0xE0, 0x07, 0xE0, 0x07, 0xF0, 0x0F, 0x70, 0x0F, 0x7C, 0x3F, 0x3F,
  0xFF, 0x1F, 0xF7, 0x07, 0xE7, 0x00, 0x07, 0x00, 0x07, 0xE0, 0x07, 0xE0,
  0x07, 0xE0, 0x0F, 0x70, 0x0E, 0x7C, 0x3E, 0x3F, 0xFC, 0x1F, 0xF8, 0x07,
  0xE0, 0x00, 0x3F, 0xF7, 0xFF, 0x3F, 0xF9, 0xC0, 0x0E, 0x00, 0x70, 0x03,
  0x80, 0x1C, 0x00, 0xE0, 0x07, 0x00, 0x38, 0x01, 0xFF, 0xFF, 0xFF, 0x7F,
  0xFB, 0x80, 0x1C, 0x00, 0xE0, 0x07, 0x00, 0x38, 0x01, 0xC0, 0x0E, 0x00,
  0x70, 0x03, 0x80, 0x1C, 0x00, 0xE0, 0x04, 0x00, 0x00, 0x07, 0xE0, 0x1F,
  0xF8, 0x3F, 0xFC, 0x7C, 0x3E, 0x70, 0x0E, 0xF0, 0x0F, 0xE0, 0x07, 0xE0,
  0x07, 0xE0, 0x06, 0xE0, 0x00, 0xE0, 0x00, 0xE0, 0x00, 0xE0, 0x00, 0xE0,
  0x00, 0xE0, 0x00, 0xE0, 0x00, 0xE0, 0x00, 0xE0, 0x03, 0xE0, 0x07, 0xE0,
  0x07, 0xF0, 0x0F, 0x70, 0x0E, 0x7C, 0x3E, 0x3F, 0xFC, 0x1F, 0xF8, 0x07,
  0xE0, 0x7F, 0xFE, 0xFF, 0xFD, 0xFF, 0xF0, 0x00, 0x01, 0x80, 0x00, 0x70,
  0x00, 0x38, 0x00, 0x0E, 0x00, 0x03, 0x80, 0x01, 0xC0, 0x00, 0x70, 0x00,
  0x38, 0x00, 0x0E, 0x00, 0x07, 0x80, 0x01, 0xC0, 0x00, 0x70, 0x00, 0x38,
  0x00, 0x0E, 0x00, 0x07, 0x00, 0x01, 0xC0, 0x00, 0x70, 0x00, 0x38, 0x00,
  0x0E, 0x00, 0x07, 0x00, 0x01, 0xC0, 0x00, 0xE0, 0x00, 0x38, 0x00, 0x0E,
  0x00, 0x07, 0x00, 0x01, 0xC0, 0x00, 0xE0, 0x00, 0x38, 0x00, 0x1E, 0x00,
  0x07, 0x00, 0x01, 0xC0, 0x00, 0xE0, 0x00, 0x38, 0x00, 0x1C, 0x00, 0x07,
  0x00, 0x01, 0xC0, 0x00, 0xE0, 0x00, 0x18, 0x00, 0x00, 0x3E, 0x00, 0x3F,
  0x80, 0x38, 0xE0, 0x18, 0x30, 0x0C, 0x18, 0x06, 0x0C, 0x0B, 0x8E, 0x0C,
  0xFE, 0x1F, 0x3E, 0x1E, 0x00, 0x1E, 0x00, 0x1E, 0x00, 0x1E, 0x00, 0x3E,
  0x00, 0x3C, 0x00, 0x3C, 0x00, 0x3C, 0x00, 0x3C, 0x00, 0x7C, 0x1E, 0x18,
  0x1F, 0xC8, 0x1C, 0x70, 0x0C, 0x18, 0x06, 0x0C, 0x03, 0x06, 0x01, 0xC7,
  0x00, 0x7F, 0x00, 0x1F, 0x00, 0x6F, 0xFF, 0x60 };

// Glyph, Offset to bitmap, Width, Height, xAdvance, xOffset, yOffset

const gfxglyph_t HotStuff18Glyphs[] PROGMEM = {
  {48,     0,  16,  26,  20,    2,  -25 },   // 0x00 '0' 
  {49,    52,   9,  26,  20,    3,  -25 },   // 0x01 '1' 
  {50,    82,  16,  26,  20,    2,  -25 },   // 0x02 '2' 
  {51,   134,  16,  26,  20,    2,  -25 },   // 0x03 '3' 
  {52,   186,  18,  26,  20,    1,  -25 },   // 0x04 '4' 
  {53,   245,  16,  26,  20,    2,  -25 },   // 0x05 '5' 
  {54,   297,  16,  26,  20,    2,  -25 },   // 0x06 '6' 
  {55,   349,  16,  26,  20,    2,  -25 },   // 0x07 '7' 
  {56,   401,  16,  26,  20,    2,  -25 },   // 0x08 '8' 
  {57,   453,  16,  26,  20,    2,  -25 },   // 0x09 '9' 
  {32,   505,   1,   1,  20,    0,    0 },   // 0x0A ' ' 
  {70,   506,  13,  26,  20,    3,  -25 },   // 0x0B 'F' 
  {67,   549,  16,  26,  20,    2,  -25 },   // 0x0C 'C' 
  {45,   601,  15,   3,  20,    2,  -14 },   // 0x0D '-' 
  {47,   607,  18,  38,  20,    1,  -31 },   // 0x0E '/' 
  {37,   693,  17,  26,  20,    1,  -25 },   // 0x0F '%' 
  {46,   749,   4,   5,  20,    8,   -4 }   // 0x10 '.' 
};

const gfxfont_t HotStuff18 PROGMEM = 
{
  (uint8_t  *)HotStuff18Bitmaps, //< Glyph bitmaps, concatenated 
  (gfxglyph_t *)HotStuff18Glyphs, //< Glyph array
  17,// total glyphs in the string
  38,  // newline distance (y axis)
     0,  // minimum X - left most
    -6,  // minimum Y - bottom most (descenders can drive this negative)
    19,  // maximum X - right most
    32}; // maximum Y - top most
// Approx. 885 bytes -  but your mileage may vary.

#endif