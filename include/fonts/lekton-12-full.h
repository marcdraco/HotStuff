
#ifndef __FIXEDFONTLEKTONBOLDTTF12
#define __FIXEDFONTLEKTONBOLDTTF12
const uint8_t HotStuff12Bitmaps[] PROGMEM = {
  0x00, 0x0F, 0x00, 0xF8, 0x1F, 0x81, 0xD8, 0x19, 0x81, 0x9C, 0x39, 0xC3,
  0x9C, 0x30, 0xC3, 0x0C, 0x70, 0xE7, 0xFE, 0x7F, 0xE6, 0x06, 0xE0, 0x7E,
  0x07, 0xFE, 0x1F, 0xF3, 0x8F, 0x70, 0xEE, 0x0D, 0xC1, 0xB8, 0x77, 0xF8,
  0xFF, 0x9C, 0x3B, 0x83, 0x70, 0x7E, 0x0D, 0xC3, 0xBF, 0xE7, 0xF8, 0x1F,
  0x8F, 0xF7, 0x89, 0x80, 0xE0, 0x38, 0x0E, 0x03, 0x80, 0xE0, 0x38, 0x0E,
  0x03, 0x80, 0xE0, 0x1C, 0x17, 0xFC, 0x7F, 0xFC, 0x3F, 0xCC, 0xFB, 0x07,
  0xC1, 0xF0, 0x3C, 0x0F, 0x03, 0xC0, 0xF0, 0x3C, 0x0F, 0x07, 0xC1, 0xF0,
  0xEF, 0xFB, 0xF8, 0xFF, 0xFF, 0xFF, 0xFF, 0x80, 0xE0, 0x38, 0x0E, 0x03,
  0xFE, 0xFF, 0xB8, 0x0E, 0x03, 0x80, 0xE0, 0x38, 0x0F, 0xFF, 0xFF, 0xFF,
  0xFF, 0xFF, 0xF8, 0x0C, 0x06, 0x03, 0x01, 0x80, 0xFF, 0x7F, 0xB0, 0x18,
  0x0C, 0x06, 0x03, 0x01, 0x80, 0x1F, 0x9F, 0xF7, 0x0F, 0x80, 0xC0, 0x30,
  0x0C, 0x03, 0x00, 0xC3, 0xF0, 0xFC, 0x0F, 0x03, 0xE0, 0xFC, 0x37, 0xFC,
  0xFF, 0xC0, 0xF0, 0x3C, 0x0F, 0x03, 0xC0, 0xF0, 0x3C, 0x0F, 0xFF, 0xFF,
  0xF0, 0x3C, 0x0F, 0x03, 0xC0, 0xF0, 0x3C, 0x0F, 0x03, 0xFF, 0xFF, 0xFF,
  0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0xFF,
  0xFF, 0x7F, 0x7F, 0x7F, 0x0E, 0x0E, 0x0E, 0x0E, 0x0E, 0x0E, 0x0E, 0x0E,
  0x0E, 0x0E, 0x0E, 0xFE, 0xFC, 0xE0, 0xDC, 0x3B, 0x8E, 0x71, 0xCE, 0x71,
  0xCE, 0x3B, 0x87, 0xE0, 0xFC, 0x1D, 0xC3, 0x9C, 0x73, 0x8E, 0x39, 0xC7,
  0x38, 0x77, 0x07, 0xC0, 0x60, 0x30, 0x18, 0x0C, 0x06, 0x03, 0x01, 0x80,
  0xC0, 0x60, 0x30, 0x18, 0x0C, 0x06, 0x03, 0xFF, 0xFF, 0xE0, 0x7E, 0x07,
  0xF0, 0xFF, 0x0F, 0xF0, 0xFF, 0x9F, 0xF9, 0xFE, 0xF7, 0xEF, 0x7E, 0xF7,
  0xE6, 0x7E, 0x07, 0xE0, 0x7E, 0x07, 0xE0, 0x7E, 0x07, 0xC0, 0xF8, 0x3E,
  0x0F, 0xC3, 0xF8, 0xF6, 0x3D, 0xCF, 0x33, 0xC6, 0xF1, 0xFC, 0x3F, 0x07,
  0xC1, 0xF0, 0x3C, 0x0F, 0x03, 0x1E, 0x1F, 0xE7, 0x3B, 0x87, 0xC0, 0xF0,
  0x3C, 0x0F, 0x03, 0xC0, 0xF0, 0x3C, 0x0F, 0x03, 0xE1, 0xF8, 0x77, 0xF8,
  0xFC, 0xFE, 0x3F, 0xEE, 0x7F, 0x87, 0xE0, 0xF8, 0x3E, 0x0F, 0x87, 0xE3,
  0xFF, 0xEF, 0xF3, 0x80, 0xE0, 0x38, 0x0E, 0x03, 0x80, 0x1E, 0x1F, 0xEF,
  0x3B, 0x87, 0xC0, 0xF0, 0x3C, 0x0F, 0x03, 0xC0, 0xF0, 0x3C, 0x0F, 0x0B,
  0xE7, 0xF9, 0xF7, 0xF8, 0xFF, 0x00, 0xC0, 0x10, 0xFE, 0x3F, 0xEC, 0xFF,
  0x07, 0xC0, 0xF0, 0x3C, 0x1F, 0x07, 0xFF, 0xBF, 0xCC, 0x73, 0x0C, 0xC3,
  0xB0, 0x6C, 0x1F, 0x07, 0x1F, 0x1F, 0xFF, 0x1B, 0x80, 0xE0, 0x38, 0x0F,
  0x81, 0xFC, 0x1F, 0x80, 0xF0, 0x1C, 0x07, 0x01, 0xF0, 0x7F, 0xFB, 0xFC,
  0xFF, 0xFF, 0xFF, 0xFC, 0x30, 0x0C, 0x03, 0x00, 0xC0, 0x30, 0x0C, 0x03,
  0x00, 0xC0, 0x30, 0x0C, 0x03, 0x00, 0xC0, 0x30, 0xC0, 0xF0, 0x3C, 0x0F,
  0x03, 0xC0, 0xF0, 0x3C, 0x0F, 0x03, 0xC0, 0xF0, 0x3C, 0x0F, 0x03, 0xC0,
  0xF8, 0x7F, 0xF9, 0xFC, 0xE0, 0x76, 0x06, 0x70, 0xE7, 0x0E, 0x70, 0xE3,
  0x0C, 0x38, 0xC3, 0x9C, 0x39, 0xC1, 0x9C, 0x19, 0x81, 0xF8, 0x1F, 0x80,
  0xF8, 0x0F, 0x00, 0xF0, 0xC0, 0x3C, 0x03, 0xE0, 0x7E, 0x07, 0xE0, 0x7E,
  0x07, 0x60, 0x76, 0x66, 0x67, 0x66, 0xF6, 0x6F, 0x66, 0xF6, 0x6D, 0x66,
  0x9E, 0x79, 0xE7, 0x9E, 0xF0, 0xE7, 0x0E, 0x71, 0xC3, 0x9C, 0x39, 0x81,
  0xF8, 0x1F, 0x00, 0xF0, 0x0F, 0x01, 0xF0, 0x1F, 0x83, 0xB8, 0x39, 0xC7,
  0x1C, 0x70, 0xEE, 0x0F, 0xE0, 0x76, 0x06, 0x70, 0xE3, 0x0C, 0x39, 0xC1,
  0x98, 0x1F, 0x80, 0xF0, 0x0F, 0x00, 0x60, 0x06, 0x00, 0x60, 0x06, 0x00,
  0x60, 0x06, 0x00, 0x60, 0x7F, 0x9F, 0xE7, 0xF8, 0x0E, 0x07, 0x01, 0xC0,
  0xE0, 0x38, 0x1C, 0x07, 0x03, 0x80, 0xE0, 0x70, 0x1C, 0x0F, 0xFF, 0xFF,
  0x0C, 0x3F, 0xE7, 0xF8, 0x06, 0x01, 0x8F, 0xE7, 0xFB, 0x86, 0xE1, 0xB8,
  0xEF, 0xFD, 0xF7, 0xE0, 0x38, 0x0E, 0x03, 0x80, 0xE4, 0x3F, 0xEF, 0xFF,
  0x87, 0xE1, 0xF8, 0x3E, 0x0F, 0x83, 0xE1, 0xF8, 0x7F, 0xFB, 0xFC, 0x06,
  0x1F, 0xDF, 0xEE, 0x06, 0x07, 0x03, 0x81, 0xC0, 0x60, 0x38, 0x1F, 0xE3,
  0xF0, 0x01, 0xC0, 0x70, 0x1C, 0x07, 0x0D, 0xCF, 0xF7, 0xFF, 0x87, 0xE1,
  0xF8, 0x7E, 0x1F, 0x87, 0xE1, 0xF8, 0xF7, 0xFC, 0xFB, 0x04, 0x0F, 0xC7,
  0xF9, 0x87, 0xE1, 0xF8, 0x7F, 0xFF, 0xFF, 0xE0, 0x1C, 0x27, 0xF8, 0xFE,
  0x0F, 0xC7, 0xF1, 0xC0, 0x60, 0x18, 0x1F, 0xE7, 0xF8, 0x60, 0x18, 0x06,
  0x01, 0x80, 0x60, 0x18, 0x06, 0x0F, 0xFB, 0xFE, 0x08, 0x0F, 0xF7, 0xFF,
  0x87, 0xE1, 0xF8, 0x7E, 0x1F, 0x87, 0xE1, 0xFC, 0xF7, 0xFC, 0xFF, 0x00,
  0xC0, 0x77, 0x7F, 0xFE, 0x3E, 0x00, 0xE0, 0x38, 0x0E, 0x03, 0x80, 0xE4,
  0x3F, 0xEF, 0xFB, 0x86, 0xE1, 0xF8, 0x7E, 0x1F, 0x87, 0xE1, 0xF8, 0x7E,
  0x1F, 0x87, 0x18, 0x1C, 0x18, 0x00, 0x00, 0xFC, 0xFC, 0x1C, 0x1C, 0x1C,
  0x1C, 0x1C, 0x1C, 0x1C, 0xFF, 0xFF, 0x0C, 0x1C, 0x30, 0x00, 0x0F, 0x9F,
  0x06, 0x0C, 0x18, 0x30, 0x60, 0xC1, 0x83, 0x06, 0x0C, 0x18, 0xF7, 0xCF,
  0x00, 0xC0, 0x30, 0x0C, 0x03, 0x00, 0xC0, 0x30, 0xEC, 0x33, 0x1C, 0xCE,
  0x3F, 0x0F, 0xC3, 0x38, 0xC7, 0x31, 0xCC, 0x3B, 0x0F, 0xF8, 0xF8, 0x18,
  0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0xFF,
  0xFF, 0x11, 0x3F, 0xFF, 0xFF, 0x33, 0xCC, 0xF3, 0x3C, 0xCF, 0x33, 0xC0,
  0xF0, 0x3C, 0x0F, 0x03, 0x04, 0x3F, 0xEF, 0xFB, 0x86, 0xE1, 0xF8, 0x7E,
  0x1F, 0x87, 0xE1, 0xF8, 0x7E, 0x1F, 0x87, 0x0C, 0x0F, 0xC7, 0xFB, 0x87,
  0xE1, 0xF8, 0x7E, 0x1F, 0x87, 0xE1, 0xF8, 0xF7, 0xF8, 0xFC, 0x24, 0x3F,
  0xEF, 0xFF, 0x87, 0xE1, 0xF8, 0x3E, 0x0F, 0x83, 0xE1, 0xF8, 0x7F, 0xFB,
  0xFC, 0xE0, 0x38, 0x0E, 0x03, 0x80, 0xE0, 0x00, 0x0C, 0xCF, 0xF7, 0xFF,
  0x87, 0xE1, 0xF8, 0x7E, 0x1F, 0x87, 0xE1, 0xF8, 0x77, 0xFC, 0xFF, 0x01,
  0xC0, 0x70, 0x1C, 0x07, 0x01, 0xC0, 0x00, 0xFB, 0xFF, 0xE7, 0x83, 0x01,
  0x80, 0xC0, 0x60, 0x30, 0x18, 0x3F, 0xDF, 0xE0, 0x18, 0xFF, 0xFF, 0xC0,
  0xE0, 0xFC, 0x7F, 0x0F, 0x03, 0x83, 0xFF, 0xFE, 0x70, 0x70, 0x70, 0xFF,
  0xFF, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x3F, 0x3F, 0xE1, 0xF8,
  0x7E, 0x1F, 0x87, 0xE1, 0xF8, 0x7E, 0x1F, 0x87, 0xE3, 0xDF, 0xF3, 0xDC,
  0xE1, 0xF8, 0x76, 0x19, 0x86, 0x73, 0x9C, 0xE3, 0x30, 0xEC, 0x3F, 0x0F,
  0xC1, 0xE0, 0xE0, 0x3E, 0x07, 0xE0, 0x7E, 0xF7, 0x6F, 0x76, 0xF6, 0x6F,
  0x66, 0xF6, 0x6F, 0x67, 0xDE, 0x79, 0xE0, 0xE1, 0xDC, 0xE3, 0x30, 0xFC,
  0x1E, 0x07, 0x81, 0xF0, 0xFC, 0x73, 0x9C, 0xEE, 0x1C, 0xE1, 0xF8, 0x76,
  0x19, 0xC6, 0x73, 0x8C, 0xE3, 0x30, 0xEC, 0x1F, 0x07, 0x81, 0xE0, 0x38,
  0x0E, 0x0F, 0x07, 0x81, 0xC0, 0xFF, 0xFF, 0x0F, 0x0E, 0x1C, 0x38, 0x38,
  0x70, 0xE0, 0xFF, 0xFF, 0x3F, 0x1F, 0xE6, 0x1B, 0x87, 0xE1, 0xF8, 0x7E,
  0x1F, 0x87, 0xE1, 0xF8, 0x7E, 0x1F, 0x87, 0x73, 0x9F, 0xE3, 0xF0, 0x1E,
  0x1F, 0x8F, 0x61, 0x18, 0x06, 0x01, 0x80, 0x60, 0x18, 0x06, 0x01, 0x80,
  0x60, 0x18, 0x06, 0x1F, 0xF7, 0xFC, 0x3F, 0x3F, 0xE6, 0x18, 0x07, 0x01,
  0xC0, 0x60, 0x38, 0x1C, 0x0E, 0x07, 0x03, 0x81, 0xC0, 0xE0, 0x3F, 0xFF,
  0xFC, 0x7F, 0x3F, 0xE4, 0x18, 0x07, 0x01, 0x80, 0xE3, 0xF0, 0xFE, 0x23,
  0xC0, 0x70, 0x1C, 0x07, 0x41, 0xFF, 0xE7, 0xF0, 0x1C, 0x06, 0x01, 0x80,
  0xE0, 0x30, 0x0C, 0x07, 0x39, 0x8E, 0xE3, 0xB8, 0xEF, 0xFF, 0xFF, 0x03,
  0x80, 0xE0, 0x38, 0x7F, 0xDF, 0xF6, 0x01, 0x80, 0x60, 0x1F, 0xC7, 0xF9,
  0x8F, 0x01, 0xC0, 0x30, 0x0C, 0x07, 0xC3, 0xFF, 0xE7, 0xF0, 0x01, 0x00,
  0xC0, 0xF8, 0x78, 0x38, 0x1C, 0x06, 0xE3, 0xFE, 0xFB, 0xF8, 0x7C, 0x0F,
  0x03, 0xC0, 0xF8, 0x77, 0xF8, 0xFC, 0xFF, 0xFF, 0xFC, 0x1C, 0x0E, 0x03,
  0x81, 0xC0, 0x70, 0x38, 0x0C, 0x07, 0x01, 0xC0, 0x60, 0x38, 0x0E, 0x03,
  0x80, 0x3F, 0x1F, 0xEE, 0x1F, 0x87, 0xE1, 0xD8, 0x77, 0xF8, 0xFC, 0x73,
  0xF8, 0x7C, 0x0F, 0x83, 0xE1, 0xDF, 0xE3, 0xF0, 0x3F, 0x1F, 0xEE, 0x1F,
  0x83, 0xE0, 0xF8, 0x3E, 0x1D, 0xFF, 0x3F, 0xC0, 0x60, 0x38, 0x1C, 0x07,
  0x03, 0x83, 0xC0, 0xFF, 0xFF, 0xC0, 0x30, 0xC7, 0x9C, 0xCD, 0x8C, 0xD8,
  0xCF, 0x87, 0xB0, 0x27, 0x00, 0x60, 0x06, 0x00, 0xE0, 0x0D, 0xE1, 0xFF,
  0x1B, 0x31, 0xB3, 0x3B, 0xF3, 0x1E, 0xFF, 0xF0, 0xFF, 0xF6, 0x6C, 0xFF,
  0xFF, 0xFF, 0xFB, 0x01, 0xFF, 0xFF, 0xF0, 0x00, 0x0F, 0xFF, 0xFF, 0xFF,
  0xC0, 0xFF, 0xF9, 0xCE, 0x73, 0x9C, 0xE7, 0x39, 0xCE, 0x73, 0x9C, 0xE7,
  0x39, 0xCF, 0xFF, 0xE0, 0xFF, 0xCE, 0x73, 0x9C, 0xE7, 0x39, 0xCE, 0x73,
  0x9C, 0xE7, 0x39, 0xCE, 0x7F, 0xFF, 0xE0, 0x1C, 0x63, 0x8C, 0x71, 0x86,
  0x38, 0xE3, 0x8E, 0x38, 0xE3, 0x8E, 0x18, 0x61, 0x87, 0x0C, 0x38, 0x70,
  0x80, 0xC7, 0x18, 0xE3, 0x1C, 0xE3, 0x18, 0xC6, 0x31, 0x8C, 0x63, 0x39,
  0x8C, 0xE6, 0x71, 0x00 };

// Glyph, Offset to bitmap, Width, Height, xAdvance, xOffset, yOffset

const gfxglyph_t HotStuff12Glyphs[] PROGMEM = {
  {32,     0,   1,   1,  12,    0,    0 },   // 0x00 ' ' 
  {65,     1,  12,  16,  12,    0,  -15 },   // 0x01 'A' 
  {66,    25,  11,  16,  12,    1,  -15 },   // 0x02 'B' 
  {67,    47,  10,  16,  12,    1,  -15 },   // 0x03 'C' 
  {68,    67,  10,  16,  12,    1,  -15 },   // 0x04 'D' 
  {69,    87,  10,  16,  12,    1,  -15 },   // 0x05 'E' 
  {70,   107,   9,  16,  12,    2,  -15 },   // 0x06 'F' 
  {71,   125,  10,  16,  12,    1,  -15 },   // 0x07 'G' 
  {72,   145,  10,  16,  12,    1,  -15 },   // 0x08 'H' 
  {73,   165,   8,  16,  12,    2,  -15 },   // 0x09 'I' 
  {74,   181,   8,  16,  12,    1,  -15 },   // 0x0A 'J' 
  {75,   197,  11,  16,  12,    1,  -15 },   // 0x0B 'K' 
  {76,   219,   9,  16,  12,    2,  -15 },   // 0x0C 'L' 
  {77,   237,  12,  16,  12,    0,  -15 },   // 0x0D 'M' 
  {78,   261,  10,  16,  12,    1,  -15 },   // 0x0E 'N' 
  {79,   281,  10,  16,  12,    1,  -15 },   // 0x0F 'O' 
  {80,   301,  10,  16,  12,    1,  -15 },   // 0x10 'P' 
  {81,   321,  10,  18,  12,    1,  -15 },   // 0x11 'Q' 
  {82,   344,  10,  16,  12,    1,  -15 },   // 0x12 'R' 
  {83,   364,  10,  16,  12,    1,  -15 },   // 0x13 'S' 
  {84,   384,  10,  16,  12,    1,  -15 },   // 0x14 'T' 
  {85,   404,  10,  16,  12,    1,  -15 },   // 0x15 'U' 
  {86,   424,  12,  16,  12,    0,  -15 },   // 0x16 'V' 
  {87,   448,  12,  16,  12,    0,  -15 },   // 0x17 'W' 
  {88,   472,  12,  16,  12,    0,  -15 },   // 0x18 'X' 
  {89,   496,  12,  16,  12,    0,  -15 },   // 0x19 'Y' 
  {90,   520,  10,  16,  12,    1,  -15 },   // 0x1A 'Z' 
  {97,   540,  10,  12,  12,    1,  -11 },   // 0x1B 'a' 
  {98,   555,  10,  16,  12,    1,  -15 },   // 0x1C 'b' 
  {99,   575,   9,  12,  12,    1,  -11 },   // 0x1D 'c' 
  {100,   589,  10,  16,  12,    1,  -15 },   // 0x1E 'd' 
  {101,   609,  10,  12,  12,    1,  -11 },   // 0x1F 'e' 
  {102,   624,  10,  16,  12,    1,  -15 },   // 0x20 'f' 
  {103,   644,  10,  17,  12,    1,  -11 },   // 0x21 'g' 
  {104,   666,  10,  16,  12,    1,  -15 },   // 0x22 'h' 
  {105,   686,   8,  16,  12,    2,  -15 },   // 0x23 'i' 
  {106,   702,   7,  21,  12,    2,  -15 },   // 0x24 'j' 
  {107,   721,  10,  16,  12,    2,  -15 },   // 0x25 'k' 
  {108,   741,   8,  16,  12,    2,  -15 },   // 0x26 'l' 
  {109,   757,  10,  12,  12,    1,  -11 },   // 0x27 'm' 
  {110,   772,  10,  12,  12,    1,  -11 },   // 0x28 'n' 
  {111,   787,  10,  12,  12,    1,  -11 },   // 0x29 'o' 
  {112,   802,  10,  17,  12,    1,  -11 },   // 0x2A 'p' 
  {113,   824,  10,  17,  12,    1,  -11 },   // 0x2B 'q' 
  {114,   846,   9,  12,  12,    2,  -11 },   // 0x2C 'r' 
  {115,   860,   8,  12,  12,    2,  -11 },   // 0x2D 's' 
  {116,   872,   8,  14,  12,    2,  -13 },   // 0x2E 't' 
  {117,   886,  10,  11,  12,    1,  -10 },   // 0x2F 'u' 
  {118,   900,  10,  11,  12,    1,  -10 },   // 0x30 'v' 
  {119,   914,  12,  11,  12,    0,  -10 },   // 0x31 'w' 
  {120,   931,  10,  11,  12,    1,  -10 },   // 0x32 'x' 
  {121,   945,  10,  16,  12,    1,  -10 },   // 0x33 'y' 
  {122,   965,   8,  11,  12,    2,  -10 },   // 0x34 'z' 
  {48,   976,  10,  15,  12,    1,  -14 },   // 0x35 '0' 
  {49,   995,  10,  15,  12,    1,  -14 },   // 0x36 '1' 
  {50,  1014,  10,  15,  12,    1,  -14 },   // 0x37 '2' 
  {51,  1033,  10,  15,  12,    1,  -14 },   // 0x38 '3' 
  {52,  1052,  10,  15,  12,    1,  -14 },   // 0x39 '4' 
  {53,  1071,  10,  15,  12,    1,  -14 },   // 0x3A '5' 
  {54,  1090,  10,  16,  12,    1,  -15 },   // 0x3B '6' 
  {55,  1110,  10,  15,  12,    1,  -14 },   // 0x3C '7' 
  {56,  1129,  10,  15,  12,    1,  -14 },   // 0x3D '8' 
  {57,  1148,  10,  15,  12,    1,  -14 },   // 0x3E '9' 
  {45,  1167,   6,   3,  12,    3,   -7 },   // 0x3F '-' 
  {37,  1170,  12,  16,  12,    0,  -15 },   // 0x40 '%' 
  {46,  1194,   4,   3,  12,    4,   -2 },   // 0x41 '.' 
  {44,  1196,   4,   6,  12,    4,   -2 },   // 0x42 ',' 
  {33,  1199,   3,  16,  12,    5,  -15 },   // 0x43 '!' 
  {58,  1205,   4,  10,  12,    4,   -9 },   // 0x44 ':' 
  {45,  1210,   6,   3,  12,    3,   -7 },   // 0x45 '-' 
  {91,  1213,   5,  23,  12,    4,  -18 },   // 0x46 '[' 
  {93,  1228,   5,  23,  12,    3,  -18 },   // 0x47 ']' 
  {40,  1243,   6,  23,  12,    4,  -18 },   // 0x48 '(' 
  {41,  1261,   5,  23,  12,    2,  -18 }   // 0x49 ')' 
};

const gfxfont_t HotStuff12 PROGMEM = 
{
  (uint8_t  *)HotStuff12Bitmaps, //< Glyph bitmaps, concatenated 
  (gfxglyph_t *)HotStuff12Glyphs, //< Glyph array
  74,// total glyphs in the string
  23,  // newline distance (y axis)
     0,  // minimum X - left most
    -5,  // minimum Y - bottom most (descenders can drive this negative)
    12,  // maximum X - right most
    19}; // maximum Y - top most
// Approx. 1808 bytes -  but your mileage may vary.

#endif