
#ifndef __FIXEDFONTNOTOSANSMONOREGULARTTF9
#define __FIXEDFONTNOTOSANSMONOREGULARTTF9
const uint8_t HotStuff9Bitmaps[] PROGMEM = {
  0x00, 0x0C, 0x03, 0x80, 0xE0, 0x68, 0x1B, 0x04, 0xC3, 0x10, 0xC4, 0x3F,
  0x98, 0x66, 0x09, 0x03, 0xC0, 0xC0, 0xFC, 0x8E, 0x86, 0x82, 0x82, 0x86,
  0xF8, 0x86, 0x83, 0x83, 0x82, 0x86, 0xFC, 0x1F, 0x98, 0x98, 0x08, 0x0C,
  0x06, 0x03, 0x01, 0x80, 0xC0, 0x20, 0x18, 0x06, 0x21, 0xF0, 0xFC, 0x67,
  0x30, 0xD8, 0x2C, 0x1E, 0x0F, 0x07, 0x83, 0xC1, 0xE0, 0xB0, 0xD9, 0xCF,
  0xC0, 0xFF, 0x02, 0x04, 0x08, 0x10, 0x3F, 0xC0, 0x81, 0x02, 0x04, 0x0F,
  0xE0, 0xFF, 0x02, 0x04, 0x08, 0x10, 0x3F, 0xC0, 0x81, 0x02, 0x04, 0x08,
  0x00, 0x1F, 0x71, 0x60, 0xC0, 0xC0, 0x80, 0x87, 0x81, 0xC1, 0xC1, 0x41,
  0x73, 0x1F, 0xC1, 0xC1, 0xC1, 0xC1, 0xC1, 0xC1, 0xFF, 0xC1, 0xC1, 0xC1,
  0xC1, 0xC1, 0xC1, 0xFE, 0x60, 0xC1, 0x83, 0x06, 0x0C, 0x18, 0x30, 0x60,
  0xC1, 0x8F, 0xE0, 0x04, 0x10, 0x41, 0x04, 0x10, 0x41, 0x04, 0x10, 0xE7,
  0xF8, 0xC3, 0xE1, 0x31, 0x99, 0x8D, 0x86, 0xC3, 0xE1, 0xD0, 0xCC, 0x63,
  0x31, 0x98, 0x6C, 0x18, 0xC1, 0x83, 0x06, 0x0C, 0x18, 0x30, 0x60, 0xC1,
  0x83, 0x07, 0xFF, 0xE0, 0xC3, 0xF1, 0xF8, 0xF4, 0xFA, 0x7D, 0xAE, 0x57,
  0x3B, 0x99, 0xCC, 0xE0, 0x70, 0x38, 0x18, 0xE1, 0xE1, 0xE1, 0xF1, 0xD1,
  0xD9, 0xC9, 0xC9, 0xCD, 0xC5, 0xC7, 0xC3, 0xC3, 0x3C, 0x33, 0xB0, 0xD8,
  0x2C, 0x1C, 0x0E, 0x07, 0x03, 0xC1, 0xE0, 0xB0, 0xCC, 0xC3, 0xC0, 0xFC,
  0x8E, 0x82, 0x83, 0x83, 0x82, 0x86, 0xFC, 0x80, 0x80, 0x80, 0x80, 0x80,
  0x3C, 0x33, 0xB0, 0xD8, 0x2C, 0x1C, 0x0E, 0x07, 0x03, 0xC1, 0xE0, 0xB0,
  0xCC, 0xE3, 0xE0, 0x10, 0x0C, 0x03, 0xF8, 0x8E, 0x86, 0x86, 0x86, 0x84,
  0xF8, 0x98, 0x8C, 0x8C, 0x86, 0x86, 0x83, 0x3F, 0x73, 0x60, 0x40, 0x60,
  0x70, 0x1E, 0x07, 0x03, 0x01, 0x03, 0xC7, 0x7E, 0xFF, 0x8C, 0x06, 0x03,
  0x01, 0x80, 0xC0, 0x60, 0x30, 0x18, 0x0C, 0x06, 0x03, 0x01, 0x80, 0xC1,
  0xC1, 0xC1, 0xC1, 0xC1, 0xC1, 0xC1, 0xC1, 0xC1, 0xC1, 0x43, 0x67, 0x3C,
  0xC0, 0xD8, 0x36, 0x08, 0x86, 0x21, 0x8C, 0x43, 0x10, 0x4C, 0x1B, 0x06,
  0x80, 0xA0, 0x38, 0x0C, 0x00, 0xC0, 0x50, 0x14, 0x0D, 0x33, 0x4C, 0xD3,
  0xB6, 0xAD, 0xAA, 0x7A, 0x9C, 0xE3, 0x18, 0xC6, 0x31, 0x80, 0xC1, 0xA1,
  0x98, 0x84, 0xC3, 0x40, 0xE0, 0x60, 0x38, 0x34, 0x13, 0x18, 0x98, 0x6C,
  0x18, 0xC1, 0xE0, 0x90, 0xCC, 0x42, 0x61, 0xA0, 0x70, 0x30, 0x08, 0x04,
  0x02, 0x01, 0x00, 0x80, 0xFE, 0x0C, 0x10, 0x60, 0x83, 0x04, 0x18, 0x60,
  0xC3, 0x04, 0x0F, 0xE0, 0x3E, 0x67, 0x03, 0x01, 0x3F, 0x61, 0xC1, 0xC3,
  0xE5, 0x79, 0xC0, 0x60, 0x30, 0x18, 0x0D, 0xE7, 0xBB, 0x05, 0x82, 0xC1,
  0xE0, 0xF0, 0x58, 0x2F, 0x76, 0xF0, 0x1F, 0x73, 0x60, 0x40, 0x40, 0xC0,
  0x40, 0x60, 0x71, 0x1F, 0x01, 0x01, 0x01, 0x01, 0x3D, 0x67, 0xC3, 0xC3,
  0xC1, 0xC1, 0xC3, 0xC3, 0x67, 0x3D, 0x3E, 0x31, 0x90, 0x58, 0x2F, 0xFE,
  0x03, 0x00, 0x80, 0x73, 0x1F, 0x80, 0x0F, 0x86, 0x46, 0x03, 0x0F, 0xF0,
  0xC0, 0x60, 0x30, 0x18, 0x0C, 0x06, 0x03, 0x01, 0x80, 0xC0, 0x3D, 0x67,
  0xC3, 0xC1, 0xC1, 0xC1, 0xC1, 0xC3, 0x67, 0x3D, 0x01, 0x03, 0xC7, 0x7C,
  0xC0, 0xC0, 0xC0, 0xC0, 0xDE, 0xF7, 0xE3, 0xC1, 0xC1, 0xC1, 0xC1, 0xC1,
  0xC1, 0xC1, 0x18, 0x0E, 0x00, 0x00, 0x07, 0x80, 0x40, 0x20, 0x10, 0x08,
  0x04, 0x02, 0x01, 0x00, 0x87, 0xFC, 0x0C, 0x30, 0x00, 0x7C, 0x30, 0xC3,
  0x0C, 0x30, 0xC3, 0x0C, 0x30, 0xC3, 0x9F, 0xE0, 0x80, 0x80, 0x80, 0x80,
  0x87, 0x84, 0x8C, 0x98, 0xB0, 0xF8, 0xCC, 0x8C, 0x86, 0x83, 0x78, 0x04,
  0x02, 0x01, 0x00, 0x80, 0x40, 0x20, 0x10, 0x08, 0x04, 0x02, 0x01, 0x00,
  0x87, 0xFC, 0xB7, 0x6E, 0xF2, 0x71, 0x38, 0x9C, 0x4E, 0x27, 0x13, 0x89,
  0xC4, 0xC0, 0xDE, 0xF3, 0xC1, 0xC1, 0xC1, 0xC1, 0xC1, 0xC1, 0xC1, 0xC1,
  0x3C, 0x33, 0xB0, 0xD8, 0x2C, 0x1E, 0x0F, 0x05, 0x86, 0x67, 0x1E, 0x00,
  0xDE, 0x73, 0xB0, 0x58, 0x2C, 0x1E, 0x0F, 0x05, 0x82, 0xE7, 0x6F, 0x30,
  0x18, 0x0C, 0x06, 0x00, 0x3D, 0x67, 0xC3, 0xC3, 0xC1, 0xC1, 0xC1, 0xC3,
  0x67, 0x3D, 0x01, 0x01, 0x01, 0x01, 0xF3, 0x8A, 0x46, 0x03, 0x01, 0x80,
  0xC0, 0x60, 0x30, 0x18, 0x7F, 0x00, 0x7F, 0x8B, 0x06, 0x07, 0x03, 0x81,
  0x83, 0x8D, 0xF0, 0x10, 0x10, 0x10, 0xFF, 0x10, 0x10, 0x10, 0x10, 0x10,
  0x10, 0x10, 0x19, 0x0F, 0xC1, 0xC1, 0xC1, 0xC1, 0xC1, 0xC1, 0xC3, 0xC3,
  0x67, 0x3D, 0xC1, 0xE0, 0x90, 0xCC, 0x66, 0x21, 0x30, 0xD0, 0x68, 0x1C,
  0x0C, 0x00, 0xC0, 0x50, 0x14, 0xCD, 0x3B, 0x4A, 0xDE, 0xA7, 0xA9, 0xCE,
  0x33, 0x8C, 0x60, 0xC3, 0xB1, 0x89, 0x87, 0x81, 0x80, 0xE0, 0xD0, 0x4C,
  0x63, 0x60, 0xC0, 0xC1, 0xE0, 0x90, 0xCC, 0x42, 0x21, 0xB0, 0xD0, 0x28,
  0x1C, 0x04, 0x06, 0x03, 0x03, 0x07, 0x00, 0xFE, 0x0C, 0x30, 0x41, 0x86,
  0x18, 0x20, 0xC1, 0xFC, 0x3C, 0x33, 0x10, 0xD8, 0xEC, 0x56, 0x6B, 0x67,
  0xA2, 0xF1, 0x70, 0x98, 0xCC, 0xC3, 0xC0, 0x38, 0xF3, 0x60, 0xC1, 0x83,
  0x06, 0x0C, 0x18, 0x30, 0x60, 0xCF, 0xE0, 0x3C, 0x73, 0x10, 0xC0, 0x60,
  0x30, 0x18, 0x18, 0x18, 0x1C, 0x1C, 0x1C, 0x1C, 0x0F, 0xF8, 0x3C, 0xE6,
  0x03, 0x03, 0x03, 0x06, 0x38, 0x07, 0x03, 0x01, 0x03, 0xC7, 0x7C, 0x06,
  0x07, 0x03, 0x83, 0xC3, 0x61, 0x31, 0x98, 0x8C, 0xC6, 0x7F, 0xC1, 0x80,
  0xC0, 0x60, 0x7E, 0x40, 0x40, 0x40, 0x40, 0x7C, 0x46, 0x03, 0x03, 0x01,
  0x03, 0xC6, 0x7C, 0x1E, 0x1C, 0x98, 0x08, 0x0C, 0x06, 0xF3, 0x8D, 0x82,
  0xC1, 0xE0, 0x90, 0x4C, 0xE3, 0xE0, 0xFF, 0x80, 0x80, 0xC0, 0x60, 0x20,
  0x30, 0x10, 0x18, 0x0C, 0x04, 0x06, 0x02, 0x03, 0x00, 0x3C, 0x67, 0x43,
  0x43, 0x63, 0x3E, 0x3C, 0x66, 0xC1, 0xC1, 0xC1, 0x67, 0x3E, 0x3C, 0x33,
  0x30, 0xD8, 0x2C, 0x16, 0x0D, 0x8E, 0xFA, 0x01, 0x01, 0x80, 0xC9, 0xC7,
  0x80, 0xF8, 0x71, 0x9B, 0x22, 0x24, 0x45, 0x0D, 0xA0, 0xE8, 0x01, 0x00,
  0x5E, 0x0A, 0x43, 0x4C, 0x49, 0x99, 0x26, 0x1C, 0xF0, 0x7B, 0x68, 0xFF,
  0xD5, 0x43, 0xC0, 0xF0, 0x00, 0xF0, 0xF8, 0xFC, 0xCC, 0xCC, 0xCC, 0xCC,
  0xCC, 0xCC, 0xCF, 0xF3, 0x33, 0x33, 0x33, 0x33, 0x33, 0x33, 0x3F, 0x36,
  0x4C, 0xC8, 0x88, 0x88, 0x8C, 0xC4, 0x63, 0xC6, 0x23, 0x31, 0x11, 0x11,
  0x13, 0x32, 0x6C };

// Glyph, Offset to bitmap, Width, Height, xAdvance, xOffset, yOffset

const gfxglyph_t HotStuff9Glyphs[] PROGMEM = {
  {32,     0,   1,   1,  11,    0,    0 },   // 0x00 ' ' 
  {65,     1,  10,  13,  11,    0,  -12 },   // 0x01 'A' 
  {66,    18,   8,  13,  11,    2,  -12 },   // 0x02 'B' 
  {67,    31,   9,  13,  11,    1,  -12 },   // 0x03 'C' 
  {68,    46,   9,  13,  11,    1,  -12 },   // 0x04 'D' 
  {69,    61,   7,  13,  11,    2,  -12 },   // 0x05 'E' 
  {70,    73,   7,  13,  11,    2,  -12 },   // 0x06 'F' 
  {71,    85,   8,  13,  11,    1,  -12 },   // 0x07 'G' 
  {72,    98,   8,  13,  11,    1,  -12 },   // 0x08 'H' 
  {73,   111,   7,  13,  11,    2,  -12 },   // 0x09 'I' 
  {74,   123,   6,  13,  11,    2,  -12 },   // 0x0A 'J' 
  {75,   133,   9,  13,  11,    1,  -12 },   // 0x0B 'K' 
  {76,   148,   7,  13,  11,    2,  -12 },   // 0x0C 'L' 
  {77,   160,   9,  13,  11,    1,  -12 },   // 0x0D 'M' 
  {78,   175,   8,  13,  11,    1,  -12 },   // 0x0E 'N' 
  {79,   188,   9,  13,  11,    1,  -12 },   // 0x0F 'O' 
  {80,   203,   8,  13,  11,    2,  -12 },   // 0x10 'P' 
  {81,   216,   9,  16,  11,    1,  -12 },   // 0x11 'Q' 
  {82,   234,   8,  13,  11,    2,  -12 },   // 0x12 'R' 
  {83,   247,   8,  13,  11,    1,  -12 },   // 0x13 'S' 
  {84,   260,   9,  13,  11,    1,  -12 },   // 0x14 'T' 
  {85,   275,   8,  13,  11,    1,  -12 },   // 0x15 'U' 
  {86,   288,  10,  13,  11,    0,  -12 },   // 0x16 'V' 
  {87,   305,  10,  13,  11,    0,  -12 },   // 0x17 'W' 
  {88,   322,   9,  13,  11,    1,  -12 },   // 0x18 'X' 
  {89,   337,   9,  13,  11,    1,  -12 },   // 0x19 'Y' 
  {90,   352,   7,  13,  11,    2,  -12 },   // 0x1A 'Z' 
  {97,   364,   8,  10,  11,    1,   -9 },   // 0x1B 'a' 
  {98,   374,   9,  14,  11,    1,  -13 },   // 0x1C 'b' 
  {99,   390,   8,  10,  11,    1,   -9 },   // 0x1D 'c' 
  {100,   400,   8,  14,  11,    1,  -13 },   // 0x1E 'd' 
  {101,   414,   9,  10,  11,    1,   -9 },   // 0x1F 'e' 
  {102,   426,   9,  14,  11,    1,  -13 },   // 0x20 'f' 
  {103,   442,   8,  14,  11,    1,   -9 },   // 0x21 'g' 
  {104,   456,   8,  14,  11,    1,  -13 },   // 0x22 'h' 
  {105,   470,   9,  14,  11,    1,  -13 },   // 0x23 'i' 
  {106,   486,   6,  18,  11,    1,  -13 },   // 0x24 'j' 
  {107,   500,   8,  14,  11,    2,  -13 },   // 0x25 'k' 
  {108,   514,   9,  14,  11,    1,  -13 },   // 0x26 'l' 
  {109,   530,   9,  10,  11,    1,   -9 },   // 0x27 'm' 
  {110,   542,   8,  10,  11,    1,   -9 },   // 0x28 'n' 
  {111,   552,   9,  10,  11,    1,   -9 },   // 0x29 'o' 
  {112,   564,   9,  14,  11,    1,   -9 },   // 0x2A 'p' 
  {113,   580,   8,  14,  11,    1,   -9 },   // 0x2B 'q' 
  {114,   594,   9,  10,  11,    1,   -9 },   // 0x2C 'r' 
  {115,   606,   7,  10,  11,    2,   -9 },   // 0x2D 's' 
  {116,   615,   8,  13,  11,    1,  -12 },   // 0x2E 't' 
  {117,   628,   8,  10,  11,    1,   -9 },   // 0x2F 'u' 
  {118,   638,   9,  10,  11,    1,   -9 },   // 0x30 'v' 
  {119,   650,  10,  10,  11,    0,   -9 },   // 0x31 'w' 
  {120,   663,   9,  10,  11,    1,   -9 },   // 0x32 'x' 
  {121,   675,   9,  14,  11,    1,   -9 },   // 0x33 'y' 
  {122,   691,   7,  10,  11,    2,   -9 },   // 0x34 'z' 
  {48,   700,   9,  13,  11,    1,  -12 },   // 0x35 '0' 
  {49,   715,   7,  13,  11,    2,  -12 },   // 0x36 '1' 
  {50,   727,   9,  13,  11,    1,  -12 },   // 0x37 '2' 
  {51,   742,   8,  13,  11,    1,  -12 },   // 0x38 '3' 
  {52,   755,   9,  13,  11,    1,  -12 },   // 0x39 '4' 
  {53,   770,   8,  13,  11,    1,  -12 },   // 0x3A '5' 
  {54,   783,   9,  13,  11,    1,  -12 },   // 0x3B '6' 
  {55,   798,   9,  13,  11,    1,  -12 },   // 0x3C '7' 
  {56,   813,   8,  13,  11,    1,  -12 },   // 0x3D '8' 
  {57,   826,   9,  13,  11,    1,  -12 },   // 0x3E '9' 
  {45,   841,   5,   1,  11,    3,   -5 },   // 0x3F '-' 
  {37,   842,  11,  13,  11,    0,  -12 },   // 0x40 '%' 
  {46,   860,   2,   2,  11,    4,   -1 },   // 0x41 '.' 
  {44,   861,   3,   5,  11,    4,   -1 },   // 0x42 ',' 
  {33,   863,   2,  13,  11,    4,  -12 },   // 0x43 '!' 
  {58,   867,   2,  10,  11,    4,   -9 },   // 0x44 ':' 
  {45,   870,   5,   1,  11,    3,   -5 },   // 0x45 '-' 
  {91,   871,   4,  16,  11,    4,  -12 },   // 0x46 '[' 
  {93,   879,   4,  16,  11,    3,  -12 },   // 0x47 ']' 
  {40,   887,   4,  16,  11,    4,  -12 },   // 0x48 '(' 
  {41,   895,   4,  16,  11,    3,  -12 }   // 0x49 ')' 
};

const gfxfont_t HotStuff9 PROGMEM = 
{
  (uint8_t  *)HotStuff9Bitmaps, //< Glyph bitmaps, concatenated 
  (gfxglyph_t *)HotStuff9Glyphs, //< Glyph array
  74,// total glyphs in the string
  18,  // newline distance (y axis)
     0,  // minimum X - left most
    -4,  // minimum Y - bottom most (descenders can drive this negative)
    11,  // maximum X - right most
    14}; // maximum Y - top most
// Approx. 1435 bytes -  but your mileage may vary.

#endif