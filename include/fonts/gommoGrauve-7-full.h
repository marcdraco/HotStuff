
#ifndef __FIXEDFONTGOMMOGRATTF7
#define __FIXEDFONTGOMMOGRATTF7
const uint8_t HotStuff7Bitmaps[] PROGMEM = {
  0x00, 0xA1, 0x97, 0xE7, 0xE1, 0x7C, 0x3F, 0x07, 0xCB, 0xFA, 0xFE, 0xBF,
  0x2F, 0xC7, 0x35, 0xCE, 0x77, 0xC7, 0x20, 0x80, 0x15, 0xCF, 0xF5, 0xFE,
  0x73, 0xBC, 0xE7, 0xF3, 0xFC, 0xF3, 0x9E, 0xE7, 0xF9, 0xFE, 0x7E, 0xF1,
  0xC0, 0x00, 0x4B, 0x9B, 0xF1, 0xFE, 0x72, 0x99, 0x06, 0x29, 0xB9, 0x7C,
  0xBD, 0x67, 0x39, 0xFC, 0x3D, 0x10, 0xA0, 0x11, 0x15, 0x9F, 0xEF, 0xEF,
  0x3F, 0x1D, 0x8E, 0xC7, 0xF3, 0xBB, 0xDB, 0xDF, 0xFF, 0xED, 0x04, 0x21,
  0x65, 0x1F, 0xF7, 0xFB, 0x13, 0x89, 0xF0, 0xFA, 0xFE, 0xFA, 0x9F, 0xEF,
  0xE4, 0xF9, 0x98, 0x10, 0x4F, 0xE7, 0xFD, 0xFD, 0x79, 0xDC, 0x87, 0xED,
  0xFA, 0x73, 0x2C, 0x5B, 0x25, 0xE6, 0xFD, 0x80, 0x80, 0x00, 0x4F, 0x9F,
  0xF1, 0xFE, 0x72, 0x19, 0x16, 0x05, 0xAF, 0x73, 0xBC, 0xE7, 0x79, 0xFC,
  0x3D, 0x10, 0x80, 0x00, 0x38, 0x3D, 0xEF, 0x77, 0xB3, 0x5D, 0xFE, 0xFF,
  0x63, 0xFD, 0xFA, 0xDE, 0x77, 0x78, 0x08, 0x09, 0x69, 0x1F, 0xCD, 0xAA,
  0xC5, 0x6A, 0xB5, 0x5A, 0xAD, 0x57, 0x43, 0x2F, 0xE7, 0xF0, 0x1C, 0x00,
  0x01, 0x29, 0xED, 0x61, 0xB4, 0x5C, 0xDF, 0xF7, 0x73, 0xB1, 0xDD, 0xF7,
  0xF1, 0x79, 0x44, 0x34, 0x07, 0xA7, 0x7C, 0xDD, 0xB6, 0x1F, 0xA7, 0xC2,
  0xFC, 0x36, 0xAD, 0x87, 0x79, 0xED, 0x7F, 0xCE, 0x00, 0x21, 0x96, 0x1F,
  0x82, 0xE4, 0xB8, 0x1E, 0x47, 0x21, 0xCB, 0xF6, 0x3C, 0x9F, 0x1D, 0xFF,
  0x7F, 0x88, 0xC0, 0x80, 0x3E, 0xEF, 0xFB, 0xEF, 0xF3, 0xFF, 0xFF, 0xFB,
  0xFF, 0xEF, 0xDA, 0xFE, 0xF9, 0x8E, 0xFF, 0xC0, 0x20, 0x20, 0x0C, 0xEF,
  0x79, 0xEC, 0x7B, 0x5F, 0xE7, 0xF9, 0xF6, 0x77, 0x9D, 0xE7, 0x73, 0xCE,
  0x73, 0x8C, 0x00, 0x40, 0xAF, 0x8B, 0xF1, 0xDE, 0x7B, 0xBC, 0xEF, 0x3B,
  0x8E, 0xE3, 0xFC, 0xE7, 0x3A, 0xFE, 0xDF, 0x0D, 0x40, 0x80, 0x3F, 0xFF,
  0xCF, 0xE7, 0x3F, 0x9F, 0xFD, 0xFD, 0xE2, 0x33, 0x5A, 0xAE, 0x4D, 0x83,
  0x80, 0x18, 0x3F, 0xF7, 0xF8, 0xDF, 0x77, 0xDD, 0x6F, 0x1B, 0xC6, 0xF5,
  0xDD, 0xF7, 0x7A, 0xFE, 0xBF, 0xD6, 0x30, 0x80, 0x1F, 0xEF, 0xF5, 0xFE,
  0x7B, 0xBC, 0xEF, 0xFB, 0xFE, 0xE7, 0x9C, 0xE6, 0xB9, 0xEE, 0xFB, 0x9C,
  0x60, 0x40, 0x67, 0x6F, 0xFB, 0xDE, 0x75, 0x9E, 0x13, 0xE9, 0xFE, 0x57,
  0x9E, 0x7B, 0xF9, 0xFF, 0x6F, 0xE4, 0x50, 0x40, 0x3F, 0xEF, 0xFB, 0x76,
  0x7E, 0xAF, 0xD5, 0xEA, 0x7E, 0xDF, 0x97, 0xE5, 0xD9, 0xFB, 0xFC, 0x84,
  0x60, 0x00, 0x15, 0x9D, 0xFF, 0x6F, 0xB3, 0xDD, 0xAE, 0xD7, 0x6B, 0xB9,
  0xDD, 0xF7, 0xF7, 0x7D, 0xF4, 0x80, 0x1E, 0xEF, 0x3D, 0xCE, 0x33, 0xAD,
  0xC7, 0xFA, 0xFC, 0x5E, 0x97, 0xCD, 0xEF, 0x7B, 0x5E, 0x18, 0x00, 0x01,
  0x9C, 0xD7, 0x1D, 0x86, 0x79, 0xBF, 0x67, 0xDD, 0xFF, 0xFF, 0xFF, 0xFF,
  0x3F, 0xDF, 0x7B, 0x90, 0x80, 0x79, 0x9E, 0xF3, 0xBA, 0xFE, 0x5E, 0x0F,
  0xC2, 0xF2, 0x78, 0x9F, 0x2E, 0xFF, 0x3B, 0xCF, 0x04, 0x00, 0x82, 0x3E,
  0xEF, 0x3D, 0xDE, 0xBB, 0xA7, 0xBD, 0xF9, 0x3E, 0xAF, 0x9B, 0x62, 0xDB,
  0x7B, 0xDE, 0x4E, 0x20, 0x02, 0x24, 0xDF, 0xEF, 0xE4, 0x70, 0x74, 0xB2,
  0x7A, 0xBA, 0xD8, 0x9C, 0xEF, 0xE4, 0xF9, 0x98, 0xA1, 0x97, 0xE7, 0xE1,
  0x7C, 0x3F, 0x07, 0xCB, 0xFA, 0xFE, 0xBF, 0x2F, 0xC7, 0x35, 0xCE, 0x77,
  0xC7, 0x20, 0x80, 0x15, 0xCF, 0xF5, 0xFE, 0x73, 0xBC, 0xE7, 0xF3, 0xFC,
  0xF3, 0x9E, 0xE7, 0xF9, 0xFE, 0x7E, 0xF1, 0xC0, 0x00, 0x4B, 0x9B, 0xF1,
  0xFE, 0x72, 0x99, 0x06, 0x29, 0xB9, 0x7C, 0xBD, 0x67, 0x39, 0xFC, 0x3D,
  0x10, 0xA0, 0x11, 0x15, 0x9F, 0xEF, 0xEF, 0x3F, 0x1D, 0x8E, 0xC7, 0xF3,
  0xBB, 0xDB, 0xDF, 0xFF, 0xED, 0x04, 0x21, 0x65, 0x1F, 0xF7, 0xFB, 0x13,
  0x89, 0xF0, 0xFA, 0xFE, 0xFA, 0x9F, 0xEF, 0xE4, 0xF9, 0x98, 0x10, 0x4F,
  0xE7, 0xFD, 0xFD, 0x79, 0xDC, 0x87, 0xED, 0xFA, 0x73, 0x2C, 0x5B, 0x25,
  0xE6, 0xFD, 0x80, 0x80, 0x00, 0x4F, 0x9F, 0xF1, 0xFE, 0x72, 0x19, 0x16,
  0x05, 0xAF, 0x73, 0xBC, 0xE7, 0x79, 0xFC, 0x3D, 0x10, 0x80, 0x00, 0x38,
  0x3D, 0xEF, 0x77, 0xB3, 0x5D, 0xFE, 0xFF, 0x63, 0xFD, 0xFA, 0xDE, 0x77,
  0x78, 0x08, 0x09, 0x69, 0x1F, 0xCD, 0xAA, 0xC5, 0x6A, 0xB5, 0x5A, 0xAD,
  0x57, 0x43, 0x2F, 0xE7, 0xF0, 0x1C, 0x00, 0x01, 0x29, 0xED, 0x61, 0xB4,
  0x5C, 0xDF, 0xF7, 0x73, 0xB1, 0xDD, 0xF7, 0xF1, 0x79, 0x44, 0x34, 0x07,
  0xA7, 0x7C, 0xDD, 0xB6, 0x1F, 0xA7, 0xC2, 0xFC, 0x36, 0xAD, 0x87, 0x79,
  0xED, 0x7F, 0xCE, 0x00, 0x21, 0x96, 0x1F, 0x82, 0xE4, 0xB8, 0x1E, 0x47,
  0x21, 0xCB, 0xF6, 0x3C, 0x9F, 0x1D, 0xFF, 0x7F, 0x88, 0xC0, 0x80, 0x3E,
  0xEF, 0xFB, 0xEF, 0xF3, 0xFF, 0xFF, 0xFB, 0xFF, 0xEF, 0xDA, 0xFE, 0xF9,
  0x8E, 0xFF, 0xC0, 0x20, 0x20, 0x0C, 0xEF, 0x79, 0xEC, 0x7B, 0x5F, 0xE7,
  0xF9, 0xF6, 0x77, 0x9D, 0xE7, 0x73, 0xCE, 0x73, 0x8C, 0x00, 0x40, 0xAF,
  0x8B, 0xF1, 0xDE, 0x7B, 0xBC, 0xEF, 0x3B, 0x8E, 0xE3, 0xFC, 0xE7, 0x3A,
  0xFE, 0xDF, 0x0D, 0x40, 0x80, 0x3F, 0xFF, 0xCF, 0xE7, 0x3F, 0x9F, 0xFD,
  0xFD, 0xE2, 0x33, 0x5A, 0xAE, 0x4D, 0x83, 0x80, 0x18, 0x3F, 0xF7, 0xF8,
  0xDF, 0x77, 0xDD, 0x6F, 0x1B, 0xC6, 0xF5, 0xDD, 0xF7, 0x7A, 0xFE, 0xBF,
  0xD6, 0x30, 0x80, 0x1F, 0xEF, 0xF5, 0xFE, 0x7B, 0xBC, 0xEF, 0xFB, 0xFE,
  0xE7, 0x9C, 0xE6, 0xB9, 0xEE, 0xFB, 0x9C, 0x60, 0x40, 0x67, 0x6F, 0xFB,
  0xDE, 0x75, 0x9E, 0x13, 0xE9, 0xFE, 0x57, 0x9E, 0x7B, 0xF9, 0xFF, 0x6F,
  0xE4, 0x50, 0x40, 0x3F, 0xEF, 0xFB, 0x76, 0x7E, 0xAF, 0xD5, 0xEA, 0x7E,
  0xDF, 0x97, 0xE5, 0xD9, 0xFB, 0xFC, 0x84, 0x60, 0x00, 0x15, 0x9D, 0xFF,
  0x6F, 0xB3, 0xDD, 0xAE, 0xD7, 0x6B, 0xB9, 0xDD, 0xF7, 0xF7, 0x7D, 0xF4,
  0x80, 0x1E, 0xEF, 0x3D, 0xCE, 0x33, 0xAD, 0xC7, 0xFA, 0xFC, 0x5E, 0x97,
  0xCD, 0xEF, 0x7B, 0x5E, 0x18, 0x00, 0x01, 0x9C, 0xD7, 0x1D, 0x86, 0x79,
  0xBF, 0x67, 0xDD, 0xFF, 0xFF, 0xFF, 0xFF, 0x3F, 0xDF, 0x7B, 0x90, 0x80,
  0x79, 0x9E, 0xF3, 0xBA, 0xFE, 0x5E, 0x0F, 0xC2, 0xF2, 0x78, 0x9F, 0x2E,
  0xFF, 0x3B, 0xCF, 0x04, 0x00, 0x82, 0x3E, 0xEF, 0x3D, 0xDE, 0xBB, 0xA7,
  0xBD, 0xF9, 0x3E, 0xAF, 0x9B, 0x62, 0xDB, 0x7B, 0xDE, 0x4E, 0x20, 0x02,
  0x24, 0xDF, 0xEF, 0xE4, 0x70, 0x74, 0xB2, 0x7A, 0xBA, 0xD8, 0x9C, 0xEF,
  0xE4, 0xF9, 0x98, 0xE4, 0x2F, 0x6B, 0xF3, 0xDE, 0xF3, 0x3C, 0xEF, 0x39,
  0x8F, 0x73, 0xDE, 0xD7, 0xFE, 0xFF, 0x3E, 0x91, 0x90, 0x80, 0x18, 0x45,
  0xD2, 0xFE, 0x6F, 0x93, 0xA4, 0xEB, 0xBA, 0x1F, 0x97, 0x85, 0xD1, 0xFD,
  0x7F, 0x8D, 0x00, 0x91, 0xA3, 0xB7, 0xFD, 0xCF, 0x23, 0xA0, 0xCD, 0xF8,
  0x7C, 0xB8, 0x1C, 0x47, 0x39, 0xFC, 0x4F, 0x8C, 0xC0, 0x20, 0x12, 0x67,
  0xF1, 0xFC, 0x46, 0x03, 0xA2, 0xE8, 0x3C, 0x87, 0xDA, 0xE7, 0xFD, 0xFF,
  0x7F, 0x54, 0x60, 0x80, 0x2F, 0x8C, 0xEA, 0x78, 0x5E, 0xAD, 0xA3, 0x69,
  0x9B, 0xFF, 0xFF, 0xE0, 0xE9, 0x5C, 0x6F, 0x17, 0x00, 0x01, 0x9D, 0x8F,
  0xC7, 0xEB, 0x7D, 0x05, 0xF8, 0x7E, 0x03, 0xA5, 0xFE, 0xEF, 0xF7, 0xFA,
  0x88, 0x00, 0x8F, 0xAF, 0xF1, 0xFF, 0x72, 0x19, 0x16, 0xC5, 0xFC, 0x73,
  0xF8, 0xFF, 0x36, 0xFF, 0xFF, 0x9A, 0x80, 0x02, 0x24, 0xDF, 0xEF, 0xE4,
  0x30, 0x34, 0x1A, 0xDD, 0xCE, 0x5C, 0x26, 0x76, 0xEB, 0x88, 0xF8, 0x00,
  0x1E, 0x2F, 0xDF, 0xF7, 0x3F, 0x9E, 0xFD, 0x7E, 0x77, 0xB1, 0xDF, 0xFF,
  0xFB, 0xEA, 0xF8, 0x42, 0xAB, 0xEF, 0xFE, 0xFF, 0x3F, 0x1D, 0xFE, 0x7F,
  0xA3, 0xD5, 0xFD, 0xCF, 0xF3, 0xD8, 0x30, 0x08, 0x8A, 0x0C, 0x20, 0x0F,
  0xBE, 0x01, 0x0E, 0x2A, 0x00, 0x00, 0x00, 0x00, 0x10, 0xC2, 0x00, 0x04,
  0x00, 0x00, 0x00, 0x92, 0x00, 0x00, 0x04, 0x10, 0x20, 0x82, 0x88, 0x00,
  0x83, 0x0C, 0x40, 0x01, 0x08, 0x52, 0x11, 0x94, 0x20, 0x39, 0xEB, 0x08,
  0x01, 0x97, 0x8C, 0xB0, 0xC3, 0x8E, 0x30, 0xC2, 0x0C, 0x30, 0x00, 0x22,
  0x00, 0x0C, 0x71, 0xA8, 0x28, 0xA0, 0x83, 0x0C, 0x00, 0x02, 0xE7, 0x1C,
  0x61, 0x86, 0x18, 0x61, 0xC7, 0x1C, 0x39, 0x40, 0x67, 0xE7, 0x1C, 0x30,
  0x61, 0x86, 0x99, 0x61, 0x0E, 0x71, 0x00, 0x02, 0xE7, 0x1C, 0x61, 0x86,
  0x18, 0x61, 0xC7, 0x1C, 0x39, 0x40, 0x67, 0xE7, 0x1C, 0x30, 0x61, 0x86,
  0x99, 0x61, 0x0E, 0x71, 0x00 };

// Glyph, Offset to bitmap, Width, Height, xAdvance, xOffset, yOffset

const gfxglyph_t HotStuff7Glyphs[] PROGMEM = {
  {32,     0,   1,   1,   6,    0,    0 },   // 0x00 ' ' 
  {65,     1,  10,  14,  10,    0,  -13 },   // 0x01 'A' 
  {66,    19,  10,  14,  10,    0,  -13 },   // 0x02 'B' 
  {67,    37,  10,  14,  10,    0,  -13 },   // 0x03 'C' 
  {68,    55,   9,  14,  10,    0,  -13 },   // 0x04 'D' 
  {69,    71,   9,  14,  10,    0,  -13 },   // 0x05 'E' 
  {70,    87,  10,  14,  10,    0,  -13 },   // 0x06 'F' 
  {71,   105,  10,  14,  10,    0,  -13 },   // 0x07 'G' 
  {72,   123,   9,  14,  10,    0,  -13 },   // 0x08 'H' 
  {73,   139,   9,  14,  10,    0,  -13 },   // 0x09 'I' 
  {74,   155,   9,  14,  10,    0,  -13 },   // 0x0A 'J' 
  {75,   171,  10,  14,  10,    0,  -13 },   // 0x0B 'K' 
  {76,   189,  10,  14,  10,    0,  -13 },   // 0x0C 'L' 
  {77,   207,  10,  14,  10,    0,  -13 },   // 0x0D 'M' 
  {78,   225,  10,  14,  10,    0,  -13 },   // 0x0E 'N' 
  {79,   243,  10,  14,  10,    0,  -13 },   // 0x0F 'O' 
  {80,   261,   9,  14,  10,    0,  -13 },   // 0x10 'P' 
  {81,   277,  10,  14,  10,    0,  -13 },   // 0x11 'Q' 
  {82,   295,  10,  14,  10,    0,  -13 },   // 0x12 'R' 
  {83,   313,  10,  14,  10,    0,  -13 },   // 0x13 'S' 
  {84,   331,  10,  14,  10,    0,  -13 },   // 0x14 'T' 
  {85,   349,   9,  14,  10,    0,  -13 },   // 0x15 'U' 
  {86,   365,  10,  14,  10,    0,  -13 },   // 0x16 'V' 
  {87,   383,  10,  14,  10,    0,  -13 },   // 0x17 'W' 
  {88,   401,  10,  13,  11,    0,  -12 },   // 0x18 'X' 
  {89,   418,  10,  14,  10,    0,  -13 },   // 0x19 'Y' 
  {90,   436,   9,  14,  10,    0,  -13 },   // 0x1A 'Z' 
  {97,   452,  10,  14,  10,    0,  -13 },   // 0x1B 'a' 
  {98,   470,  10,  14,  10,    0,  -13 },   // 0x1C 'b' 
  {99,   488,  10,  14,  10,    0,  -13 },   // 0x1D 'c' 
  {100,   506,   9,  14,  10,    0,  -13 },   // 0x1E 'd' 
  {101,   522,   9,  14,  10,    0,  -13 },   // 0x1F 'e' 
  {102,   538,  10,  14,  10,    0,  -13 },   // 0x20 'f' 
  {103,   556,  10,  14,  10,    0,  -13 },   // 0x21 'g' 
  {104,   574,   9,  14,  10,    0,  -13 },   // 0x22 'h' 
  {105,   590,   9,  14,  10,    0,  -13 },   // 0x23 'i' 
  {106,   606,   9,  14,  10,    0,  -13 },   // 0x24 'j' 
  {107,   622,  10,  14,  10,    0,  -13 },   // 0x25 'k' 
  {108,   640,  10,  14,  10,    0,  -13 },   // 0x26 'l' 
  {109,   658,  10,  14,  10,    0,  -13 },   // 0x27 'm' 
  {110,   676,  10,  14,  10,    0,  -13 },   // 0x28 'n' 
  {111,   694,  10,  14,  10,    0,  -13 },   // 0x29 'o' 
  {112,   712,   9,  14,  10,    0,  -13 },   // 0x2A 'p' 
  {113,   728,  10,  14,  10,    0,  -13 },   // 0x2B 'q' 
  {114,   746,  10,  14,  10,    0,  -13 },   // 0x2C 'r' 
  {115,   764,  10,  14,  10,    0,  -13 },   // 0x2D 's' 
  {116,   782,  10,  14,  10,    0,  -13 },   // 0x2E 't' 
  {117,   800,   9,  14,  10,    0,  -13 },   // 0x2F 'u' 
  {118,   816,  10,  14,  10,    0,  -13 },   // 0x30 'v' 
  {119,   834,  10,  14,  10,    0,  -13 },   // 0x31 'w' 
  {120,   852,  10,  13,  11,    0,  -12 },   // 0x32 'x' 
  {121,   869,  10,  14,  10,    0,  -13 },   // 0x33 'y' 
  {122,   887,   9,  14,  10,    0,  -13 },   // 0x34 'z' 
  {48,   903,  10,  14,  10,    0,  -13 },   // 0x35 '0' 
  {49,   921,  10,  14,   9,    0,  -13 },   // 0x36 '1' 
  {50,   939,  10,  14,  10,    0,  -13 },   // 0x37 '2' 
  {51,   957,  10,  14,  10,    0,  -13 },   // 0x38 '3' 
  {52,   975,  10,  14,  10,    0,  -13 },   // 0x39 '4' 
  {53,   993,   9,  14,  10,    0,  -13 },   // 0x3A '5' 
  {54,  1009,  10,  14,  10,    0,  -13 },   // 0x3B '6' 
  {55,  1027,   9,  14,  10,    0,  -13 },   // 0x3C '7' 
  {56,  1043,   9,  14,  10,    0,  -13 },   // 0x3D '8' 
  {57,  1059,   9,  14,  10,    0,  -13 },   // 0x3E '9' 
  {45,  1075,   6,  14,   6,    0,  -13 },   // 0x3F '-' 
  {37,  1086,   6,  14,   6,    0,  -13 },   // 0x40 '%' 
  {46,  1097,   6,  13,   6,    0,  -12 },   // 0x41 '.' 
  {44,  1107,   5,  14,   6,    0,  -13 },   // 0x42 ',' 
  {33,  1116,   6,  14,   6,    0,  -13 },   // 0x43 '!' 
  {58,  1127,   6,  13,   6,    0,  -12 },   // 0x44 ':' 
  {91,  1137,   6,  14,   6,    0,  -13 },   // 0x45 '[' 
  {93,  1148,   6,  14,   6,    0,  -13 },   // 0x46 ']' 
  {40,  1159,   6,  14,   6,    0,  -13 },   // 0x47 '(' 
  {41,  1170,   6,  14,   6,    0,  -13 }   // 0x48 ')' 
};

const gfxfont_t HotStuff7 PROGMEM = 
{
  (uint8_t  *)HotStuff7Bitmaps, //< Glyph bitmaps, concatenated 
  (gfxglyph_t *)HotStuff7Glyphs, //< Glyph array
  73,// total glyphs in the string
  14,  // newline distance (y axis)
     0,  // minimum X - left most
     0,  // minimum Y - bottom most (descenders can drive this negative)
    10,  // maximum X - right most
    14}; // maximum Y - top most
// Approx. 1706 bytes -  but your mileage may vary.

#endif