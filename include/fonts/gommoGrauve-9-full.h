
#ifndef __FIXEDFONTGOMMOGRATTF9
#define __FIXEDFONTGOMMOGRATTF9
const uint8_t HotStuff9Bitmaps[] PROGMEM = {
  0x00, 0x30, 0x72, 0x9E, 0x9B, 0xE0, 0xBF, 0x05, 0xFA, 0x37, 0xD0, 0xBE,
  0x83, 0xFE, 0x3D, 0xD1, 0xEE, 0x97, 0xF0, 0xBF, 0x8B, 0xFF, 0x7C, 0xFB,
  0xE3, 0x9F, 0x3E, 0x49, 0x30, 0xFE, 0x00, 0x80, 0x06, 0xCA, 0x7F, 0x9F,
  0xFC, 0x7F, 0xE7, 0x9F, 0x78, 0xFF, 0x9E, 0x7F, 0xCF, 0xFD, 0xF9, 0xE7,
  0x8F, 0x7C, 0xF7, 0xFF, 0xFF, 0xE7, 0xFD, 0x60, 0x35, 0xFC, 0x45, 0x0C,
  0xFF, 0x9F, 0xF8, 0x7F, 0xC3, 0xEC, 0x3E, 0x61, 0xC0, 0x8E, 0x0E, 0x71,
  0x93, 0xB8, 0x9E, 0xDC, 0xF2, 0x67, 0xCE, 0x5F, 0xE0, 0xFF, 0x91, 0xB4,
  0x71, 0xA0, 0x08, 0x17, 0x98, 0x7F, 0xD7, 0xFD, 0x7F, 0xEB, 0x9C, 0xB8,
  0xDB, 0x0E, 0xB4, 0xE7, 0x1F, 0xF9, 0xFB, 0x9F, 0xBD, 0xEB, 0x7E, 0x7F,
  0xDF, 0xFA, 0xD9, 0x22, 0x68, 0x01, 0x0E, 0x08, 0xFF, 0xEB, 0xFE, 0x7F,
  0xE7, 0x87, 0x78, 0x07, 0x98, 0x7F, 0x8B, 0xFC, 0xF1, 0xE7, 0x90, 0xB9,
  0x73, 0xEF, 0x7F, 0xF7, 0xFE, 0x28, 0xC1, 0xF7, 0x08, 0x13, 0xB7, 0x9F,
  0xF8, 0xFF, 0xC3, 0xFF, 0x5C, 0x39, 0xEC, 0x0F, 0xB4, 0x7F, 0xF5, 0xFF,
  0xAE, 0x71, 0x70, 0x83, 0x85, 0x3C, 0x4A, 0xFA, 0xCF, 0xCE, 0x64, 0x30,
  0x81, 0x80, 0x5D, 0x0D, 0x7F, 0x9F, 0xF8, 0x7F, 0xC3, 0xEC, 0x3E, 0x61,
  0xC0, 0x4E, 0x46, 0x73, 0xF3, 0xD7, 0x9E, 0x3C, 0xF9, 0xE7, 0xDE, 0x5F,
  0xF0, 0x7F, 0x91, 0xB8, 0x02, 0x20, 0x60, 0x00, 0x08, 0x7B, 0xE7, 0x9F,
  0x3A, 0xFB, 0xAE, 0xBE, 0xEB, 0x2E, 0x7F, 0xE7, 0xFE, 0x70, 0xEB, 0x2E,
  0xBA, 0xEB, 0x2E, 0x38, 0xF7, 0x9F, 0x49, 0x03, 0x2C, 0x21, 0x0C, 0x49,
  0xFF, 0xE7, 0xFE, 0x37, 0x65, 0x70, 0x97, 0x09, 0x78, 0x97, 0xA9, 0x6E,
  0x96, 0xF9, 0x60, 0x96, 0x08, 0x61, 0x7F, 0xD7, 0xFE, 0x06, 0x63, 0x9D,
  0x40, 0x00, 0x08, 0x71, 0xE7, 0x1F, 0x12, 0xF8, 0xAE, 0x92, 0xE8, 0x6E,
  0x3E, 0xE7, 0xCE, 0x7C, 0xEB, 0x0E, 0x39, 0xEB, 0x9E, 0xBF, 0xE5, 0xFB,
  0xC3, 0x53, 0xCB, 0x00, 0x00, 0x30, 0x5F, 0xFC, 0xF7, 0xE7, 0x9D, 0x1D,
  0xE0, 0xEE, 0x87, 0xE0, 0x3F, 0xD1, 0xFE, 0x8E, 0xF0, 0xF7, 0x03, 0x9C,
  0x5C, 0xFA, 0xE7, 0xCF, 0xBC, 0x3D, 0x31, 0x86, 0x00, 0x00, 0x0E, 0xE2,
  0xFC, 0x0B, 0xC4, 0xBC, 0x47, 0xE3, 0x7D, 0x07, 0xE0, 0xBF, 0x8B, 0x9C,
  0xF9, 0xE7, 0xD8, 0x79, 0x37, 0x8F, 0x7F, 0xF7, 0xFE, 0x06, 0x33, 0x8E,
  0x00, 0x07, 0xE7, 0xBE, 0xBD, 0xF9, 0xE7, 0xCF, 0xBC, 0xF9, 0xF7, 0xDF,
  0xFE, 0x7F, 0xF3, 0xFF, 0x9D, 0xBD, 0xED, 0xE7, 0x2E, 0xBA, 0x79, 0xC7,
  0xDF, 0xBF, 0x5D, 0xF0, 0x00, 0x80, 0x00, 0x07, 0x0E, 0x79, 0xFF, 0xDF,
  0x7C, 0xE3, 0xCF, 0xBF, 0xFB, 0xFF, 0x7F, 0xF7, 0xFF, 0xBB, 0xFB, 0xBF,
  0xB9, 0xF3, 0xDE, 0xFD, 0xE7, 0x8F, 0x08, 0x13, 0x86, 0x80, 0x05, 0xFE,
  0xA7, 0xF1, 0x7F, 0xCF, 0xAF, 0x3E, 0xFB, 0xF7, 0xDF, 0x3E, 0xF9, 0xE7,
  0x87, 0x3C, 0x39, 0xE1, 0xEB, 0x8F, 0x1C, 0xF9, 0xFF, 0xDB, 0xFD, 0xCD,
  0xD9, 0xD3, 0x80, 0x80, 0x07, 0xFE, 0x7F, 0x9F, 0xFC, 0xFF, 0xE7, 0x9F,
  0x78, 0xFF, 0x9F, 0xFF, 0xEF, 0xFE, 0xFC, 0x07, 0x18, 0xF9, 0xA7, 0xAB,
  0x74, 0x8F, 0xC0, 0x3C, 0x02, 0x81, 0x08, 0x03, 0x9E, 0x6F, 0xFB, 0x7F,
  0xE3, 0xEE, 0x9E, 0xFE, 0xE3, 0xEF, 0x2F, 0xF8, 0x77, 0xC3, 0xBE, 0x7D,
  0xF3, 0xEB, 0xBF, 0x5D, 0xFB, 0xFF, 0x93, 0xFF, 0xBD, 0xF0, 0x30, 0xC0,
  0x7F, 0xE7, 0xF9, 0xFF, 0xCF, 0xFF, 0x79, 0xF7, 0xCF, 0xFB, 0xFF, 0xFE,
  0xFF, 0xEF, 0x7E, 0x71, 0xE7, 0x9D, 0x75, 0xF7, 0x5F, 0xFD, 0xFB, 0xC3,
  0x68, 0xE0, 0x01, 0x07, 0x75, 0x2F, 0xF9, 0x7F, 0xCF, 0xBF, 0x3D, 0x39,
  0xE6, 0xC7, 0xE1, 0x7F, 0xF2, 0x7F, 0x2C, 0xFC, 0x59, 0xE3, 0x27, 0x3E,
  0x79, 0xFF, 0xE7, 0xFF, 0x2B, 0xDC, 0x03, 0x00, 0x40, 0x0B, 0xFF, 0xFF,
  0xFF, 0xFF, 0xEF, 0x64, 0xFB, 0x0F, 0x8C, 0xFF, 0xCF, 0xEC, 0xFE, 0xAF,
  0xBA, 0xFA, 0x2F, 0xA2, 0xF6, 0xBF, 0x2D, 0xF9, 0xEF, 0x11, 0x85, 0x60,
  0x04, 0x19, 0x79, 0xE7, 0x9F, 0x3A, 0xFB, 0xAE, 0xBA, 0xE7, 0xAE, 0x76,
  0xE7, 0x4E, 0x74, 0xE7, 0x6F, 0x78, 0xFF, 0x9F, 0xBF, 0xF7, 0xFB, 0x01,
  0x57, 0xEA, 0x00, 0x03, 0x30, 0xDE, 0x7C, 0xF9, 0xD3, 0xCF, 0x1C, 0xF8,
  0xF7, 0x87, 0xB8, 0x5D, 0xEA, 0xEE, 0x17, 0xF4, 0x7F, 0xAA, 0xFE, 0x57,
  0xF3, 0xBF, 0x7D, 0xF3, 0x4D, 0xA5, 0x90, 0x00, 0x00, 0x07, 0xCB, 0x9E,
  0x3F, 0xF4, 0xE7, 0x07, 0x38, 0x7A, 0xFD, 0xD7, 0x6E, 0xBF, 0x7F, 0xFF,
  0xBF, 0xFD, 0xFF, 0xEF, 0xDF, 0x5C, 0x76, 0xEB, 0xAF, 0x9F, 0x6E, 0xF3,
  0xB0, 0x80, 0x46, 0x33, 0xDF, 0xDE, 0x3E, 0x39, 0xE5, 0xDE, 0xAF, 0xF8,
  0xBE, 0x04, 0xFA, 0x27, 0xA4, 0xFD, 0x33, 0xF9, 0x7F, 0xB9, 0xCF, 0xDE,
  0xFF, 0xF3, 0xF9, 0x5F, 0x11, 0x80, 0x80, 0x82, 0x00, 0x3F, 0xFC, 0xFB,
  0xF3, 0xAE, 0xCE, 0xE2, 0xF7, 0x35, 0xF9, 0xAF, 0xF6, 0x3D, 0xA9, 0xFD,
  0x6F, 0xE3, 0x7F, 0x1B, 0xDB, 0xDE, 0x7F, 0xF2, 0xAF, 0x90, 0xC0, 0x80,
  0x00, 0x80, 0x06, 0x7F, 0xF7, 0xFE, 0x7F, 0xE6, 0x1C, 0x03, 0x80, 0x72,
  0xA7, 0x26, 0xEA, 0xDE, 0xE5, 0xD0, 0xBD, 0x7B, 0x8F, 0x7F, 0xFF, 0xFE,
  0x28, 0xC1, 0xF7, 0x30, 0x72, 0x9E, 0x9B, 0xE0, 0xBF, 0x05, 0xFA, 0x37,
  0xD0, 0xBE, 0x83, 0xFE, 0x3D, 0xD1, 0xEE, 0x97, 0xF0, 0xBF, 0x8B, 0xFF,
  0x7C, 0xFB, 0xE3, 0x9F, 0x3E, 0x49, 0x30, 0xFE, 0x00, 0x80, 0x06, 0xCA,
  0x7F, 0x9F, 0xFC, 0x7F, 0xE7, 0x9F, 0x78, 0xFF, 0x9E, 0x7F, 0xCF, 0xFD,
  0xF9, 0xE7, 0x8F, 0x7C, 0xF7, 0xFF, 0xFF, 0xE7, 0xFD, 0x60, 0x35, 0xFC,
  0x45, 0x0C, 0xFF, 0x9F, 0xF8, 0x7F, 0xC3, 0xEC, 0x3E, 0x61, 0xC0, 0x8E,
  0x0E, 0x71, 0x93, 0xB8, 0x9E, 0xDC, 0xF2, 0x67, 0xCE, 0x5F, 0xE0, 0xFF,
  0x91, 0xB4, 0x71, 0xA0, 0x08, 0x17, 0x98, 0x7F, 0xD7, 0xFD, 0x7F, 0xEB,
  0x9C, 0xB8, 0xDB, 0x0E, 0xB4, 0xE7, 0x1F, 0xF9, 0xFB, 0x9F, 0xBD, 0xEB,
  0x7E, 0x7F, 0xDF, 0xFA, 0xD9, 0x22, 0x68, 0x01, 0x0E, 0x08, 0xFF, 0xEB,
  0xFE, 0x7F, 0xE7, 0x87, 0x78, 0x07, 0x98, 0x7F, 0x8B, 0xFC, 0xF1, 0xE7,
  0x90, 0xB9, 0x73, 0xEF, 0x7F, 0xF7, 0xFE, 0x28, 0xC1, 0xF7, 0x08, 0x13,
  0xB7, 0x9F, 0xF8, 0xFF, 0xC3, 0xFF, 0x5C, 0x39, 0xEC, 0x0F, 0xB4, 0x7F,
  0xF5, 0xFF, 0xAE, 0x71, 0x70, 0x83, 0x85, 0x3C, 0x4A, 0xFA, 0xCF, 0xCE,
  0x64, 0x30, 0x81, 0x80, 0x5D, 0x0D, 0x7F, 0x9F, 0xF8, 0x7F, 0xC3, 0xEC,
  0x3E, 0x61, 0xC0, 0x4E, 0x46, 0x73, 0xF3, 0xD7, 0x9E, 0x3C, 0xF9, 0xE7,
  0xDE, 0x5F, 0xF0, 0x7F, 0x91, 0xB8, 0x02, 0x20, 0x60, 0x00, 0x08, 0x7B,
  0xE7, 0x9F, 0x3A, 0xFB, 0xAE, 0xBE, 0xEB, 0x2E, 0x7F, 0xE7, 0xFE, 0x70,
  0xEB, 0x2E, 0xBA, 0xEB, 0x2E, 0x38, 0xF7, 0x9F, 0x49, 0x03, 0x2C, 0x21,
  0x0C, 0x49, 0xFF, 0xE7, 0xFE, 0x37, 0x65, 0x70, 0x97, 0x09, 0x78, 0x97,
  0xA9, 0x6E, 0x96, 0xF9, 0x60, 0x96, 0x08, 0x61, 0x7F, 0xD7, 0xFE, 0x06,
  0x63, 0x9D, 0x40, 0x00, 0x08, 0x71, 0xE7, 0x1F, 0x12, 0xF8, 0xAE, 0x92,
  0xE8, 0x6E, 0x3E, 0xE7, 0xCE, 0x7C, 0xEB, 0x0E, 0x39, 0xEB, 0x9E, 0xBF,
  0xE5, 0xFB, 0xC3, 0x53, 0xCB, 0x00, 0x00, 0x30, 0x5F, 0xFC, 0xF7, 0xE7,
  0x9D, 0x1D, 0xE0, 0xEE, 0x87, 0xE0, 0x3F, 0xD1, 0xFE, 0x8E, 0xF0, 0xF7,
  0x03, 0x9C, 0x5C, 0xFA, 0xE7, 0xCF, 0xBC, 0x3D, 0x31, 0x86, 0x00, 0x00,
  0x0E, 0xE2, 0xFC, 0x0B, 0xC4, 0xBC, 0x47, 0xE3, 0x7D, 0x07, 0xE0, 0xBF,
  0x8B, 0x9C, 0xF9, 0xE7, 0xD8, 0x79, 0x37, 0x8F, 0x7F, 0xF7, 0xFE, 0x06,
  0x33, 0x8E, 0x00, 0x07, 0xE7, 0xBE, 0xBD, 0xF9, 0xE7, 0xCF, 0xBC, 0xF9,
  0xF7, 0xDF, 0xFE, 0x7F, 0xF3, 0xFF, 0x9D, 0xBD, 0xED, 0xE7, 0x2E, 0xBA,
  0x79, 0xC7, 0xDF, 0xBF, 0x5D, 0xF0, 0x00, 0x80, 0x00, 0x07, 0x0E, 0x79,
  0xFF, 0xDF, 0x7C, 0xE3, 0xCF, 0xBF, 0xFB, 0xFF, 0x7F, 0xF7, 0xFF, 0xBB,
  0xFB, 0xBF, 0xB9, 0xF3, 0xDE, 0xFD, 0xE7, 0x8F, 0x08, 0x13, 0x86, 0x80,
  0x05, 0xFE, 0xA7, 0xF1, 0x7F, 0xCF, 0xAF, 0x3E, 0xFB, 0xF7, 0xDF, 0x3E,
  0xF9, 0xE7, 0x87, 0x3C, 0x39, 0xE1, 0xEB, 0x8F, 0x1C, 0xF9, 0xFF, 0xDB,
  0xFD, 0xCD, 0xD9, 0xD3, 0x80, 0x80, 0x07, 0xFE, 0x7F, 0x9F, 0xFC, 0xFF,
  0xE7, 0x9F, 0x78, 0xFF, 0x9F, 0xFF, 0xEF, 0xFE, 0xFC, 0x07, 0x18, 0xF9,
  0xA7, 0xAB, 0x74, 0x8F, 0xC0, 0x3C, 0x02, 0x81, 0x08, 0x03, 0x9E, 0x6F,
  0xFB, 0x7F, 0xE3, 0xEE, 0x9E, 0xFE, 0xE3, 0xEF, 0x2F, 0xF8, 0x77, 0xC3,
  0xBE, 0x7D, 0xF3, 0xEB, 0xBF, 0x5D, 0xFB, 0xFF, 0x93, 0xFF, 0xBD, 0xF0,
  0x30, 0xC0, 0x7F, 0xE7, 0xF9, 0xFF, 0xCF, 0xFF, 0x79, 0xF7, 0xCF, 0xFB,
  0xFF, 0xFE, 0xFF, 0xEF, 0x7E, 0x71, 0xE7, 0x9D, 0x75, 0xF7, 0x5F, 0xFD,
  0xFB, 0xC3, 0x68, 0xE0, 0x01, 0x07, 0x75, 0x2F, 0xF9, 0x7F, 0xCF, 0xBF,
  0x3D, 0x39, 0xE6, 0xC7, 0xE1, 0x7F, 0xF2, 0x7F, 0x2C, 0xFC, 0x59, 0xE3,
  0x27, 0x3E, 0x79, 0xFF, 0xE7, 0xFF, 0x2B, 0xDC, 0x03, 0x00, 0x40, 0x0B,
  0xFF, 0xFF, 0xFF, 0xFF, 0xEF, 0x64, 0xFB, 0x0F, 0x8C, 0xFF, 0xCF, 0xEC,
  0xFE, 0xAF, 0xBA, 0xFA, 0x2F, 0xA2, 0xF6, 0xBF, 0x2D, 0xF9, 0xEF, 0x11,
  0x85, 0x60, 0x04, 0x19, 0x79, 0xE7, 0x9F, 0x3A, 0xFB, 0xAE, 0xBA, 0xE7,
  0xAE, 0x76, 0xE7, 0x4E, 0x74, 0xE7, 0x6F, 0x78, 0xFF, 0x9F, 0xBF, 0xF7,
  0xFB, 0x01, 0x57, 0xEA, 0x00, 0x03, 0x30, 0xDE, 0x7C, 0xF9, 0xD3, 0xCF,
  0x1C, 0xF8, 0xF7, 0x87, 0xB8, 0x5D, 0xEA, 0xEE, 0x17, 0xF4, 0x7F, 0xAA,
  0xFE, 0x57, 0xF3, 0xBF, 0x7D, 0xF3, 0x4D, 0xA5, 0x90, 0x00, 0x00, 0x07,
  0xCB, 0x9E, 0x3F, 0xF4, 0xE7, 0x07, 0x38, 0x7A, 0xFD, 0xD7, 0x6E, 0xBF,
  0x7F, 0xFF, 0xBF, 0xFD, 0xFF, 0xEF, 0xDF, 0x5C, 0x76, 0xEB, 0xAF, 0x9F,
  0x6E, 0xF3, 0xB0, 0x80, 0x46, 0x33, 0xDF, 0xDE, 0x3E, 0x39, 0xE5, 0xDE,
  0xAF, 0xF8, 0xBE, 0x04, 0xFA, 0x27, 0xA4, 0xFD, 0x33, 0xF9, 0x7F, 0xB9,
  0xCF, 0xDE, 0xFF, 0xF3, 0xF9, 0x5F, 0x11, 0x80, 0x80, 0x82, 0x00, 0x3F,
  0xFC, 0xFB, 0xF3, 0xAE, 0xCE, 0xE2, 0xF7, 0x35, 0xF9, 0xAF, 0xF6, 0x3D,
  0xA9, 0xFD, 0x6F, 0xE3, 0x7F, 0x1B, 0xDB, 0xDE, 0x7F, 0xF2, 0xAF, 0x90,
  0xC0, 0x80, 0x00, 0x80, 0x06, 0x7F, 0xF7, 0xFE, 0x7F, 0xE6, 0x1C, 0x03,
  0x80, 0x72, 0xA7, 0x26, 0xEA, 0xDE, 0xE5, 0xD0, 0xBD, 0x7B, 0x8F, 0x7F,
  0xFF, 0xFE, 0x28, 0xC1, 0xF7, 0x69, 0x84, 0xB1, 0x2F, 0xED, 0x7F, 0xCB,
  0xDC, 0x5C, 0x72, 0xE3, 0xD7, 0x1E, 0xB8, 0xF1, 0x87, 0xAE, 0x3B, 0x73,
  0xDB, 0x9E, 0xBF, 0xF6, 0xFF, 0xB3, 0xFB, 0x8F, 0xA0, 0x88, 0x00, 0x80,
  0x0F, 0x20, 0x06, 0x05, 0xE4, 0xBE, 0xDB, 0x71, 0x07, 0x91, 0x69, 0xD6,
  0xB6, 0x6A, 0x7F, 0x21, 0xF2, 0x0E, 0x86, 0xE4, 0x7F, 0xE7, 0xFF, 0xC0,
  0x51, 0x32, 0x00, 0x51, 0x33, 0xBF, 0xF3, 0xFF, 0x7D, 0xF1, 0x8E, 0x18,
  0xE8, 0x1E, 0x7F, 0xE5, 0xFE, 0x5E, 0x07, 0xC0, 0xB9, 0x77, 0x8F, 0x7F,
  0xF7, 0xFE, 0x58, 0xB3, 0xF6, 0x00, 0x04, 0x87, 0x1F, 0xFC, 0xFF, 0x87,
  0xFC, 0x70, 0xC0, 0x1F, 0x40, 0xE2, 0x27, 0xE2, 0x3E, 0x21, 0xF8, 0xA1,
  0xE3, 0x6F, 0x5F, 0x79, 0xFF, 0xC7, 0xFE, 0x67, 0xF4, 0xC2, 0x00, 0x00,
  0x03, 0xF8, 0xA7, 0xDA, 0x7B, 0x9F, 0xA2, 0xFA, 0xBF, 0xE9, 0xFB, 0x3F,
  0xD7, 0x39, 0x7F, 0xF7, 0xFF, 0x5F, 0xD0, 0x7D, 0x2F, 0xE5, 0x7C, 0x3B,
  0xC0, 0x61, 0x00, 0x13, 0x0F, 0x3F, 0xE3, 0xFE, 0x3F, 0xEB, 0x96, 0x79,
  0x0B, 0x2A, 0x3F, 0xC1, 0xFE, 0x00, 0xF0, 0x2E, 0x26, 0xFB, 0xEF, 0xBF,
  0xF3, 0xFF, 0x67, 0xB9, 0x8D, 0x00, 0x05, 0xD0, 0xAF, 0xF7, 0xFE, 0x3F,
  0xE3, 0xEC, 0x78, 0xC7, 0x01, 0x77, 0x07, 0xFC, 0x79, 0xEF, 0x0F, 0xF9,
  0xFB, 0x9E, 0xBF, 0xED, 0xFF, 0xA9, 0x51, 0x68, 0x00, 0x80, 0x06, 0x7F,
  0xF7, 0xFE, 0x7F, 0xEE, 0xDE, 0x01, 0x80, 0x3A, 0x13, 0xA3, 0x7A, 0x27,
  0xEA, 0x68, 0xAE, 0x18, 0xDD, 0x9C, 0xFF, 0xC4, 0xFE, 0xC4, 0xBF, 0x40,
  0x01, 0xF8, 0x1F, 0x9B, 0xFC, 0x3F, 0xC7, 0x9E, 0xF9, 0xEB, 0x9E, 0xBF,
  0xD3, 0xFC, 0x3F, 0xEF, 0x9F, 0xF9, 0xF7, 0xFF, 0xBF, 0xE7, 0xFC, 0xEF,
  0x3B, 0xFC, 0x01, 0xC2, 0x65, 0xDF, 0xD7, 0xFF, 0xB9, 0xD7, 0x5E, 0xF0,
  0xFF, 0x8E, 0x3F, 0xE5, 0xFE, 0x00, 0xF0, 0x2F, 0xD1, 0xFB, 0xFE, 0x3F,
  0xCD, 0xFF, 0xA6, 0xE1, 0x91, 0x02, 0x22, 0x70, 0xC9, 0x01, 0x01, 0xBF,
  0x7E, 0xE8, 0x81, 0x0B, 0x52, 0x84, 0x00, 0x00, 0x00, 0x03, 0x0A, 0x04,
  0x00, 0x20, 0x00, 0x48, 0x10, 0x30, 0x42, 0x04, 0x82, 0x01, 0x00, 0x20,
  0x22, 0x86, 0x05, 0x04, 0x24, 0x08, 0x74, 0x48, 0x80, 0x01, 0x0F, 0xDE,
  0x68, 0x20, 0x02, 0x20, 0x51, 0xE2, 0x04, 0x08, 0x08, 0x95, 0x21, 0x00,
  0x09, 0x17, 0x2E, 0x6C, 0x10, 0x80, 0x00, 0xFD, 0xEB, 0xC7, 0x0E, 0x5C,
  0x3C, 0x78, 0xE1, 0xD0, 0x4A, 0x0E, 0x5E, 0xC0, 0x60, 0x25, 0x62, 0x04,
  0x03, 0x07, 0xAF, 0x62, 0xC1, 0x42, 0x94, 0x21, 0x0F, 0x9F, 0x69, 0x28,
  0x0D, 0x7F, 0x71, 0xD3, 0x86, 0x1C, 0x3C, 0x70, 0xE1, 0x83, 0x67, 0x8F,
  0x2D, 0x3E, 0x5E, 0x40, 0x61, 0xE9, 0xF9, 0xC5, 0x83, 0x87, 0x3E, 0x0C,
  0x18, 0x33, 0x62, 0xCB, 0x97, 0x3C, 0xF4, 0x10, 0x0D, 0x7F, 0x71, 0xD3,
  0x86, 0x1C, 0x3C, 0x70, 0xE1, 0x83, 0x67, 0x8F, 0x2D, 0x3E, 0x5E, 0x40,
  0x61, 0xE9, 0xF9, 0xC5, 0x83, 0x87, 0x3E, 0x0C, 0x18, 0x33, 0x62, 0xCB,
  0x97, 0x3C, 0xF4, 0x10 };

// Glyph, Offset to bitmap, Width, Height, xAdvance, xOffset, yOffset

const gfxglyph_t HotStuff9Glyphs[] PROGMEM = {
  {32,     0,   1,   1,   7,    0,    0 },   // 0x00 ' ' 
  {65,     1,  13,  18,  13,    0,  -17 },   // 0x01 'A' 
  {66,    31,  12,  18,  13,    0,  -17 },   // 0x02 'B' 
  {67,    58,  13,  17,  13,    0,  -16 },   // 0x03 'C' 
  {68,    86,  12,  18,  12,    0,  -17 },   // 0x04 'D' 
  {69,   113,  12,  18,  12,    0,  -17 },   // 0x05 'E' 
  {70,   140,  13,  18,  13,    0,  -17 },   // 0x06 'F' 
  {71,   170,  13,  17,  13,    0,  -16 },   // 0x07 'G' 
  {72,   198,  12,  18,  12,    0,  -17 },   // 0x08 'H' 
  {73,   225,  12,  18,  12,    0,  -17 },   // 0x09 'I' 
  {74,   252,  12,  18,  12,    0,  -17 },   // 0x0A 'J' 
  {75,   279,  13,  18,  13,    0,  -17 },   // 0x0B 'K' 
  {76,   309,  12,  18,  13,    0,  -17 },   // 0x0C 'L' 
  {77,   336,  13,  18,  13,    0,  -17 },   // 0x0D 'M' 
  {78,   366,  12,  18,  13,    0,  -17 },   // 0x0E 'N' 
  {79,   393,  13,  18,  13,    0,  -17 },   // 0x0F 'O' 
  {80,   423,  12,  18,  12,    0,  -17 },   // 0x10 'P' 
  {81,   450,  13,  18,  13,    0,  -17 },   // 0x11 'Q' 
  {82,   480,  12,  17,  12,    0,  -16 },   // 0x12 'R' 
  {83,   506,  13,  18,  13,    0,  -17 },   // 0x13 'S' 
  {84,   536,  12,  18,  13,    0,  -17 },   // 0x14 'T' 
  {85,   563,  12,  18,  12,    0,  -17 },   // 0x15 'U' 
  {86,   590,  13,  18,  13,    0,  -17 },   // 0x16 'V' 
  {87,   620,  13,  18,  13,    0,  -17 },   // 0x17 'W' 
  {88,   650,  13,  17,  14,    0,  -16 },   // 0x18 'X' 
  {89,   678,  13,  18,  13,    0,  -17 },   // 0x19 'Y' 
  {90,   708,  12,  18,  12,    0,  -17 },   // 0x1A 'Z' 
  {97,   735,  13,  18,  13,    0,  -17 },   // 0x1B 'a' 
  {98,   765,  12,  18,  13,    0,  -17 },   // 0x1C 'b' 
  {99,   792,  13,  17,  13,    0,  -16 },   // 0x1D 'c' 
  {100,   820,  12,  18,  12,    0,  -17 },   // 0x1E 'd' 
  {101,   847,  12,  18,  12,    0,  -17 },   // 0x1F 'e' 
  {102,   874,  13,  18,  13,    0,  -17 },   // 0x20 'f' 
  {103,   904,  13,  17,  13,    0,  -16 },   // 0x21 'g' 
  {104,   932,  12,  18,  12,    0,  -17 },   // 0x22 'h' 
  {105,   959,  12,  18,  12,    0,  -17 },   // 0x23 'i' 
  {106,   986,  12,  18,  12,    0,  -17 },   // 0x24 'j' 
  {107,  1013,  13,  18,  13,    0,  -17 },   // 0x25 'k' 
  {108,  1043,  12,  18,  13,    0,  -17 },   // 0x26 'l' 
  {109,  1070,  13,  18,  13,    0,  -17 },   // 0x27 'm' 
  {110,  1100,  12,  18,  13,    0,  -17 },   // 0x28 'n' 
  {111,  1127,  13,  18,  13,    0,  -17 },   // 0x29 'o' 
  {112,  1157,  12,  18,  12,    0,  -17 },   // 0x2A 'p' 
  {113,  1184,  13,  18,  13,    0,  -17 },   // 0x2B 'q' 
  {114,  1214,  12,  17,  12,    0,  -16 },   // 0x2C 'r' 
  {115,  1240,  13,  18,  13,    0,  -17 },   // 0x2D 's' 
  {116,  1270,  12,  18,  13,    0,  -17 },   // 0x2E 't' 
  {117,  1297,  12,  18,  12,    0,  -17 },   // 0x2F 'u' 
  {118,  1324,  13,  18,  13,    0,  -17 },   // 0x30 'v' 
  {119,  1354,  13,  18,  13,    0,  -17 },   // 0x31 'w' 
  {120,  1384,  13,  17,  14,    0,  -16 },   // 0x32 'x' 
  {121,  1412,  13,  18,  13,    0,  -17 },   // 0x33 'y' 
  {122,  1442,  12,  18,  12,    0,  -17 },   // 0x34 'z' 
  {48,  1469,  13,  18,  13,    0,  -17 },   // 0x35 '0' 
  {49,  1499,  12,  18,  12,    0,  -17 },   // 0x36 '1' 
  {50,  1526,  12,  18,  13,    0,  -17 },   // 0x37 '2' 
  {51,  1553,  13,  18,  13,    0,  -17 },   // 0x38 '3' 
  {52,  1583,  12,  18,  13,    0,  -17 },   // 0x39 '4' 
  {53,  1610,  12,  18,  13,    0,  -17 },   // 0x3A '5' 
  {54,  1637,  12,  18,  13,    0,  -17 },   // 0x3B '6' 
  {55,  1664,  12,  18,  12,    0,  -17 },   // 0x3C '7' 
  {56,  1691,  12,  18,  12,    0,  -17 },   // 0x3D '8' 
  {57,  1718,  12,  18,  12,    0,  -17 },   // 0x3E '9' 
  {45,  1745,   7,  17,   7,    0,  -16 },   // 0x3F '-' 
  {37,  1760,   7,  17,   7,    0,  -16 },   // 0x40 '%' 
  {46,  1775,   7,  17,   7,    0,  -16 },   // 0x41 '.' 
  {44,  1790,   7,  17,   7,    0,  -16 },   // 0x42 ',' 
  {33,  1805,   7,  18,   8,    0,  -17 },   // 0x43 '!' 
  {58,  1821,   7,  17,   7,    0,  -16 },   // 0x44 ':' 
  {91,  1836,   7,  18,   7,    0,  -17 },   // 0x45 '[' 
  {93,  1852,   7,  18,   7,    0,  -17 },   // 0x46 ']' 
  {40,  1868,   7,  18,   7,    0,  -17 },   // 0x47 '(' 
  {41,  1884,   7,  18,   7,    0,  -17 }   // 0x48 ')' 
};

const gfxfont_t HotStuff9 PROGMEM = 
{
  (uint8_t  *)HotStuff9Bitmaps, //< Glyph bitmaps, concatenated 
  (gfxglyph_t *)HotStuff9Glyphs, //< Glyph array
  73,// total glyphs in the string
  18,  // newline distance (y axis)
     0,  // minimum X - left most
     0,  // minimum Y - bottom most (descenders can drive this negative)
    13,  // maximum X - right most
    18}; // maximum Y - top most
// Approx. 2425 bytes -  but your mileage may vary.

#endif